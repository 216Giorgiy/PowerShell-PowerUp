function Get-FileEncoding
{
    [CmdletBinding()] Param (
     [Parameter(Mandatory = $True, ValueFromPipelineByPropertyName = $True)] [string]$Path
    )

    [byte[]]$byte = get-content -Encoding byte -ReadCount 4 -TotalCount 4 -Path $Path

    if ( $byte[0] -eq 0xef -and $byte[1] -eq 0xbb -and $byte[2] -eq 0xbf )
    { Write-Output 'UTF8' }
    elseif ($byte[0] -eq 0xfe -and $byte[1] -eq 0xff)
    { Write-Output 'Unicode' }
    elseif ($byte[0] -eq 0 -and $byte[1] -eq 0 -and $byte[2] -eq 0xfe -and $byte[3] -eq 0xff)
    { Write-Output 'UTF32' }
    elseif ($byte[0] -eq 0x2b -and $byte[1] -eq 0x2f -and $byte[2] -eq 0x76)
    { Write-Output 'UTF7'}
    else
    { Write-Output 'ASCII' }
}

Import-Module activedirectory

cd (split-path $MyInvocation.InvocationName -Parent)

$CSV = "Neue Attribute Benutezr AD.csv"

if((Get-FileEncoding $csv) -ne "UTF8"){Set-Content $Csv -Value (Get-Content $csv) -Encoding UTF8}

$Users = Import-Csv -Path $CSV -Delimiter ";" 

$ADUsers = Get-ADUser -SearchBase "OU=vblusers2,DC=vbl,DC=ch" -filter * -properties extensionattribute1, extensionattribute2, Title, Manager, department, displayname

$Users | %{

    $User = $_
    $ADUser = ($ADUsers | where{$_.extensionattribute1 -eq $User.Nr})
    
    if(-not $ADUser){throw "User not found"}
    
    Write-Host "Update user $($ADUser.Name)"
    
    $OldADUser = $ADUser.psobject.Copy()
        
    $Manager = $ADUsers | where{$_.displayname -eq $User.VG}
    
    $ADUser.extensionattribute2 = $User.kst
    $ADUser.Title = $User.Funktion
    $ADUser.department = $User.Abteilung
    $ADUser.manager = $Manager.DistinguishedName
    
    # Compare-Object -ReferenceObject $ADUser -DifferenceObject $OldADUser 
    
    Set-ADUser -Instance $ADUser
    
}
