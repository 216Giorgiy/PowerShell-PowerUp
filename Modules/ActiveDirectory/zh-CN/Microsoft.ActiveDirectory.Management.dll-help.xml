<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>将一个或多个成员添加到 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADGroupMember cmdlet 添加一个或多个用户、组、服务帐户或计算机作为 Active Directory 组的新成员。
 
Identity 参数指定接收新成员的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以指定组对象变量（例如 $&lt;localGroupObject&gt;），或者通过管道将组对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 获取某个组对象，然后将该对象通过管道传递到 Add-ADGroupMember cmdlet。 

Members 参数指定要为组添加的新成员。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或 SAM 帐户名来标识新成员。 还可以指定用户、计算机和组对象变量，如 $&lt;localUserObject&gt;。 如果要指定多个新成员，请使用逗号分隔列表。 不能将用户、计算机或组对象通过管道传递到此 cmdlet。 要使用管道将用户、计算机或组对象添加到组，请使用 Add-ADPrincipalGroupMembership cmdlet。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。 圆括号中的标识符是属性的 LDAP 显示名称。

  可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
  安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。 如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>在逗号分隔列表中指定一组要为组添加的用户、组和计算机对象。 若要标识每个对象，请使用下列属性值之一。注意：括号中的标识符是 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  SAM 帐户名 (sAMAccountName) 
示例：saradavis

您还可以直接向此参数提供对象。

以下示例说明如何指定此参数。

此示例通过指定可分辨名称和 SAM 帐户名属性来指定要添加的用户和组。
  -Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

此示例指定在当前 Windows PowerShell 会话中定义的用户和组对象作为该参数的输入。 

  -Members $userObject, $groupObject

为此参数指定的对象处理为 Microsoft.ActiveDirectory.Management.ADPrincipal 对象。 此参数还接受如下所示的派生类型。
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup

不能将对象通过管道传递到此参数。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。 此参数的可能值包括：
  Negotiate 或 0
  Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。 默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。 如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。 如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。 然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
  -Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。 可分辨名称必须是当前目录服务器上的命名上下文之一。 cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。  下面给出了确定默认值的规则。  请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：  - 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
  - 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
  - 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
  - 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。  要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
  - 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。 默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
  完全限定的域名
    示例： corp.contoso.com
  NetBIOS 名称
示例：CORP

目录服务器值：
  完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
  完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
  -通过使用通过管道传递的对象中的 Server 值。
  -在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
  -通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>在逗号分隔列表中指定一组要为组添加的用户、组和计算机对象。若要标识每个对象，请使用下列属性值之一。注意：括号中的标识符是 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

您还可以直接向此参数提供对象。

以下示例说明如何指定此参数。

此示例通过指定可分辨名称和 SAM 帐户名属性来指定要添加的用户和组。
-Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

此示例指定在当前 Windows PowerShell 会话中定义的用户和组对象作为该参数的输入。 

-Members $userObject, $groupObject

为此参数指定的对象处理为 Microsoft.ActiveDirectory.Management.ADPrincipal 对象。此参数还接受如下所示的派生类型。
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADGroup

不能将对象通过管道传递到此参数。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的组对象。 默认情况下，此 cmdlet 将不产生任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember SvcAccPSOGroup SQL01,SQL02
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 SamAccountName 分别为 SQL01 和 SQL02 的用户帐户添加到 SvcAccPSOGroup 组中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember</dev:code>
  			<dev:remarks>
 				<maml:para>位于命令管道位置 1 的 cmdlet Add-ADGroupMember
请为以下参数提供值：
Identity: RodcAdmins
Members[0]: JohnSmith
Members[1]: JeffPrice
Members[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>演示此 cmdlet（没有指定任何参数）的默认行为。 将 SamAccountName 分别为 JohnSmith 和 JeffPrice 的用户帐户添加到 RodcAdmins 组中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Server localhost:60000 -SearchBase &quot;OU=AccountDeptOU,DC=AppNC&quot; -filter { name -like &quot;AccountLeads&quot; } | Add-ADGroupMember -Members &quot;CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>从 AD LDS 实例 localhost:60000 中的组织单位“OU=AccountDeptOU,DC=AppNC”获取名称为“AccountLeads”的某个组，然后通过管道将该组传递给 Add-ADGroupMember，后者随后将 DistinguishedName 为“CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC”的用户帐户添加到该组中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144933</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>将成员添加到一个或多个 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADPrincipalGroupMembership cmdlet 将用户、组、服务帐户或计算机作为新成员添加到一个或多个 Active Directory 组。

Identity 参数指定要添加的新用户、计算机或组。可以通过其可分辨名称 (DN)、GUID、安全标识符 (SID) 或 SAM 帐户名来标识用户、组或计算机。 还可以指定用户、组或计算机对象变量（例如 $&lt;localGroupObject&gt;），或者通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 获取某个组对象，然后将该对象通过管道传递到 Add-ADPrincipalGroupMembership cmdlet。 同样，可以使用 Get-ADUser 或 Get-ADComputer 获取用户和计算机对象并通过管道传递这些对象。

此 cmdlet 从管道收集所有的用户、计算机和组对象，然后使用一个 Active Directory 操作将这些对象添加到指定的组。

MemberOf 参数指定接收新成员的组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以指定组对象变量，如 $&lt;localGroupObject&gt;。 要指定多个组，请使用逗号分隔列表。 不能将组对象通过管道传递到 MemberOf 参数。 要通过管道传递组来添加到该组，请使用 Add-ADGroupMember cmdlet。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>指定要将用户、计算机或组作为成员添加进来的 Active Directory 组。 可以通过提供以下值之一来标识组。注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

如果要指定多个组，请使用逗号来分隔列表中的组。

以下示例说明如何使用 SAM 帐户名值来指定此参数。
  -MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
- Microsoft.ActiveDirectory.Management.ADGroup
- Microsoft.ActiveDirectory.Management.ADUser
- Microsoft.ActiveDirectory.Management.ADComputer
- Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
-Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>指定要将用户、计算机或组作为成员添加进来的 Active Directory 组。可以通过提供以下值之一来标识组。注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

如果要指定多个组，请使用逗号来分隔列表中的组。

以下示例说明如何使用 SAM 帐户名值来指定此参数。
-MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个表示用户、计算机或组的主体对象 (Microsoft.ActiveDirectory.Management.ADPrincipal)。 此参数还接受如下所示的派生类型。
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回表示修改后的用户、计算机或组对象的主体对象。 默认情况下，此 cmdlet 将不产生任何输出。 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership -Identity SQLAdmin1 -MemberOf DlgtdAdminsPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 SamAccountName 为“SQLAdmin1”的用户添加到“DlgtdAdminsPSOGroup”组中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount*&quot;' | Add-ADPrincipalGroupMembership -MemberOf SvcAccPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取其名称中包含“SvcAccount”的所有用户并将其添加到“SvcAccPSOGroup”组中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership</dev:code>
  			<dev:remarks>
 				<maml:para>位于命令管道位置 1 的 cmdlet Add-ADPrincipalGroupMembership
请为以下参数提供值：
Identity: JeffPrice
MemberOf[0]: RodcAdmins
MemberOf[1]: Allowed RODC Password Replication Group
MemberOf[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>演示此 cmdlet（没有指定任何参数）的默认行为。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser  -Server localhost:60000 -SearchBase &quot;DC=AppNC&quot; -filter { Title -eq &quot;Account Lead&quot; -and Office -eq &quot;Branch1&quot; } | Add-ADPrincipalGroupMembership -MemberOf &quot;CN=AccountLeads,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 AD LDS 实例“localhost:60000”的“Branch1”中所有职务为“Account Lead”的员工添加到 DistinguishedName 为“CN=AccountLeads,OU=AccountDeptOU,DC=AppNC”的组中。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144934</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>将细粒度密码策略应用于一个或多个用户和组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADFineGrainedPasswordPolicySubject cmdlet 将细粒度密码策略应用于一个或多个全局安全组和用户。 

Identity 参数指定要应用的细粒度密码策略。 可以通过可分辨名称、GUID、或名称来标识细粒度密码策略。 还可以将 Identity 参数设置为细粒度密码策略对象变量（例如 $&lt;localPasswordPolicyObject&gt;），或者通过管道将细粒度密码策略对象传递到 Identity 参数。 例如，可以使用 Get-ADFineGrainedPasswordPolicy cmdlet 获取某个细粒度密码策略对象，然后将该对象通过管道传递到 Add-ADFineGrainedPasswordPolicySubject cmdlet。 

Subjects 参数指定用户和全局安全组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户或全局安全组。 还可以指定用户和全局安全组对象变量，如 $&lt;localUserObject&gt;。 如果要指定多个用户或组，请使用逗号分隔列表。 要将用户和全局安全组对象通过管道传递到 Subjects 参数，请使用 Get-ADUser 或 Get-ADGroup cmdlet 检索用户或组对象，然后将这些对象通过管道传递到 Add-ADFineGrainedPasswordPolicySubject cmdlet。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

  可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
  名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>指定一个或多个用户或组。 要指定多个用户或组，请使用逗号分隔列表。 可以通过下列属性值之一来标识用户或组。
  可分辨名称 (DN)
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

注意：括号中的标识符是属性的 LDAP 显示名称。

您还可以直接向此参数提供对象。

以下示例说明如何使用可分辨名称和 SAM 帐户名将此参数设置为用户和组列表。
  -Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>指定一个或多个用户或组。要指定多个用户或组，请使用逗号分隔列表。可以通过下列属性值之一来标识用户或组。
可分辨名称 (DN)
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

注意：括号中的标识符是属性的 LDAP 显示名称。

您还可以直接向此参数提供对象。

以下示例说明如何使用可分辨名称和 SAM 帐户名将此参数设置为用户和组列表。
-Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy, Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略对象。 Subjects 参数接收一个或多个表示用户和安全组对象的主体对象。 Subjects 参数还接受如下所示的派生主体类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的细粒度密码策略对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DomainUsersPSO -Subjects 'Domain Users'
</dev:code>
  			<dev:remarks>
  			        <maml:para>将名为 DomainUsersPSO 的细粒度密码策略应用于全局安全组“Domain Users”。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>将名为 DlgtdAdminsPSO 的细粒度密码策略应用于两个 SamAccountName 分别为 BobKe 和 KimAb 的用户。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects DlgtdAdminGroup</dev:code>
  			<dev:remarks>
  			        <maml:para>将名为 DlgtdAdminsPSO 的细粒度密码策略应用于 DlgtdAdminGroup 组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Filter {lastname -eq &quot;John&quot;} | Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>将名为 DlgtdAdminsPSO 的细粒度密码策略应用于姓为 John 的所有用户。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144935</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>将用户、计算机和组添加到只读域控制器密码复制策略的允许或拒绝列表。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADDomainControllerPasswordReplicationPolicy cmdlet 将一个或多个用户、计算机和组添加到只读域控制器 (RODC) 密码复制策略的允许或拒绝列表。 

Identity 参数指定使用允许和拒绝列表应用密码复制策略的 RODC。 可以通过 GUID、IPV4Address、全局 IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过表示域控制器的服务器对象的名称、服务器对象的 NTDS 设置对象的可分辨名称 (DN)、配置分区下服务器对象的 NTDS 设置对象的 GUID 或表示域控制器的计算机对象的 DN 来标识域控制器。 还可以将 Identity 参数设置为域控制器对象变量（例如 $&lt;localDomainControllerobject&gt;），或者通过管道将域控制器对象传递到 Identity 参数。 例如，可以使用 Get-ADDomainController cmdlet 获取某个域控制器对象，然后将该对象通过管道传递到 Add-ADDomainControllerPasswordReplicationPolicy cmdlet。 必须指定只读域控制器。 如果为此参数指定了可写域控制器，cmdlet 将返回非终止错误。 

AllowedList 参数指定要添加到允许列表的用户、计算机和组。 同样，DeniedList 参数指定要添加到拒绝列表的用户、计算机和组。 必须指定 AllowedList 和/或 DeniedList 参数。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户、计算机或组。 还可以指定用户、计算机或组变量，如 $&lt;localUserObject&gt;。 如果要指定多个项，将使用逗号分隔列表。 如果指定的用户、计算机或组不在允许或拒绝列表中，cmdlet 将不会返回错误。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>指定要添加到允许将其密码复制到此只读域控制器 (RODC) 的帐户列表的用户、计算机、组或其他帐户。 可以使用逗号分隔列表来指定多个值。 要标识每个用户、计算机或组，请使用下列属性值之一：
  可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
  安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
  -AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。 除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    示例：157.59.132.61
  全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
  服务器对象的名称
示例：corp-DC01$
  NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
  配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
  代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>指定要添加到被拒绝将其密码复制到此只读域控制器 (RODC) 的帐户列表的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机或组，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
  -DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>指定要添加到允许将其密码复制到此只读域控制器 (RODC) 的帐户列表的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机或组，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>指定要添加到被拒绝将其密码复制到此只读域控制器 (RODC) 的帐户列表的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机或组，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个只读域控制器 (RODC) 对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无。</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将具有指定 SamAccountName 的用户帐户添加到给定 RODC 的允许列表中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将具有指定 SamAccountName 的用户帐户添加到给定 RODC 的允许列表中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144936</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>将一个或多个服务帐户添加到 Active Directory 计算机。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADComputerServiceAccount cmdlet 将一个或多个计算机服务帐户添加到 Active Directory 计算机。 

Computer 参数指定将托管新服务帐户的 Active Directory 计算机。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将 Computer 参数设置为计算机对象变量（例如 $&lt;localComputerobject&gt;），或者通过管道将计算机对象传递到 Computer 参数。 例如，可以使用 Get-ADComputer cmdlet 检索某个计算机对象，然后将该对象通过管道传递到 Add-ADComputerServiceAccount cmdlet。 

ServiceAccount 参数指定要添加的服务帐户。可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以指定服务帐户对象变量，如 $&lt;localServiceAccountObject&gt;。 如果要指定多个帐户，请使用逗号分隔列表。

注意：添加服务帐户是与在本地安装服务帐户不同的操作。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。 如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>指定一个或多个 Active Directory 服务帐户。 可以使用下列属性值之一标识服务帐户： 
可分辨名称 
示例：CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：serviceadmin

以下示例说明如何使用 SAM 帐户名为此参数指定服务帐户。
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>指定一个或多个 Active Directory 服务帐户。可以使用下列属性值之一标识服务帐户： 
可分辨名称 
示例：CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：serviceadmin

以下示例说明如何使用 SAM 帐户名为此参数指定服务帐户。
-ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Computer 参数接收一个计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的计算机对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于只读域控制器。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1
</dev:code>
  			<dev:remarks>
  			        <maml:para>将服务帐户“SvcAcct1”添加到计算机帐户“ComputerAcct1”</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 2 个服务帐户“SvcAcct1”和“SvcAcct2”添加到计算机帐户“ComputerAcct1”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144937</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Reset-ADServiceAccountPassword
		</command:name>
		<maml:description>
			<maml:para>重置计算机的服务帐户密码。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Reset</command:verb>
		<command:noun>ADServiceAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Reset-ADServiceAccountPassword cmdlet 重置本地计算机的服务帐户密码。 需要在安装了服务帐户的计算机上运行此 cmdlet。
 
Identity 参数指定接收密码重置的 Active Directory 服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将 Identity 参数设置为服务帐户对象变量（例如 $&lt;localServiceAccountObject&gt;），或者通过管道将服务帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADServiceAccount cmdlet 检索某个服务帐户对象，然后将该对象通过管道传递给 Reset- ADServiceAccountPassword cmdlet。

注意：重置计算机的该密码时，还会重置该计算机的所有服务帐户密码。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Apply-ADServiceAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Reset-ADServiceAccountPassword ServiceAccount1
</dev:code>
  			<dev:remarks>
  			        <maml:para>重置服务帐户“ServiceAccount1”的密码 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144938</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>清除 Active Directory 帐户的到期日期。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Clear-ADAccountExpiration cmdlet 清除 Active Directory 用户或计算机帐户的到期日期。 清除帐户的到期日期后，该帐户将不会过期。

Identity 参数指定要修改的用户或计算机帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户或组。 还可以将 Identity 参数设置为用户或计算机对象变量（例如 $&lt;localUserObject&gt;），或者通过管道将用户或计算机对象传递到 Identity 参数。 例如，可以使用 Get-ADUser、Get-ADComputer 或 Search-ADAccount cmdlet 检索某个对象，然后将该对象通过管道传递给 Clear-ADAccountExpiration cmdlet。 

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象 (Microsoft.ActiveDirectory.Management.ADAccount)。

还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity JeffPrice
</dev:code>
  			<dev:remarks>
			        <maml:para>清除 SamAccountName 为 JeffPrice 的用户的帐户到期日期。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity &quot;CN=JeffPrice,DC=AppNC&quot; -server &quot;FABRIKAM-SVR1:60000&quot;</dev:code>
  			<dev:remarks>
			        <maml:para>清除 AD LDS 实例“FABRIKAM-SVR1:60000”上 DistinguishedName 为“CN=JeffPrice,DC=AppNC”的用户的帐户到期日期。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144939</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>禁用 Active Directory 帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Disable-ADAccount cmdlet 禁用 Active Directory 用户、计算机或服务帐户。
 
Identity 参数指定要禁用的 Active Directory 用户、计算机服务帐户或其他服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索某个用户帐户对象，然后将该对象通过管道传递到 Disable-Account cmdlet。 同样，可以使用 Get-ADComputer 和 Search-ADAccount 检索帐户对象。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
			        <maml:para>禁用 SamAccountName 为 KimAB 的帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
			        <maml:para>禁用 DistinguishedName 为“CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Disable-ADAccount
</dev:code>
  			<dev:remarks>
			        <maml:para>禁用组织单位“OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”中的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144940</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>禁用 Active Directory 可选功能。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Disable-ADOptionalFeature 禁用与特定域模式或林模式关联的 Active Directory 可选功能。

Identity 参数指定要禁用的 Active Directory 可选功能。 可以通过可分辨名称 (DN)、功能 GUID 或对象 GUID 来标识可选功能。 还可以将此参数设置为可选功能对象变量（例如 $&lt;localOptionalFeatureObject&gt;），或者可以通过管道将可选功能对象传递到 Identity 参数。 例如，可以使用 Get-ADOptionalFeature cmdlet 检索某个可选功能对象，然后将该对象通过管道传递到 Disable-ADOptionalFeature cmdlet。

Scope 参数指定禁用该可选功能的作用域。 此参数的可能值是 Domain 和 Forest。 

Target 参数指定禁用该可选功能的域或林。 可以通过完全限定的域名 (FQDN)、NetBIOS 名称或域命名上下文（域 NC）的可分辨名称 (DN) 来标识域或林。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
  功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
  对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
  -Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>指定启用或禁用该功能的作用域。此参数的可能值包括： 
  Domain 或 0
  Forest 或 1

以下示例说明如何设置此参数，从而在林的作用域内启用或禁用可选功能。
  -Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>指定要修改可选功能的域或林。 可以通过提供下列值之一标识目标域或林：  
  林或域的完全限定的域名 
示例：corp.Fabrikam.com
  林或域的 NetBIOS 名称
示例：corp
  域命名上下文（域 NC）的可分辨名称
示例：DC=corp,DC=Fabrikam,DC=com

以下示例说明如何将此参数设置为域 NC。
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
-Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>指定启用或禁用该功能的作用域。此参数的可能值包括： 
Domain 或 0
Forest 或 1

以下示例说明如何设置此参数，从而在林的作用域内启用或禁用可选功能。
-Scope Forest</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>指定要修改可选功能的域或林。可以通过提供下列值之一标识目标域或林：  
林或域的完全限定的域名 
示例：corp.Fabrikam.com
林或域的 NetBIOS 名称
示例：corp
域命名上下文（域 NC）的可分辨名称
示例：DC=corp,DC=Fabrikam,DC=com

以下示例说明如何将此参数设置为域 NC。
-Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个可选功能对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'fabrikam' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>对林（NetBIOS 名称为“fabrikam”）禁用可选功能（名称为“Feature 1”）。 应对拥有命名主机 FSMO 角色的 DC 执行此操作。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature -Identity 'CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>对林（FQDN 名称为“fabrikam.com”）禁用可选功能（可分辨名称为“CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com”）。 应对拥有命名主机 FSMO 角色的 DC 执行此操作。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionaFeature -Identity '54ec6e43-75a8-445b-aa7b-346a1e096659' -Scope Domain -Target 'DC=fabrikam,DC=com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>对域（可分辨名称为“DC=ntdev,DC=fabrikam,DC=com”）禁用可选功能（功能 GUID 为“54ec6e43-75a8-445b-aa7b-346a1e096659”）。 应对拥有命名主机 FSMO 角色的 DC 执行此操作。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>对 AD LDS 实例（可分辨名称为“CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}”）禁用可选功能（名称为“Feature 1”）。 应对拥有命名主机 FSMO 角色的 AD LDS 实例执行此操作。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144941</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>启用 Active Directory 帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Enable-ADAccount cmdlet 启用 Active Directory 用户、计算机或服务帐户。
 
Identity 参数指定要启用的 Active Directory 用户、计算机或服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索某个帐户对象，然后将该对象通过管道传递给 Enable-ADAccount cmdlet。 同样，可以使用 Get-ADComputer 和 Search-ADAccount 检索帐户对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无 </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
			        <maml:para>启用 SamAccountName 为 KimAb 的帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
			        <maml:para>启用 DistinguishedName 为“CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Enable-ADAccount
</dev:code>
  			<dev:remarks>
			        <maml:para>禁用组织单位“OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”中的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144942</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>启用 Active Directory 可选功能。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Enable-ADOptionalFeature 启用与特定域模式或林模式关联的 Active Directory 可选功能。 在设置了域模式或林模式后，必须显式启用依赖于指定的域模式或林模式的 Active Directory 可选功能。

Identity 参数指定要启用的 Active Directory 可选功能。 可以通过可分辨名称 (DN)、功能 GUID 或对象 GUID 来标识可选功能。 还可以将此参数设置为可选功能对象变量（例如 $&lt;localOptionalFeatureObject&gt;），或者可以通过管道将可选功能对象传递到 Identity 参数。 例如，可以使用 Get-ADOptionalFeature cmdlet 检索某个可选功能对象，然后将该对象通过管道传递到 Enable-ADOptionalFeature cmdlet。

Scope 参数指定将启用可选功能的作用域。 此参数的可能值是 Domain 和 Forest。 

Target 参数指定将启用该可选功能的域或林。 可以通过完全限定的域名 (FQDN)、NetBIOS 名称或域命名上下文（域 NC）的可分辨名称 (DN) 来标识域或林。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
-Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>指定启用或禁用该功能的作用域。此参数的可能值包括： 
Domain 或 0
Forest 或 1

以下示例说明如何设置此参数，从而在林的作用域内启用或禁用可选功能。
-Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>指定要修改可选功能的域或林。可以通过提供下列值之一标识目标域或林：  
林或域的完全限定的域名 
示例：corp.Fabrikam.com
林或域的 NetBIOS 名称
示例：corp
域命名上下文（域 NC）的可分辨名称
示例：DC=corp,DC=Fabrikam,DC=com

以下示例说明如何将此参数设置为域 NC。
-Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
-Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>指定启用或禁用该功能的作用域。此参数的可能值包括： 
Domain 或 0
Forest 或 1

以下示例说明如何设置此参数，从而在林的作用域内启用或禁用可选功能。
-Scope Forest</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>指定要修改可选功能的域或林。可以通过提供下列值之一标识目标域或林：  
林或域的完全限定的域名 
示例：corp.Fabrikam.com
林或域的 NetBIOS 名称
示例：corp
域命名上下文（域 NC）的可分辨名称
示例：DC=corp,DC=Fabrikam,DC=com

以下示例说明如何将此参数设置为域 NC。
-Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个可选功能对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。

Recycle Bin Feature：一旦启用了 Active Directory 回收站，所有启用 Active Directory 回收站之前删除的对象（逻辑删除对象）即成为回收对象。 这些对象在“已删除对象”容器中不再可见，且无法使用 Active Directory 回收站还原。  还原这些对象的唯一方式是通过启用 Active Directory 回收站之前进行的 AD DS 备份进行授权还原。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Recycle Bin Feature' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -server dc1
</dev:code>
  			<dev:remarks>
  			        <maml:para>对林“fabrikam.com”启用可选功能“Recycle Bin Feature”。  必须对拥有命名主机 FSMO 角色的域控制器执行此操作。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server lds.fabrikam.com:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>对 AD LDS 实例 lds.fabrikam.com 启用可选功能“Recycle Bin Feature”。  必须对拥有命名主机 FSMO 角色的 AD LDS 实例执行此操作。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code> Set-ADObject -Identity &quot;CN=Partitions,CN=Configuration,CN={4F971828-5BE4-4E94-B532-58F2BFB6A3A5}&quot; -replace @{&quot;msDS-Behavior-Version&quot;=4}</dev:code>
  			<dev:remarks>
  			        <maml:para>在 AD LDS 实例上将 ForestMode（林功能级别）设置为 Windows2008R2Forest。 ForestMode 必须是 Windows2008R2Forest 或更高级别才能启用 AD LDS 的“Recycle Bin Feature”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144943</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADObject
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADObject cmdlet 获取一个 Active Directory 对象，或者执行搜索以检索多个对象。 

Identity 参数指定要获取的 Active Directory 对象。 可以通过可分辨名称 (DN) 或 GUID 来标识要获取的对象。 还可以将参数设置为 Active Directory 对象变量（例如 $&lt;localADObject&gt;），或者通过管道将对象传递到 Identity 参数。 

要搜索和检索多个对象，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。  

此 cmdlet 获取一组默认的 Active Directory 对象属性。 若要获取其他属性，请使用 Properties 参数。 有关如何确定计算机对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。 该字符串使用 PowerShell 表达式语言语法。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 此语法采用顺序表示，即运算符放在操作数和值之间。 有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关&lt;值&gt;的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
  - 或 -
所有计算机对象：
Get-ADComputer -Filter *

要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。 如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。 可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。  如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。 如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。 此参数的可能值为：
  Base 或 0
  OneLevel 或 1
  Subtree 或 2

Base 查询仅搜索当前路径或对象。 OneLevel 查询搜索该路径或对象的直属子级。 Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。 当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
  显示删除的对象 (1.2.840.113556.1.4.417)
  显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。 使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。 若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。 对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。 以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
显示删除的对象 (1.2.840.113556.1.4.417)
显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。 可以使用此参数运行现有的 LDAP 查询。 Filter 参数语法与 LDAP 语法支持的功能相同。 有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
显示删除的对象 (1.2.840.113556.1.4.417)
显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
显示删除的对象 (1.2.840.113556.1.4.417)
显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADObject

还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个 Active Directory 对象。 

Get-ADObject cmdlet 返回一组默认的 ADObject 属性值。 要检索其他 ADObject 属性，请使用 cmdlet 的 Properties 参数。 

要查看 ADObject 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;object&gt; 替换为 Active Directory 对象标识符。 

要获取 ADObject 对象的一组默认属性的列表，请使用下面的命令：
      Get-ADObject &lt;object&gt;| Get-Member

要获取 ADObject 对象的所有属性的列表，请使用下面的命令：
     Get-ADObject &lt;object&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -LDAPFilter &quot;(objectClass=site)&quot; -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties CanonicalName | FT Name,CanonicalName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name CanonicalName
---- -------------
HQ   FABRIKAM.COM/Configuration/Sites/HQ
BO1  FABRIKAM.COM/Configuration/Sites/BO1
BO2  FABRIKAM.COM/Configuration/Sites/BO2
BO3  FABRIKAM.COM/Configuration/Sites/BO3
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用 LDAP 筛选器语法显示 Fabrikam 的网站列表。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'ObjectClass -eq &quot;site&quot;' -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties siteObjectBL | foreach {$_.siteObjectBL}
</dev:code>
  			<dev:remarks>
 				<maml:para>CN=192.167.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.166.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.165.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.164.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.163.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.162.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.161.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.160.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.159.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.158.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.157.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从“配置命名上下文”中获取网站对象，然后对列表输出“siteObjectBL”进行枚举。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02); Get-ADObject -Filter 'whenChanged -gt $changeDate' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
  			        <maml:para>获取其“whenChanged”属性大于指定日期的所有对象，包括已删除的对象。 请注意，与该筛选器相匹配的已删除和未删除（以及非回收）对象都会返回。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
				<maml:para>ObjectGUID        : 98118958-91c7-437d-8ada-ba0b66db823b
Deleted           : True
DistinguishedName : CN=Andrew Ma\0ADEL:98118958-91c7-437d-8ada-ba0b66db823b,CN=Deleted Objects,DC=FABRIKAM,DC=COM
Name              : Andrew Ma
                    DEL:98118958-91c7-437d-8ada-ba0b66db823b
ObjectClass           : user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取其“whenChanged”属性大于指定日期的所有已删除对象。 子句“name -ne &quot;Deleted Objects&quot;”可确保不返回“已删除对象容器”。 这将只返回可还原的对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
				<maml:para>ObjectGUID        : 12d53e7f-aaf7-4790-b41a-da19044504db
Deleted           : True
DistinguishedName : CN=Craig Dewar\0ADEL:12d53e7f-aaf7-4790-b41a-da19044504db,CN=Deleted Objects,DC=Fabrikam,DC=com
Name              : Craig Dewar
                    DEL:12d53e7f-aaf7-4790-b41a-da19044504db
ObjectClass           : user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取其“whenChanged”属性大于指定日期且在被删除时是指定组织单位的子级的所有已删除对象。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Identity &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID                    DistinguishedName             Name                          ObjectClass
----------                    -----------------             ----                          -----------
62b2e185-9322-4980-9c93-cf... DC=AppNC                      AppNC                         domainDNS
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 LDS 实例的 domainDNS 对象的信息</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144944</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADRootDSE
		</command:name>
		<maml:description>
			<maml:para>获取目录服务器信息树的根。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADRootDSE</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADRootDSE cmdlet 获取一个概念对象，该对象表示目录服务器的目录信息树的根。 该树提供有关目录服务器配置和功能的信息，如配置容器的可分辨名称、目录服务器上的当前时间以及目录服务器和域的功能级别。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADRootDSE</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADRootDSE</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					此 cmdlet 输出一个表示指定目录服务器的数据树的 ADRootDSE 对象。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE
</dev:code>
  			<dev:remarks>
				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 3/18/2009 11:12:55 AM 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-DC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-DC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从默认域控制器中获取 rooDSE。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server Fabrikam-RODC1 -Properties supportedExtension 
</dev:code>
  			<dev:remarks>
				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 3/18/2009 11:12:55 AM 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-RODC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-RODC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedExtension            : {1.3.6.1.4.1.1466.20037, 1.3.6.1.4.1.1466.101.119.1, 1.2.840.113556.1.4.1781, 1.3.6.1.4.1.4203.1.11.3} {1.3.6.1.4.1.1466.20037, 1.3.6.1.4.1.1466.101.119.1, 1.2.840.113556.1.4.1781, 1.3.6.1.4.1.4203.1.11.3} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 Fabrikam-RODC1 服务器的 rootDSE 信息，包括 supportedExtension 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server &quot;FABRIKAM-ADLDS1.Fabrikam.com:60000&quot; -Credential &quot;FABRIKAM\User1&quot; </dev:code>
  			<dev:remarks>
				<maml:para>configurationNamingContext    : CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
currentTime                   : 3/18/2009 11:40:19 AM 
dnsHostName                   : FABRIKAM-ADLDS1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,C 
                                N=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 13967
isSynchronized                : {TRUE} 
namingContexts                : {CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, DC=AppNC} 
schemaNamingContext           : CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
serverName                    : CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
supportedCapabilities         : {1.2.840.113556.1.4.1851 (LDAP_CAP_ACTIVE_DIRECTORY_ADAM_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用 FABRIKAM\user1 凭据获取 FABRIKAM-ADLDS1 的 rootDSE 信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144945</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUser
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 用户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADUser cmdlet 获取一个用户对象，或者执行搜索以检索多个用户对象。

Identity 参数指定要获取的 Active Directory 用户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、安全帐户管理器 (SAM) 帐户名或名称来标识用户。 还可以将此参数设置为用户对象变量（例如 $&lt;localUserObject&gt;），或者通过管道将用户对象传递到 Identity 参数。

要搜索和检索多个用户，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 检索一组默认的用户对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定用户对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
  SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个用户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个用户对象。

此 cmdlet 返回一组默认的 ADUser 属性值。 要检索其他 ADUser 属性，请使用 Properties 参数。 

要获取 ADUser 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADUser &lt;user&gt;| Get-Member

要获取 ADUser 对象的最常用属性的列表，请使用下面的命令：
   Get-ADUser &lt;user&gt; -Properties Extended | Get-Member 

要获取 ADUser 对象的所有属性的列表，请使用下面的命令：
   Get-ADUser &lt;user&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter * -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取容器“OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”下的所有用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount&quot;' | FT Name,SamAccountName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name             SamAccountName
----             --------------
SQL01 SvcAccount SQL01
SQL02 SvcAccount SQL02
IIS01 SvcAccount IIS01
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取名称以“SvcAccount”结尾的所有用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser GlenJohn -Properties * 
</dev:code>
  			<dev:remarks>
				<maml:para>Surname           : John
Name              : Glen John
UserPrincipalName :
GivenName         : Glen
Enabled               : False
SamAccountName    : GlenJohn
ObjectClass           : user
SID               : S-1-5-21-2889043008-4136710315-2444824263-3544
ObjectGUID        : e1418d64-096c-4cb0-b903-ebb66562d99d
DistinguishedName : CN=Glen John,OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 samAccountName 为 GlenJohn 的用户的所有属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter {Name -eq &quot;GlenJohn&quot;} -SearchBase &quot;DC=AppNC&quot; -Properties mail -Server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>获取 AD LDS 实例上名为“GlenJohn”的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144946</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputer
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 计算机。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADComputer cmdlet 获取一个计算机，或者执行搜索以检索多个计算机。

Identity 参数指定要检索的 Active Directory 计算机。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将参数设置为计算机对象变量（例如 $&lt;localComputerObject&gt;），或者通过管道将计算机对象传递到 Identity 参数。

要搜索和检索多个计算机，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 检索一组默认的计算机对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定计算机对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个计算机对象。 

此 Get-ADComputer cmdlet 返回一组默认的 ADComputer 属性值。 要检索其他 ADComputer 属性，请使用此 cmdlet 的 Properties 参数。 

要查看 ADComputer 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;computer&gt; 替换为计算机标识符，例如您本地计算机的 SAM 帐户名。

要获取 ADComputer 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADComputer &lt;computer&gt;| Get-Member

要获取 ADComputer 对象的所有属性的列表，请使用下面的命令：
   Get-ADComputer &lt;computer&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 的默认架构不适用于 AD LDS。  默认情况下 AD LDS 架构不具备计算机类，但若对架构进行了扩展使其具备计算机类，则此 cmdlet 将适用于 LDS。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer &quot;Fabrikam-SRV1&quot; -Properties *</dev:code>
  			<dev:remarks>
 				<maml:para>AccountExpirationDate              :
accountExpires                     : 9223372036854775807
AccountLockoutTime                 :
AccountNotDelegated                : False
AllowReversiblePasswordEncryption  : False
BadLogonCount                      :
CannotChangePassword               : False
CanonicalName                      : Fabrikam.com/Computers/fabrikam-srv1
Certificates                       : {}
CN                                 : fabrikam-srv1
codePage                           : 0
countryCode                        : 0
Created                            : 3/16/2009 4:15:00 PM
createTimeStamp                    : 3/16/2009 4:15:00 PM
Deleted                            :
Description                        :
DisplayName                        :
DistinguishedName                  : CN=fabrikam-srv1,CN=Computers,DC=Fabrikam,
                                     DC=com
DNSHostName                        :
DoesNotRequirePreAuth              : False
dSCorePropagationData              : {3/16/2009 4:21:51 PM, 12/31/1600 4:00:01
                                     PM}
Enabled           : True
HomedirRequired                    : False
HomePage                           :
instanceType                       : 0
IPv4Address                        :
IPv6Address                        :
isCriticalSystemObject             : False
isDeleted                          :
LastBadPasswordAttempt             :
LastKnownParent                    :
LastLogonDate                      :
localPolicyFlags                   : 0
Location                           : NA/HQ/Building A
LockedOut             : False
ManagedBy                          : CN=SQL Administrator 01,OU=UserAccounts,OU
                                     =Managed,DC=Fabrikam,DC=com
MemberOf                           : {}
MNSLogonAccount                    : False
Modified                           : 3/16/2009 4:23:01 PM
modifyTimeStamp                    : 3/16/2009 4:23:01 PM
msDS-User-Account-Control-Computed : 0
Name                               : fabrikam-srv1
nTSecurityDescriptor               : System.DirectoryServices.ActiveDirectorySe
                                     curity
ObjectCategory                     : CN=Computer,CN=Schema,CN=Configuration,DC=
                                     Fabrikam,DC=com
ObjectClass       : computer
ObjectGUID                         : 828306a3-8ccd-410e-9537-e6616662c0b0
objectSid      : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
OperatingSystem                    :
OperatingSystemHotfix              :
OperatingSystemServicePack         :
OperatingSystemVersion             :
PasswordExpired       : False
PasswordLastSet                    :
PasswordNeverExpires               : False
PasswordNotRequired                : False
PrimaryGroup                       : CN=Domain Computers,CN=Users,DC=Fabrikam,D
                                     C=com
primaryGroupID                     : 515
ProtectedFromAccidentalDeletion          : False
pwdLastSet                         : 0
SamAccountName                     : fabrikam-srv1$
sAMAccountType                     : 805306369
sDRightsEffective                  : 0
ServiceAccount                     : {}
servicePrincipalName               : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
                                     alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
ServicePrincipalNames              : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
SID               : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
SIDHistory                         : {}
TrustedForDelegation               : False
TrustedToAuthForDelegation         : False
UseDESKeyOnly                      : False
userAccountControl                 : 4096
userCertificate                    : {}
UserPrincipalName                  :
uSNChanged                         : 36024
uSNCreated                         : 35966
whenChanged                        : 3/16/2009 4:23:01 PM
whenCreated                        : 3/16/2009 4:15:00 PM</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取显示所有属性的特定计算机。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Name -like &quot;Fabrikam*&quot;' -Properties IPv4Address | FT Name,DNSHostName,IPv4Address -A</dev:code>
  			<dev:remarks>
 				<maml:para>name          dnshostname                ipv4address
----          -----------                -----------
FABRIKAM-SRV1 FABRIKAM-SRV1.Fabrikam.com 10.194.99.181
FABRIKAM-SRV2 FABRIKAM-SRV2.Fabrikam.com 10.194.100.37
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取其名称以特定字符串开头并显示其名称、DNS 主机名和 IPv4 地址的所有计算机。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$d = [DateTime]::Today.AddDays(-90); Get-ADComputer -Filter 'PasswordLastSet -ge $d' -Properties PasswordLastSet | FT Name,PasswordLastSet</dev:code>
  			<dev:remarks>
 				<maml:para>Name                                                        PasswordLastSet
----                                                        ---------------
FABRIKAM-SRV4                                               3/12/2009 6:40:37 PM
FABRIKAM-SRV5                                               3/12/2009 7:05:45 PM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取在最近 90 天内更改过其密码的所有计算机。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -LDAPFilter &quot;(name=*laptop*)&quot; -SearchBase &quot;CN=Computers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>name
----
saradavi-laptop
jeffpr-laptop
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>获取列为便携式计算机（通过使用 LDAPFilter）并位于“CN=Computers,DC=Fabrikam,DC=com”位置的计算机帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>获取所有计算机帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144947</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroup
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADGroup cmdlet 获取一个组，或者执行搜索以检索 Active Directory 的多个组。 

Identity 参数指定要获取的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、安全帐户管理器 (SAM) 帐户名或规范名称来标识组。 还可以指定组对象变量，如 $&lt;localGroupObject&gt;。 

要搜索和检索多个组，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 获取一组默认的组对象属性。 若要获取其他属性，请使用 Properties 参数。 有关如何确定组对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。 
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个组对象。

Get-ADGroup cmdlet 返回一组默认的 ADGroup 属性值。 要检索其他 ADGroup 属性，请使用 Properties 参数。 

要查看 ADGroup 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;group&gt; 替换为组标识符，例如 Administrators。

要获取 ADGroup 对象的一组默认属性的列表，请使用下面的命令：
      Get-ADGroup &lt;group&gt;| Get-Member

要获取 ADGroup 对象的所有属性的列表，请使用下面的命令：
     Get-ADGroup &lt;group&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup administrators
</dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 samAccountName 为 administrators 的组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Identity S-1-5-32-544 -Properties member
</dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
member            : {CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com, CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com, CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com, C 
                    N=Administrator,CN=Users,DC=Fabrikam,DC=com} 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 SID 为 S-1-5-32-544 的组，包括其他属性成员。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Filter 'GroupCategory -eq &quot;Security&quot; -and GroupScope -ne &quot;DomainLocal&quot;'</dev:code>
  			<dev:remarks>
  			        <maml:para>获取 GroupCategory 为 Security 但 GroupScope 不为 DomainLocal 的所有组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup 

cmdlet Get-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Filter: * </dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用默认 cmdlet 行为获取默认域中的所有组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; </dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从 AD LDS 实例的 AppNC 分区中获取所有 DomainLocal 组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144948</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 细粒度密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADFineGrainedPasswordPolicy cmdlet 获取细粒度密码策略，或执行搜索以检索多个细粒度密码策略。

Identity 参数指定要获取的 Active Directory 细粒度密码策略。 可以通过可分辨名称 (DN)、GUID 或名称来标识细粒度密码策略。 还可以将参数设置为细粒度密码策略对象变量（例如 $&lt;localFineGrainedPasswordPolicyObject&gt;），或者通过管道将细粒度密码策略对象传递到 Identity 参数。

要搜索和检索多个细粒度密码策略，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 检索一组默认的细粒度密码策略对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定 FineGrainedPasswordPolicy 对象的属性的详细信息，请参阅 Properties 参数说明。  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个细粒度密码策略对象。

此 cmdlet 返回一组默认的 ADFineGrainedPasswordPolicy 属性值。 要检索其他 ADFineGrainedPasswordPolicy，请使用 Properties 参数。 

要查看 ADFineGrainedPasswordPolicy 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;fine grained password policy&gt; 替换为细粒度密码策略标识符，例如本地细粒度密码策略的名称。

要获取 ADFineGrainedPasswordPolicy 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADFineGrainedPasswordPolicy &lt;fine grained password policy&gt;| Get-Member

要获取 ADFineGrainedPasswordPolicy 对象的所有属性的列表，请使用下面的命令：
   Get-ADFineGrainedPasswordPolicy &lt;fine grained password policy&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*&quot;} | ft Name, Precedence,MaxPasswordAge,MinPasswordLength -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           Precedence MaxPasswordAge MinPasswordLength
----           ---------- -------------- -----------------
DomainUsersPSO        500 60.00:00:00                    8
SvcAccPSO             100 30.00:00:00                   20
AdminsPSO             200 15.00:00:00                   10
DlgtdAdminsPSO        300 20.00:00:00                   10
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy AdminsPSO
</dev:code>
  			<dev:remarks>
				<maml:para>Name                        : AdminsPSO
ComplexityEnabled           : True
LockoutThreshold            : 0
ReversibleEncryptionEnabled : True
LockoutDuration             : 00:30:00
LockoutObservationWindow    : 00:30:00
MinPasswordLength           : 10
Precedence                  : 200
ObjectGUID                  : ba1061f0-c947-4018-a399-6ad8897d26e3
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 15.00:00:00
AppliesTo                   : {}
DistinguishedName           : CN=AdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取名为“AdminsPSO”的细粒度密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy 'CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -Properties *
</dev:code>
  			<dev:remarks>
 				<maml:para>msDS-LockoutDuration                     : -18000000000
msDS-PasswordSettingsPrecedence          : 300
ObjectCategory                           : CN=ms-DS-Password-Settings,CN=Schema,CN=Configuration,DC=FABRIKAM,DC=COM
DistinguishedName                        : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
ExpireOn                                 :
msDS-MinimumPasswordAge                  : -864000000000
dSCorePropagationData : {12/31/1600 4:00:00 PM}
msDS-LockoutThreshold                    : 0
Description                              : The Delegated Administrators Password Policy
LockoutThreshold                         : 0
instanceType                             : 4
msDS-PasswordComplexityEnabled           : True
MaxPasswordAge                           : 20.00:00:00
whenCreated                              : 8/15/2008 12:47:43 AM
Name                        : DlgtdAdminsPSO
ObjectClass                 : msDS-PasswordSettings
ReversibleEncryptionEnabled : True
msDS-PasswordReversibleEncryptionEnabled : True
Dynamic                                  : False
LockoutDuration                          : 00:30:00
msDS-PSOAppliesTo                        : {CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=Bob Kelly,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
DisplayName                              : Delegated Administrators PSO
uSNCreated                               : 16395
Modified                                 : 8/20/2008 12:21:15 AM
MinPasswordAge                           : 1.00:00:00
ProtectedFromAccidentalDeletion          : False
Created                                  : 8/15/2008 12:47:43 AM
sDRightsEffective                        : 15
ComplexityEnabled           : True
PasswordHistoryCount                     : 24
msDS-MaximumPasswordAge                  : -17280000000000
MinPasswordLength                        : 10
Precedence                               : 300
ObjectGUID                               : 75cf8c7a-9c93-4e81-b611-851803372cb2
msDS-MinimumPasswordLength               : 10
Deleted                                  :
Orphaned                                 : False
CN                                       : DlgtdAdminsPSO
LastKnownParent                          :
CanonicalName                            : FABRIKAM.COM/System/Password Settings Container/DlgtdAdminsPSO
modifyTimeStamp                          : 8/20/2008 12:21:15 AM
msDS-LockoutObservationWindow            : -18000000000
LockoutObservationWindow                 : 00:30:00
whenChanged                              : 8/20/2008 12:21:15 AM
createTimeStamp                          : 8/15/2008 12:47:43 AM
msDS-PasswordHistoryLength               : 24
nTSecurityDescriptor  : System.DirectoryServices.ActiveDirectorySecurity
AppliesTo                                : {CN=JeffPrice,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=GlenJohn,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
uSNChanged                               : 72719
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 DistinguishedName 为“CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM”的细粒度密码策略的所有属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {name -like &quot;*admin*&quot;}</dev:code>
  			<dev:remarks>
				<maml:para>AppliesTo                   : {CN=GlenJohn,CN=Users,DC=Fabrikam,DC=com, CN=JeffPrice,CN=Users,DC=Fabrikam,DC=com, CN=Administrator,CN=Users,DC=Fabrikam,DC=com} 
ComplexityEnabled           : True 
DistinguishedName           : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=Fabrikam,DC=com 
LockoutDuration             : 00:30:00 
LockoutObservationWindow    : 00:30:00 
LockoutThreshold            : 0 
MaxPasswordAge              : 42.00:00:00 
MinPasswordAge              : 1.00:00:00 
MinPasswordLength           : 7 
Name                        : DlgtdAdminsPSO 
ObjectClass                 : msDS-PasswordSettings 
ObjectGUID                  : b7de4e6e-c291-4ce6-bb47-6bf8f807df53 
PasswordHistoryCount        : 24 
Precedence                  : 100 
ReversibleEncryptionEnabled : True </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取名称以 admin 开头的所有细粒度密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144949</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomain
		</command:name>
		<maml:description>
			<maml:para> 获取 Active Directory 域。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomain cmdlet 获取由参数指定的 Active Directory 域。 可以设置 Identity 或 Current 参数来指定域。  

Identity 参数指定要获取的 Active Directory 域。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、DNS 域名或 NetBIOS 名称来标识要获取的域对象。 还可以将此参数设置为域对象变量（例如 $&lt;localDomainObject&gt;），或者通过管道将域对象传递到 Identity 参数。 

要获取本地计算机或当前登录用户 (CLU) 的域，请将 Current 参数设置为 LocalComputer 或 LoggedOnUser。  设置 Current 参数时，无需设置 Identity 参数。 

当 Current 参数设置为 LocalComputer 或 LogedOnUser 时，此 cmdlet 根据下面的规则使用 Server 和 Credential 参数。

-如果 Server 和 Credential 参数均未指定：
  --域设置为 LocalComputer 或 LoggedOnUser 的域，服务器位于此域中。 使用当前登录用户的凭据来获取此域。

-如果指定了 Server 参数，但未指定 Credential 参数：
  --域设置为指定服务器所在的域，此 cmdlet 会检查以确保该服务器位于 LocalComputer 或 LoggedOnUser 所在的域中。 然后使用当前登录用户的凭据获取该域。 如果服务器未处于 LocalComputer 或 LoggedOnUser 的域中，则会返回错误。

-如果未指定 Server 参数，但指定了 Credential 参数：
  --域设置为 LocalComputer 或 LoggedOnUser 的域，服务器位于此域中。 然后使用由 Credential 参数指定的凭据来获取该域。 
如果同时指定了 Server 和 Credential 参数：
域设置为指定服务器的域，cmdlet 会检查以确保该服务器位于 LocalComputer 或 LoggedOnUser 的域中。 然后使用由 Credential 参数指定的凭据来获取该域。 如果服务器未处于 LocalComputer 或 LoggedOnUser 的域中，则会返回错误。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
  LocalComputer 或 0
  LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。 所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
  DNS 域名 
示例：redmond.corp.contoso.com
  NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
LocalComputer 或 0
LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
-Current LoggedOnUser</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个域对象。 

该 cmdlet 返回域的全部属性。 要查看 ADDomain 对象的全部属性，请使用下面的命令并将其中的 &lt;domain&gt; 替换为域控制器标识符，如 DNS 主机名。
  Get-ADDomain &lt;domain&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取域“fabrikam.com”的域信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LocalComputer
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前本地计算机域的域信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前登录用户所在域的域信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain</dev:code>
  			<dev:remarks>
 				<maml:para>AllowedDNSSuffixes                 : {}
ChildDomains                       : {}
ComputersContainer                 : CN=Computers,DC=Fabrikam,DC=com
DeletedObjectsContainer            : CN=Deleted Objects,DC=Fabrikam,DC=com
DistinguishedName                  : DC=Fabrikam,DC=com
DNSRoot                            : Fabrikam.com
DomainControllersContainer         : OU=Domain Controllers,DC=Fabrikam,DC=com
DomainMode                         : Windows2003Domain
DomainSID                          : S-1-5-21-41432690-3719764436-1984117282
ForeignSecurityPrincipalsContainer : CN=ForeignSecurityPrincipals,DC=Fabrikam,DC=com
Forest                             : Fabrikam.com
InfrastructureMaster               : Fabrikam-DC1.Fabrikam.com
LastLogonReplicationInterval       :
LinkedGroupPolicyObjects           : {CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Fabrikam,DC=com}
LostAndFoundContainer              : CN=LostAndFound,DC=Fabrikam,DC=com
ManagedBy                          :
Name                               : Fabrikam
NetBIOSName                        : FABRIKAM
ObjectClass                        : domainDNS
ObjectGUID                         : b63b4f44-58b9-49cf-8911-b36e8575d5eb
ParentDomain                       :
PDCEmulator                        : Fabrikam-DC1.Fabrikam.com
QuotasContainer                    : CN=NTDS Quotas,DC=Fabrikam,DC=com
ReadOnlyReplicaDirectoryServers    : {CSD2722780.Fabrikam.com}
ReplicaDirectoryServers            : {Fabrikam-DC1.Fabrikam.com}
RIDMaster                          : Fabrikam-DC1.Fabrikam.com
SubordinateReferences              : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com, CN=Co
                                     nfiguration,DC=Fabrikam,DC=com}
SystemsContainer                   : CN=System,DC=Fabrikam,DC=com
UsersContainer                     : CN=Users,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取当前登录用户所在域的域信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144950</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomainMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADForest
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 林。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADForest cmdlet 获取由参数指定的 Active Directory 林。 可以设置 Identity 或 Current 参数来指定林。

Identity 参数指定要获取的 Active Directory 林。 可以通过完全限定的域名 (FQDN)、DNS 主机名或 NetBIOS 名称来标识林。 还可以将参数设置为林对象变量（例如 $&lt;localForestObject&gt;），或者通过管道将林对象传递到 Identity 参数。

要检索本地计算机或当前登录用户 (CLU) 的林，请将 Current 参数设置为 LocalComputer 或 LoggedOnUser。  设置 Current 参数时，无需设置 Identity 参数。 

当 Current 参数设置为 LocalComputer 或 LoggedOnUser 时，此 cmdlet 根据下面的规则使用 Server 和 Credential 参数值确定域以及用来标识林所在域的凭据。

-如果 Server 和 Credential 参数均未指定：
  --域设置为 LocalComputer 或 LoggedOnUser 的域，服务器位于此域中。 使用当前登录用户的凭据来获取此域。

-如果指定了 Server 参数，但未指定 Credential 参数：
  --域设置为指定服务器所在的域，此 cmdlet 会检查以确保该服务器位于 LocalComputer 或 LoggedOnUser 所在的域中。 然后使用当前登录用户的凭据获取该域。 如果服务器未处于 LocalComputer 或 LoggedOnUser 的域中，则会返回错误。

-如果未指定 Server 参数，但指定了 Credential 参数：
  --域设置为 LocalComputer 或 LoggedOnUser 的域，服务器位于此域中。 然后使用由 Credential 参数指定的凭据来获取该域。 
如果同时指定了 Server 和 Credential 参数：
域设置为指定服务器的域，cmdlet 会检查以确保该服务器位于 LocalComputer 或 LoggedOnUser 的域中。 然后使用由 Credential 参数指定的凭据来获取该域。 如果服务器未处于 LocalComputer 或 LoggedOnUser 的域中，则会返回错误。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
LocalComputer 或 0
LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
-Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
LocalComputer 或 0
LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
-Current LoggedOnUser</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentForestType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentForestType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
-Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个林对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个林对象。 

该 cmdlet 返回林的全部属性。 要查看 ADForest 对象的全部属性，请使用下面的命令并将其中的 &lt;forest&gt; 替换为林标识符，如 DNS 主机名。
  Get-ADForest &lt;forest&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest Fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取 Fabrikam.com 林的林信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LocalComputer
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取当前本地计算机所在林的林信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取当前登录用户所在林的林信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest</dev:code>
  			<dev:remarks>
				<maml:para>pplicationPartitions  : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com} 
CrossForestReferences  : {CN=northwind,CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com} 
DomainNamingMaster     : Fabrikam-DC1.Fabrikam.com 
Domains                : {Fabrikam.com} 
ForestMode             : Windows2003Forest 
GlobalCatalogs         : {Fabrikam-DC1.Fabrikam.com, CSD2722780.Fabrikam.com} 
Name                   : Fabrikam.com 
PartitionsContainer    : CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com 
RootDomain             : Fabrikam.com 
SchemaMaster           : Fabrikam-DC1.Fabrikam.com 
Sites                  : {Default-First-Site-Name, UnitedKingdomHQ, BO3, RODC-Site-Name} 
SPNSuffixes            : {}
UPNSuffixes            : {}</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取当前登录用户所在林的林信息。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144951</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainController
		</command:name>
		<maml:description>
			<maml:para>基于可发现的服务条件、搜索参数或者通过提供诸如 NetBIOS 名称这样的域控制器标识符，获取一个或多个 Active Directory 域控制器。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainController</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainController cmdlet 获取由参数指定的域控制器。 可以设置 Identity、Filter 或 Discover 参数来获取域控制器。

Identity 参数指定要获取的域控制器。 可以通过 GUID、IPV4Address、全局 IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过表示域控制器的服务器对象的名称、NTDS 设置对象或服务器对象的可分辨名称 (DN)、配置分区下 NTDS 设置对象或服务器对象的 GUID 或表示域控制器的计算机对象的 DN 来标识域控制器。  还可以将 Identity 参数设置为域控制器对象变量（例如 $&lt;localDomainControllerObject&gt;），或者通过管道将域控制器对象传递到 Identity 参数。

要搜索和检索多个域控制器，请使用 Filter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 不能将 LDAP 查询字符串与此 cmdlet 结合使用。

要使用 DCLocator 的发现机制获取域控制器，请使用 Discover 参数。 可以通过设置诸如 Service、SiteName、DomainName、NextClosestSite、AvoidSelf 和 ForceDiscover 这样的参数来提供搜索条件。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Discover</maml:name>
				<maml:description>
					<maml:para>指定返回满足 cmdlet 参数所指定条件的可发现域控制器。
要使用 DCLocator 的发现机制获取域控制器，请使用 Discover 参数。 除了此参数之外，还可以通过设置诸如 Service、SiteName、DomainName、NextClosestSite、AvoidSelf 和 ForceDiscover 这样的参数来提供搜索条件。

以下示例说明如何指定此参数。
  -Discover

以下示例说明如何获取已在名为“RODC-Site”的特定站点中启用 Web 服务的活动 DC。
  Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AvoidSelf</maml:name>
				<maml:description>
					<maml:para>指定不将当前计算机作为域控制器返回。 如果当前计算机不是域控制器，则忽略此参数。 如果想要获取域中另一台域控制器的名称，可以指定此参数。

以下示例说明如何指定此参数。
 -AvoidSelf</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainName</maml:name>
				<maml:description>
					<maml:para>指定要搜索的域。 该 cmdlet 定位此域中的一个可发现域控制器。 使用域的 NetBIOS 名称或完全限定的域名 (FQDN) 来指定域。

以下示例说明如何将此参数设置为域的 FQDN。
  -DomainName &quot;contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ForceDiscover</maml:name>
				<maml:description>
					<maml:para>强制 cmdlet 清除所有缓存的域控制器信息并执行新搜索。  如果未指定此参数，cmdlet 可能返回缓存的域控制器信息。 

以下示例说明如何设置此参数。
  -ForceDiscover</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumDirectoryServiceVersion</maml:name>
				<maml:description>
					<maml:para>指定使用 –Discover 开关获取 DC 时，cmdlet 能够返回的域控制器的最低操作系统版本。 可能值为：
  Windows2000 或 1
  Windows2008 或 2

以下示例说明如何设置此参数。
  -MinimumDirectoryServiceVersion Windows2000 

以下示例说明如何获取 Windows 2008 或更高版本的任何活动 DC：
  Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NextClosestSite</maml:name>
				<maml:description>
					<maml:para>指定当未在包含客户端的站点中找到域控制器时，返回下一个最近的站点中的域控制器。 下一个最近的站点是相对于当前站点来说站点链接开销最低的站点。 站点间的开销基于带宽以及物理接近性等因素。 

以下示例说明如何指定此参数。
  -NextClosestSite</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>指定要获取的域控制器的类型。 可以使用逗号分隔列表来指定多个类型。此参数的可能值为： 
  PrimaryDC 或 1
  GlobalCatalog 或 2
  KDC 或 3
  TimeService 或 4
  ReliableTimeService 或 5
  ADWS 或 6

以下示例说明如何设置此参数。
  -Service GlobalCatalog, KDC 

以下示例说明如何获取已启用 Web 服务的活动 DC：
  Get-ADDomainController -Discover -Services ADWS</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SiteName</maml:name>
				<maml:description>
					<maml:para>指定站点的名称，将在该站点中进行搜索以找到域控制器。 如果未设置此参数，则该 cmdlet 在客户端所在的站点中搜索域控制器。 站点名称由站点对象的 Name 属性定义。

以下示例说明如何使用此参数指定站点。
  -SiteName &quot;redmond&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Writable</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AvoidSelf</maml:name>
			<maml:description>
				<maml:para>指定不将当前计算机作为域控制器返回。如果当前计算机不是域控制器，则忽略此参数。如果想要获取域中另一台域控制器的名称，可以指定此参数。

以下示例说明如何指定此参数。
-AvoidSelf</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Discover</maml:name>
			<maml:description>
				<maml:para>指定返回满足 cmdlet 参数所指定条件的可发现域控制器。
要使用 DCLocator 的发现机制获取域控制器，请使用 Discover 参数。除了此参数之外，还可以通过设置诸如 Service、SiteName、DomainName、NextClosestSite、AvoidSelf 和 ForceDiscover 这样的参数来提供搜索条件。

以下示例说明如何指定此参数。
-Discover

以下示例说明如何获取已在名为“RODC-Site”的特定站点中启用 Web 服务的活动 DC。
Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainName</maml:name>
			<maml:description>
				<maml:para>指定要搜索的域。该 cmdlet 定位此域中的一个可发现域控制器。使用域的 NetBIOS 名称或完全限定的域名 (FQDN) 来指定域。

以下示例说明如何将此参数设置为域的 FQDN。
-DomainName &quot;contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>此计算机加入的的名称</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ForceDiscover</maml:name>
			<maml:description>
				<maml:para>强制 cmdlet 清除所有缓存的域控制器信息并执行新搜索。如果未指定此参数，cmdlet 可能返回缓存的域控制器信息。 

以下示例说明如何设置此参数。
-ForceDiscover</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumDirectoryServiceVersion</maml:name>
			<maml:description>
				<maml:para>指定使用 –Discover 开关获取 DC 时，cmdlet 能够返回的域控制器的最低操作系统版本。可能值为：
Windows2000 或 1
Windows2008 或 2

以下示例说明如何设置此参数。
-MinimumDirectoryServiceVersion Windows2000 

以下示例说明如何获取 Windows 2008 或更高版本的任何活动 DC：
Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADMinimumDirectoryServiceVersion</command:parameterValue>
			<dev:type>
				<maml:name>ADMinimumDirectoryServiceVersion</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NextClosestSite</maml:name>
			<maml:description>
				<maml:para>指定当未在包含客户端的站点中找到域控制器时，返回下一个最近的站点中的域控制器。下一个最近的站点是相对于当前站点来说站点链接开销最低的站点。站点间的开销基于带宽以及物理接近性等因素。 

以下示例说明如何指定此参数。
-NextClosestSite</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>指定要获取的域控制器的类型。可以使用逗号分隔列表来指定多个类型。此参数的可能值为： 
PrimaryDC 或 1
GlobalCatalog 或 2
KDC 或 3
TimeService 或 4
ReliableTimeService 或 5
ADWS 或 6

以下示例说明如何设置此参数。
-Service GlobalCatalog, KDC 

以下示例说明如何获取已启用 Web 服务的活动 DC：
Get-ADDomainController -Discover -Services ADWS</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			<dev:type>
				<maml:name>ADDiscoverableService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SiteName</maml:name>
			<maml:description>
				<maml:para>指定站点的名称，将在该站点中进行搜索以找到域控制器。如果未设置此参数，则该 cmdlet 在客户端所在的站点中搜索域控制器。站点名称由站点对象的 Name 属性定义。

以下示例说明如何使用此参数指定站点。
-SiteName &quot;redmond&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>客户端所在站点的名称</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Writable</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域控制器对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个域控制器对象。

如果使用 Discover 参数来获取域控制器，此 cmdlet 会为每个域控制器返回一组默认的属性值。
如果使用 Identity 或 Filter 参数来获取域控制器，此 cmdlet 将返回该域控制器的所有属性。 
要查看 ADDomainController 对象的全部属性，请使用下面的命令并将其中的 &lt;domaincontroller&gt; 替换为域控制器标识符，如 DNS 主机名。
  Get-ADDomainController &lt;domaincontroller&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          根据以下规则设置此 cmdlet 返回的 ADDomainController 对象的 Name 和 HostName 属性：
- 如果使用 Discover 参数，则 HostName 是域控制器的完全限定的域名，Name 是域控制器的 NetBIOS 名称。 使用 Discover 参数时，此 cmdlet 将执行另一个 DCLocator 调用来填充 Name 属性。 如果 WINS 服务不可用，此属性将不会设置为域控制器的 NetBIOS 名称。
- 如果使用 Identity 或 Filter 参数，则 HostName 是域控制器对象的 DNSHostName 属性，Name 是域控制器对象的 Name (RDN) 属性。 使用 Identity 或 Filter 参数时，如果域控制器对象的 DNSHostName 属性为 Null，则不会设置 HostName 属性。

此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取指定站点中的一个可用 DC。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot; -ForceDiscover</dev:code>
  			<dev:remarks>
  			        <maml:para>强制在指定站点查找一个可用 DC。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service &quot;GlobalCatalog&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取当前林中的全局编录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service 2</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取当前林中的全局编录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取当前域中的一个可用 DC。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取指定域中的一个可用 DC。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;corp.contoso.com&quot; -Service &quot;PrimaryDC&quot;,&quot;TimeService&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 Discovery 获取 PDC，并确保它广告为时间服务器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 NetBIOS 名称获取域控制器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 NetBIOS 名称获取域控制器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;TK5-CORP-DC-10.fabrikam.com&quot; -Server &quot;fabrikam.com&quot; -Credential &quot;corp\administrator&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>通过使用 DNS 主机名并指定管理员凭据，在指定域（通过 Server 参数指定）中获取域控制器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;168.54.62.57&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 IP 地址获取域控制器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 12 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter  { isGlobalCatalog -eq $true -and Site -eq &quot;Default-First-Site-Name&quot; }</dev:code>
  			<dev:remarks>
  			        <maml:para>获取指定站点中的所有全局编录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 13 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Server &quot;research.fabrikam.com&quot; -Filter { isGlobalCatalog -eq $true -and isReadOnly -eq $true }</dev:code>
  			<dev:remarks>
  			        <maml:para>获取客户端所连接到的子域中的所有 ROGC。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 14 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController</dev:code>
  			<dev:remarks>
  			        <maml:para>获取用户当前会话中的域控制器。 此域控制器用作 AD 提供程序的上下文中的默认服务器。 通过这种方式使用此 cmdlet，可以知道默认情况下使用哪个服务器。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144952</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 组织单位。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADOrganizational unit cmdlet 获取组织单位对象或执行搜索以检索多个组织单位。

Identity 参数指定要检索的 Active Directory 组织单位。 可以通过可分辨名称 (DN) 或 GUID 来标识组织单位。 还可以将该参数设置为组织单位对象变量（例如 $&lt;localOrganizationalunitObject&gt;），或者通过管道将组织单位对象传递给 Identity 参数。

要搜索和检索多个组织单位，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 检索一组默认的组织单位对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定计算机对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 组织单位对象的标识。 该参数接受以下标识格式。 圆括号中的标识符是包含该标识的属性的 LDAP 显示名称。

可分辨名称 
示例：OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“OUinstance”的组织单位对象实例。
  -Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 组织单位对象的标识。该参数接受以下标识格式。圆括号中的标识符是包含该标识的属性的 LDAP 显示名称。

可分辨名称 
示例：OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“OUinstance”的组织单位对象实例。
-Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组织单位对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个组织单位对象。 

此 cmdlet 返回一组默认的 ADOrganizational unit 属性值。 要检索其他 ADOrganizational unit 属性，请使用 Properties 参数。 

要查看 ADOrganizational unit 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;organizational unit&gt; 替换为组织单位标识符，如组织单位的可分辨名称 (DN)。

要获取 ADOrganizational unit 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADOrganizational unit &lt;organizational unit&gt;| Get-Member

要获取 ADOrganizational unit 对象的所有属性的列表，请使用下面的命令：
   Get-ADOrganizational unit &lt;organizational unit&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Filter 'Name -like &quot;*&quot;' | FT Name, DistinguishedName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                 DistinguishedName
----                 -----------------
Domain Controllers   OU=Domain Controllers,DC=FABRIKAM,DC=COM
UserAccounts         OU=UserAccounts,DC=FABRIKAM,DC=COM
Sales                OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Marketing            OU=Marketing,OU=UserAccounts,DC=FABRIKAM,DC=COM
Production           OU=Production,OU=UserAccounts,DC=FABRIKAM,DC=COM
HumanResources       OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM
NorthAmerica         OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
SouthAmerica         OU=SouthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Europe               OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
AsiaPacific          OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Finance              OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM
Corporate            OU=Corporate,OU=UserAccounts,DC=FABRIKAM,DC=COM
ApplicationServers   OU=ApplicationServers,DC=FABRIKAM,DC=COM
Groups               OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
PasswordPolicyGroups OU=PasswordPolicyGroups,OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
Managed              OU=Managed,DC=FABRIKAM,DC=COM
ServiceAccounts      OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取域中的所有组织单位</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Identity 'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' | ft Name,Country,PostalCode,City,StreetAddress,State -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        Country PostalCode City     StreetAddress    State
----        ------- ---------- ----     -------------    -----
AsiaPacific AU      4171       Balmoral 45 Martens Place QLD
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 DistinguishedName 为“OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM”的组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -LDAPFilter '(name=*)' -SearchBase 'OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' -SearchScope OneLevel | ft Name,Country,PostalCode,City,StreetAddress,State
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                    Country                 PostalCode             City                   StreetAddress          State
----                    -------                 ----------             ----                   -------------          -----
AsiaPacific             AU                      4171                   Balmoral               45 Martens Place       QLD
Europe                  UK                      NG34 0NI               QUARRINGTON            22 Station Rd
NorthAmerica            US                      02142                  Cambridge              1634 Randolph Street   MA
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用 LDAP 筛选器获取 sales 组织单位下的组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144953</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 组的成员。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADGroupMember cmdlet 获取 Active Directory 组的成员。 成员可以是用户、组和计算机。 

Identity 参数指定要访问的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以通过管道传递组对象来指定组。 例如，可以使用 Get-ADGroup cmdlet 检索某个组对象，然后将该对象通过管道传递到 Get-ADGroupMember cmdlet。

如果指定了 Recursive 参数，cmdlet 将获取组的层次结构中不包含子对象的所有成员。 例如，如果组 SaraDavisReports 包含用户 KarenToh 和组 JohnSmithReports，而 JohnSmithReports 又包含用户 JoshPollock，则该 cmdlet 将返回 KarenToh 和 JoshPollock。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>指定该 cmdlet 获取组的层次结构中不包含子对象的所有成员。 以下示例说明了组 SaraDavisReports 的层次结构。
+SaraDavisReports [组]
  -KarenToh [用户]
  -MattHinkLaptop [计算机]
  +JohnSmithReports [组]
    -JoshPollock [用户]
    -ArmandoPinto [用户]
    +JohnSmithComputers [组]
      -JoshComputer [计算机]
  
如果将 SaraDavisReports 指定为组并指定 Recursive 参数，则会返回以下成员和子成员。
  KarenToh
  MattHinkLaptop
  JoshPollock
  ArmandoPinto
  JoshComputer

如果指定的组没有任何成员，则不返回任何内容。

以下示例说明如何指定此参数。
  -Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>指定该 cmdlet 获取组的层次结构中不包含子对象的所有成员。以下示例说明了组 SaraDavisReports 的层次结构。
+SaraDavisReports [组]
-KarenToh [用户]
-MattHinkLaptop [计算机]
+JohnSmithReports [组]
-JoshPollock [用户]
-ArmandoPinto [用户]
+JohnSmithComputers [组]
-JoshComputer [计算机]
  
如果将 SaraDavisReports 指定为组并指定 Recursive 参数，则会返回以下成员和子成员。
KarenToh
MattHinkLaptop
JoshPollock
ArmandoPinto
JoshComputer

如果指定的组没有任何成员，则不返回任何内容。

以下示例说明如何指定此参数。
-Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个主体对象，这些对象表示属于指定组的用户、计算机或组。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember
cmdlet Get-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: Administrators </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

可分辨名称：CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用默认行为获取管理员组的所有成员。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; | get-adgroupmember -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC 
name              : SanjayPatel 
objectClass       : user 
objectGUID        : d671de28-6e40-42a7-b32c-63d336de296d 
SamAccountName    : 
SID               : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 AD LDS 实例的所有域本地组中的组成员。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember -Identity administrators </dev:code>
  			<dev:remarks>
				<maml:para>可分辨名称：CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

可分辨名称：CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取管理员组的所有组成员。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember &quot;Enterprise Admins&quot; -recursive </dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 

distinguishedName : CN=Sagiv Hadaya,CN=Users,DC=Fabrikam,DC=com 
name              : Sagiv Hadaya 
objectClass       : user 
objectGUID        : 64706230-f179-4fe4-b8c9-f0d334e66ab1 
SamAccountName    : SHadaya 
SID               : S-1-5-21-41432690-3719764436-1984117282-1158 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取“Enterprise Admins”组的所有成员，包括任何子组的成员。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144954</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>获取包含指定用户、计算机、组或服务帐户的 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADPrincipalGroupMembership cmdlet 获取以指定的用户、计算机、组或服务帐户为成员的 Active Directory 组。 此 cmdlet 需要全局编录才能执行组搜索。 如果包含用户、计算机或组的林没有全局编录，则该 cmdlet 会返回非终止错误。 如果要搜索另一个域中的本地组，请使用 ResourceContextServer 参数来指定其他域中的备用服务器。 

Identity 参数指定要确定组成员身份的用户、计算机或组对象。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或 SAM 帐户名来标识用户、计算机或组对象。 还可以指定用户、组或计算机对象变量（例如 $&lt;localGroupObject&gt;），或者通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 检索某个组对象，然后将该对象通过管道传递到 Get-ADPrincipalGroupMembership cmdlet。 同样，可以使用 Get-ADUser 或 Get-ADComputer 获取用户和计算机对象并通过管道传递这些对象。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
- Microsoft.ActiveDirectory.Management.ADGroup
- Microsoft.ActiveDirectory.Management.ADUser
- Microsoft.ActiveDirectory.Management.ADComputer
- Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
-Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextPartition</maml:name>
				<maml:description>
					<maml:para>指定要搜索的 AD 或 AD LDS 实例的分区的可分辨名称。 同时使用此参数和 ResourceContextServer 参数可指定由指定服务器托管的分区。 如果未指定 ResourceContextPartition 参数，则会搜索 ResourceContextServer 的默认分区。 

以下示例说明如何设置此参数。
  -ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextServer</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 返回位于指定域中包含该用户的组的列表。 使用此参数可在用户帐户所在域之外的域中搜索组。 要搜索此域中默认分区之外的分区，还要指定 ResourceContextPartition 参数。


以下示例说明如何指定此参数。
  -ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
- Microsoft.ActiveDirectory.Management.ADGroup
- Microsoft.ActiveDirectory.Management.ADUser
- Microsoft.ActiveDirectory.Management.ADComputer
- Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
-Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextPartition</maml:name>
			<maml:description>
				<maml:para>指定要搜索的 AD 或 AD LDS 实例的分区的可分辨名称。同时使用此参数和 ResourceContextServer 参数可指定由指定服务器托管的分区。如果未指定 ResourceContextPartition 参数，则会搜索 ResourceContextServer 的默认分区。 

以下示例说明如何设置此参数。
-ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextServer</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 返回位于指定域中包含该用户的组的列表。使用此参数可在用户帐户所在域之外的域中搜索组。要搜索此域中默认分区之外的分区，还要指定 ResourceContextPartition 参数。


以下示例说明如何指定此参数。
-ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接受一个表示用户、计算机或组的主体对象。 此参数还接受如下所示的派生类型。
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回以指定的用户、计算机、组或服务帐户为成员的组对象。

Get-ADPrincipalGroupMembership cmdlet 返回一组默认的 ADGroup 属性值。 要检索其他 ADGroup 属性，请通过管道将此 cmdlet 生成的 ADGroups 对象传递给 Get-ADGroup。  通过将 -Properties 参数传递给 Get-ADGroup，可以指定组对象所需的其他属性。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership
cmdlet Get-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: administrator </dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

可分辨名称：CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

可分辨名称：CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用此 cmdlet 的默认行为检索管理员帐户所属的所有组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -server localhost:60000 -identity &quot;CN=GlenJohns,DC=AppNC&quot; -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>在 AD LDS 实例中检索用户“CN=GlenJohns,DC=AppNC”所属的所有组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator</dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

可分辨名称：CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

可分辨名称：CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>检索管理员所属的所有组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator -ResourceContextServer ChildDomain.Fabrikam.Com -ResourceContextPartition &quot;DC=Fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 

可分辨名称：CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

可分辨名称：CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>在资源域 ChildDomain.Fabrikam.Com 中检索本地域中的管理员帐户所属的所有组</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144955</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>获取应用了细粒度密码策略的用户和组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get- ADFineGrainedPasswordPolicySubject cmdlet 获取遵从细粒度密码策略的用户和组。

Identity 参数指定细粒度密码策略。 可以通过可分辨名称、GUID、或名称来标识细粒度密码策略。 还可以将 Identity 参数设置为细粒度密码策略对象变量（例如 $&lt;localPasswordPolicyObject&gt;），或者通过管道将细粒度密码策略对象传递到 Identity 参数。 例如，可以使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索某个细粒度密码策略对象，然后通过管道将该对象传递到 Get- ADFineGrainedPasswordPolicySubject cmdlet。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回表示应用了细粒度密码策略的用户和组的主体对象。 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject -Identity DomainUsersPSO | FT Name,ObjectClass,DistinguishedName -AutoSize
</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass DistinguishedName
----         ----------- -----------------
Domain Users group       CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取名为“DomainUsersPSO”的密码策略的细粒度密码策略主题。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144956</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>获取只读域控制器密码复制策略的允许列表或拒绝列表的成员。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicy 获取用户、计算机、服务帐户和组，它们是只读域控制器 (RODC) 密码复制策略的应用列表或拒绝列表的成员。 要获取应用列表的成员，请指定 AppliedList 参数。 要获取拒绝列表的成员，请指定 DeniedList 参数。

Identity 参数指定使用允许和拒绝列表应用密码复制策略的 RODC。 可以通过 GUID、IPV4Address、IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过表示域控制器的服务器对象的名称、NTDS 设置对象或服务器对象的可分辨名称 (DN)、配置分区下 NTDS 设置对象或服务器对象的 GUID 或表示域控制器的计算机对象的 DN 来标识域控制器。 

还可以将 Identity 参数设置为域控制器对象变量（例如 $&lt;localDomainControllerobject&gt;），或者通过管道将域控制器对象传递到 Identity 参数。 例如，可以使用 Get-ADDomainController cmdlet 检索某个域控制器对象，然后通过管道将该对象传递到 Get-ADDomainControllerPasswordReplicationPolicy cmdlet。 

如果为此 cmdlet 指定了可写域控制器，cmdlet 将返回非终止错误。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Allowed</maml:name>
				<maml:description>
					<maml:para>指定此 cmdlet 应从域控制器允许列表中返回用户、计算机和组。 

以下示例说明如何指定此参数。
  -AllowedList</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Denied</maml:name>
				<maml:description>
					<maml:para>指定此 cmdlet 应从域控制器拒绝列表中返回用户、计算机和组。 

以下示例说明如何指定此参数。
  -DeniedList</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Allowed</maml:name>
			<maml:description>
				<maml:para>指定此 cmdlet 应从域控制器允许列表中返回用户、计算机和组。 

以下示例说明如何指定此参数。
-AllowedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Denied</maml:name>
			<maml:description>
				<maml:para>指定此 cmdlet 应从域控制器拒绝列表中返回用户、计算机和组。 

以下示例说明如何指定此参数。
-DeniedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域控制器对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个对象，这些对象表示属于域控制器密码复制策略的应用列表或拒绝列表的用户、计算机、服务帐户和组。 返回的列表具体取决于指定的参数。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -Allowed | ft Name,ObjectClass</dev:code>
  			<dev:remarks>
  			        <maml:para>从 RODC 域控制器密码复制策略中获取允许的帐户，并显示每个帐户的名称和对象类</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicy -Allowed </dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=Allowed RODC Password Replication Group,CN=Users,DC=Fabrikam,DC=com 
Name              : Allowed RODC Password Replication Group 
ObjectClass       : group 
ObjectGUID        : 239b0470-7f49-472d-8fcb-4911e90b2c5e 
SamAccountName    : Allowed RODC Password Replication Group 
SID               : S-1-5-21-41432690-3719764436-1984117282-571</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从域中的所有 RODC 中获取密码复制策略允许列表。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144957</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicyUsage
		</command:name>
		<maml:description>
			<maml:para>获取通过只读域控制器进行身份验证或位于域控制器显示列表中的 Active Directory 帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicyUsage</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicyUsage 获取通过只读域控制器 (RODC) 进行身份验证或具有存储在该 RODC 上的密码的用户或计算机帐户。 存储在 RODC 上的帐户列表称为显示列表。 

要获取通过 RODC 进行身份验证的帐户，请使用 AuthenticatedAccounts 参数。 要获取具有存储在 RODC 上的密码的帐户，请使用 RevealedAccounts 参数。

其中 Identity 参数指定 RODC。 可以通过 GUID、IPV4Address、全局 IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过表示域控制器的服务器对象的名称、服务器对象的 NTDS 设置对象的可分辨名称 (DN)、配置分区下服务器对象的 NTDS 设置对象的 GUID 或表示域控制器的计算机对象的 DN 来标识域控制器。 还可以将 Identity 参数设置为域控制器对象变量（例如 $&lt;localDomainControllerobject&gt;），或者通过管道将域控制器对象传递到 Identity 参数。 例如，可以使用 Get-ADDomainController cmdlet 检索域控制器对象，然后通过管道将该对象传递给 Get-ADDomainControllerPasswordReplicationPolicyUsage cmdlet。 如果为此 cmdlet 指定了可写域控制器，cmdlet 将返回非终止错误。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicyUsage</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthenticatedAccounts</maml:name>
				<maml:description>
					<maml:para>指定对已通过只读域控制器进行身份验证的帐户进行搜索。

以下示例说明如何指定此参数。
  -AuthenticatedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RevealedAccounts</maml:name>
				<maml:description>
					<maml:para>指定对具有存储在只读域控制器上的密码的帐户进行搜索。

以下示例说明如何指定此参数。
  -RevealedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthenticatedAccounts</maml:name>
			<maml:description>
				<maml:para>指定对已通过只读域控制器进行身份验证的帐户进行搜索。

以下示例说明如何指定此参数。
-AuthenticatedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RevealedAccounts</maml:name>
			<maml:description>
				<maml:para>指定对具有存储在只读域控制器上的密码的帐户进行搜索。

以下示例说明如何指定此参数。
-RevealedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域控制器对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个帐户对象，这些对象表示通过指定的只读域控制器 (RODC) 进行身份验证或具有存储在 RODC 上的密码的用户、计算机和服务帐户。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -AuthenticatedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>为指定 RODC 获取已经过身份验证的帐户，并显示每个帐户的名称和对象类</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -RevealedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>为指定 RODC 获取显示帐户，并显示每个帐户的名称和对象类</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicyUsage </dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=krbtgt_35512,CN=Users,DC=Fabrikam,DC=com 
Enabled               : False 
Name              : krbtgt_35512 
ObjectClass           : user 
ObjectGUID        : 8c7268f9-add3-409c-968b-de029e517211 
SamAccountName    : krbtgt_35512 
SID               : S-1-5-21-41432690-3719764436-1984117282-1106 
UserPrincipalName : 

DistinguishedName : CN=CSD2722780,OU=Domain Controllers,DC=Fabrikam,DC=com 
Enabled           : True 
Name              : CSD2722780 
ObjectClass       : computer 
ObjectGUID        : 63a5e005-e01f-4fc9-ae71-9d9367f808bc 
SamAccountName    : CSD2722780$ 
SID               : S-1-5-21-41432690-3719764436-1984117282-1105 
UserPrincipalName : </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取域中所有 RODC 上缓存的帐户的列表。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145018</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountResultantPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 帐户的结果密码复制策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountResultantPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAccountResultantPasswordReplicationPolicy 获取指定的只读域控制器上的用户、计算机或服务帐户的结果密码复制策略。

该策略为以下值之一：
      Allow 或 1
      DenyExplicit 或 0
      DenyImplicit 或 2
      Unknown 或 -1

其中 Identity 参数指定帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户、计算机或服务帐户对象。 还可以将 Identity 参数设置为帐户对象变量（例如 $&lt;localAccountobject&gt;），或者通过管道将帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser、Get-ADComputer、Get-ADServiceAccount 或 Search-ADAccount cmdlet 检索帐户对象，然后通过管道将该对象传递给 Get-ADAccountResultantPasswordReplicationPolicy cmdlet。

DomainController 参数指定只读域控制器。 可以通过 IPV4Address、全局 IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过 NTDS 设置对象或服务器对象的可分辨名称 (DN)、配置分区下 NTDS 设置对象或服务器对象的 GUID、或表示域控制器的计算机对象的 DN，SamAccountName、GUID、SID 来标识域控制器。 另外也可以将 DomainController 参数设置为域控制器对象变量，例如 $&lt;localDomainControllerObject&gt;。  
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountResultantPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>DomainController</maml:name>
				<maml:description>
					<maml:para>指定只读域控制器 (RODC)。 此 cmdlet 返回此 RODC 的帐户的密码复制策略。 可以通过提供以下值之一来标识域控制器。 
GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
  NTDS 设置对象的可分辨名称 (DN)
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  代表域控制器的服务器对象的可分辨名称 (DN)
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
  代表域控制器的计算机对象的可分辨名称 (DN)。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

注意：括号中的标识符是属性的 LDAP 显示名称。

以下示例说明如何将此参数设置为域控制器的 DNS 主机名。
   -DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>DomainController</maml:name>
			<maml:description>
				<maml:para>指定只读域控制器 (RODC)。此 cmdlet 返回此 RODC 的帐户的密码复制策略。可以通过提供以下值之一来标识域控制器。 
GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称 (DN)
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称 (DN)
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称 (DN)。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

注意：括号中的标识符是属性的 LDAP 显示名称。

以下示例说明如何将此参数设置为域控制器的 DNS 主机名。
-DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADResultantPasswordReplicationPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个 ADResultantPasswordReplicationPolicy 枚举值，该值表示指定域控制器上的帐户的结果密码复制策略。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BradSu &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>获取给定的用户帐户所在的域上的结果密码复制策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BobKe -DomainController &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>获取给定的用户帐户所在的特定域控制器上的结果密码复制策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy &quot;CN=Jordao Moreno,OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>获取给定的用户帐户 DN 所在的特定域控制器上的结果密码复制策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144958</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUserResultantPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>获取用户的结果密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUserResultantPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAccountResultantPasswordPolicy 获取用户的结果密码策略对象 (RSoP)。 RsoP 由名为 msDS-ResultantPSO 的 Active Directory 属性定义。

用户可以有多个关联的密码策略对象 (PSO)，但其中只有一个 PSO 是 RSoP。 当 PSO 直接应用于用户时或 PSO 应用于包含用户的 Active Directory 组时，PSO 与用户关联。 如果有多个 PSO 策略与一个用户或组关联，RSoP 值将定义要应用的 PSO。 

通过使用以下过程确定用户的结果密码策略或 RSoP。
  - 如果只有一个 PSO 与某个用户相关，则此 PSO 即为 RSoP。
  - 如果有多个 PSO 与某个用户关联，则直接应用于该用户的 PSO 即为 RSoP。  
  - 如果有多个 PSO 直接应用于用户，则具有最低 msDS-PasswordSettingsPrecedence 属性值的 PSO 为 RSoP，并且此事件作为一则警告记录在 Active Directory 事件日志中。 该最低属性值表示最高 PSO 优先级。 例如，如果两个 PSO 的 msDS-PasswordSettingsPrecedence 值分别为 100 和 200，则属性值为 100 的 PSO 为 RSoP。
  - 如果没有直接应用于用户的 PSO，则会比较该用户所属的全局安全组的 PSO。 具有最低 msDS-PasswordSettingsPrecedence 值的 PSO 即为 RSoP。

Identity 参数指定 Active Directory 用户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户。 还可以将此参数设置为用户对象变量（例如 $&lt;localUserObject&gt;），或者通过管道将用户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索用户对象，然后通过管道将该对象传递给 Get-ADUserResultantPasswordPolicy cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUserResultantPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个用户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回表示该用户的结果密码策略的细粒度密码策略对象。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUserResultantPasswordPolicy BobKe
</dev:code>
  			<dev:remarks>
				<maml:para>Name                        : DomainUsersPSO
ComplexityEnabled           : True
LockoutThreshold            : 10
ReversibleEncryptionEnabled : False
LockoutDuration             : 12:00:00
LockoutObservationWindow    : 00:15:00
MinPasswordLength           : 8
Precedence                  : 500
ObjectGUID                  : f8d2653c-9b3b-499e-b272-4c7f4268df4c
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 60.00:00:00
AppliesTo                   : {CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM}
DistinguishedName           : CN=DomainUsersPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取 samAccountName 为“BobKe”的用户的结果密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144959</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADServiceAccount cmdlet 获取一个服务帐户，或执行搜索以检索多个服务帐户。

Identity 参数指定要获取的 Active Directory 服务帐户。 可以通过可分辨名称 (DN) 成员、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将此参数设置为服务帐户对象变量（例如 $&lt;localServiceaccountObject&gt;），或者通过管道将服务帐户对象传递到 Identity 参数。

要搜索和检索多个服务帐户，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。

此 cmdlet 获取一组默认的服务帐户对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定服务帐户对象的属性的详细信息，请参阅 Properties 参数说明。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个服务帐户对象。 

此 cmdlet 返回一组默认的 ADService account 属性值。 要检索其他 ADService account 属性，请使用 Properties 参数。 

要查看 ADService account 对象的属性，请参阅下面的示例。 要运行这些示例，请将 &lt;service account&gt; 替换为服务帐户标识符，例如服务帐户的名称。

要获取 ADService account 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADService account &lt;service account&gt;| Get-Member

要获取 ADService account 对象的所有属性的列表，请使用下面的命令：
   Get-ADService account &lt;service account&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity service1 </dev:code>
  			<dev:remarks>
				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>检索 samAccountName 为“service1”的服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity S-1-5-21-159507390-2980359153-3438059098-29770 </dev:code>
  			<dev:remarks>
				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>检索具有 SID S-1-5-21-159507390-2980359153-3438059098-29770 的服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {HostComputers -eq &quot;CN=SQL-Server-1, DC=contoso,DC=com&quot; }</dev:code>
  			<dev:remarks>
				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : {CN=SQL-Server-1, DC=contoso,DC=com} 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>查找安装在计算机“CN=SQL-Server-1,DC=contoso,DC=com”上的服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144960</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>获取由计算机托管的服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADComputerServiceAccount cmdlet 获取由指定计算机托管的所有服务帐户。

Computer 参数指定托管服务帐户的 Active Directory 计算机。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将 Computer 参数设置为计算机对象变量（例如 $&lt;localComputerobject&gt;），或者通过管道将计算机对象传递到 Computer 参数。 例如，可以使用 Get-ADComputer cmdlet 检索某个计算机对象，然后将该对象通过管道传递到 Get-ADComputerServiceAccount cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Computer 参数接收一个计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回表示由指定计算机托管的服务帐户的一个或多个对象。 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputerServiceAccount -Identity ComputerAcct1
</dev:code>
  			<dev:remarks>
				<maml:para>Enabled           : True
Name              : SvcAcct1
UserPrincipalName     :
SamAccountName    : SvcAcct1$
ObjectClass       : msDS-ManagedServiceAccount
SID               : S-1-5-21-159507390-2980359153-3438059098-1104
ObjectGUID        : 8d759d66-ef68-4360-aff6-ec3bb3425ac1
HostComputers     : {CN=ComputerAcct1,CN=Computers,DC=contoso,DC=com}
DistinguishedName : CN=SvcAcct1,CN=Managed Service Accounts,DC=contoso,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取在计算机帐户“ComputerAcct1”上托管的服务帐户</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144961</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 域的默认密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDefaultDomainPasswordPolicy cmdlet 获取域的默认密码策略。

Identity 参数指定 Active Directory 域。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、DNS 域名或 NETBIOS 名称来标识域。 还可以将此参数设置为域对象变量（例如 $&lt;localDomainObject&gt;），或者通过管道将域对象传递到 Identity 参数。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
LocalComputer 或 0
LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
-Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>指定是返回本地计算机所在的域还是当前登录用户 (CLU) 所在的域。此参数的可能值为：
LocalComputer 或 0
LoggedOnUser  或 1

以下示例说明如何设置此参数，以返回当前登录用户的域。
-Current LoggedOnUser</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回指定域的默认域密码策略对象。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser</dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前登录用户所在的域的默认域密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LocalComputer</dev:code>
  			<dev:remarks>
  			        <maml:para>从当前本地计算机中获取默认域密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Identity fabrikam.com</dev:code>
  			<dev:remarks>
  			        <maml:para>获取给定域的默认域密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>(Get-ADForest -Current LoggedOnUser).Domains | %{ Get-ADDefaultDomainPasswordPolicy -Identity $_ }</dev:code>
  			<dev:remarks>
  			        <maml:para>获取林中所有域的默认域密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前登录用户所在的域的默认域密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144962</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountAuthorizationGroup
		</command:name>
		<maml:description>
			<maml:para>获取帐户标记组信息。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountAuthorizationGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAuthorizationGroup cmdlet 获取指定的用户、计算机或服务帐户标记的安全组。 此 cmdlet 需要全局编录才能执行组搜索。 如果包含帐户的林没有全局编录，则 cmdlet 将返回非终止错误。

Identity 参数指定用户、计算机或服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、安全帐户管理器 (SAM) 帐户名称或用户主体名称来标识用户、计算机或服务帐户对象。 还可以将 Identity 参数设置为帐户对象变量（例如 $&lt;localAccountobject&gt;），或者通过管道将帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser、Get-ADComputer、Get-ADServiceAccount 或 Search-ADAccount cmdlet 检索帐户对象，然后通过管道将该对象传递给 Get-ADAccountAuthorizationGroup cmdlet。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountAuthorizationGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数收到表示用户、计算机或服务帐户的帐户对象。 还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回表示帐户的安全组的组对象。 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup GlenJohn</dev:code>
  			<dev:remarks>
 				<maml:para>
GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Everyone
name              : Everyone
objectClass       :
SID               : S-1-1-0
distinguishedName :

GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Authenticated Users
name              : Authenticated Users
objectClass       :
SID               : S-1-5-11
distinguishedName :

GroupScope        : Global
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902
GroupCategory     : Security
SamAccountName    : Domain Users
name              : Domain Users
objectClass       : group
SID               : S-1-5-21-41432690-3719764436-1984117282-513
distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : 869fb7ad-8cf2-4dd0-ac0f-4bd3bf324669
GroupCategory     : Security
SamAccountName    : Pre-Windows 2000 Compatible Access
name              : Pre-Windows 2000 Compatible Access
objectClass       : group
SID               : S-1-5-32-554
distinguishedName : CN=Pre-Windows 2000 Compatible Access,CN=Builtin,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : c1e397c5-1e44-4270-94d1-88d6c4b78ee6
GroupCategory     : Security
SamAccountName    : Users
name              : Users
objectClass       : group
SID               : S-1-5-32-545
distinguishedName : CN=Users,CN=Builtin,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>返回 SamAccountName 为 GlenJohn 的指定帐户的所有安全组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup &quot;cn=GlenJohn,dc=AppNC&quot; -Server &lt;Server&gt;:50000</dev:code>
  			<dev:remarks>
				<maml:para>distinguishedName : CN=AdminGroup,DC=AppNC
GroupCategory     : Security
GroupScope        : Global
name              : AdminGroup
objectClass       : group
objectGUID        : 4d72873f-fe09-4834-9ada-a905636d10df
SamAccountName    :
SID               : S-1-510474493-936115905-4021890855-1253703389-3958791574-3542197427</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
<maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>返回 AD LDS 实例 &lt;Server&gt;:50000 中 DistinguishedName 为“cn=GlenJohn,dc=AppNC”的指定帐户的所有安全组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144963</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>获取一个或多个 Active Directory 可选功能。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADOptionalFeature cmdlet 获取可选功能，或者执行搜索以检索 Active Directory 中的多个可选功能。 

Identity 参数指定要获取的 Active Directory 可选功能。 可以通过可分辨名称 (DN)、功能 GUID 或对象 GUID 来标识可选功能。 还可以将此参数设置为可选功能对象变量（例如 $&lt;localOptionalFeatureObject&gt;），或者可以通过管道将可选功能对象传递到 Identity 参数。

要搜索和检索多个可选功能，请使用 Filter 或 LDAPFilter 参数。 Filter 参数使用 PowerShell 表达式语言编写针对 Active Directory 的查询字符串。 PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。 有关 Filter 参数语法的详细信息，请参阅 about_ActiveDirectory_Filter。 如果您具有现有的 LDAP 查询字符串，则可以使用 LDAPFilter 参数。 

此 cmdlet 检索一组默认的可选功能对象属性。 若要检索其他属性，请使用 Properties 参数。 有关如何确定计算机对象的属性的详细信息，请参阅 Properties 参数说明。  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
-Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>指定检索 Active Directory 对象的查询字符串。该字符串使用 PowerShell 表达式语言语法。PowerShell 表达式语言语法为 Filter 参数收到的值类型提供丰富的类型转换支持。此语法采用顺序表示，即运算符放在操作数和值之间。有关 Filter 参数的详细信息，请参阅 about_ActiveDirectory_Filter。 

语法： 
以下语法采用巴科斯-诺尔范式说明如何对此参数使用 PowerShell 表达式语言。

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

有关 &lt;值&gt; 的受支持类型的列表，请参阅 about_ActiveDirectory_ObjectModel。

示例： 
以下示例说明如何对 Active Directory cmdlet 使用此语法。

若要获取属于 cmdlet 所指定类型的所有对象，请使用星号通配符：
所有用户对象：
Get-ADUser -Filter * 
- 或 -
所有计算机对象：
Get-ADComputer -Filter *

若要获取具有电子邮件属性的所有用户对象，请使用下列命令之一：
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
- 或 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

注意：“*”之外的 PowerShell 通配符（如“?”）不受筛选器语法支持。

要获取姓氏为 Smith 且具有电子邮件属性的所有用户对象，请使用下列命令之一： 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
- 或 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

若要获取自 2007 年 1 月 1 日以来尚未登录过的所有用户对象，请使用以下命令：
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

要获取具有“安全”组类别和“全局”组作用域的所有组，请使用下列命令之一：
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
- 或 -
Get-ADGroup -filter {GroupType -band 0x80000000}

注意：若要使用 LDAP 查询字符串查询，请使用 LDAPFilter 参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 可选功能对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
功能 GUID (featureGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
对象 GUID (objectGUID) 
示例：482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为可选功能对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“optionalFeatureInstance”的可选功能对象实例。
-Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>指定用于筛选 Active Directory 对象的 LDAP 查询字符串。可以使用此参数运行现有的 LDAP 查询。Filter 参数语法与 LDAP 语法支持的功能相同。有关详细信息，请参阅 Filter 参数说明和 about_ActiveDirectory_Filter。

以下示例说明如何设置此参数，以搜索 SearchBase 参数指定的组织单位中名称以“sara”开头的所有对象。

-LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要从服务器上检索的输出对象的属性。使用此参数可检索未包含在默认集中的属性。

以逗号分隔名称列表的形式指定此参数的属性。若要显示为对象设置的所有属性，请指定 *（星号）。

要指定单个扩展属性，请使用该属性的名称。对于非默认属性即扩展属性 (Property)，必须指定属性 (Attribute) 的 LDAP 显示名称。 

要检索并显示对象的属性，可以使用与对象关联的 Get-* cmdlet 并将输出传递到 Get-Member cmdlet。以下示例说明如何检索一个组的属性，其中 Administrators 组用作示例组对象。

  Get-ADGroup -Identity Administrators | Get-Member

要检索并显示 ADGroup 对象的所有属性的列表，请使用下面的命令：
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

以下示例说明如何使用 Properties 参数检索各个属性以及默认属性、扩展属性或所有属性。 

若要检索名为“SaraDavis”的 ADUser 对象的扩展属性“OfficePhone”和“Organization”以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

若要检索同一用户的具有 LDAP 显示名称“otherTelephone”和“otherMobile”的属性以及默认属性，请使用下面的命令：
GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个可选功能对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个可选的功能对象。 

此 cmdlet 返回一组默认的 ADOptionalFeature 属性值。 要检索其他 ADOptionalFeature 属性，请使用 Properties 参数。 

要查看 ADOptionalFeature 对象的属性，请参考下面的示例。 要运行这些示例，请将 &lt;optional feature&gt; 替换为可选功能标识符，例如可选功能的可分辨名称。

要获取 ADOptionalFeature 对象的一组默认属性的列表，请使用下面的命令：
   Get-ADOptionalFeature &lt;optional feature&gt;| Get-Member

要获取 ADOptionalFeature 对象的所有属性的列表，请使用下面的命令：
   Get-ADOptionalFeature &lt;optional feature&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前林中所有可用的可选功能的列表。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature'</dev:code>
  			<dev:remarks>
  			        <maml:para>获取名为“Recycle Bin Feature”的可选功能。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 766ddcd8-acd0-445e-f3b9-a7f9b6744f2a</dev:code>
  			<dev:remarks>
  			        <maml:para>获取具有功能 GUID“766ddcd8-acd0-445e-f3b9-a7f9b6744f2a”的可选功能。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>获取 AD LDS 实例中的“Recycle Bin Feature”可选功能。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144964</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Install-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>在计算机上安装 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Install</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Install-ADServiceAccount cmdlet 在运行该 cmdlet 的计算机上安装现有 Active Directory 服务帐户。 此 cmdlet 验证计算机是否符合托管服务帐户的条件。 该 cmdlet 还在本地进行必要的更改，使得计算机可以定期重置服务帐户密码，而无需任何用户操作。

Identity 参数指定要安装的 Active Directory 服务帐户。 可以通过可分辨名称 (DN) 成员、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将此参数设置为服务帐户对象变量（例如 $&lt;localServiceaccountObject&gt;），或者通过管道将服务帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADServiceAccount 获取服务帐户对象，然后通过管道将该对象传递给 Install-ADServiceAccount。

使用 AccountPassword 参数可以传递包含托管服务帐户密码的 SecureString。 另外，您可以使用 PromptForPassword 参数提示输入托管服务帐户密码。 指定的密码应与托管服务帐户已设置的密码相配置。 当您在位于具有对只读域控制器 (RODC) 的访问权限但是没有对可写 DC 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上安装托管服务时，需要传递密码。 在这种情况下，您应当创建托管服务帐户，将其与相应的计算机帐户链接，并分配一个当您在 RODC-only 站点的服务器上安装托管服务帐户时需要传递的已知密码。 如果您同时传递 AccountPassword 和 PromptForPassword 参数，优先使用 AccountPassword 参数。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Install-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>AccountPassword</maml:name>
			  <maml:description>
			    <maml:para>使用 AccountPassword 参数可以传递包含托管服务帐户已设置密码的 SecureString 值类型。 当您在位于具有对只读域控制器 (RODC) 的访问权限但是没有对可写 DC 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上安装托管服务时，需要此参数。 在这种情况下，您应当创建托管服务帐户，将其与相应的计算机帐户链接，并分配一个当您在 RODC-only 站点的服务器上安装托管服务帐户时需要传递的已知密码。 如果您同时传递 AccountPassword 和 PromptForPassword 参数，优先使用 AccountPassword 参数。</maml:para>
			  </maml:description>
			  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>PromptForPassword</maml:name>
			  <maml:description>
			    <maml:para>使用 PromptForPassword 参数可以输入已设置的托管服务帐户的密码。 当您在位于具有对只读域控制器 (RODC) 的访问权限但是没有对可写 DC 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上安装托管服务时，需要此参数。 在这种情况下，您应当创建托管服务帐户，将其与相应的计算机帐户链接，并分配一个当您在 RODC-only 站点的服务器上安装托管服务帐户时需要传递的已知密码。 如果您同时传递 AccountPassword 和 PromptForPassword 参数，优先使用 AccountPassword 参数。</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>AccountPassword</maml:name>
		  <maml:description>
		    <maml:para>使用 AccountPassword 参数可以传递包含托管服务帐户已设置密码的 SecureString 值类型。 当您在位于具有对只读域控制器 (RODC) 的访问权限但是没有对可写 DC 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上安装托管服务时，需要此参数。 在这种情况下，您应当创建托管服务帐户，将其与相应的计算机帐户链接，并分配一个当您在 RODC-only 站点的服务器上安装托管服务帐户时需要传递的已知密码。 如果您同时传递 AccountPassword 和 PromptForPassword 参数，优先使用 AccountPassword 参数。</maml:para>
		  </maml:description>
		  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>PromptForPassword</maml:name>
		  <maml:description>
		    <maml:para>使用 PromptForPassword 参数可以输入已设置的托管服务帐户的密码。 当您在位于具有对只读域控制器 (RODC) 的访问权限但是没有对可写 DC 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上安装托管服务时，需要此参数。 在这种情况下，您应当创建托管服务帐户，将其与相应的计算机帐户链接，并分配一个当您在 RODC-only 站点的服务器上安装托管服务帐户时需要传递的已知密码。 如果您同时传递 AccountPassword 和 PromptForPassword 参数，优先使用 AccountPassword 参数。</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' 
</dev:code>
  			<dev:remarks>
 				<maml:para>将名为“SQL-HR-svc-01”的托管服务帐户安装到本地计算机中。</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Install-ADServiceAccount $a </dev:code>
  			<dev:remarks>
  			        <maml:para>从默认目录中获取名为“SQL-HR-svc-01”的托管服务帐户，并将其安装到本地计算机中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -AccountPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
			<dev:remarks>
				<maml:para>验证密码后将名为“SQL-HR-svc-01”的托管服务帐户安装到本地计算机中。</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -PromptForPassword
</dev:code>
			<dev:remarks>
				<maml:para>请输入“SQL-HR-svc-01”的当前密码
Password:******</maml:para>
				<maml:para>验证输入的密码后将名为“SQL-HR-svc-01”的托管服务帐户安装到本地计算机中。</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144965</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Reset-ADServiceAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADObject
		</command:name>
		<maml:description>
			<maml:para>将 Active Directory 对象或对象容器移至另一个容器或域。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADObject cmdlet 将对象或对象容器从一个容器移至另一个容器，或从一个域移至另一个域。 

Identity 参数指定要移动的 Active Directory 对象或容器。 可以通过可分辨名称 (DN) 或 GUID 来标识对象或容器。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADObject cmdlet 检索某个对象，然后将该对象通过管道传递到 Move-ADObject cmdlet。 还可以使用 Get-ADGroup、Get-ADUser、Get-ADComputer、Get-ADServiceAccount、Get-ADOrganizationalUnit 和 Get-ADFineGrainedPasswordPolicy cmdlet 获取可通过管道传递到此 cmdlet 的对象。

必须指定 TargetPath 参数。 此参数标识对象或容器的新位置。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>指定对象的新位置。 此位置必须是容器或组织单位的路径。

以下示例说明如何通过提供可分辨名称来指定目标路径。
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetServer</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值，指定要使用的 Active Directory 实例。 

注意：跨域移动需要 FQDN 服务器名称。

域名值：
  完全限定的域名 (FQDN)
示例：contoso.com

目录服务器值：
完全限定的目录服务器名称
示例：server01.europe.contoso.com
完全限定的目录服务器名称和端口
示例：server01.europe.contoso.com:3268

以下示例说明如何通过指定完全限定的目录服务器名称来指定目标服务器。
  -TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>指定对象的新位置。此位置必须是容器或组织单位的路径。

以下示例说明如何通过提供可分辨名称来指定目标路径。
-TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetServer</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值，指定要使用的 Active Directory 实例。 

注意：跨域移动需要 FQDN 服务器名称。

域名值：
完全限定的域名 (FQDN)
示例：contoso.com

目录服务器值：
完全限定的目录服务器名称
示例：server01.europe.contoso.com
完全限定的目录服务器名称和端口
示例：server01.europe.contoso.com:3268

以下示例说明如何通过指定完全限定的目录服务器名称来指定目标服务器。
-TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.AObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。 还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;OU=ManagedGroups,DC=Fabrikam,DC=Com&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>将组织单位“ManagedGroups”移到新位置。 若要成功移动，OU“ManagedGroups”不能具有免受意外删除的保护。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将由指定 GUID 标识的对象移到新位置。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;1c2ea8a8-c2b7-4a87-8190-0e8a166aee16&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将对象移到新位置。 对象和目标路径都是用 GUID 指定的。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com&quot; -TargetPath &quot;OU=Accounting,DC=Europe,DC=Fabrikam,DC=com&quot; -TargetServer &quot;server01.europe.fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 DistinguishedName 为“CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com”的对象移到其他域。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=AccountLeads,DC=AppNC&quot; -TargetPath &quot;OU=AccountDeptOU,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将对象移到 LDS 实例中的新位置。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144966</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServer
		</command:name>
		<maml:description>
			<maml:para>将 Active Directory 中的目录服务器移至新网站。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADDirectoryServer cmdlet 将 Active Directory 中的目录服务器移到同一个域中的新网站。

Identity 参数指定要移动的目录服务器。 可以通过以下值之一指定目录服务器对象：
  服务器对象的名称 (name) 
  NTDS 设置对象的可分辨名称 (DN)
  代表目录服务器的服务器对象的可分辨名称 (DN)
  配置分区下服务器对象的 GUID (objectGUID)
  配置分区下 NTDS 设置对象的 GUID (objectGUID)

还可以将 Identity 参数设置为目录服务器对象变量（例如 $&lt;localDirectoryServerObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADDomainController 获取目录服务器对象，然后通过管道将该对象传递到 Move-ADDirectoryServer cmdlet。

Site 参数指定目录服务器的新网站。 可以通过可分辨名称 (DN) 或 GUID 来标识网站。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 服务器对象。圆括号中的标识符是属性的 LDAP 显示名称。

服务器对象的名称 (name) 
  对于 AD LDS 实例，名称的语法为 &lt;计算机名称&gt;$&lt;实例名称&gt;
示例：asia-w7-vm4$instance1
注意：在 Windows PowerShell 中键入该值时，必须使用倒引号 (`) 作为美元符号 ($) 的转义字符。因此，对于上面的示例，应键入以下值：asia-w7-vm4`$instance1
  对于其他 Active Directory 实例，请使用 name 属性的值
示例：corp-DC01

NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

表示目录服务器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

配置分区下服务器对象的 GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20

配置分区下 NTDS 设置对象的 GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“directoryServerInstance”的目录服务器对象实例。
  -Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Site</maml:name>
				<maml:description>
					<maml:para>指定目录服务器的新网站。 可以通过下列属性值之一来标识网站。注意：括号中的标识符是属性的 LDAP 显示名称。

  可分辨名称 (DN)
示例：CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID (ObjectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
名称 (name)
示例：NA-CAN-QBC 

以下示例说明如何使用此参数来通过网站名称指定网站对象。
  -Site  &quot;NA-CAN-QBC&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 服务器对象。圆括号中的标识符是属性的 LDAP 显示名称。

服务器对象的名称 (name) 
对于 AD LDS 实例，名称的语法为 &lt;计算机名称&gt;$&lt;实例名称&gt;
示例：asia-w7-vm4$instance1
注意：在 Windows PowerShell 中键入该值时，必须使用倒引号 (`) 作为美元符号 ($) 的转义字符。因此，对于上面的示例，应键入以下值：asia-w7-vm4`$instance1
对于其他 Active Directory 实例，请使用 name 属性的值
示例：corp-DC01

NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

表示目录服务器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

配置分区下服务器对象的 GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20

配置分区下 NTDS 设置对象的 GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“directoryServerInstance”的目录服务器对象实例。
-Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Site</maml:name>
			<maml:description>
				<maml:para>指定目录服务器的新网站。可以通过下列属性值之一来标识网站。注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (DN)
示例：CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
GUID (ObjectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
名称 (name)
示例：NA-CAN-QBC 

以下示例说明如何使用此参数来通过网站名称指定网站对象。
-Site  &quot;NA-CAN-QBC&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			<dev:type>
				<maml:name>ADSite</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个目录服务器对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServer -Identity &quot;FABRIKAM-DC2&quot; -Site &quot;Branch-Office-Site&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将域控制器“FABRIKAM-DC2”移到网站“Branch-Office-Site”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Move-ADDirectoryServer -site &quot;RODC-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将所有只读域控制器移到网站“RODC-Site-Name”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144967</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServerOperationMasterRole</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServerOperationMasterRole
		</command:name>
		<maml:description>
			<maml:para>将操作主机角色移至 Active Directory 目录服务器。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServerOperationMasterRole</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADDirectoryServerOperationMasterRole cmdlet 将一个或多个操作主机角色移至目录服务器。 可以将操作主机角色移至另一个域中的目录服务器，前提是两个域中的凭据相同。 

Identity 参数指定接收角色的目录服务器。 可以通过以下值之一指定目录服务器对象：
  服务器对象的名称 (name) 
  NTDS 设置对象的可分辨名称 (DN)
  代表目录服务器的服务器对象的可分辨名称 (DN)
  配置分区下服务器对象的 GUID (objectGUID)
  配置分区下 NTDS 设置对象的 GUID (objectGUID)

对于 AD LDS 实例，服务器对象名称的语法为 &lt;计算机名称&gt;$&lt;实例名称&gt;。 下面是该语法的示例： 
  asia-w7-vm4$instance1
在 Windows PowerShell 中键入该值时，必须使用倒引号 (`) 作为美元符号 ($) 的转义字符。 因此，在本例中应键入以下值： 
  asia-w7-vm4`$instance1

还可以将此参数设置为目录服务器对象变量，如 $&lt;localDirectoryServerObject&gt;。

OperationMasterRole 参数指定要移动的操作主机角色。 操作角色包括 PDCEmulator、RIDMaster、InfrastructureMaster、SchemaMaster 或 DomainNamingMaster。 要指定多个角色，请使用逗号分隔的列表。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServerOperationMasterRole</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 服务器对象。圆括号中的标识符是属性的 LDAP 显示名称。

服务器对象的名称 (name) 
对于 AD LDS 实例，名称的语法为 &lt;计算机名称&gt;$&lt;实例名称&gt;
示例：asia-w7-vm4$instance1
注意：在 Windows PowerShell 中键入该值时，必须使用倒引号 (`) 作为美元符号 ($) 的转义字符。因此，对于上面的示例，应键入以下值：asia-w7-vm4`$instance1
对于其他 Active Directory 实例，请使用 name 属性的值
示例：corp-DC01

NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

表示目录服务器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

配置分区下服务器对象的 GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20

配置分区下 NTDS 设置对象的 GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“directoryServerInstance”的目录服务器对象实例。
-Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>OperationMasterRole</maml:name>
				<maml:description>
					<maml:para>指定要移到 Active Directory 域服务中的指定目录服务器的一个或多个操作主机角色。此参数的可能值包括： 
  PDCEmulator 或 0
  RIDMaster 或 1
  InfrastructureMaster 或 2
  SchemaMaster 或 3
  DomainNamingMaster 或 4

要指定多个操作主机角色，请使用逗号分隔的列表。

以下示例说明如何指定此参数以移动 SchemaMaster 和 DomainNamingMaster 角色。
   -OperationMasterRole SchemaMaster, 4</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 服务器对象。圆括号中的标识符是属性的 LDAP 显示名称。

服务器对象的名称 (name) 
对于 AD LDS 实例，名称的语法为 &lt;计算机名称&gt;$&lt;实例名称&gt;
示例：asia-w7-vm4$instance1
注意：在 Windows PowerShell 中键入该值时，必须使用倒引号 (`) 作为美元符号 ($) 的转义字符。因此，对于上面的示例，应键入以下值：asia-w7-vm4`$instance1
对于其他 Active Directory 实例，请使用 name 属性的值
示例：corp-DC01

NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

表示目录服务器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

配置分区下服务器对象的 GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20

配置分区下 NTDS 设置对象的 GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“directoryServerInstance”的目录服务器对象实例。
-Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>OperationMasterRole</maml:name>
			<maml:description>
				<maml:para>指定要移到 Active Directory 域服务中的指定目录服务器的一个或多个操作主机角色。此参数的可能值包括： 
PDCEmulator 或 0
RIDMaster 或 1
InfrastructureMaster 或 2
SchemaMaster 或 3
DomainNamingMaster 或 4

要指定多个操作主机角色，请使用逗号分隔的列表。

以下示例说明如何指定此参数以移动 SchemaMaster 和 DomainNamingMaster 角色。
-OperationMasterRole SchemaMaster, 4</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			<dev:type>
				<maml:name>ADOperationMasterRole[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>参阅注释</dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个目录服务器对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的目录服务器对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole &quot;FABRIKAM-DC1&quot; PDCEmulator</dev:code>
  			<dev:remarks>
  			        <maml:para>将 PDC 模拟器角色移到域控制器“FABRIKAM-DC1”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole -Identity &quot;FABRIKAM-DC2&quot; -OperationMasterRole PDCEmulator,SchemaMaster</dev:code>
  			<dev:remarks>
  			        <maml:para>将 PDC 模拟器和架构主机角色移到域控制器“FABRIKAM-DC2”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole Fabrikam-DC`$instance1 -OperationMasterRole schemaMaster -server Fabrikam-DC:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>将架构主机 FSMO 所有者移到服务器“Fabrikam-DC”上的 AD LDS 实例“instance1”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144968</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADObject
		</command:name>
		<maml:description>
			<maml:para>创建 Active Directory 对象。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADObject cmdlet 创建新的 Active Directory 对象，例如新组织单位或新用户帐户。 可以使用此 cmdlet 来创建任何类型的 Active Directory 对象。 许多对象属性都是通过设置 cmdlet 参数来定义的。 不是通过 cmdlet 参数设置的属性可以使用 OtherAttributes 参数来设置。 
要创建新的 Active Directory 对象，必须设置 Name 和 Type 参数。 Name 指定新对象的名称。 Type 参数指定 Active Directory 架构类的 LDAP 显示名称，此架构类表示您要创建的对象的类型。 例如，computer、group、organizational unit 和 user 等都是 Type 值。
Path 参数指定将在其中创建对象的容器。 如果没有指定 Path 参数，则该 cmdlet 将在域中 Active Directory 对象的默认命名上下文容器中创建对象。

以下方法说明了使用此 cmdlet 创建对象的不同方式。
方法 1：使用 New-ADObject cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。
方法 2：使用模板创建新对象。 为此，请创建新的 Active Directory 对象或检索现有 Active Directory 对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 有关 Active Directory cmdlet 如何使用 Instance 参数的信息，请参阅 about_ActiveDirectory_Instance。
方法 3：结合使用 Import-CSV cmdlet 和 Add-ADObject cmdlet，创建多个 Active Directory 对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADObject cmdlet 以创建 Active Directory 对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。 此参数设置 Active Directory 对象的 Name 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>指定要创建的对象的类型。 将 Type 参数设置为 Active Directory 架构类的 LDAP 显示名称，此架构类表示您要创建的对象的类型。 例如，user、computer 和 group 等都是 Type 值。

下面的示例说明如何使用此参数创建新的 Active Directory 组对象。
  -Type &quot;group&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。 此参数设置对象的 Description 属性的值。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。 此参数设置对象的 DisplayName 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新 Active Directory 对象的模板的 Active Directory 对象实例。

可以使用现有 Active Directory 对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造一个新的 Active Directory 对象。 下面的示例说明如何使用这两种方法创建新的 Active Directory 对象。

方法 1：使用现有 Active Directory 对象作为新对象的模板。 要检索现有 Active Directory 对象的实例，请使用诸如 Get-ADObject 等 cmdlet。 然后将此对象提供给 New-ADObject cmdlet 的 Instance 参数，以创建新的 Active Directory 对象。 可以通过设置相应的参数来重写新对象的属性值。 

  $objectInstance = Get-ADObject -Identity saraDavisDesktop 
  New-ADObject -Name &quot;ellenAdamsDesktop&quot;  -Instance $ObjectInstance -Type &quot;computer&quot;

方法 2：创建新的 ADObject，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递给 New-ADObject cmdlet 的 Instance 参数，以创建新的 Active Directory 对象。 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Ellen Adams New Computer&quot; New-ADObject -Name ellenAdamsDesktop  -Instance $ObjectInstance -Type computer

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。 可以在设置此参数的同时设置一个或多个参数。 如果属性所取的值超过一个，则可以分配多个值。 要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。  以下语法说明如何设置多个属性的值：
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
  - 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
  - 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
  -  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
  - 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
  - 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。 但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。 当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
  $false 或 0
  $true 或 1 

以下示例说明如何将此参数设置为 true。
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新 Active Directory 对象的模板的 Active Directory 对象实例。

可以使用现有 Active Directory 对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造一个新的 Active Directory 对象。下面的示例说明如何使用这两种方法创建新的 Active Directory 对象。

方法 1：使用现有 Active Directory 对象作为新对象的模板。要检索现有 Active Directory 对象的实例，请使用诸如 Get-ADObject 等 cmdlet。然后将此对象提供给 New-ADObject cmdlet 的 Instance 参数，以创建新的 Active Directory 对象。可以通过设置相应的参数来重写新对象的属性值。 

$objectInstance = Get-ADObject -Identity saraDavisDesktop 
New-ADObject -Name &quot;ellenAdamsDesktop&quot;  -Instance $ObjectInstance -Type &quot;computer&quot;

方法 2：创建新的 ADObject，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递给 New-ADObject cmdlet 的 Instance 参数，以创建新的 Active Directory 对象。 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Ellen Adams New Computer&quot; New-ADObject -Name ellenAdamsDesktop  -Instance $ObjectInstance -Type computer

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>指定要创建的对象的类型。将 Type 参数设置为 Active Directory 架构类的 LDAP 显示名称，此架构类表示您要创建的对象的类型。例如，user、computer 和 group 等都是 Type 值。

下面的示例说明如何使用此参数创建新的 Active Directory 组对象。
-Type &quot;group&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新对象的模板的 Active Directory 对象。

还接受如下所示的派生类型：
  -Microsoft.ActiveDirectory.Management.ADPartition
  -Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  -Microsoft.ActiveDirectory.Management.ADGroup
  -Microsoft.ActiveDirectory.Management.ADUser
  -Microsoft.ActiveDirectory.Management.ADComputer
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回新的 Active Directory 对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -Name '192.168.1.0/26' -Type subnet -Description '192.168.1.0/255.255.255.192' -OtherAttributes @{location=&quot;Building A&quot;;siteObject=&quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;} -Path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>使用指定的属性在 HQ 站点中创建子网对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$subnetTemplate = get-adobject -Identity &quot;CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com&quot; -properties description,location; new-adobject -instance $subnetTemplate -name &quot;192.168.1.0/28&quot; -type subnet -path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>以其他子网对象为模板创建新子网对象</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -name SaraDavisContact -type contact -ProtectedFromAccidentalDeletion $true -OtherAttributes @{'msDS-SourceObjectDN'=&quot;CN=FabrikamContacts,DC=CONTOSO,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>创建一个新联系对象，设置 msDS-SourceObjectDN 属性并保护对象不会意外删除</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>new-adobject -name Apps -type container -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>在 LDS 实例中创建一个名为“Apps”的新容器对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144969</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADUser
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 用户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADUser cmdlet 创建新的 Active Directory 用户。 可以使用 cmdlet 参数来设置常用的用户属性值。 

不与 cmdlet 参数关联的属性值可以使用 OtherAttributes 参数来设置。  在使用此参数时，请务必用单引号将属性名引起来，如下面的示例所示。

New-ADUser -SamAccountName &quot;glenjohn&quot;  -GivenName &quot;Glen&quot; -Surname &quot;John&quot; -DisplayName &quot;Glen John&quot; -Path 'CN=Users,DC=fabrikam,DC=local' -OtherAttributes @{'msDS-PhoneticDisplayName'=&quot;GlenJohn&quot;}

要创建用户，必须指定 SAMAccountName 参数。 

可以使用 New-ADUser cmdlet 创建不同类型的用户帐户，例如 iNetOrgPerson 帐户。 要在 AD DS 中执行此操作，请将 Type 参数设置为您要创建的帐户类型的 LDAP 显示名称。 此类型可以是 Active Directory 架构中的任何类，该类是用户的子类，对象类别是人。

Path 参数指定新用户的容器或组织单位 (OU)。 如果没有指定 Path 参数，则 cmdlet 将在域中用户对象的默认容器中创建用户对象。

以下方法说明了使用此 cmdlet 创建对象的不同方式。

方法 1：使用 New-ADUser cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。

方法 2：使用模板创建新对象。 为此，请创建新的用户对象或检索现有用户对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 

方法 3：结合使用 Import-CSV cmdlet 和 New-ADUser cmdlet，创建多个 Active Directory 用户对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADUser cmdlet 以创建用户对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。 将此参数设置为 0 时，帐户永不过期。 此参数设置帐户对象的 AccountExpirationDate 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。 除非指定了时间，否则假定时间为当地时间。 当未指定时间值时，该时间假定为当地时间 12:00:00 AM。 当未指定日期时，该日期假定为当前日期。 以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。 此示例使用格林威治标准时间 (GMT) 来定义时间。
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。 此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
  &quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。 当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。 此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。 此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。 此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>为帐户指定新密码值。 该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 未设置密码，帐户禁用，除非请求启用该帐户 
未指定密码 – 未设置密码，帐户禁用，除非请求启用该帐户 
指定了用户密码 – 设置了密码，帐户禁用，除非请求启用该帐户   
说明： 
默认情况下创建无密码的用户帐户。 若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。 用户帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。 为确保该帐户的安全，除非设置了有效密码或 PasswordNotRequired 设置为 true，否则将永不启用用户帐户。  
若由于任何原因密码失败，帐户将得到创建。

以下示例说明了一个设置此参数的方法。 此命令将提示您输入密码。
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>指定帐户是否允许可逆的密码加密。 此参数设置帐户的 AllowReversiblePasswordEncryption 属性。 此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>指定是否可以更改帐户密码。 此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。 这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。 此参数设置帐户对象的 Certificates 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
  -Certificates @{Add=value1,value2,...}
删除值：
  -Certificates @{Remove=value3,value4,...}
替换值：
  -Certificates @{Replace=value1,value2,...}
清除所有值：
  -Certificates $null

可以使用分号分隔的列表来指定多个操作。 例如，使用下面的语法添加和删除 Certificate 值 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。 当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>指定用户所在的城镇。 此参数设置用户的 City 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>指定用户所在的公司。 此参数设置用户对象的 Company 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“company”。 

以下示例说明如何设置此参数。
  -Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>指定用户所选语言的国家或地区代码。 此参数设置用户对象的 Country 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。 Windows 2000 不使用该值。

以下示例说明如何设置此参数。
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>指定用户所在的部门。 此参数设置用户的 Department 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“department”。 

以下示例说明如何设置此参数。
  -Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>指定用户所在的分部。 此参数设置用户对象的 Division 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“division”。 

以下示例说明如何设置此参数。
  -Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>指定用户的电子邮件地址。 此参数设置用户对象的 EmailAddress 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“mail”。 

以下示例说明如何设置此参数。
  -EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>指定用户的职员 ID。此参数设置用户对象的 EmployeeID 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeID”。 

以下示例说明如何设置此参数。
  -EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>指定用户的职员编号。 此参数设置用户对象的 EmployeeNumber 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeNumber”。 

以下示例说明如何设置此参数。
  -EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。 启用的帐户需要密码。 此参数设置帐户对象的 Enabled 属性。 此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>指定用户的传真号码。 此参数设置用户对象的 Fax 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“facsimileTelephoneNumber”。 

以下示例说明如何设置此参数。
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>指定用户的名字。 此参数设置用户对象的 GivenName 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“givenName”。

以下示例说明如何设置此参数。
  -givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>指定用户的主目录。 此参数设置用户对象的 HomeDirectory 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDirectory”。

以下示例说明如何设置此参数。
   -HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>指定与 HomeDirectory 属性所定义的 UNC 路径相关联的驱动器。驱动器号以“&lt;DriveLetter&gt;:”形式指定，其中 &lt;DriveLetter&gt; 指示要关联的驱动器号。 &lt;DriveLetter&gt; 必须是单个大写字母，并且必须带有冒号。 此参数设置用户对象的 HomeDrive 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDrive”。 

以下示例说明如何设置此参数。
   -HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。 此参数设置 Active Directory 对象的 homePage 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的家庭电话号码。 此参数设置用户的 HomePhone 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“homePhone”。

以下示例说明如何设置此参数。
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>指定代表用户名一部分的首字母。 可以使用该值来表示用户的中间名首字母。 此参数设置用户的 Initials 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“initials”。

以下示例说明如何设置此参数。
  -Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新用户对象的模板的用户对象实例。

可以使用现有用户对象的实例作为模板，也可以构造新的用户对象作为模板。  使用 Windows PowerShell 命令行或使用脚本，可以构造新的用户对象。 下面的示例说明如何使用这两种方法创建用户对象模板。

方法 1：使用现有用户对象作为新对象的模板。 要检索现有用户对象的实例，请使用诸如 Get-ADUser 等 cmdlet。 然后将此对象提供给 New-ADUser cmdlet 的 Instance 参数，以创建新的用户对象。可以通过设置相应的参数来重写新对象的属性值。 

  $userInstance = Get-ADUser -Identity &quot;saraDavis&quot; 
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance -DisplayName &quot;EllenAdams&quot;

方法 2：创建新的 ADUser 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递到 New-ADUser cmdlet 的 Instance 参数，以创建新的 Active Directory 用户对象。 

  $userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
  $userInstance.DisplayName = &quot;Ellen Adams&quot;
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>指定用户可以访问的计算机。 要指定多个计算机，请创建一个逗号分隔列表。 可以使用计算机的安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 或 DNS 主机名来标识该计算机。 SAM 帐户名与计算机的 NetBIOS 名称相同。

此属性的 LDAP 显示名称 (ldapDisplayName) 是“userWorkStations”。 

以下示例说明如何使用 SAMAccountName（NetBIOS 名称）和 DNSHostName 值来设置此参数。
  -LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>指定用户的管理器。 此参数设置用户的 Manager 属性。 通过提供以下属性值之一设置此参数：注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此属性的 LDAP 显示名称 (ldapDisplayName) 是“manager”。

以下示例说明如何设置此参数。
  -Manager saradavis </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的移动电话号码。 此参数设置用户对象的 MobilePhone 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“mobile”。

以下示例说明如何设置此参数。
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>指定用户的办公地点或公司所在地。 此参数设置用户对象的 Office 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“office”。

以下示例说明如何设置此参数。
  -Office  &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的办公电话号码。 此参数设置用户对象的 OfficePhone 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“telephoneNumber”。

以下示例说明如何设置此参数。
  -OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>指定用户所在的组织单位。 此参数设置用户对象的 Organization 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“o”。

以下示例说明如何设置此参数。
  -Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>指定除了用户的名字和姓氏以外的名称，如用户的中间名。 此参数设置用户对象的 OtherName 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“middleName”。

以下示例说明如何设置此参数。
  -OtherName  &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定帐户密码是否可以过期。 此参数设置帐户对象的 PasswordNeverExpires 属性。 此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>指定帐户是否需要密码。 新帐户不需要密码。 此参数设置帐户对象的 PasswordNotRequired 属性。 

以下示例说明如何将此参数设置为 true。
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政信箱号。 此参数设置用户对象的 POBox 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“postOfficeBox”。

以下示例说明如何设置此参数。
  -POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政编码。 此参数设置用户的 PostalCode 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>指定用户配置文件的路径。 该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。 此参数设置用户对象的 ProfilePath 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“profilePath”。

以下示例说明如何将此参数设置为本地路径和 UNC 路径。    -ProfilePath &quot;E:\users\profiles\saraDavis&quot;
   -ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。 描述文本的最大长度为 256 个字符。 为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。 此参数设置帐户对象的 SAMAccountName。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
  -SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>指定用户登录脚本的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。 此参数设置用户的 ScriptPath 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“scriptPath”。 

以下示例说明如何设置此参数。
   -ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。 此参数设置帐户的 ServicePrincipalNames 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。 此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
  -ServicePrincipalNames @{Add=value1,value2,...}
删除值：
  -ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
  -ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
  -ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。 例如，使用下面的语法添加和删除服务主体名称。 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>指定是否需要具备智能卡才能登录。 此参数设置用户的 SmartCardLoginRequired 属性。 此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_SMARTCARD_REQUIRED 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使得用户必须具有智能卡才能登录帐户。
  -SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>指定用户或组织单位所在的省/市/自治区。 此参数设置用户或组织单位对象的 State 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
  -State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>指定用户的街道地址。 此参数设置用户对象的 StreetAddress 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“streetAddress”。

以下示例说明如何设置此参数。
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>指定用户的姓氏。 此参数设置用户对象的 Surname 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“sn”。

以下示例说明如何设置此参数。
  -Surname  &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>指定用户的职务。 此参数设置用户对象的 Title 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“title”。

以下示例说明如何设置此参数。
  -Title  &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。 以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。 此参数设置帐户对象的 TrustedForDelegation 属性。 该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>指定要创建的对象的类型。将 Type 参数设置为 Active Directory 架构类的 LDAP 显示名称，此架构类表示您要创建的对象的类型。 选择的类型必须是 User 架构类的子类。  如果未指定此参数，则为默认值“User”。

下面的示例说明如何使用此参数创建新的 Active Directory InetOrgPerson 对象。
  -Type &quot;InetOrgPerson&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。 UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。 UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。 使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>为帐户指定新密码值。该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 未设置密码，帐户禁用，除非请求启用该帐户 
未指定密码 – 未设置密码，帐户禁用，除非请求启用该帐户 
指定了用户密码 – 设置了密码，帐户禁用，除非请求启用该帐户   
说明： 
默认情况下创建无密码的用户帐户。若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。用户帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。为确保该帐户的安全，除非设置了有效密码或 PasswordNotRequired 设置为 true，否则将永不启用用户帐户。  
若由于任何原因密码失败，帐户将得到创建。

以下示例说明了一个设置此参数的方法。此命令将提示您输入密码。
-AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>指定用户所在的公司。此参数设置用户对象的 Company 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“company”。 

以下示例说明如何设置此参数。
-Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>指定用户所在的部门。此参数设置用户的 Department 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“department”。 

以下示例说明如何设置此参数。
-Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>指定用户所在的分部。此参数设置用户对象的 Division 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“division”。 

以下示例说明如何设置此参数。
-Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>指定用户的电子邮件地址。此参数设置用户对象的 EmailAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mail”。 

以下示例说明如何设置此参数。
-EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>指定用户的职员 ID。此参数设置用户对象的 EmployeeID 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeID”。 

以下示例说明如何设置此参数。
-EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>指定用户的职员编号。此参数设置用户对象的 EmployeeNumber 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeNumber”。 

以下示例说明如何设置此参数。
-EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>指定用户的传真号码。此参数设置用户对象的 Fax 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“facsimileTelephoneNumber”。 

以下示例说明如何设置此参数。
-Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>指定用户的名字。此参数设置用户对象的 GivenName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“givenName”。

以下示例说明如何设置此参数。
-givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>指定用户的主目录。此参数设置用户对象的 HomeDirectory 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDirectory”。

以下示例说明如何设置此参数。
-HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>指定与 HomeDirectory 属性所定义的 UNC 路径相关联的驱动器。驱动器号以“&lt;DriveLetter&gt;:”形式指定，其中 &lt;DriveLetter&gt; 指示要关联的驱动器号。&lt;DriveLetter&gt; 必须是单个大写字母，并且必须带有冒号。此参数设置用户对象的 HomeDrive 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDrive”。 

以下示例说明如何设置此参数。
-HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的家庭电话号码。此参数设置用户的 HomePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homePhone”。

以下示例说明如何设置此参数。
-HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>指定代表用户名一部分的首字母。可以使用该值来表示用户的中间名首字母。此参数设置用户的 Initials 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“initials”。

以下示例说明如何设置此参数。
-Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新用户对象的模板的用户对象实例。

可以使用现有用户对象的实例作为模板，也可以构造新的用户对象作为模板。使用 Windows PowerShell 命令行或使用脚本，可以构造新的用户对象。下面的示例说明如何使用这两种方法创建用户对象模板。

方法 1：使用现有用户对象作为新对象的模板。要检索现有用户对象的实例，请使用诸如 Get-ADUser 等 cmdlet。然后将此对象提供给 New-ADUser cmdlet 的 Instance 参数，以创建新的用户对象。可以通过设置相应的参数来重写新对象的属性值。 

$userInstance = Get-ADUser -Identity &quot;saraDavis&quot; 
New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance -DisplayName &quot;EllenAdams&quot;

方法 2：创建新的 ADUser 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递到 New-ADUser cmdlet 的 Instance 参数，以创建新的 Active Directory 用户对象。 

$userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
$userInstance.DisplayName = &quot;Ellen Adams&quot;
New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>指定用户可以访问的计算机。要指定多个计算机，请创建一个逗号分隔列表。可以使用计算机的安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 或 DNS 主机名来标识该计算机。SAM 帐户名与计算机的 NetBIOS 名称相同。

此属性的 LDAP 显示名称 (ldapDisplayName) 是“userWorkStations”。 

以下示例说明如何使用 SAMAccountName（NetBIOS 名称）和 DNSHostName 值来设置此参数。
-LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>指定用户的管理器。此参数设置用户的 Manager 属性。通过提供以下属性值之一设置此参数：注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此属性的 LDAP 显示名称 (ldapDisplayName) 是“manager”。

以下示例说明如何设置此参数。
-Manager saradavis </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的移动电话号码。此参数设置用户对象的 MobilePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mobile”。

以下示例说明如何设置此参数。
-MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>指定用户的办公地点或公司所在地。此参数设置用户对象的 Office 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“office”。

以下示例说明如何设置此参数。
-Office  &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的办公电话号码。此参数设置用户对象的 OfficePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“telephoneNumber”。

以下示例说明如何设置此参数。
-OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>指定用户所在的组织单位。此参数设置用户对象的 Organization 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“o”。

以下示例说明如何设置此参数。
-Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>指定除了用户的名字和姓氏以外的名称，如用户的中间名。此参数设置用户对象的 OtherName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“middleName”。

以下示例说明如何设置此参数。
-OtherName  &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>指定帐户是否需要密码。新帐户不需要密码。此参数设置帐户对象的 PasswordNotRequired 属性。 

以下示例说明如何将此参数设置为 true。
-PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政信箱号。此参数设置用户对象的 POBox 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postOfficeBox”。

以下示例说明如何设置此参数。
-POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>指定用户配置文件的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户对象的 ProfilePath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“profilePath”。

以下示例说明如何将此参数设置为本地路径和 UNC 路径。-ProfilePath &quot;E:\users\profiles\saraDavis&quot;
-ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>指定用户登录脚本的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户的 ScriptPath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“scriptPath”。 

以下示例说明如何设置此参数。
-ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>指定是否需要具备智能卡才能登录。此参数设置用户的 SmartCardLoginRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_SMARTCARD_REQUIRED 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使得用户必须具有智能卡才能登录帐户。
-SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>指定用户的街道地址。此参数设置用户对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“streetAddress”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>指定用户的姓氏。此参数设置用户对象的 Surname 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sn”。

以下示例说明如何设置此参数。
-Surname  &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>指定用户的职务。此参数设置用户对象的 Title 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“title”。

以下示例说明如何设置此参数。
-Title  &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>指定要创建的对象的类型。将 Type 参数设置为 Active Directory 架构类的 LDAP 显示名称，此架构类表示您要创建的对象的类型。选择的类型必须是 User 架构类的子类。如果未指定此参数，则为默认值“User”。

下面的示例说明如何使用此参数创建新的 Active Directory InetOrgPerson 对象。
-Type &quot;InetOrgPerson&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>用户</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新用户对象的模板的用户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则将返回新的用户对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Certificate (new-object System.Security.Cryptography.X509Certificates.X509Certificate -ArgumentList &quot;export.cer&quot;) </dev:code>
  			<dev:remarks>
  			        <maml:para>使用从文件“export.cer”导入的证书创建一个名为“GlenJohn”的新用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -OtherAttributes @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>创建一个名为“GlenJohn”的新用户并设置该新对象的职务和电子邮件属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Type iNetOrgPerson -Path &quot;DC=AppNC&quot; -server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>在 AD LDS 实例中创建一个名为“GlenJohn”的新 inetOrgPerson。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144970</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADComputer
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 计算机。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADComputer cmdlet 创建新的 Active Directory 计算机对象。 此 cmdlet 不会将计算机加入到域。 可以使用 cmdlet 参数来设置常用的计算机属性值。 不与 cmdlet 参数关联的属性值可以使用 OtherAttributes 参数来修改。 

可以使用此 cmdlet 设置计算机帐户，然后再将计算机添加到域中。 这些预创建的计算机对象可用于脱机加入域、非安全加入域和 RODC 加入域情形。
Path 参数指定新计算机的容器或组织单位 (OU)。 如果没有指定 Path 参数，则 cmdlet 将在域中计算机对象的默认容器中创建计算机帐户。 

以下方法说明了使用此 cmdlet 创建对象的不同方式。
方法 1：使用 New-ADComputer cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。
方法 2：使用模板创建新对象。 为此，请创建新的计算机对象或检索现有计算机对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 
方法 3：结合使用 Import-CSV cmdlet 和 Add-ADComputer cmdlet，创建多个 Active Directory 计算机对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADComputer cmdlet 以创建计算机对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>为帐户指定新密码值。该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户
 未指定密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户

指定了用户密码 – 设置了密码，帐户启用，除非请求禁用该帐户或提供的密码不符合密码策略或由于其他原因未设置密码才禁用帐户

注意：默认情况下创建计算机帐户时带有长度为 240 个字符的随机密码。若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。 计算机帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。 为确保该帐户的安全，除非设置了有效密码（随机生成的密码或用户提供的密码）或 PasswordNotRequired 设置为 true，否则将永不启用计算机帐户。 
若由于任何原因密码失败，帐户将得到创建。

新的 ADComputer 对象将始终禁用或具有用户请求的或随机生成的密码。 使用违反域密码策略的密码（如空白密码）创建启用的计算机帐户对象是不可能的。

以下示例说明如何设置此参数。此命令将提示您输入密码。
-AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>指定计算机的完全限定域名 (FQDN)。 此参数设置计算机对象的 DNSHostName 属性。 此属性的 LDAP 显示名称是“dNSHostName”。 

以下示例说明如何将此参数设置为 FQDN。
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新计算机对象的模板的计算机对象实例。

可以使用现有计算机对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的计算机对象。 下面的示例说明如何使用这两种方法创建计算机对象模板。

方法 1：使用现有计算机对象作为新对象的模板。 要检索现有计算机对象的实例，请使用 Get-ADcomputer。 然后将此对象提供给 New-ADcomputer cmdlet 的 Instance 参数，以创建新的计算机对象。可以通过设置相应的参数来重写新对象的属性值。 

  $computerInstance = Get-ADcomputer -Identity ellenAdamsDesktop 
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;MustChange242&quot; 
-samAccountName &quot;saraDavisDesktop&quot;

方法 2：创建新的 Adcomputer 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递到 New-ADcomputer cmdlet 的 Instance 参数，以创建新的 Active Directory 计算机对象。 

  $computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>指定计算机的位置，例如办公室号码。 此参数设置计算机的 Location 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“location”。 

以下示例说明如何设置此参数。
  -Location  &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>指定操作系统名称。 此参数设置计算机对象的 OperatingSystem 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystem”。 

以下示例说明如何设置此参数。
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>指定操作系统修补程序的名称。 此参数设置计算机对象的 operatingSystemHotfix 属性。 此属性的 LDAP 显示名称是“operatingSystemHotfix”。

以下示例说明如何指定此参数。
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>指定操作系统 Service Pack 的名称。 此参数设置计算机对象的 OperatingSystemServicePack 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemServicePack”。 

以下示例说明如何指定此参数。
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>指定操作系统版本。 此参数设置计算机对象的 OperatingSystemVersion 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemVersion”。 

以下示例说明如何指定此参数。
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>指定帐户是否需要密码。 此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。 此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的 SAMAccountName 字符串不是以“$”结束，必要时系统将追加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>为帐户指定新密码值。该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户
未指定密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户

指定了用户密码 – 设置了密码，帐户启用，除非请求禁用该帐户或提供的密码不符合密码策略或由于其他原因未设置密码才禁用帐户

注意：默认情况下创建计算机帐户时带有长度为 240 个字符的随机密码。若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。计算机帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。为确保该帐户的安全，除非设置了有效密码（随机生成的密码或用户提供的密码）或 PasswordNotRequired 设置为 true，否则将永不启用计算机帐户。 
若由于任何原因密码失败，帐户将得到创建。

新的 ADComputer 对象将始终禁用或具有用户请求的或随机生成的密码。使用违反域密码策略的密码（如空白密码）创建启用的计算机帐户对象是不可能的。

以下示例说明如何设置此参数。此命令将提示您输入密码。
-AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>指定计算机的完全限定域名 (FQDN)。此参数设置计算机对象的 DNSHostName 属性。此属性的 LDAP 显示名称是“dNSHostName”。 

以下示例说明如何将此参数设置为 FQDN。
-DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新计算机对象的模板的计算机对象实例。

可以使用现有计算机对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的计算机对象。下面的示例说明如何使用这两种方法创建计算机对象模板。

方法 1：使用现有计算机对象作为新对象的模板。要检索现有计算机对象的实例，请使用 Get-ADcomputer。然后将此对象提供给 New-ADcomputer cmdlet 的 Instance 参数，以创建新的计算机对象。可以通过设置相应的参数来重写新对象的属性值。 

$computerInstance = Get-ADcomputer -Identity ellenAdamsDesktop 
New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;MustChange242&quot; 
-samAccountName &quot;saraDavisDesktop&quot;

方法 2：创建新的 Adcomputer 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递到 New-ADcomputer cmdlet 的 Instance 参数，以创建新的 Active Directory 计算机对象。 

$computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>指定计算机的位置，例如办公室号码。此参数设置计算机的 Location 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“location”。 

以下示例说明如何设置此参数。
-Location  &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>指定操作系统名称。此参数设置计算机对象的 OperatingSystem 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystem”。 

以下示例说明如何设置此参数。
-OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>指定操作系统修补程序的名称。此参数设置计算机对象的 operatingSystemHotfix 属性。此属性的 LDAP 显示名称是“operatingSystemHotfix”。

以下示例说明如何指定此参数。
-operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>指定操作系统 Service Pack 的名称。此参数设置计算机对象的 OperatingSystemServicePack 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemServicePack”。 

以下示例说明如何指定此参数。
-OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>指定操作系统版本。此参数设置计算机对象的 OperatingSystemVersion 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemVersion”。 

以下示例说明如何指定此参数。
-OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的 SAMAccountName 字符串不是以“$”结束，必要时系统将追加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新计算机对象的模板的计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则将返回新的计算机对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV2&quot; -SamAccountName &quot;FABRIKAM-SRV2&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
			        <maml:para>在 OU: &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot; 中创建一个新计算机帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV3&quot; -SamAccountName &quot;FABRIKAM-SRV3&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot; -Enabled $true -Location &quot;Redmond,WA&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>在特定 OU 下创建一个新计算机帐户，该新帐户在“Redmond,WA”中启用。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templateComp = get-adcomputer &quot;LabServer-00&quot; -properties &quot;Location&quot;,&quot;OperatingSystem&quot;,&quot;OperatingSystemHotfix&quot;,&quot;OperatingSystemServicePack&quot;,&quot;OperatingSystemVersion&quot;; New-ADComputer -Instance $templateComp -Name &quot;LabServer-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用模板对象创建一个新计算机帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144971</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADGroup
		</command:name>
		<maml:description>
			<maml:para>创建 Active Directory 组。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADGroup cmdlet 创建新的 Active Directory 组对象。 许多对象属性都是通过设置 cmdlet 参数来定义的。 不能通过 cmdlet 参数设置的属性可以使用 OtherAttributes 参数来设置。

Name 和 GroupScope 参数分别指定组的名称和作用域，在创建新组时，这两个参数是必需的。 可以通过设置 GroupType 参数，将新组定义为安全组或通讯组。 Path 参数指定组的容器或组织单位 (OU)。

以下方法说明了使用此 cmdlet 创建对象的不同方式。
方法 1：使用 New-ADGroup cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。
方法 2：使用模板创建新对象。 为此，请创建新的组对象或检索现有组对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 
方法 3：结合使用 Import-CSV cmdlet 和 New-ADGroup cmdlet，创建多个 Active Directory 组对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADGroup cmdlet 以创建组对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>指定组的组作用域。 此参数的可能值为：
  DomainLocal 或 0
  Global 或 1
  Universal 或 2

此参数将组对象的 GroupScope 属性设置为指定值。 此属性的 LDAP 显示名称是“groupType”。

以下示例说明将此参数设置为 DomainLocal 的两种方式。
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>指定组类别。此参数的可能值为：
  Distribution 或 0  
  Security 或 1 
 
此参数设置组的 GroupCategory 属性。 此参数值与其他组值一起设置名为“groupType”的 LDAP 显示名称 (ldapDisplayName) 属性。

以下示例说明如何指定组为安全组。
  -GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新组对象的模板的组对象实例。

可以使用现有组对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的组对象。 下面的示例说明如何使用这两种方法创建组对象模板。

方法 1：使用现有组对象作为新对象的模板。 使用 Get-ADGroup cmdlet 检索组对象，然后将该对象传递给 New-ADGroup cmdlet 的 Instance 参数，以创建新的组对象。可以通过设置相应的参数来重写新对象的属性值。 

  $groupInstance = Get-ADGroup -Identity &quot;KarenTohReports&quot; 
  New-ADGroup -Name &quot;Sara Davis Reports&quot;  -Instance $groupInstance GroupType DomainLocal

方法 2：创建新的 ADGroup 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递给 New-ADGroup cmdlet 的 Instance 参数，以创建新的组对象。 

  $groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
  $groupTemplateGroupType = DomainLocal
  New-ADGroup -Name &quot;Sara Davis Reports&quot; -Instance $groupInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>指定组类别。此参数的可能值为：
Distribution 或 0  
Security 或 1 
 
此参数设置组的 GroupCategory 属性。此参数值与其他组值一起设置名为“groupType”的 LDAP 显示名称 (ldapDisplayName) 属性。

以下示例说明如何指定组为安全组。
-GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>安全性</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>指定组的组作用域。此参数的可能值为：
DomainLocal 或 0
Global 或 1
Universal 或 2

此参数将组对象的 GroupScope 属性设置为指定值。此属性的 LDAP 显示名称是“groupType”。

以下示例说明将此参数设置为 DomainLocal 的两种方式。
-GroupScope DomainLocal
-GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新组对象的模板的组对象实例。

可以使用现有组对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的组对象。下面的示例说明如何使用这两种方法创建组对象模板。

方法 1：使用现有组对象作为新对象的模板。使用 Get-ADGroup cmdlet 检索组对象，然后将该对象传递给 New-ADGroup cmdlet 的 Instance 参数，以创建新的组对象。可以通过设置相应的参数来重写新对象的属性值。 

$groupInstance = Get-ADGroup -Identity &quot;KarenTohReports&quot; 
New-ADGroup -Name &quot;Sara Davis Reports&quot;  -Instance $groupInstance GroupType DomainLocal

方法 2：创建新的 ADGroup 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递给 New-ADGroup cmdlet 的 Instance 参数，以创建新的组对象。 

$groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
$groupTemplateGroupType = DomainLocal
New-ADGroup -Name &quot;Sara Davis Reports&quot; -Instance $groupInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新组对象的模板的组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则将返回新的组对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Name &quot;RODC Admins&quot; -SamAccountName RODCAdmins -GroupCategory Security -GroupScope Global -DisplayName &quot;RODC Administrators&quot; -Path &quot;CN=Users,DC=Fabrikam,DC=Com&quot; -Description &quot;Members of this group are RODC Administrators&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>在容器“CN=Users,DC=Fabrikam,DC=Com”中创建一个名为“RODC Admins”的新组，并设置该新对象的 GroupCategory、DisplayName、GroupScope 和 Description 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup 

cmdlet New-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
GroupScope: Universal 
Name: FabrikamBranch1 </dev:code>
  			<dev:remarks>
  			        <maml:para>使用 cmdlet 默认行为创建新组。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup FabrikamBranch1 -Properties Description | New-ADGroup  -Name Branch1Employees  -SamAccountName Branch1Employees -GroupCategory Distribution -PassThru 
</dev:code>
  			<dev:remarks>
				<maml:para>GroupScope        : Universal 
Name              : Branch1Employees 
GroupCategory     : Distribution 
SamAccountName    : Branch1Employees 
ObjectClass       : group 
ObjectGUID        : 8eebce44-5df7-4bed-a98b-b987a702103e 
SID               : S-1-5-21-41432690-3719764436-1984117282-1117 
DistinguishedName : CN=Branch1Employees,CN=Users,DC=Fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用当前组的属性值创建新组。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Server localhost:60000 -Path &quot;OU=AccountDeptOU,DC=AppNC&quot; -Name AccountLeads -GroupScope DomainLocal  -GroupCategory Distribution </dev:code>
  			<dev:remarks>
  			        <maml:para>在 AD LDS 实例中创建一个名为“AccountLeads”的新组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144972</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-CSV</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 细粒度密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADFineGrainedPasswordPolicy cmdlet 创建新的 Active Directory 细粒度密码策略。 可以使用 cmdlet 参数来设置常用的细粒度密码策略属性值。 不与 cmdlet 参数关联的属性值可以使用 OtherAttributes 参数来设置。 

要创建新的细粒度密码策略，必须设置 Name 和 Precedence 参数。 

以下方法说明了使用此 cmdlet 创建对象的不同方式。
方法 1：使用 New-ADFineGrainedPasswordPolicy cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。

方法 2：使用模板创建新对象。 为此，请创建新的细粒度密码策略对象或检索现有细粒度密码策略对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 

方法 3：结合使用 Import-CSV cmdlet 和 New-ADFineGrainedPasswordPolicy cmdlet，创建多个 Active Directory 细粒度密码策略对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADFineGrainedPasswordPolicy cmdlet，以创建细粒度密码策略对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>指定一个值，用以定义某个细粒度密码策略在所有细粒度密码策略中的优先级。 此参数设置细粒度密码策略的 Precedence 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-PasswordSettingsPrecedence”。

在有多个密码策略适用于用户或组的情况下，该值可确定要使用的密码策略。 如果存在冲突，则具有较低 Precedence 属性值的密码策略具有较高的优先级。 例如，如果 PasswordPolicy1 的 Precedence 属性值为 200，PasswordPolicy2 的 Precedence 属性值为 100，则使用 PasswordPolicy2。 

通常，所分配的密码策略优先级值是 10 或 100 的倍数，以便于在以后添加策略。 例如，如果将策略的初始优先级值设置为 100 和 200，则可以添加优先级值为 150 的另一个策略。 

如果所指定的 Precedence 参数已被分配给另一个密码策略对象，cmdlet 将返回一个终止错误。

以下示例说明如何设置此参数。
  -Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>指定是否为密码策略启用密码复杂性。 如果启用，则密码必须包含以下三种字符中的两种： 
  大写字符（A、B、C、D、E…）
  小写字符（a、b、c、d、e…）
  数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
  $false 或 0 - 禁用密码复杂性
  $true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新细粒度密码策略对象的模板的细粒度密码策略对象实例。

可以使用现有细粒度密码策略对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的细粒度密码策略对象。 下面的示例说明如何使用这两种方法创建新的细粒度密码策略对象。

方法 1：使用现有细粒度密码策略对象作为新对象的模板。 要检索现有细粒度密码策略对象的实例，请使用诸如 Get-ADFineGrainedPasswordPolicy 等 cmdlet。 然后，将此对象传递给 New-ADFineGrainedPasswordPolicy cmdlet 的 Instance 参数，以创建新的细粒度密码策略对象。可以通过设置相应的参数来重写新对象的属性值。 

  $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

方法 2：创建新的 ADFineGrainedPasswordPolicy 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后，将此对象传递给 New-ADFineGrainedPasswordPolicy cmdlet 的 Instance 参数，以创建新的 Active Directory 细粒度密码策略对象。 

  $fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  $fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。 在锁定持续时间段到期之前，无法登录到已锁定的帐户。 此参数设置密码策略对象的 lockoutDuration 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。 使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
    [-]D.H:M:S.F
    其中：
      D = 天（0 到 10675199）
      H = 时（0 到 23）
      M = 分（0 到 59）
      S = 秒（0 到 59）
      F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
  将时间设置为 2 天
    -LockoutDuration &quot;2&quot;
  将时间设置为 4 小时
    -LockoutDuration &quot;4:00&quot;
  将时间设置为 5 分钟
    -LockoutDuration &quot;0:5&quot;
  将时间设置为 45 秒
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。 此参数设置密码策略对象的 lockoutObservationWindow 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。 使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
   [-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
    -LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
    -LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
    -LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。 当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。 此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定您可以使用同一个密码的最大时间长度。 超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
      [-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须介于 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
  将时间跨度设置为 2 天
    MaxPasswordAge &quot;2&quot;
  将时间跨度设置为前 2 天
    MaxPasswordAge &quot;-2&quot;
  将时间跨度设置为 4 小时
    MaxPasswordAge &quot;4:00&quot;
  将时间跨度设置为 5 分钟
    MaxPasswordAge &quot;0:5&quot;
  将时间跨度设置为 45 秒
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
    -MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
    -MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
    -MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>指定密码必须包含的最少字符数。  此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>指定要保存的先前密码的数目。  用户不能重新使用已保存的密码列表中的密码。 此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>指定目录是否必须使用可逆加密来存储密码。 此参数设置密码策略的 ReversibleEncryption 属性。 此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>指定是否为密码策略启用密码复杂性。如果启用，则密码必须包含以下三种字符中的两种： 
大写字符（A、B、C、D、E…）
小写字符（a、b、c、d、e…）
数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
$false 或 0 - 禁用密码复杂性
$true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
-ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新细粒度密码策略对象的模板的细粒度密码策略对象实例。

可以使用现有细粒度密码策略对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的细粒度密码策略对象。下面的示例说明如何使用这两种方法创建新的细粒度密码策略对象。

方法 1：使用现有细粒度密码策略对象作为新对象的模板。要检索现有细粒度密码策略对象的实例，请使用诸如 Get-ADFineGrainedPasswordPolicy 等 cmdlet。然后，将此对象传递给 New-ADFineGrainedPasswordPolicy cmdlet 的 Instance 参数，以创建新的细粒度密码策略对象。可以通过设置相应的参数来重写新对象的属性值。 

$fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

方法 2：创建新的 ADFineGrainedPasswordPolicy 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后，将此对象传递给 New-ADFineGrainedPasswordPolicy cmdlet 的 Instance 参数，以创建新的 Active Directory 细粒度密码策略对象。 

$fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
$fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。在锁定持续时间段到期之前，无法登录到已锁定的帐户。此参数设置密码策略对象的 lockoutDuration 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutDuration &quot;2&quot;
将时间设置为 4 小时
-LockoutDuration &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutDuration &quot;0:5&quot;
将时间设置为 45 秒
LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 （30 分钟）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。此参数设置密码策略对象的 lockoutObservationWindow 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
[-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
-LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
-LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 （30 分钟）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
-LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定您可以使用同一个密码的最大时间长度。超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
MaxPasswordAge &quot;2&quot;
将时间跨度设置为前 2 天
MaxPasswordAge &quot;-2&quot;
将时间跨度设置为 4 小时
MaxPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
MaxPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 （42 天）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
-MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
-MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
-MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
-MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 （1 天）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>指定密码必须包含的最少字符数。此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
-MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>指定要保存的先前密码的数目。用户不能重新使用已保存的密码列表中的密码。此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
-PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>指定一个值，用以定义某个细粒度密码策略在所有细粒度密码策略中的优先级。此参数设置细粒度密码策略的 Precedence 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-PasswordSettingsPrecedence”。

在有多个密码策略适用于用户或组的情况下，该值可确定要使用的密码策略。如果存在冲突，则具有较低 Precedence 属性值的密码策略具有较高的优先级。例如，如果 PasswordPolicy1 的 Precedence 属性值为 200，PasswordPolicy2 的 Precedence 属性值为 100，则使用 PasswordPolicy2。 

通常，所分配的密码策略优先级值是 10 或 100 的倍数，以便于在以后添加策略。例如，如果将策略的初始优先级值设置为 100 和 200，则可以添加优先级值为 150 的另一个策略。 

如果所指定的 Precedence 参数已被分配给另一个密码策略对象，cmdlet 将返回一个终止错误。

以下示例说明如何设置此参数。
-Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>指定目录是否必须使用可逆加密来存储密码。此参数设置密码策略的 ReversibleEncryption 属性。此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
-ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个用作新细粒度密码策略对象的模板的细粒度密码策略对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则将返回新的细粒度密码策略对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADFineGrainedPasswordPolicy -Name &quot;DomainUsersPSO&quot; -Precedence 500 -ComplexityEnabled $true -Description &quot;The Domain Users Password Policy&quot; -DisplayName &quot;Domain Users PSO&quot; -LockoutDuration &quot;0.12:00:00&quot; -LockoutObservationWindow &quot;0.00:15:00&quot; -LockoutThreshold 10
</dev:code>
  			<dev:remarks>
  			        <maml:para>创建名为“DomainUsersPSO”的新细粒度密码策略对象，并设置该对象的 Precedence、ComplexityEnabled、Description、DisplayName、LockoutDuration、LockoutObservationWindw 和 LockoutThreshold 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templatePSO = New-Object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
$templatePSO.ComplexityEnabled = $true
$templatePSO.LockoutDuration = [TimeSpan]::Parse(&quot;0.12:00:00&quot;)
$templatePSO.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$templatePSO.LockoutThreshold = 10
$templatePSO.MinPasswordAge = [TimeSpan]::Parse(&quot;0.00:10:00&quot;)
$templatePSO.PasswordHistoryCount = 24
$templatePSO.ReversibleEncryptionEnabled = $false

New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;SvcAccPSO&quot; -Precedence 100 -Description &quot;The Service Accounts Password Policy&quot; -DisplayName &quot;Service Accounts PSO&quot; -MaxPasswordAge &quot;30.00:00:00&quot; -MinPasswordLength 20
New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;AdminsPSO&quot; -Precedence 200 -Description &quot;The Domain Administrators Password Policy&quot; -DisplayName &quot;Domain Administrators PSO&quot; -MaxPasswordAge &quot;15.00:00:00&quot; -MinPasswordLength 10</dev:code>
  			<dev:remarks>
  			        <maml:para>使用模板对象创建两个新的细粒度密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144973</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 组织单位。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADOrganizationalUnit cmdlet 创建新的 Active Directory 组织单位。 可以使用 cmdlet 参数来设置常用的组织单位属性值。 不与 cmdlet 参数关联的属性值可以使用 OtherAttributes 参数来设置。 

要创建新组织单位，必须设置 Name 参数。 如果没有指定 Path 参数，则 cmdlet 在域的默认 NC 头下创建组织单位。
以下方法说明了使用此 cmdlet 创建对象的不同方式。
方法 1：使用 New-ADOrganizationalUnit cmdlet 指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。
方法 2：使用模板创建新对象。 为此，请创建新的组织单位对象或检索现有组织单位对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 
方法 3：结合使用 Import-CSV cmdlet 和 New-ADOrganizationalUnit cmdlet，创建多个 Active Directory 组织单位对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADOrganizationalUnit cmdlet，以创建组织单位对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新组织单位对象的模板的组织单位对象实例。

可以使用现有组织单位对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的组织单位对象。 下面的示例说明如何使用这两种方法创建组织单位对象模板。

方法 1：使用现有组织单位对象作为新对象的模板。 要检索现有组织单位对象的实例，请使用 Get-ADOrganizationalUnit。 然后将此对象提供给 New-ADOrganizationalUnit cmdlet 的 Instance 参数，以创建新的组织单位对象。可以通过设置相应的参数来重写新对象的属性值。 

  $organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

方法 2：创建新的 ADOrganizationalUnit 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递到 New-ADOrganizationalUnit cmdlet 的 Instance 参数，以创建新的 Active Directory 组织单位对象。 

  $OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  $OrganizationalUnitInstance.Country = Australia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>指定组织单位的街道地址。 此参数设置组织单位对象的 StreetAddress 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是“street”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新组织单位对象的模板的组织单位对象实例。

可以使用现有组织单位对象的实例作为模板，也可以使用 Windows PowerShell 命令行或使用脚本构造新的组织单位对象。下面的示例说明如何使用这两种方法创建组织单位对象模板。

方法 1：使用现有组织单位对象作为新对象的模板。要检索现有组织单位对象的实例，请使用 Get-ADOrganizationalUnit。然后将此对象提供给 New-ADOrganizationalUnit cmdlet 的 Instance 参数，以创建新的组织单位对象。可以通过设置相应的参数来重写新对象的属性值。 

$organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

方法 2：创建新的 ADOrganizationalUnit 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递到 New-ADOrganizationalUnit cmdlet 的 Instance 参数，以创建新的 Active Directory 组织单位对象。 

$OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
$OrganizationalUnitInstance.Country = Australia
New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>指定组织单位的街道地址。此参数设置组织单位对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“street”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新组织单位对象的模板的组织单位对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则将返回新的组织单位对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>创建一个具有防意外删除保护的名为“UserAccounts”的新组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false</dev:code>
  			<dev:remarks>
  			        <maml:para>创建一个不具有防删除保护的名为“UserAccounts”的新组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -OtherAttributes @{seeAlso=&quot;CN=HumanResourceManagers,OU=Groups,OU=Managed,DC=Fabrikam,DC=com&quot;;managedBy=&quot;CN=TomC,DC=FABRIKAM,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>创建一个具有防意外删除保护的名为“UserAccounts”的组织单位，且将其“seeAlso”和“managedBy”属性设置为指定值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$ouTemplate = Get-ADOrganizationalUnit &quot;OU=UserAccounts,DC=Fabrikam,DC=com&quot; -properties seeAlso,managedBy; New-ADOrganizationalUnit -name TomCReports -instance $ouTemplate</dev:code>
  			<dev:remarks>
  			        <maml:para>将组织单位“OU=UserAccounts,DC=Fabrikam,DC=com”中的数据用作另一个新组织单位的模板。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -name &quot;Managed&quot; -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>在 LDS 实例中创建一个名为“Managed”的新组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144974</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADServiceAccount cmdlet 创建新的 Active Directory 服务帐户。 可以使用 cmdlet 参数来设置常用的服务帐户属性值。 不与 cmdlet 参数关联的属性值可以使用 OtherAttributes 参数来设置。 

Path 参数指定新服务帐户对象的容器或组织单位 (OU)。 如果没有指定 Path 参数，则 cmdlet 将在域中服务帐户对象的默认容器中创建对象。

以下方法说明了使用此 cmdlet 创建对象的不同方式。

方法 1：使用 New-ADServiceAccount cmdlet，指定必需的参数，并使用 cmdlet 参数设置其他任何属性值。

方法 2：使用模板创建新对象。 为此，请创建新的服务帐户对象或检索现有服务帐户对象的副本，并将 Instance 参数设置为此对象。 提供给 Instance 参数的对象用作新对象的模板。 可以通过设置 cmdlet 参数来重写模板中的属性值。 有关示例和详细信息，请参阅此 cmdlet 的 Instance 参数说明。 

方法 3：结合使用 Import-CSV cmdlet 和 New-ADServiceAccount cmdlet，创建多个 Active Directory 服务帐户对象。 为此，请使用 Import-CSV cmdlet，基于包含对象属性列表的逗号分隔值 (CSV) 文件创建自定义对象。 然后通过管道将这些对象传递到 New-ADServiceAccount cmdlet 以创建服务帐户对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>为帐户指定新密码值。该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户
未指定密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户

指定了用户密码 – 设置了密码，帐户启用，除非请求禁用该帐户或提供的密码不符合密码策略或由于其他原因未设置密码才禁用帐户

注意：默认情况下创建服务帐户时带有长度为 240 个字符的随机密码。若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。 服务帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。 为确保该帐户的安全，除非设置了有效密码（随机生成的密码或用户提供的密码）或 PasswordNotRequired 设置为 true，否则将永不启用服务帐户。

新的 ADServiceAccount 对象将始终禁用或具有用户请求的或随机生成的密码。 使用违反域密码策略的密码（如空白密码）创建启用的服务帐户对象是不可能的。
若由于任何原因密码失败，帐户将得到创建。

以下示例说明如何设置此参数。此命令将提示您输入密码。
-AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定要用作新服务帐户对象的模板的服务帐户对象实例。

可以使用现有服务帐户对象的实例作为模板，也可以构造新的服务帐户对象作为模板。  通过使用 Windows PowerShell 命令行或使用脚本，可以构造新的服务帐户。 下面的示例说明如何使用这两种方法创建服务帐户对象模板。

方法 1：使用现有服务帐户对象作为新对象的模板。 若要检索现有服务帐户对象的实例，请使用诸如 Get-ADServiceAccount 等 cmdlet。 然后将此对象提供给 New-ADServiceAccount cmdlet 的 Instance 参数，以创建新的服务帐户对象。可以通过设置相应的参数来重写新对象的属性值。 

  $serviceaccountInstance = Get-ADServiceAccount -Identity  
  New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

方法 2：创建新的 ADServiceAccount 对象，并使用 Windows PowerShell 命令行界面设置属性值。 然后将此对象传递到 New-ADServiceAccount cmdlet 的 Instance 参数，以创建新的 Active Directory 服务帐户对象。 

  $serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
  $serviceaccountInstance. Description &quot;Service Account 2&quot;

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的 SAMAccountName 字符串不是以“$”结束，必要时系统将追加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>为帐户指定新密码值。该值存储为加密的字符串。

根据使用 password 参数的方式的不同，将适用以下情形：

指定了 $null 密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户
未指定密码 – 设置了随机密码，帐户启用，除非请求禁用该帐户

指定了用户密码 – 设置了密码，帐户启用，除非请求禁用该帐户或提供的密码不符合密码策略或由于其他原因未设置密码才禁用帐户

注意：默认情况下创建服务帐户时带有长度为 240 个字符的随机密码。若您提供了密码，则将尝试设置该密码，但由于密码策略的限制，这可能失败。服务帐户仍然得到创建，可使用 Set-ADAccountPassword 对该帐户设置密码。为确保该帐户的安全，除非设置了有效密码（随机生成的密码或用户提供的密码）或 PasswordNotRequired 设置为 true，否则将永不启用服务帐户。

新的 ADServiceAccount 对象将始终禁用或具有用户请求的或随机生成的密码。使用违反域密码策略的密码（如空白密码）创建启用的服务帐户对象是不可能的。
若由于任何原因密码失败，帐户将得到创建。

以下示例说明如何设置此参数。此命令将提示您输入密码。
-AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定要用作新服务帐户对象的模板的服务帐户对象实例。

可以使用现有服务帐户对象的实例作为模板，也可以构造新的服务帐户对象作为模板。通过使用 Windows PowerShell 命令行或使用脚本，可以构造新的服务帐户。下面的示例说明如何使用这两种方法创建服务帐户对象模板。

方法 1：使用现有服务帐户对象作为新对象的模板。若要检索现有服务帐户对象的实例，请使用诸如 Get-ADServiceAccount 等 cmdlet。然后将此对象提供给 New-ADServiceAccount cmdlet 的 Instance 参数，以创建新的服务帐户对象。可以通过设置相应的参数来重写新对象的属性值。 

$serviceaccountInstance = Get-ADServiceAccount -Identity  
New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

方法 2：创建新的 ADServiceAccount 对象，并使用 Windows PowerShell 命令行界面设置属性值。然后将此对象传递到 New-ADServiceAccount cmdlet 的 Instance 参数，以创建新的 Active Directory 服务帐户对象。 

$serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
$serviceaccountInstance.Description &quot;Service Account 2&quot;

注意：指定的属性未验证，因此，试图设置不存在或无法设置的属性将会造成错误。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定对象的名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。 

以下示例说明如何将此参数设置为名称字符串。
-Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>为不是通过 cmdlet 参数表示的属性指定对象属性值。可以在设置此参数的同时设置一个或多个参数。如果属性所取的值超过一个，则可以分配多个值。要标识属性，请在 Active Directory 架构中指定为它定义的 LDAPDisplayName (ldapDisplayName)。

语法：
为属性指定单个值：
-OtherAttributes @{'AttributeLDAPDisplayName'=value}
为属性指定多个值
-OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

可以通过使用分号分隔各属性来指定多个属性的值。以下语法说明如何设置多个属性的值：
-OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

以下示例说明如何使用此参数。

要设置采用一组 Unicode 字符串且名为 favColors 的自定义属性的值，请使用下面的语法： 
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

若要同时设置 favColors 和 dateOfBirth 的值，请使用以下语法：
-OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定创建新对象的组织单位 (OU) 或容器的 X.500 路径。  

在大多数情况下，如果没有指定值，将使用 Path 参数的默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
-  如果前面所有的情况都不适用，则 Path 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Path 的默认值：
- 如果 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的，此参数将设置为该提供程序驱动器的当前路径。
- 如果 cmdlet 有默认路径，则使用此路径。例如，在 New-ADUser 中，Path 参数的默认值为用户容器。
- 如果目标 AD LDS 实例有默认命名上下文，则 Path 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Path 参数将不采用任何默认值。

以下示例说明如何将此参数设置为 OU。

-Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

注意：Active Directory 提供程序 cmdlet（如 New-Item、Remove-Item、Remove-ItemProperty、Rename-Item 和 Set-ItemProperty）也包含 Path 属性。但是，对于提供程序 cmdlet，Path 参数标识实际对象的路径，而不是像 Active Directory cmdlet 那样标识容器的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的 SAMAccountName 字符串不是以“$”结束，必要时系统将追加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Instance 参数接收一个作为新服务帐户对象的模板的服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回新的服务帐户对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -Enabled $true</dev:code>
  			<dev:remarks>
  			        <maml:para>通过仅指定新帐户的名称在 AD DS 中创建一个新的已启用服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -ServicePrincipalNames &quot;MSSQLSVC/Machine3.corp.contoso.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>创建名为 Service1 的新服务帐户，并注册该服务帐户的 SerivcePrincipalName。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144975</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADObject
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADObject cmdlet 删除 Active Directory 对象。 可以使用此 cmdlet 来删除任何类型的 Active Directory 对象。

Identity 参数指定要删除的 Active Directory 对象。 可以通过可分辨名称 (DN) 或 GUID 来标识对象。 还可以将 Identity 参数设置为 Active Directory 对象变量（例如 $&lt;localObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADObject cmdlet 检索某个对象，然后将该对象通过管道传递到 Remove-ADObject cmdlet。 

如果指定要删除的对象具有子对象，则必须指定 Recursive 参数。 

对于 AD LDS 环境，除下列情况外，必须指定 Partition 参数：    - 使用一个 DN 标识对象：分区将从该 DN 自动生成。- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则使用当前路径来设置分区。     - 指定了默认的命名上下文或分区。 
要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
显示删除的对象 (1.2.840.113556.1.4.417)
显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 应删除该对象及其包含的所有子对象。 
  
以下示例说明如何指定此参数。
-Recursive

注意：指定此参数将删除所有子对象（包括标记为 ProtectedFromAccidentalDeletion 的对象）。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>指定检索已删除的对象以及已停用的前进和后退链接。当指定了此参数时，cmdlet 使用下面的 LDAP 控件： 
显示删除的对象 (1.2.840.113556.1.4.417)
显示停用的链接 (1.2.840.113556.1.4.2065)

注意：如果未指定此参数，则 cmdlet 不返回也不操作已删除的对象。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 应删除该对象及其包含的所有子对象。 
  
以下示例说明如何指定此参数。
-Recursive

注意：指定此参数将删除所有子对象（包括标记为 ProtectedFromAccidentalDeletion 的对象）。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。 还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
连接到全局编录端口时此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject 'CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm
Are you sure you want to perform this action?
Performing operation &quot;Remove&quot; on Target &quot;CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除由 DistinguishedName“CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM”标识的对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm
Are you sure you want to perform this action?
Performing operation &quot;Remove&quot; on Target &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除 DistinguishedName 为“OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的容器及其子对象。注意：该操作同时也会删除该容器的所有子对象（包括具有防意外删除保护的子对象）。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;65511e76-ea80-45e1-bc93-08a78d8c4853&quot; -Confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>删除 objectGUID 为“65511e76-ea80-45e1-bc93-08a78d8c4853”的对象而不提示用户确认。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject -Identity &quot;CN=InternalApps,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm
Are you sure you want to perform this action?
Performing operation &quot;Remove&quot; on Target &quot;CN=InternalApps,DC=AppNC&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从 LDS 实例中删除 DistinguishedName 为“CN=InternalApps,DC=AppNC”的对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot; -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects | Remove-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>回收回收站中曾经位于容器“OU=Accounting,DC=Fabrikam,DC=com”中的所有对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144976</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADUser
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 用户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADUser cmdlet 删除 Active Directory 用户。

Identity 参数指定要删除的 Active Directory 用户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户。 还可以将 Identity 参数设置为用户对象变量（例如 $&lt;localUserObject），或者通过管道将用户对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索某个用户对象，然后将该对象通过管道传递给 Remove-ADUser cmdlet。 

如果 ADUser 由其 DN 标识，则将自动确定 Partition 参数。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个用户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity GlenJohn
</dev:code>
  			<dev:remarks>
  			        <maml:para>删除 samAccountName 为“GlenJohn”的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | where {$_.ObjectClass -eq 'user'} | Remove-ADUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>搜索已禁用帐户的所有用户并删除这些用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity &quot;CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>删除 DistinguishedName 为“CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser &quot;cn=glenjohn,dc=appnc&quot; -Server Lds.Fabrikam.com:50000 | Remove-ADUser</dev:code>
  			<dev:remarks>
  			        <maml:para>从 AD LDS 实例中获取 DistinguishedName 为“cn=glenjohn,dc=appnc”的用户并删除该用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144977</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputer
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 计算机。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADComputer cmdlet 删除 Active Directory 计算机。

Identity 参数指定要删除的 Active Directory 计算机。 可以通过可分辨名称成员 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将 Identity 参数设置为计算机对象变量（例如 $&lt;localComputerObject&gt;），或者通过管道将计算机对象传递到 Identity 参数。 例如，可以使用 Get-ADComputer cmdlet 检索某个计算机对象，然后将该对象通过管道传递给 Remove-ADComputer cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputer -Identity &quot;FABRIKAM-SRV4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>删除一个特定的计算机。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm
Are you sure you want to perform this action?
Performing operation &quot;Remove&quot; on Target &quot;CN=LabServer-01,CN=Computers,DC=Fabrikam,DC=com&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): a
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除指定位置的所有计算机。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>删除指定位置的所有计算机并禁用确认提示。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144978</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroup
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADGroup cmdlet 删除 Active Directory 组对象。 可以使用该 cmdlet 删除安全组和通讯组。

Identity 参数指定要删除的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、安全帐户管理器 (SAM) 帐户名或规范名称来标识组。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADGroupObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 检索某个组对象，然后将该对象通过管道传递给 Remove-ADGroup cmdlet。

如果 ADGroup 由其 DN 标识，则将自动确定 Partition 参数。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  - 为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup SanjaysReports </dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Remove&quot; on Target &quot;CN=SanjayReports,DC=Fabrikam,DC=com&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除 samAccountName 为“SanjaysReports”的组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'Name -like &quot;Sanjay*&quot;' | remove-adgroup </dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Remove&quot; on Target &quot;CN=SanjaysReports,DC=Fabrikam,DC=com&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取名称以“Sanjay”开头的所有组并删除这些组。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup 
cmdlet Remove-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
Identity: SanjaysTeam</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Remove&quot; on Target &quot;CN=SanjaysTeam,DC=Fabrikam,DC=com&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用默认 cmdlet 行为删除 samAccountName 为“SanjaysTeam”的组。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144979</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 细粒度密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADFineGrainedPasswordPolicy cmdlet 删除 Active Directory 细粒度密码策略。

Identity 参数指定要删除的 Active Directory 细粒度密码策略。 可以通过可分辨名称或 GUID 来标识细粒度密码策略。 还可以将 Identity 参数设置为细粒度密码对象变量（例如 $&lt;localFineGrainedPasswordPolicyObject&gt;），或者通过管道将细粒度密码策略对象传递到 Identity 参数。 例如，可以使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索某个细粒度密码策略对象，然后将该对象通过管道传递给 Remove-ADFineGrainedPasswordPolicy cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy MyPolicy
</dev:code>
  			<dev:remarks>
  			        <maml:para>删除名为“MyPolicy”的细粒度密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy -Identity 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>删除 DistinguishedName 为“CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM”的细粒度密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*user*&quot;} | Remove-ADFineGrainedPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>删除名称中包含用户的所有细粒度密码策略对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144980</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 组织单位。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADOrganizationalUnit cmdlet 删除 Active Directory 组织单位。

Identity 参数指定要删除的组织单位。 可以通过可分辨名称 (DN) 或 GUID 来标识组织单位。 还可以将此参数设置为组织单位对象变量（例如 $&lt;localOrganizationUnitObject&gt;），或者通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADOrganizationalUnit cmdlet 检索对象，然后将该对象通过管道传递到 Remove-ADOrganizationalUnit cmdlet。 

如果指定要删除的对象具有子对象，则必须指定 Recursive 参数。 

如果组织单位对象的 ProtectedFromAccidentalDeletion 属性设置为 true，则 cmdlet 返回一个终止错误。 

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 组织单位对象的标识。该参数接受以下标识格式。圆括号中的标识符是包含该标识的属性的 LDAP 显示名称。

可分辨名称 
示例：OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“OUinstance”的组织单位对象实例。
-Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除组织单位及其包含的所有子项。 必须指定该参数才能删除不为空的组织单位 (OU)。

注意：指定此参数将删除标记为 ProtectedFromAccidentalDeletion 的组织单位下的所有子对象。

以下示例说明如何指定此参数。
-Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 组织单位对象的标识。该参数接受以下标识格式。圆括号中的标识符是包含该标识的属性的 LDAP 显示名称。

可分辨名称 
示例：OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“OUinstance”的组织单位对象实例。
-Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除组织单位及其包含的所有子项。必须指定该参数才能删除不为空的组织单位 (OU)。

注意：指定此参数将删除标记为 ProtectedFromAccidentalDeletion 的组织单位下的所有子对象。

以下示例说明如何指定此参数。
-Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组织单位对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>Are you sure you want to remove the item and all its children?
Performing recursive remove on Target: 'OU=Accounting,DC=Fabrikam,DC=com'. [Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?]
Help
(default is &quot;Y&quot;):y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除组织单位及其所有子项。 如果组织单位具有防删除保护，则不会删除该组织单位及其子项。 如果组织单位未受保护，即使其包含任何受保护的子项，也会删除该组织单位及其子项。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;1b228aa5-2c14-48b8-ad8a-2685dc22e055&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>使用组织单位的 objectGUID 作为标识删除该组织单位，同时禁止显示确认提示。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm
Are you sure you want to perform this action?
Performing operation &quot;Remove&quot; on Target &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;.
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help
(default is &quot;Y&quot;):y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>删除组织单位 Accounting。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>删除 LDS 实例中的一个组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144981</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>从 Active Directory 组中删除一个或多个成员。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADGroupMember cmdlet 从 Active Directory 组中删除一个或多个用户、组、服务帐户或计算机。 

Identity 参数指定包含要删除的成员的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以指定组对象变量（例如 $&lt;localGroupObject&gt;），或者通过管道将组对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 检索某个组对象，然后将该对象通过管道传递到 Remove-ADGroupMember cmdlet。

Members 参数指定要从 Identity 参数所指定的组中删除的用户、计算机和组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户、计算机或组。 还可以指定用户、计算机和组对象变量，如 $&lt;localUserObject&gt;。 如果要指定多个新成员，请使用逗号分隔列表。 不能将用户、计算机或组对象通过管道传递到此 cmdlet。 若要使用管道从组中删除用户、计算机或组对象，请使用 Remove-ADPrincipalGroupMembership cmdlet。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>指定要从组中删除的一组用户、组和计算机。 可以通过指定下列值之一来标识用户、组和计算机。注意：括号中的标识符是 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

您还可以直接向此参数提供对象。

以下示例说明如何指定此参数。

此示例通过指定可分辨名称和 SAM 帐户名属性值来指定要删除的用户和组。
-Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

此示例指定在当前 Windows PowerShell 会话中定义的用户和组对象作为该参数的输入。  

-Members $userObject, $groupObject

为此参数指定的对象处理为 Microsoft.ActiveDirectory.Management.ADPrincipal 对象。此参数还接受如下所示的派生类型。
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADGroup 

不能将对象通过管道传递到此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>指定要从组中删除的一组用户、组和计算机。可以通过指定下列值之一来标识用户、组和计算机。注意：括号中的标识符是 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

您还可以直接向此参数提供对象。

以下示例说明如何指定此参数。

此示例通过指定可分辨名称和 SAM 帐户名属性值来指定要删除的用户和组。
-Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

此示例指定在当前 Windows PowerShell 会话中定义的用户和组对象作为该参数的输入。  

-Members $userObject, $groupObject

为此参数指定的对象处理为 Microsoft.ActiveDirectory.Management.ADPrincipal 对象。此参数还接受如下所示的派生类型。
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADGroup 

不能将对象通过管道传递到此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的组对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember -Identity &quot;DocumentReaders&quot; -Member &quot;WilsonPais&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Set&quot; on Target &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从组“DocumentReaders”中删除 samAccountName 为“WilsonPais”的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember &quot;DocumentReaders&quot; &quot;administrator&quot;,&quot;Wilson Pais&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>从组“DocumentReaders”中删除 samAccountNames 为“administrator”和“WilsonPais”的用户。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember
cmdlet Remove-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
Identity: DocumentReaders 
Members[0]: Wilson Pais 
Members[1]: </dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Set&quot; on Target &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用默认行为从 DocumentReaders 组中删除用户“WilsonPais”。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 &quot;CN=AccessControl,DC=AppNC&quot; | remove-adgroupmember -member &quot;CN=GlenJohns,DC=AppNC&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Confirm 
Are you sure you want to perform this action? 
Performing operation &quot;Set&quot; on Target &quot;CN=AccessControl,DC=AppNC&quot;. 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用管道从 AD LDS 实例的 AccessControl 组中删除 DistinguishedName 为“CN=GlenJohns,DC=AppNC”的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144982</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>从一个或多个 Active Directory 组中删除某个成员。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADPrincipalGroupMembership cmdlet 从一个或多个 Active Directory 组中删除用户、组、计算机、服务帐户或任何其他帐户对象。 

Identity 参数指定要删除的用户、计算机或组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或 SAM 帐户名来标识用户、组或计算机。 还可以指定用户、组或计算机对象变量（例如 $&lt;localGroupObject&gt;），或者通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索某个用户对象，然后将该对象通过管道传递到 Remove-ADPrincipalGroupMembership cmdlet。 同样，可以使用 Get-ADGroup 或 Get-ADComputer 获取组、服务帐户和计算机对象并通过管道传递这些对象。

此 cmdlet 从管道收集所有用户、计算机、服务帐户和组对象，然后使用一个 Active Directory 操作将这些对象从指定的组中删除。

MemberOf 参数指定要删除成员的组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以指定组对象变量，如 $&lt;localGroupObject&gt;。 要指定多个组，请使用逗号分隔列表。 不能将组对象通过管道传递到 MemberOf 参数。 若要从通过管道传递的组中删除成员，请使用 Remove-ADGroupMember cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
- Microsoft.ActiveDirectory.Management.ADGroup
- Microsoft.ActiveDirectory.Management.ADUser
- Microsoft.ActiveDirectory.Management.ADComputer
- Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
-Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>指定要将用户、计算机或组作为成员添加进来的 Active Directory 组。可以通过提供以下值之一来标识组。注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

如果要指定多个组，请使用逗号来分隔列表中的组。

以下示例说明如何使用 SAM 帐户名值来指定此参数。
-MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 主体对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
- Microsoft.ActiveDirectory.Management.ADGroup
- Microsoft.ActiveDirectory.Management.ADUser
- Microsoft.ActiveDirectory.Management.ADComputer
- Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“principalInstance”的主体对象实例。
-Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>指定要将用户、计算机或组作为成员添加进来的 Active Directory 组。可以通过提供以下值之一来标识组。注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

如果要指定多个组，请使用逗号来分隔列表中的组。

以下示例说明如何使用 SAM 帐户名值来指定此参数。
-MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个表示用户、计算机或组的主体对象。 此参数还接受如下所示的派生类型。
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回表示修改后的用户、计算机或组对象的主体对象。 默认情况下，此 cmdlet 不生成任何输出。 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership -Identity &quot;Wilson Pais&quot; -MemberOf &quot;Administrators&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Remove members from group 
Do you want to remove all the specified member(s) from the specified group(s)? 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>从管理员组中删除用户“Wilson Pais”。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership 
cmdlet Remove-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
Identity: Kim Abercrombie 
MemberOf[0]: Administrators 
MemberOf[1]: AccessControl 
MemberOf[2]: </dev:code>
  			<dev:remarks>
 				<maml:para>Remove members from group 
Do you want to remove all the specified member(s) from the specified group(s)? 
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;): Y</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>使用默认行为从 Administrators 和 AccessControl 组中删除用户“Kim Abercrombie”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-aduser -server localhost:60000 -Identity &quot;CN=GlenJohns,DC=AppNC&quot; | remove-adprincipalgroupmembership -memberof &quot;CN=AccessControl,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>检索 DistinguishedName 为“CN=GlenJohns,DC=AppNC”的用户，然后使用管道将该用户从 DistinguishedName 为“CN=AccessControl,DC=AppNC”的组中删除。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144983</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>从细粒度密码策略中删除一个或多个用户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADFineGrainedPasswordPolicySubject cmdlet 从细粒度密码策略中删除一个或多个全局安全组和用户。

Identity 参数指定细粒度密码策略。 可以通过可分辨名称或 GUID 来标识细粒度密码策略。 还可以将 Identity 参数设置为细粒度密码策略对象变量（例如 $&lt;localFineGrainedPasswordPolicyObject&gt;），或者通过管道将细粒度密码策略对象传递到 Identity 参数。 例如，可以使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索某个细粒度密码策略对象，然后将该对象通过管道传递到 Remove-ADFineGrainedPasswordPolicySubject cmdlet。 

Subjects 参数指定要从密码策略中删除的用户和组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、安全帐户管理器 (SAM) 帐户名或规范名称来标识用户或组。 还可以指定用户或组对象变量，如 $&lt;localUserObject&gt;。 如果要指定多个用户或组，请使用逗号分隔列表。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>指定一个或多个用户或组。要指定多个用户或组，请使用逗号分隔列表。可以通过下列属性值之一来标识用户或组。
可分辨名称 (DN)
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

注意：括号中的标识符是属性的 LDAP 显示名称。

您还可以直接向此参数提供对象。

以下示例说明如何使用可分辨名称和 SAM 帐户名将此参数设置为用户和组列表。
-Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>指定一个或多个用户或组。要指定多个用户或组，请使用逗号分隔列表。可以通过下列属性值之一来标识用户或组。
可分辨名称 (DN)
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

注意：括号中的标识符是属性的 LDAP 显示名称。

您还可以直接向此参数提供对象。

以下示例说明如何使用可分辨名称和 SAM 帐户名将此参数设置为用户和组列表。
-Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回表示修改后的细粒度密码策略对象的对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>从两个 SamAccountName 分别为“BobKe”和“KimAb”的用户删除名为“DlgtdAdminsPSO”的细粒度密码策略。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject  DlgtdAdminsPSO | where {$_.Name -like &quot;*Price&quot;} | Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>从应用名为 DlgtdAdminsPSO 的细粒度密码策略的名称列表中删除所有名称以“Price”结尾的项。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145019</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>从只读域控制器密码复制策略的允许或拒绝列表中删除用户、计算机和组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADDomainControllerPasswordReplicationPolicy cmdlet 从只读域控制器 (RODC) 密码复制策略的允许或拒绝列表中删除一个或多个用户、计算机和组。 

Identity 参数指定使用允许和拒绝列表应用密码复制策略的 RODC。 可以通过 GUID、IPV4Address、全局 IPV6Address 或 DNS 主机名来标识域控制器。 还可以通过表示域控制器的服务器对象的名称、NTDS 设置对象或服务器对象的可分辨名称 (DN)、配置分区下 NTDS 设置对象或服务器对象的 GUID 或表示域控制器的计算机对象的 DN 来标识域控制器。 还可以将 Identity 参数设置为域控制器对象变量（例如 $&lt;localDomainControllerobject&gt;），或者通过管道将域控制器对象传递到 Identity 参数。 例如，可以使用 Get-ADDomainController cmdlet 检索域控制器对象，然后通过管道将该对象传递给 Remove-ADDomainControllerPasswordReplicationPolicy cmdlet。 必须提供只读域控制器。 

AllowedList 参数指定要从允许列表中删除的用户、计算机和组。 同样，DeniedList 参数指定要从拒绝列表中删除的用户、计算机和组。 必须指定 AllowedList 和/或 DeniedList 参数。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户、计算机或组。 还可以指定用户、计算机或组变量，如 $&lt;localUserObject&gt;。 如果要指定多个项，将使用逗号分隔列表。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>指定要从允许将其密码复制到此只读域控制器 (RODC) 的帐户的列表中删除的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机或组，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>指定要从拒绝将其密码复制到此只读域控制器 (RODC) 的帐户的列表中删除的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。 要标识每个用户、计算机、组或其他帐户，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>指定要从允许将其密码复制到此只读域控制器 (RODC) 的帐户的列表中删除的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机或组，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>指定要从拒绝将其密码复制到此只读域控制器 (RODC) 的帐户的列表中删除的用户、计算机、组或其他帐户。可以使用逗号分隔列表来指定多个值。要标识每个用户、计算机、组或其他帐户，请使用下列属性值之一：
可分辨名称 
示例：CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

以下示例说明如何使用 SAM 帐户名和可分辨名称指定组和用户。
-DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 域控制器对象。圆括号中的标识符是属性的 LDAP 显示名称。除非特别指定，否则这些值属于代表域控制器的服务器对象。

GUID (objectGUID)
示例：768c44de-f72d-66e0-8a88-0523ca495f20 
IPV4Address
示例：157.59.132.61
全局 IPV6Address 
示例：2001:4898:0:fff:200:5efe:157.59.132.61
DNS 主机名 (dNSHostName)
示例：corp-DC01.corp.contoso.com
服务器对象的名称
示例：corp-DC01$
NTDS 设置对象的可分辨名称
示例：CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
代表域控制器的服务器对象的可分辨名称
示例：CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
配置分区下 NTDS 设置对象的 GUID
示例：68adaf21-e28d-6012-bca8-320d93450ab0
配置分区下服务器对象的 GUID
示例：599c3d2e-f72d-4d20-8a88-030d99495f20
代表域控制器的计算机对象的可分辨名称。
示例：CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为 NTDS 设置对象的可分辨名称。
-Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

此示例说明如何将此参数设置为名为“AD_DCInstance”的域控制器对象实例。
-Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个只读域控制器 (RODC) 对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的只读域控制器对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>从 RODC“FABRIKAM-RODC1”的允许列表中删除 samAccountName 分别为“JesperAaberg”和“AdrianaAdams”的两个用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>从 RODC“FABRIKAM-RODC1”的拒绝列表中删除 samAccountName 分别为“MichaelAllen”和“ElizabethAndersen”的两个用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144984</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>删除 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADServiceAccount cmdlet 删除 Active Directory 服务帐户。 此 cmdlet 不会对使用该服务帐户的任何计算机进行更改。 执行此操作后，该服务帐户不再由目标计算机承载，但仍存在于目录中。

Identity 参数指定要删除的 Active Directory 服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将 Identity 参数设置为服务帐户对象变量（例如 $&lt;localSerivceAccountObject&gt;），或者通过管道将服务帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADServiceAccount cmdlet 检索服务帐户对象，然后通过管道将该对象传递给 Remove-ADServiceAccount cmdlet。 

注意：删除服务帐户与在本地卸载服务帐户是不同的操作。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
  			        <maml:para>删除名为“service1”的服务帐户。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {Name -like 'SQL*'} | Remove-ADServiceAccount </dev:code>
  			<dev:remarks>
  			        <maml:para>删除名称以“SQL”开头的所有服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144985</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>从计算机中删除一个或多个服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADComputerServiceAccount cmdlet 从 Active Directory 计算机中删除服务帐户。

Computer 参数指定包含要删除的服务帐户的 Active Directory 计算机。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将 Computer 参数设置为计算机对象变量（例如 $&lt;localComputerobject&gt;），或者通过管道将计算机对象传递到 Computer 参数。 例如，可以使用 Get-ADComputer cmdlet 检索某个计算机对象，然后将该对象通过管道传递到 Remove-ADComputerServiceAccount cmdlet。 

ServiceAccount 参数指定要删除的服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以指定服务帐户对象变量，如 $&lt;localServiceAccountObject&gt;。 如果要指定多个服务帐户，请使用逗号分隔列表。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>指定一个或多个 Active Directory 服务帐户。可以使用下列属性值之一标识服务帐户： 
可分辨名称 
示例：CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：serviceadmin

以下示例说明如何使用 SAM 帐户名为此参数指定服务帐户。
-ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>指定一个或多个 Active Directory 服务帐户。可以使用下列属性值之一标识服务帐户： 
可分辨名称 
示例：CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：serviceadmin

以下示例说明如何使用 SAM 帐户名为此参数指定服务帐户。
-ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Computer 参数接收一个计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回表示修改后的计算机对象的对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1 
</dev:code>
  			<dev:remarks>
  			        <maml:para>从计算机帐户“ComputerAcct1”中删除服务帐户“SvcAcct1”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2</dev:code>
  			<dev:remarks>
			        <maml:para>从计算机帐户“ComputerAcct1”中删除服务帐户“SvcAcct1”和“SvcAcct2”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144986</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-ADObject
		</command:name>
		<maml:description>
			<maml:para>更改 Active Directory 对象的名称。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Rename-ADObject cmdlet 重命名 Active Directory 对象。 此 cmdlet 设置 Active Directory 对象的 Name 属性，该属性的 LDAP 显示名称 (ldapDisplayName) 为“name”。 若要修改用户的名字、姓氏以及其他名称，请使用 Set-ADUser cmdlet。 若要修改用户、计算机或组的安全帐户管理器 (SAM) 帐户名，请使用 Set-ADUser、Set-ADComputer 或 Set-ADGroup cmdlet。

Identity 参数指定要重命名的对象。 可以通过可分辨名称 (DN) 或 GUID 来标识对象或容器。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADObject cmdlet 检索某个对象，然后将该对象通过管道传递到 Rename-ADObject cmdlet。 还可以使用 Get-ADGroup、Get-ADUser、Get-ADComputer、Get-ADServiceAccount、Get-ADOrganizationalUnit 和 Get-ADFineGrainedPasswordPolicy cmdlet 获取可通过管道传递到此 cmdlet 的对象。

NewName 参数定义对象的新名称。必须指定此参数。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>指定对象的新名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。

以下示例说明如何将此参数设置为名称字符串。
  -NewName &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>指定对象的新名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。

以下示例说明如何将此参数设置为名称字符串。
-NewName &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。

还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy

				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot; -NewName UnitedKingdomHQ</dev:code>
  			<dev:remarks>
  			        <maml:para>将现有站点“HQ”的名称重命名为新名称“UnitedKingdomHQ”。 如果可分辨名称是在 -Identity 参数中提供的，则不需要 -Partition 参数。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;AmsterdamHQ&quot; -Partition &quot;CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 objectGUID 为“4777c8e8-cd29-4699-91e8-c507705a0966”的对象重命名为“SiteNewName”。 注意：-Partition 参数是必需的，因为不能根据提供给 -Identity 参数的 GUID 确定站点对象的命名上下文。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com&quot; -NewName Groups</dev:code>
  			<dev:remarks>
  			        <maml:para>重命名 DistinguisehdName 为“OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com' to 'Groups”的对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;DavidAhs&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 objectGUID 为“4777c8e8-cd29-4699-91e8-c507705a0966”的对象重命名为“DavidAhs”。 注意：未指定 -Partition 参数，因为该对象在域的默认命名上下文中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;CN=Apps,DC=AppNC&quot; -NewName &quot;InternalApps&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 LDS 实例中的容器“CN=Apps,DC=AppNC”重命名为“InternalApps”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144987</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Restore-ADObject
		</command:name>
		<maml:description>
			<maml:para>还原 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Restore</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Restore-ADObject cmdlet 还原已删除的 Active Directory 对象。 

NewName 参数指定已还原的对象的新名称。 如果未指定 NewName 参数，则使用具有 LDAP 显示名称“msDS-lastKnownRDN”的 Active Directory 属性的值。 TargetPath 参数指定已还原的对象的新位置。 如果未指定 TargetPath，则使用具有 LDAP 显示名称“lastKnownParent”的 Active Directory 属性的值。

Identity 参数指定要还原的 Active Directory 对象。 可以通过可分辨名称 (DN) 或 GUID 来标识对象。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADObject cmdlet 通过指定 IncludeDeletedObjects 参数来检索已删除的对象。 然后，可以通过管道将此对象传递到 Restore-ADObject cmdlet。 

注意：您可以通过使用 Get-ADObject cmdlet 并指定 IncludeDeletedObjects 参数来获取已删除对象的可分辨名称。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restore-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>指定对象的新名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。

以下示例说明如何将此参数设置为名称字符串。
-NewName &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>指定对象的新位置。此位置必须是容器或组织单位的路径。

以下示例说明如何通过提供可分辨名称来指定目标路径。
-TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>指定对象的新名称。此参数设置 Active Directory 对象的 Name 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“name”。

以下示例说明如何将此参数设置为名称字符串。
-NewName &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>指定对象的新位置。此位置必须是容器或组织单位的路径。

以下示例说明如何通过提供可分辨名称来指定目标路径。
-TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。 

还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回还原后的对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;613dc90a-2afd-49fb-8bd8-eac48c6ab59f&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>恢复 ADObject，并将删除的对象的“msDS-LastKnownRDN”属性设置为 -NewName 参数，将“lastKnownRDN”设置为 -TargetPath 参数。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;CN=Kim Abercrombie\0ADEL:613dc90a-2afd-49fb-8bd8-eac48c6ab59f,CN=Deleted Objects,DC=FABRIKAM,DC=COM&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>恢复 ADObject，并将删除的对象的“msDS-LastKnownRDN”属性设置为 -NewName 参数，将“lastKnownRDN”设置为 -TargetPath 参数。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'samaccountname -eq &quot;kimabercrombie&quot;' -IncludeDeletedObjects | Restore-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>查找 samaccountname 为 kimabercrombie 的已删除用户，并将其恢复。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject  -Identity '6bb3bfe9-4355-48ee-b3b6-4fda6917d31d' -Server server1:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>使用 ObjectGUID 恢复 AD-LDS 对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'msds-lastknownrdn -eq &quot;user1&quot;'  -Server server1:50000 -IncludeDeletedObjects -SearchBase &quot;o=app1,c=us&quot; | Restore-ADObject </dev:code>
  			<dev:remarks>
  			        <maml:para>使用 msds-LastKnownRDN 恢复 AD-LDS 对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144988</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Search-ADAccount
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 用户、计算机或服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Search</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Search-ADAccount cmdlet 检索满足参数所指定条件的一个或多个用户、计算机或服务帐户。 搜索条件包括帐户和密码状态。 例如，您可以通过指定 AccountExpired 参数来搜索已过期的所有帐户。 同样，可以通过指定 PasswordExpired 参数来搜索密码已过期的所有帐户。 可以通过指定 UsersOnly 参数将搜索对象限制为用户帐户。 同样，如果指定了 ComputersOnly 参数，cmdlet 将仅仅检索计算机帐户。

某些搜索参数（例如 AccountExpiring 和 AccountInactive）使用默认时间，此默认时间可以通过指定 DateTime 或 TimeSpan 参数来更改。 DateTime 参数指定一个唯一的时间。 TimeSpan 参数指定从当前时间开始的时间范围。 例如，若要搜索所有将在 10 天内到期的帐户，请指定 AccountExpiring 和 TimeSpan 参数，并将 TimeSpan 的值设置为“10.00:00:00”。 若要搜索所有在 2012 年 12 月 31 日前到期的帐户，请将 DateTime 参数设置为“12/31/2012”。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountDisabled</maml:name>
				<maml:description>
					<maml:para>指定搜索已禁用的帐户。 当 ADAccount Enabled 属性设置为 false 时，帐户被禁用。 

以下示例说明如何指定 AccountDisabled 参数。
  -AccountDisabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpired</maml:name>
				<maml:description>
					<maml:para>指定搜索已过期的帐户。 如果 ADAccount AccountExpirationDate 属性设置为过去的某个时间，则帐户已到期。 AccountExpirationDate 属性的 LDAP 显示名称 (ldapDisplayName) 是 accountExpires。

以下示例说明如何指定 AccountExpired 参数。
  -AccountExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiring</maml:name>
				<maml:description>
					<maml:para>指定搜索将在给定的时间段内或在指定的时间过期的帐户。 若要指定一个时间段，请使用 AccountExpiring 参数和 TimeSpan 参数。 若要指定一个具体时间，请使用 AccountExpiring 参数和 DateTime 参数。 

以下示例说明如何指定搜索将在接下来的 10 天内过期的帐户。
  -AccountExpiring -TimeSpan 10

以下示例说明如何指定对将在 2012 年 6 月 18 日早上 2:00 前到期的帐户进行搜索。
  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>为 Search-ADAccount 参数（例如 AccountExpiring、AccountInactive 和 PasswordExpiring）指定一个唯一时间值。

除非指定了时间，否则假定时间为当地时间。 如果未指定时间值，则假定时间为当地午夜时间。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将一个值指定为通用协调时间 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。
  &quot;2000-04-17T14:22:48.0000000&quot; 

下面的示例说明如何将 AccountExpiring 参数设置为 DateTime 值“2012 年 6 月 18 日凌晨 2:00:00”。

-AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>设置一个时间间隔。 此参数用于为 Search-ADAccount 参数（例如 AccountExpiring）指定一个时间值。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
    -TimeSpan &quot;2&quot;
将时间跨度设置为前 2 天
   -TimeSpan &quot;-2&quot;
将时间设置为 4 小时
    -TimeSpan &quot;4:00&quot;

例如，若要搜索所有将在 10 天内过期的帐户，请按如下所示指定 AccountExpiring 和 TimeSpan 参数。

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountInactive</maml:name>
				<maml:description>
					<maml:para>指定搜索在给定的时间段内或自指定时间以来未登录过的帐户。 若要指定一个时间段，请使用 TimeSpan 参数。 若要指定具体时间，请使用 DateTime 参数。 注意：仅当域处于 Windows Server 2003 域功能级别时，才使用此属性，因此，此参数只在该模式下才能正常使用。

下面的示例说明如何设置此参数以搜索在过去 10 天内一直处于非活动状态的帐户。
  -AccountInactive -TimeSpan 10

以下示例说明如何设置此参数以搜索自 2008 年 7 月 16 日中午 12:00 以来一直处于非活动状态的帐户。
  -AccountInactive  -DateTime &quot;7/16/2008&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>为 Search-ADAccount 参数（例如 AccountExpiring、AccountInactive 和 PasswordExpiring）指定一个唯一时间值。

除非指定了时间，否则假定时间为当地时间。如果未指定时间值，则假定时间为当地午夜时间。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将一个值指定为通用协调时间 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。
&quot;2000-04-17T14:22:48.0000000&quot; 

下面的示例说明如何将 AccountExpiring 参数设置为 DateTime 值“2012 年 6 月 18 日凌晨 2:00:00”。

-AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>设置一个时间间隔。此参数用于为 Search-ADAccount 参数（例如 AccountExpiring）指定一个时间值。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-TimeSpan &quot;2&quot;
将时间跨度设置为前 2 天
-TimeSpan &quot;-2&quot;
将时间设置为 4 小时
-TimeSpan &quot;4:00&quot;

例如，若要搜索所有将在 10 天内过期的帐户，请按如下所示指定 AccountExpiring 和 TimeSpan 参数。

-AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockedOut</maml:name>
				<maml:description>
					<maml:para>指定搜索已锁定的帐户。

以下示例说明如何指定搜索已锁定的帐户。
  -LockedOut</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordExpired</maml:name>
				<maml:description>
					<maml:para>指定搜索密码已过期的帐户。 

以下示例说明如何指定此参数。
  -PasswordExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定搜索密码不会过期的帐户。

以下示例说明如何指定 PasswordNeverExpires 参数。
   -PasswordNeverExpires</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountDisabled</maml:name>
			<maml:description>
				<maml:para>指定搜索已禁用的帐户。当 ADAccount Enabled 属性设置为 false 时，帐户被禁用。 

以下示例说明如何指定 AccountDisabled 参数。
-AccountDisabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpired</maml:name>
			<maml:description>
				<maml:para>指定搜索已过期的帐户。如果 ADAccount AccountExpirationDate 属性设置为过去的某个时间，则帐户已到期。AccountExpirationDate 属性的 LDAP 显示名称 (ldapDisplayName) 是 accountExpires。

以下示例说明如何指定 AccountExpired 参数。
-AccountExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiring</maml:name>
			<maml:description>
				<maml:para>指定搜索将在给定的时间段内或在指定的时间过期的帐户。若要指定一个时间段，请使用 AccountExpiring 参数和 TimeSpan 参数。若要指定一个具体时间，请使用 AccountExpiring 参数和 DateTime 参数。 

以下示例说明如何指定搜索将在接下来的 10 天内过期的帐户。
-AccountExpiring -TimeSpan 10

以下示例说明如何指定对将在 2012 年 6 月 18 日早上 2:00 前到期的帐户进行搜索。
-AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountInactive</maml:name>
			<maml:description>
				<maml:para>指定搜索在给定的时间段内或自指定时间以来未登录过的帐户。若要指定一个时间段，请使用 TimeSpan 参数。若要指定具体时间，请使用 DateTime 参数。注意：仅当域处于 Windows Server 2003 域功能级别时，才使用此属性，因此，此参数只在该模式下才能正常使用。

下面的示例说明如何设置此参数以搜索在过去 10 天内一直处于非活动状态的帐户。
-AccountInactive -TimeSpan 10

以下示例说明如何设置此参数以搜索自 2008 年 7 月 16 日中午 12:00 以来一直处于非活动状态的帐户。
-AccountInactive  -DateTime &quot;7/16/2008&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComputersOnly</maml:name>
			<maml:description>
				<maml:para>指定仅搜索计算机帐户。

以下示例说明如何指定此参数。
-ComputersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>为 Search-ADAccount 参数（例如 AccountExpiring、AccountInactive 和 PasswordExpiring）指定一个唯一时间值。

除非指定了时间，否则假定时间为当地时间。如果未指定时间值，则假定时间为当地午夜时间。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将一个值指定为通用协调时间 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。
&quot;2000-04-17T14:22:48.0000000&quot; 

下面的示例说明如何将 AccountExpiring 参数设置为 DateTime 值“2012 年 6 月 18 日凌晨 2:00:00”。

-AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockedOut</maml:name>
			<maml:description>
				<maml:para>指定搜索已锁定的帐户。

以下示例说明如何指定搜索已锁定的帐户。
-LockedOut</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordExpired</maml:name>
			<maml:description>
				<maml:para>指定搜索密码已过期的帐户。 

以下示例说明如何指定此参数。
-PasswordExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定搜索密码不会过期的帐户。

以下示例说明如何指定 PasswordNeverExpires 参数。
-PasswordNeverExpires </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回结果时在一页中包括的对象数。 

默认值是每页 256 个对象。 

以下示例说明如何设置此参数。
-ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>指定为 Active Directory 域服务查询返回的对象的最大数目。如果您希望接收所有对象，请将此参数设置为 $null（Null 值）。可使用 Ctrl+c 停止查询并返回对象。 
默认值为 $null。 
以下示例说明如何设置此参数，使您可以接收到所有返回的对象。
-ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>指定在其下进行搜索的 Active Directory 路径。 

从 Active Directory 提供程序驱动器运行 cmdlet 时，此参数的默认值为该驱动器的当前路径。

当针对 AD DS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，此参数的默认值为目标域的默认命名上下文。

当针对 AD LDS 目标从 Active Directory 提供程序驱动器外部运行 cmdlet 时，默认值为目标 LDS 实例的默认命名上下文（如果已通过为 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 设置 msDS-defaultNamingContext 属性指定了一个默认命名上下文）。如果没有为目标 AD LDS 实例指定默认命名上下文，则该参数没有默认值。

以下示例说明如何设置此参数以在 OU 下搜索。
-SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

当 SearchBase 参数的值设置为空字符串并且已连接到 GC 端口时，将搜索所有分区。如果 SearchBase 参数的值设置为空字符串，并且未连接到 GC 端口，则会引发错误。
以下示例说明如何将此参数设置为空字符串。-SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 搜索的范围。此参数的可能值为：
Base 或 0
OneLevel 或 1
Subtree 或 2

Base 查询仅搜索当前路径或对象。OneLevel 查询搜索该路径或对象的直属子级。Subtree 查询搜索当前路径或对象以及该路径或对象的所有子级。

以下示例说明如何将此参数设置为子树搜索。
-SearchScope Subtree</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>设置一个时间间隔。此参数用于为 Search-ADAccount 参数（例如 AccountExpiring）指定一个时间值。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-TimeSpan &quot;2&quot;
将时间跨度设置为前 2 天
-TimeSpan &quot;-2&quot;
将时间设置为 4 小时
-TimeSpan &quot;4:00&quot;

例如，若要搜索所有将在 10 天内过期的帐户，请按如下所示指定 AccountExpiring 和 TimeSpan 参数。

-AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UsersOnly</maml:name>
			<maml:description>
				<maml:para>指定仅搜索用户帐户。 

以下示例说明如何指定此参数。
-UsersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个满足参数所设置条件的帐户对象。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name            ObjectClass
----            -----------
Guest           user
krbtgt          user
krbtgt_51399    user
AmyAl-LPTOP     computer
DeepakAn-DSKTOP computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回所有已禁用的用户、计算机和服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -UsersOnly | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass
----         -----------
Guest        user
krbtgt       user
krbtgt_51399 user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回所有已禁用的用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name            ObjectClass
----            -----------
Greg Chapman    user
Claus Hansen    user
Tomasz Bochenek user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回所有已到期的用户、计算机和服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -TimeSpan 6.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Iulian Calinov user
John Campbell  user
Garth Fort     user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回所有将在 6 天内到期的用户、计算机和服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountInactive -TimeSpan 90.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        ObjectClass
----                        -----------
FABRIKAM-RODC1              computer
Guest                       user
krbtgt                      user
krbtgt_51399                user
Almudena Benito             user
Aaron Con                   user
Adina Hagege                user
Aaron Nicholls              user
Aaron M. Painter            user
Jeff Phillips               user
Flemming Pedersen           user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回过去 90 天内一直处于非活动状态的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        ObjectClass
----                        -----------
Stan Orme                   user
Danni Ortman                user
Matej Potokar               user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回密码已到期的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordNeverExpires | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Guest          user
Toni Poe       user
Anders Riis    user
Fabien Hernoux user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回密码从不会到期的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -LockedOut | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Toni Poe       user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回已锁定的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -ComputersOnly | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
TPOE-PC1       computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回所有已禁用的计算机帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -DateTime &quot;3/18/2009&quot; | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass
----         -----------
Anders Riis  user

</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>返回密码在 2009 年 3 月 18 日到期的所有帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-AdAccount -AccountDisabled -SearchBase &quot;DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
				<maml:para>Enabled               : False
Name                  : SanjayPatel
UserPrincipalName     :
PasswordNeverExpires  :
LockedOut             : False
ObjectGUID            : d671de28-6e40-42a7-b32c-63d336de296d
ObjectClass           : user
SID               : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944
PasswordExpired       : False
LastLogonDate         :
DistinguishedName     : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC
AccountExpirationDate :</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>返回 LDS 实例“FABRIKAM-SRV1:60000”中已禁用的所有用户、计算机和服务帐户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144989</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountResultantPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADObject
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADObject cmdlet 修改 Active Directory 对象的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。  

Identity 参数指定要修改的 Active Directory 对象。 可以通过可分辨名称 (DN) 或 GUID 来标识对象。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADObject cmdlet 检索某个对象，然后将该对象通过管道传递到 Set-ADObject cmdlet。

Instance 参数提供了一种通过应用对对象副本所做的更改来更新对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 对象副本，则 Set-ADObject cmdlet 会对原始对象进行同样的更改。 要获取需要修改的对象的副本，请使用 Get-ADObject 对象。 使用 Instance 参数时不允许使用 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance。

下面的示例说明如何使用以下三种方法来修改对象的 DisplayName 属性：
 - 通过指定 Identity 和 DisplayName 参数
 - 通过经由管道传递对象并指定 DisplayName 参数
 -通过指定 Instance 参数。

方法 1：使用 Identity 和 DisplayName 参数修改 SecurityLevel2AccessGroup 对象的 DisplayName 属性。 

 Set-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; -DisplayName &quot;Security Level 2&quot;

方法 2：通过管道传递 SecurityLevel2AccessGroup 对象并指定 DisplayName 参数，以此修改 SecurityLevel2AccessGroup 对象的 DisplayName 属性。

 Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; | Set-ADObject -DisplayName &quot;Security Level 2&quot;

方法 3：通过使用 Windows PowerShell 命令行修改 SecurityLevel2AccessGroup 对象的本地实例，来修改 SecurityLevel2AccessGroup 对象的 DisplayName 属性。 然后将 Instance 参数设置为本地实例。

 $adobject = Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot;
 $adobject.DisplayName = &quot;Security Level 2&quot; 
 Set-ADObject -Instance $adobject. 

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。 使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。 要修改对象属性，必须使用 LDAP 显示名称。 可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。 此参数的格式为 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。 使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。 可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

  -Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。 使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。 若要删除对象属性，必须使用 LDAP 显示名称。 可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。 使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 对象的已修改副本，用来更新实际的 Active Directory 对象。 如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。 cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADObject cmdlet 检索到的 Active Directory 对象。  指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADObject cmdlet 检索对象的实例。 此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADObject cmdlet 会将所做的更改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
步骤 2：修改对象实例的一个或多个属性。
    $objectInstance.Description = &quot;New Description&quot;
步骤 3：保存对对象的更改
    Set-ADObject -Instance $objectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 对象的已修改副本，用来更新实际的 Active Directory 对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADObject cmdlet 检索到的 Active Directory 对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADObject cmdlet 检索对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADObject cmdlet 会将所做的更改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
步骤 2：修改对象实例的一个或多个属性。
$objectInstance.Description = &quot;New Description&quot;
步骤 3：保存对对象的更改
Set-ADObject -Instance $objectInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个 Active Directory 对象。 还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

Instance 参数接收一个使用 Get-ADObject cmdlet 检索到然后经过修改的对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，将返回修改后的对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Description 'Distribution List of Antonio Alwan Direct Reports'
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 DistinguishedName 为“CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的对象的 Description 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM' -Add @{siteList='CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM'} -Partition 'CN=Configuration,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>将站点“CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM”添加到 DistinguishedName 为“CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM”的对象的 siteList 属性中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Add @{url=$urlValues}</dev:code>
  			<dev:remarks>
  			        <maml:para>将两个 URL 添加到 objectGuid 为“cdadd380-d3a8-4fd1-9d30-5cf72d94a056”的对象的 urlValues 属性中。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Replace @{url=$urlValues;description=&quot;Antonio Alwan&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>用新值替换多值属性“url”的旧值，并设置“description”属性的值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Remove @{url=&quot;www.contoso.com&quot;} -Replace @{description=&quot;Antonio Alwan (European Manager)&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>从属性“url”中删除指定的值，并设置“description”属性的值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$myComp = Get-ADObject -identity &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Properties &quot;userAccountControl&quot;,&quot;description&quot;

#Now set the new account control using powershell bitwise OR operation (-bor) and set description
$myComp.userAccountControl = $myComp.userAccountControl -bor 50
$myComp.description = &quot;Setting a new UAC on the object&quot;

#Save the changes
Set-ADObject -Instance $myComp</dev:code>
  			<dev:remarks>
  			        <maml:para>通过更新“userAccountControl”属性并设置“description”属性的，为对象设置新的 UAC 位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adobject &quot;CN=InternalApps,DC=AppNC&quot; -protectedFromAccidentalDeletion $true -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将 LDS 实例中的容器“CN=InternalApps,DC=AppNC”设置为受到保护，不会意外删除。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144990</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADUser
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 用户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADUser cmdlet 修改 Active Directory 用户的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。

Identity 参数指定要修改的 Active Directory 用户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识用户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localUserObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADUser cmdlet 检索某个用户对象，然后将该对象通过管道传递到 Set-ADUser cmdlet。

Instance 参数提供了一种通过应用对用户对象的副本所做的更改来更新用户对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 用户对象副本，则 Set-ADUser cmdlet 会对原始用户对象进行同样的更改。 要获取需要修改的对象的副本，请使用 Get-ADUser 对象。 使用 Instance 参数时不允许使用 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance。

下面的示例说明如何使用以下三种方法来修改用户对象的 Manager 属性：
 - 通过指定 Identity 和 Manager 参数
 - 通过经由管道传递用户对象并指定 Manager 参数
 - 通过指定 Instance 参数。

方法 1：使用 Identity 和 Manager 参数修改“saraDavis”用户的 Manager 属性。 

 Set-ADUser -Identity &quot;saraDavis&quot; -Manager &quot;JimCorbin&quot;

方法 2：通过经由管道传递“saraDavis”用户并指定 Manager 参数来修改“saraDavis”用户的 Manager 属性。

 Get-ADUser -Identity &quot;saraDavis&quot; | Set-ADUser -Manager &quot;JimCorbin&quot;

方法 3：使用 Windows PowerShell 命令行修改“saraDavis”用户的本地实例，从而修改“saraDavis”用户的 Manager 属性。 然后将 Instance 参数设置为本地实例。

 $user = Get-ADUser -Identity &quot;saraDavis&quot;
 $user.Manager = &quot;JimCorbin&quot; 
 Set-ADUser -Instance $user. 

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>指定用户所在的公司。此参数设置用户对象的 Company 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“company”。 

以下示例说明如何设置此参数。
-Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>指定用户所在的部门。此参数设置用户的 Department 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“department”。 

以下示例说明如何设置此参数。
-Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>指定用户所在的分部。此参数设置用户对象的 Division 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“division”。 

以下示例说明如何设置此参数。
-Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>指定用户的电子邮件地址。此参数设置用户对象的 EmailAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mail”。 

以下示例说明如何设置此参数。
-EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>指定用户的职员 ID。此参数设置用户对象的 EmployeeID 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeID”。 

以下示例说明如何设置此参数。
-EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>指定用户的职员编号。此参数设置用户对象的 EmployeeNumber 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeNumber”。 

以下示例说明如何设置此参数。
-EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>指定用户的传真号码。此参数设置用户对象的 Fax 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“facsimileTelephoneNumber”。 

以下示例说明如何设置此参数。
-Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>指定用户的名字。此参数设置用户对象的 GivenName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“givenName”。

以下示例说明如何设置此参数。
-givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>指定用户的主目录。此参数设置用户对象的 HomeDirectory 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDirectory”。

以下示例说明如何设置此参数。
-HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>指定与 HomeDirectory 属性所定义的 UNC 路径相关联的驱动器。驱动器号以“&lt;DriveLetter&gt;:”形式指定，其中 &lt;DriveLetter&gt; 指示要关联的驱动器号。&lt;DriveLetter&gt; 必须是单个大写字母，并且必须带有冒号。此参数设置用户对象的 HomeDrive 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDrive”。 

以下示例说明如何设置此参数。
-HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的家庭电话号码。此参数设置用户的 HomePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homePhone”。

以下示例说明如何设置此参数。
-HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>指定代表用户名一部分的首字母。可以使用该值来表示用户的中间名首字母。此参数设置用户的 Initials 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“initials”。

以下示例说明如何设置此参数。
-Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>指定用户可以访问的计算机。要指定多个计算机，请创建一个逗号分隔列表。可以使用计算机的安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 或 DNS 主机名来标识该计算机。SAM 帐户名与计算机的 NetBIOS 名称相同。

此属性的 LDAP 显示名称 (ldapDisplayName) 是“userWorkStations”。 

以下示例说明如何使用 SAMAccountName（NetBIOS 名称）和 DNSHostName 值来设置此参数。
-LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>指定用户的管理器。此参数设置用户的 Manager 属性。通过提供以下属性值之一设置此参数：注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此属性的 LDAP 显示名称 (ldapDisplayName) 是“manager”。

以下示例说明如何设置此参数。
-Manager saradavis</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的移动电话号码。此参数设置用户对象的 MobilePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mobile”。

以下示例说明如何设置此参数。
-MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>指定用户的办公地点或公司所在地。此参数设置用户对象的 Office 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“office”。

以下示例说明如何设置此参数。
-Office  &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>指定用户的办公电话号码。此参数设置用户对象的 OfficePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“telephoneNumber”。

以下示例说明如何设置此参数。
-OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>指定用户所在的组织单位。此参数设置用户对象的 Organization 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“o”。

以下示例说明如何设置此参数。
-Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>指定除了用户的名字和姓氏以外的名称，如用户的中间名。此参数设置用户对象的 OtherName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“middleName”。

以下示例说明如何设置此参数。
-OtherName  &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政信箱号。此参数设置用户对象的 POBox 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postOfficeBox”。

以下示例说明如何设置此参数。
-POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>指定用户配置文件的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户对象的 ProfilePath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“profilePath”。

以下示例说明如何将此参数设置为本地路径和 UNC 路径。-ProfilePath &quot;E:\users\profiles\saraDavis&quot;
-ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>指定用户登录脚本的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户的 ScriptPath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“scriptPath”。 

以下示例说明如何设置此参数。
-ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>指定是否需要具备智能卡才能登录。此参数设置用户的 SmartCardLoginRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_SMARTCARD_REQUIRED 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使得用户必须具有智能卡才能登录帐户。
-SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>指定用户的街道地址。此参数设置用户对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“streetAddress”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>指定用户的姓氏。此参数设置用户对象的 Surname 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sn”。

以下示例说明如何设置此参数。
-Surname  &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>指定用户的职务。此参数设置用户对象的 Title 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“title”。

以下示例说明如何设置此参数。
-Title  &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一个 ADUser 对象，用于标识应修改的 Active Directory 用户对象以及应对该对象进行的一组更改。 如果使用此参数，则对 ADUser 对象所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。 
指定作为 -Instance 参数值的 ADUser 对象必须是通过 Get-ADUser cmdlet 检索获得的。 指定 Instance 参数时，不能指定其他设置对象各属性的参数。

以下示例说明如何使用 Get-ADUser cmdlet 检索 ADUser 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADUser cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $userInstance = Get-ADUser  -Identity saraDavis
步骤 2：修改对象实例的一个或多个属性。
    $userInstance.EmailAddress = &quot;saradavis@contoso.com&quot;
步骤 3：将所做的修改保存到 saraDavis。
    Set-ADUser -Instance $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>指定用户所在的公司。此参数设置用户对象的 Company 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“company”。 

以下示例说明如何设置此参数。
-Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>指定用户所在的部门。此参数设置用户的 Department 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“department”。 

以下示例说明如何设置此参数。
-Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>指定用户所在的分部。此参数设置用户对象的 Division 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“division”。 

以下示例说明如何设置此参数。
-Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>指定用户的电子邮件地址。此参数设置用户对象的 EmailAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mail”。 

以下示例说明如何设置此参数。
-EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>指定用户的职员 ID。此参数设置用户对象的 EmployeeID 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeID”。 

以下示例说明如何设置此参数。
-EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>指定用户的职员编号。此参数设置用户对象的 EmployeeNumber 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“employeeNumber”。 

以下示例说明如何设置此参数。
-EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>指定用户的传真号码。此参数设置用户对象的 Fax 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“facsimileTelephoneNumber”。 

以下示例说明如何设置此参数。
-Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>指定用户的名字。此参数设置用户对象的 GivenName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“givenName”。

以下示例说明如何设置此参数。
-givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>指定用户的主目录。此参数设置用户对象的 HomeDirectory 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDirectory”。

以下示例说明如何设置此参数。
-HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>指定与 HomeDirectory 属性所定义的 UNC 路径相关联的驱动器。驱动器号以“&lt;DriveLetter&gt;:”形式指定，其中 &lt;DriveLetter&gt; 指示要关联的驱动器号。&lt;DriveLetter&gt; 必须是单个大写字母，并且必须带有冒号。此参数设置用户对象的 HomeDrive 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homeDrive”。 

以下示例说明如何设置此参数。
-HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的家庭电话号码。此参数设置用户的 HomePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“homePhone”。

以下示例说明如何设置此参数。
-HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>指定代表用户名一部分的首字母。可以使用该值来表示用户的中间名首字母。此参数设置用户的 Initials 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“initials”。

以下示例说明如何设置此参数。
-Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一个 ADUser 对象，用于标识应修改的 Active Directory 用户对象以及应对该对象进行的一组更改。如果使用此参数，则对 ADUser 对象所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。 
指定作为 -Instance 参数值的 ADUser 对象必须是通过 Get-ADUser cmdlet 检索获得的。指定 Instance 参数时，不能指定其他设置对象各属性的参数。

以下示例说明如何使用 Get-ADUser cmdlet 检索 ADUser 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADUser cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$userInstance = Get-ADUser  -Identity saraDavis
步骤 2：修改对象实例的一个或多个属性。
$userInstance.EmailAddress = &quot;saradavis@contoso.com&quot;
步骤 3：将所做的修改保存到 saraDavis。
Set-ADUser -Instance $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>指定用户可以访问的计算机。要指定多个计算机，请创建一个逗号分隔列表。可以使用计算机的安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 或 DNS 主机名来标识该计算机。SAM 帐户名与计算机的 NetBIOS 名称相同。

此属性的 LDAP 显示名称 (ldapDisplayName) 是“userWorkStations”。 

以下示例说明如何使用 SAMAccountName（NetBIOS 名称）和 DNSHostName 值来设置此参数。
-LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>指定用户的管理器。此参数设置用户的 Manager 属性。通过提供以下属性值之一设置此参数：注意：括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此属性的 LDAP 显示名称 (ldapDisplayName) 是“manager”。

以下示例说明如何设置此参数。
-Manager saradavis </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的移动电话号码。此参数设置用户对象的 MobilePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“mobile”。

以下示例说明如何设置此参数。
-MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>指定用户的办公地点或公司所在地。此参数设置用户对象的 Office 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“office”。

以下示例说明如何设置此参数。
-Office  &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>指定用户的办公电话号码。此参数设置用户对象的 OfficePhone 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“telephoneNumber”。

以下示例说明如何设置此参数。
-OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>指定用户所在的组织单位。此参数设置用户对象的 Organization 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“o”。

以下示例说明如何设置此参数。
-Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>指定除了用户的名字和姓氏以外的名称，如用户的中间名。此参数设置用户对象的 OtherName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“middleName”。

以下示例说明如何设置此参数。
-OtherName  &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政信箱号。此参数设置用户对象的 POBox 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postOfficeBox”。

以下示例说明如何设置此参数。
-POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>指定用户配置文件的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户对象的 ProfilePath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“profilePath”。

以下示例说明如何将此参数设置为本地路径和 UNC 路径。-ProfilePath &quot;E:\users\profiles\saraDavis&quot;
-ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>指定用户登录脚本的路径。该值可以是本地绝对路径，也可以是通用命名约定 (UNC) 路径。此参数设置用户的 ScriptPath 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“scriptPath”。 

以下示例说明如何设置此参数。
-ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>指定是否需要具备智能卡才能登录。此参数设置用户的 SmartCardLoginRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_SMARTCARD_REQUIRED 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使得用户必须具有智能卡才能登录帐户。
-SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>指定用户的街道地址。此参数设置用户对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“streetAddress”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>指定用户的姓氏。此参数设置用户对象的 Surname 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sn”。

以下示例说明如何设置此参数。
-Surname  &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>指定用户的职务。此参数设置用户对象的 Title 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“title”。

以下示例说明如何设置此参数。
-Title  &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个用户对象。

Instance 参数接收一个使用 Get-ADUser cmdlet 检索到并经过修改的用户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，将返回修改后的用户对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser AntonioAl -HomePage 'http://fabrikam.com/employees/AntonioAl' -LogonWorkstations 'AntonioAl-DSKTOP,AntonioAl-LPTOP'
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 samAccountName 为 AntonioAL 的用户的属性主页设置为 http://fabrikam.com/employees/AntonioAl，并将 LogonWorkstations 属性设置为 AntonioAl-DSKTOP,AntonioAl-LPTOP。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase 'OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Properties DisplayName | % {Set-ADUser $_ -DisplayName ($_.Surname + ' ' + $_.GivenName)}
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取组织单位 OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM 下的目录中的所有用户。  将这些用户对象的 DisplayName 属性设置为 Surname 和 GivenName 属性的串联。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Replace @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>将 samAccountNAme 为 GlenJohn 的用户的 title 属性设置为 director，并将 mail 属性设置为 glenjohn@fabrikam.com。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Remove @{otherMailbox=&quot;glen.john&quot;} -Add @{url=&quot;fabrikam.com&quot;} -Replace @{title=&quot;manager&quot;} -Clear description</dev:code>
  			<dev:remarks>
  			        <maml:para>通过将 glen.john 从 otherMailbox 属性删除、将 fabrikam.com 添加到 url 属性、用 manager 替换 title 属性并清除 description 属性，修改 samAccountName 为 GlenJohn 的用户对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$user = Get-ADUser GlenJohn -Properties mail,department 
$user.mail = &quot;glen@fabrikam.com&quot;
$user.department = &quot;Accounting&quot;
Set-ADUser -instance $user </dev:code>
  			<dev:remarks>
  			        <maml:para>通过使用 instance 参数，设置 samAccountName 为 GlenJohn 的用户对象的 mail 和 department 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># create a byte array for the M-F 8:00 am to 5 pm logon hours
$hours = New-Object byte[] 21
$hours[5] = 255; $hours[8] = 255; $hours[11] = 255; $hours[14] = 255; $hours[17] = 255;
$hours[6] = 1; $hours[9] = 1; $hours[12] = 1; $hours[15] = 1; $hours[18] = 1;

# create a hashtable to update the logon hours and a description
$replaceHashTable = New-Object HashTable
$replaceHashTable.Add(&quot;logonHours&quot;, $hours)
$replaceHashTable.Add(&quot;description&quot;, &quot;Sarah Davis can only logon from Monday through Friday from 8:00 AM to 5:00 PM&quot;)

# set the value of the logonHours and description attributes
Set-ADUser &quot;SarahDavis&quot; -Replace $replaceHashTable
</dev:code>
  			<dev:remarks>
  			        <maml:para>将用户登录时间设置为星期一到星期五的早上 8:00 到下午 5:00，并添加说明。 它以指定的字节数组和字符串分别更新“logonHours”和“description”属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144991</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADComputer
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 计算机对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADComputer cmdlet 修改 Active Directory 计算机对象的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。

Identity 参数指定要修改的 Active Directory 计算机。 可以通过可分辨名称成员 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识计算机。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localComputerObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADComputer cmdlet 检索某个计算机对象，然后将该对象通过管道传递到 Set-ADComputer。

Instance 参数通过应用对计算机对象副本所做的更改，提供了一种更新计算机的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 计算机对象的副本，则 Set-ADComputer cmdlet 会对原始计算机对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADComputer 对象。 如果指定 Instance 参数，则不应传递 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance。

下面的示例说明如何使用以下三种方法来修改计算机对象的 Location 属性：
 - 通过指定 Identity 和 Location 参数
 - 通过经由管道传递计算机对象并指定 Location 参数
 -通过指定 Instance 参数。

方法 1：使用 Identity 和 Location 参数修改 saraDavisLaptop 计算机的 Location 属性。 

 Set-ADComputer  -Identity SaraDavisLaptop  -Location  &quot;W4013&quot;

方法 2：通过管道传递计算机对象并指定 Location 参数，从而修改 saraDavisLaptop 计算机的 Location 属性。

 Get-ADComputer SaraDavisLaptop | Set-ADcomputer -Location  &quot;W4013&quot;

方法 3：使用 Windows PowerShell 命令行修改计算机对象的本地实例，从而修改 saraDavisLaptop 计算机的 Location 属性。 然后将 Instance 参数设置为本地实例。

 $computer = Get-ADcomputer saraDavisLaptop
 $computer.Location=  &quot;W4013&quot;
 Set-ADComputer -Instance $computer</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>指定计算机的完全限定域名 (FQDN)。此参数设置计算机对象的 DNSHostName 属性。此属性的 LDAP 显示名称是“dNSHostName”。 

以下示例说明如何将此参数设置为 FQDN。
-DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>指定计算机的位置，例如办公室号码。此参数设置计算机的 Location 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“location”。 

以下示例说明如何设置此参数。
-Location  &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>指定操作系统名称。此参数设置计算机对象的 OperatingSystem 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystem”。 

以下示例说明如何设置此参数。
-OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>指定操作系统修补程序的名称。此参数设置计算机对象的 operatingSystemHotfix 属性。此属性的 LDAP 显示名称是“operatingSystemHotfix”。

以下示例说明如何指定此参数。
-operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>指定操作系统 Service Pack 的名称。此参数设置计算机对象的 OperatingSystemServicePack 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemServicePack”。 

以下示例说明如何指定此参数。
-OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>指定操作系统版本。此参数设置计算机对象的 OperatingSystemVersion 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemVersion”。 

以下示例说明如何指定此参数。
-OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一份经过修改的计算机对象副本，用来更新实际的 Active Directory 计算机对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADComputer cmdlet 检索到的计算机对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADComputer cmdlet 检索 ADComputer 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADComputer cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $computerInstance = Get-ADComputer  -Identity saraDavisDesktop
步骤 2：修改对象实例的一个或多个属性。
    $computerInstance.Description = &quot;Sara Davis Computer&quot;
步骤 3：将所做的修改保存到 saraDavisDesktop。
    Set-ADComputer -Instance $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>指定是否可以更改帐户密码。此参数设置帐户的 CannotChangePassword 属性。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，以便可以更改帐户密码。
-CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>指定在下次登录尝试期间是否必须更改密码。此参数的可能值包括：
$false 或 0
$true 或 1

对于 PasswordNeverExpires 属性设置为 true 的帐户，此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，使得在登录时必须更改密码。
-ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>指定计算机的完全限定域名 (FQDN)。此参数设置计算机对象的 DNSHostName 属性。此属性的 LDAP 显示名称是“dNSHostName”。 

以下示例说明如何将此参数设置为 FQDN。
-DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 计算机对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器帐户名 (sAMAccountName) 
示例：SaraDavisDesktop

cmdlet 搜索默认命名上下文或分区来查找对象。如果给定的标识符是一个 DN，则从该 DN 计算要搜索的分区。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为计算机对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“computerInstance”的计算机对象实例。
-Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一份经过修改的计算机对象副本，用来更新实际的 Active Directory 计算机对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADComputer cmdlet 检索到的计算机对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADComputer cmdlet 检索 ADComputer 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADComputer cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$computerInstance = Get-ADComputer  -Identity saraDavisDesktop
步骤 2：修改对象实例的一个或多个属性。
$computerInstance.Description = &quot;Sara Davis Computer&quot;
步骤 3：将所做的修改保存到 saraDavisDesktop。
Set-ADComputer -Instance $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>指定计算机的位置，例如办公室号码。此参数设置计算机的 Location 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“location”。 

以下示例说明如何设置此参数。
-Location  &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>指定操作系统名称。此参数设置计算机对象的 OperatingSystem 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystem”。 

以下示例说明如何设置此参数。
-OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>指定操作系统修补程序的名称。此参数设置计算机对象的 operatingSystemHotfix 属性。此属性的 LDAP 显示名称是“operatingSystemHotfix”。

以下示例说明如何指定此参数。
-operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>指定操作系统 Service Pack 的名称。此参数设置计算机对象的 OperatingSystemServicePack 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemServicePack”。 

以下示例说明如何指定此参数。
-OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>指定操作系统版本。此参数设置计算机对象的 OperatingSystemVersion 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“operatingSystemVersion”。 

以下示例说明如何指定此参数。
-OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>每个用户帐户都有用户主体名称 (UPN)，格式为：&lt;user&gt;@&lt;DNS-domain-name&gt;。UPN 是管理员分配的友好名称，该名称比系统使用的 LDAP 可分辨名称短，更容易记住。UPN 独立于用户对象的 DN，因此可以移动或重命名用户对象而不会影响用户登录名。使用 UPN 登录时，用户不必再从登录对话框的列表中选择域。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个计算机对象。

Instance 参数接收一个使用 Get-ADComputer cmdlet 检索到并经过修改的计算机对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的计算机对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于连接到全局编录端口的情况。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ServicePrincipalName @{Replace=&quot;MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM:1456&quot;,&quot;MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:analyze&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>修改给定的计算机的 SPN 值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -Location &quot;NA/HQ/Building A&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>修改给定的计算机的位置。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ManagedBy &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>使用用户的 SAM 帐户名设置给定计算机的 managedby 属性值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$comp = Get-ADComputer &quot;FABRIKAM-SRV1&quot;; $comp.Location = &quot;NA/HQ/Building A&quot;; $comp.ManagedBy = &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;; Set-ADComputer -Instance $comp</dev:code>
  			<dev:remarks>
  			        <maml:para>使用实例参数集设置给定计算机的 location 和 managedby 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144992</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADGroup
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 组。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADGroup cmdlet 修改 Active Directory 组的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。  

Identity 参数指定要修改的 Active Directory 组。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识组。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localGroupObject&gt;），或者可以通过管道将组对象传递到 Identity 参数。 例如，可以使用 Get-ADGroup cmdlet 检索某个组对象，然后将该对象通过管道传递到 Set-ADGroup cmdlet。

Instance 参数通过应用对组对象的副本所做的更改，提供了一种更新组对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 组对象的副本，则 Set-ADGroup cmdlet 会对原始组对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADGroup 对象。 使用 Instance 参数时不允许使用 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance

下面的示例说明如何使用以下三种方法来修改组对象的 Description 属性：
 -通过指定 Identity 和 Description 参数
 -通过经由管道传递组对象并指定 Description 参数
 -通过指定 Instance 参数。

方法 1：使用 Identity 和 Description 参数修改 SecurityLevel2Access 组的 Description 属性。 

Set-ADGroup -Identity SecurityLevel2Access -Description &quot;Used to authorize Security Level 2 access.&quot;

方法 2：通过管道传递 SecurityLevel2Access 组并指定 Description 参数，从而修改 SecurityLevel2Access 组的 Description 属性。

Get-ADGroup -Identity &quot;SecurityLevel2Access&quot; | Set-ADGroup -Description &quot;Used to authorize Security Level 2 access.&quot;

方法 3：使用 Windows PowerShell 命令行修改 SecurityLevel2Access 组的本地实例，从而修改 SecurityLevel2Access 组的 &lt;property&gt; 属性。 然后将 Instance 参数设置为本地实例。

 $group = Get-ADGroup -Identity &quot;SecurityLevel2Access&quot;
 $group.Description = &quot;Used to authorize Security Level 2 access.&quot; 
 Set-ADGroup -Instance $group. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>指定组类别。此参数的可能值为：
Distribution 或 0  
Security 或 1 
 
此参数设置组的 GroupCategory 属性。此参数值与其他组值一起设置名为“groupType”的 LDAP 显示名称 (ldapDisplayName) 属性。

以下示例说明如何指定组为安全组。
-GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>指定组的组作用域。此参数的可能值为：
DomainLocal 或 0
Global 或 1
Universal 或 2

此参数将组对象的 GroupScope 属性设置为指定值。此属性的 LDAP 显示名称是“groupType”。

以下示例说明将此参数设置为 DomainLocal 的两种方式。
-GroupScope DomainLocal
-GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一份经过修改的组对象副本，用来更新实际的 Active Directory 组对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADGroup cmdlet 检索到的组对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明了如何使用 Get-ADGroup cmdlet 检索 ADGroup 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADGroup cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $groupInstance = Get-ADGroup  -Identity &quot;SaraDavisReports&quot;
步骤 2：修改对象实例的一个或多个属性。
    $groupInstance.GroupScope= &quot;Global&quot;  

步骤 3：将所做的修改保存到“SaraDavisReports”。
    Set-ADGroup -Instance $groupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>指定组类别。此参数的可能值为：
Distribution 或 0  
Security 或 1 
 
此参数设置组的 GroupCategory 属性。此参数值与其他组值一起设置名为“groupType”的 LDAP 显示名称 (ldapDisplayName) 属性。

以下示例说明如何指定组为安全组。
-GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>安全性</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>指定组的组作用域。此参数的可能值为：
DomainLocal 或 0
Global 或 1
Universal 或 2

此参数将组对象的 GroupScope 属性设置为指定值。此属性的 LDAP 显示名称是“groupType”。

以下示例说明将此参数设置为 DomainLocal 的两种方式。
-GroupScope DomainLocal
-GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下值之一指定 Active Directory 组对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
安全帐户管理器 (SAM) 帐户名 (sAMAccountName) 
示例：saradavisreports

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“ADGroupInstance”的组对象实例。
-Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一份经过修改的组对象副本，用来更新实际的 Active Directory 组对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADGroup cmdlet 检索到的组对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明了如何使用 Get-ADGroup cmdlet 检索 ADGroup 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADGroup cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$groupInstance = Get-ADGroup  -Identity &quot;SaraDavisReports&quot;
步骤 2：修改对象实例的一个或多个属性。
$groupInstance.GroupScope= &quot;Global&quot;  

步骤 3：将所做的修改保存到“SaraDavisReports”。
Set-ADGroup -Instance $groupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组对象。

Instance 参数接收一个使用 Get-ADGroup cmdlet 检索到并经过修改的组对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的组对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; -description &quot;Access Group&quot; -passthru 
</dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID        : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>在 ADAM 实例中，将组 AccessControl 的 description 属性设置为“Access Group”。 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>通过管道修改名称以 access 开头的所有组的说明。 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS adam:\DC=AppNC&gt; get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; $group = get-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; 
PS adam:\DC=AppNC&gt; $group.description = &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; set-adgroup -Instance $group -passthru </dev:code>
  			<dev:remarks>
				<maml:para>DistinguishedName : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID        : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>通过 instance 参数设置 AccessControl 组的 description 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144993</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 细粒度密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADFineGrainedPasswordPolicy cmdlet 修改 Active Directory 细粒度密码策略的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。  

Identity 参数指定要修改的 Active Directory 细粒度密码策略。 可以通过可分辨名称 (DN)、GUID 或名称来标识细粒度密码策略。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localFineGrainedPasswordPolicyObject&gt;），或者通过管道将对象传递给 Identity 参数。 例如，可以使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索某个细粒度密码策略对象，然后将该对象通过管道传递到 Set-ADFineGrainedPasswordPolicy cmdlet。

Instance 参数通过应用对细粒度密码策略对象的副本所做的更改，提供了一种更新组对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 细粒度密码策略对象的副本，则 Set-ADFineGrainedPasswordPolicy cmdlet 会对原始细粒度密码策略对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADFineGrainedPasswordPolicy 对象。 使用 Instance 参数时不允许使用 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance

下面的示例说明如何使用以下三种方法来修改细粒度密码策略的对象的 Precedence 属性：
 - 通过指定 Identity 和 Precedence 参数
 - 通过经由管道传递细粒度密码策略对象并指定 Precedence 参数
 -通过指定 Instance 参数。

方法 1：使用 Identity 和 Precedence 参数修改 Level3Policy 细粒度密码策略的 Precedence 属性。 

 Set-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot; -Precedence 150

方法 2：通过管道传递 Level3Policy 细粒度密码策略并指定 Precedence 参数，从而修改 Level3Policy 细粒度密码策略的 Precedence 属性。

 Get-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot;| Set-ADFineGrainedPasswordPolicy -Precedence 150

方法 3：使用 Windows PowerShell 命令行修改 Level3Policy 细粒度密码策略的本地实例，从而修改 Level3Policy 细粒度密码策略的 Precedence 属性。 然后将 Instance 参数设置为本地实例。

$fineGrainedPasswordPolicy = Get-ADFineGrainedPasswordPolicy Level3Policy
 $fineGrainedPasswordPolicy.Precedence = 150 
 Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicy</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>指定是否为密码策略启用密码复杂性。如果启用，则密码必须包含以下三种字符中的两种： 
大写字符（A、B、C、D、E…）
小写字符（a、b、c、d、e…）
数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
$false 或 0 - 禁用密码复杂性
$true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
-ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。在锁定持续时间段到期之前，无法登录到已锁定的帐户。此参数设置密码策略对象的 lockoutDuration 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutDuration &quot;2&quot;
将时间设置为 4 小时
-LockoutDuration &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutDuration &quot;0:5&quot;
将时间设置为 45 秒
LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。此参数设置密码策略对象的 lockoutObservationWindow 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
[-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
-LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
-LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
-LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定您可以使用同一个密码的最大时间长度。超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
MaxPasswordAge &quot;2&quot;
将时间跨度设置为前 2 天
MaxPasswordAge &quot;-2&quot;
将时间跨度设置为 4 小时
MaxPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
MaxPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
MaxPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
-MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
-MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
-MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
-MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>指定密码必须包含的最少字符数。此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
-MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>指定要保存的先前密码的数目。用户不能重新使用已保存的密码列表中的密码。此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
-PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>指定一个值，用以定义某个细粒度密码策略在所有细粒度密码策略中的优先级。此参数设置细粒度密码策略的 Precedence 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-PasswordSettingsPrecedence”。

在有多个密码策略适用于用户或组的情况下，该值可确定要使用的密码策略。如果存在冲突，则具有较低 Precedence 属性值的密码策略具有较高的优先级。例如，如果 PasswordPolicy1 的 Precedence 属性值为 200，PasswordPolicy2 的 Precedence 属性值为 100，则使用 PasswordPolicy2。 

通常，所分配的密码策略优先级值是 10 或 100 的倍数，以便于在以后添加策略。例如，如果将策略的初始优先级值设置为 100 和 200，则可以添加优先级值为 150 的另一个策略。 

如果所指定的 Precedence 参数已被分配给另一个密码策略对象，cmdlet 将返回一个终止错误。

以下示例说明如何设置此参数。
-Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>指定目录是否必须使用可逆加密来存储密码。此参数设置密码策略的 ReversibleEncryption 属性。此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
-ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定已经过修改的细粒度密码策略对象的副本，用来更新实际的 Active Directory 细粒度密码策略对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索到的细粒度密码策略对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。
 
以下示例说明如何使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索 ADFineGrainedPasswordPolicy 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADFineGrainedPasswordPolicy cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy  -Identity PasswordPolicyLevel2
步骤 2：修改对象实例的一个或多个属性。
    $fineGrainedPasswordPolicyInstance.Precedence = 250
步骤 3：将所做的修改保存到 PasswordPolicyLevel2。
    Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>指定是否为密码策略启用密码复杂性。如果启用，则密码必须包含以下三种字符中的两种： 
大写字符（A、B、C、D、E…）
小写字符（a、b、c、d、e…）
数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
$false 或 0 - 禁用密码复杂性
$true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
-ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 细粒度密码策略对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 (distinguishedName)
示例：CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
名称 (name) 
示例：PasswordPolicyLevel1

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为细粒度密码策略对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“fineGrainedPasswordPolicyInstance”的细粒度密码策略对象实例。
-Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定已经过修改的细粒度密码策略对象的副本，用来更新实际的 Active Directory 细粒度密码策略对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索到的细粒度密码策略对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。
 
以下示例说明如何使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索 ADFineGrainedPasswordPolicy 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADFineGrainedPasswordPolicy cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy  -Identity PasswordPolicyLevel2
步骤 2：修改对象实例的一个或多个属性。
$fineGrainedPasswordPolicyInstance.Precedence = 250
步骤 3：将所做的修改保存到 PasswordPolicyLevel2。
Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。在锁定持续时间段到期之前，无法登录到已锁定的帐户。此参数设置密码策略对象的 lockoutDuration 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutDuration &quot;2&quot;
将时间设置为 4 小时
-LockoutDuration &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutDuration &quot;0:5&quot;
将时间设置为 45 秒
LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。此参数设置密码策略对象的 lockoutObservationWindow 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
[-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
-LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
-LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
-LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定您可以使用同一个密码的最大时间长度。超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
MaxPasswordAge &quot;2&quot;
将时间跨度设置为前 2 天
MaxPasswordAge &quot;-2&quot;
将时间跨度设置为 4 小时
MaxPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
MaxPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
-MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
-MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
-MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
-MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>指定密码必须包含的最少字符数。此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
-MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>指定要保存的先前密码的数目。用户不能重新使用已保存的密码列表中的密码。此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
-PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>指定一个值，用以定义某个细粒度密码策略在所有细粒度密码策略中的优先级。此参数设置细粒度密码策略的 Precedence 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-PasswordSettingsPrecedence”。

在有多个密码策略适用于用户或组的情况下，该值可确定要使用的密码策略。如果存在冲突，则具有较低 Precedence 属性值的密码策略具有较高的优先级。例如，如果 PasswordPolicy1 的 Precedence 属性值为 200，PasswordPolicy2 的 Precedence 属性值为 100，则使用 PasswordPolicy2。 

通常，所分配的密码策略优先级值是 10 或 100 的倍数，以便于在以后添加策略。例如，如果将策略的初始优先级值设置为 100 和 200，则可以添加优先级值为 150 的另一个策略。 

如果所指定的 Precedence 参数已被分配给另一个密码策略对象，cmdlet 将返回一个终止错误。

以下示例说明如何设置此参数。
-Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>指定目录是否必须使用可逆加密来存储密码。此参数设置密码策略的 ReversibleEncryption 属性。此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
-ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个细粒度密码策略对象。

Instance 参数接收一个使用 Get-ADFineGrainedPasswordPolicy cmdlet 检索到并经过修改的细粒度密码策略对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的细粒度密码策略对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy MyPolicy -Precedence 100 -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>更新名为 MyPolicy 的 FineGrainedPasswordPolicy 对象的 Precedence、LockoutDuration、LockoutObservationWindow、ComplexityEnabled、ReversibleEncryptionEnabled 和 MinPasswordLength 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -MinPasswordLength 12
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 DistinguishedName 为“CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM”的 FineGrainedPasswordPolicy 对象的 MinPasswordLength 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$fgpp = Get-ADFineGrainedPasswordPolicy MyPolicy
$fgpp.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$fgpp.LockoutThreshold = 10
$fgpp.MinPasswordLength = 8
$fgpp.PasswordHistoryCount = 24
Set-ADFineGrainedPasswordPolicy -Instance $fgpp
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取名为 MyPolicy 的 FineGrainedPasswordPolicy 对象，更新该对象的一组属性，然后使用实例参数将所做修改写回目录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144994</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomain
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 域。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDomain cmdlet 修改 Active Directory 域的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。

Identity 参数指定要修改的域。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、DNS 域名或 NetBIOS 名称来标识域。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localDomainObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADDomain cmdlet 检索某个域对象，然后将该对象通过管道传递到 Set-ADDomain cmdlet。

Instance 参数通过应用对域对象的副本所做的更改，提供了一种更新域对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 域对象的副本，则 Set-ADDomain cmdlet 会对原始域对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADDomain 对象。 如果指定 Instance 参数，则不应传递 Identity 参数。  有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 

下面的示例说明如何使用以下三种方法来修改域对象的 ManagedBy 属性：
 - 通过指定 Identity 和 ManagedBy 参数
 - 通过经由管道传递域对象并指定 ManagedBy 参数
 -通过指定 Instance 参数。

方法 1：使用 Identity 和 ManagedBy 参数修改 London 域的 ManagedBy 属性。 

 Set-ADDomain -Identity London -ManagedBy SaraDavis

方法 2：通过管道传递 London 域并指定 ManagedBy 参数，从而修改 London 域的 ManagedBy 属性。

 Get-ADDomain London | Set-ADDomain -ManagedBy SaraDavis

方法 3：使用 Windows PowerShell 命令行修改 London 域的本地实例，从而修改 London 域的 ManagedBy 属性。 然后将 Instance 参数设置为本地实例。

 $domain = Get-ADDomain London
 $domain.ManagedBy = SaraDavis 
 Set-ADDomain -Instance $domain. 
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>修改允许在域中使用的域名服务器 (DNS) 后缀的列表。 此参数设置 domainDNS 对象的 msDS-AllowedDNSSuffixes 属性的值。 此参数使用下面的语法来添加、删除、替换或清除 DNS 后缀值。 

添加值：
  -AllowedDNSSuffixes @{Add=value1,value2,...}

删除值：
  -AllowedDNSSuffixes @{Remove=value3,value4,...}

替换值：
  -AllowedDNSSuffixes @{Replace=value1,value2,...}

清除所有值：
  -AllowedDNSSuffixes $null

可以使用分号分隔的列表来指定多项更改。 例如，使用下面的语法添加和删除 DNS 后缀值： 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为域添加和删除 DNS 后缀。
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>指定时间（以天为单位），在该时间内，必须在域中所有的域控制器内复制上次登录帐户的时间。 此参数设置域的 LastLogonReplicationInterval 属性。 此属性的 LDAP 显示名称 (ldapDisplayName) 是 msDS-LogonTimeSyncInterval。 上次登录重复间隔必须至少为一天。 将上次登录复制间隔设置为较低的值可以显著增加域范围内的复制次数。

以下示例说明如何将此参数设置为 10 天。
  -LastLogonReplicationInterval &quot;10&quot;

注意：如果域模式设置为值“Windows2000”，则不应用此值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一份经过修改的域对象副本，用来更新实际的 Active Directory 域对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADDomain cmdlet 检索到的域对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADDomain cmdlet 检索 ADDomain 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADDomain cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
步骤 2：修改对象实例的一个或多个属性。
    $domainInstance.ManagedBy = &quot;saraDavisGroup&quot;
步骤 3：将所做更改保存到 contosoDomain。
    Set-ADDomain -Instance $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>修改允许在域中使用的域名服务器 (DNS) 后缀的列表。此参数设置 domainDNS 对象的 msDS-AllowedDNSSuffixes 属性的值。此参数使用下面的语法来添加、删除、替换或清除 DNS 后缀值。 

添加值：
-AllowedDNSSuffixes @{Add=value1,value2,...}

删除值：
-AllowedDNSSuffixes @{Remove=value3,value4,...}

替换值：
-AllowedDNSSuffixes @{Replace=value1,value2,...}

清除所有值：
-AllowedDNSSuffixes $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除 DNS 后缀值： 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为域添加和删除 DNS 后缀。
-AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>指定时间（以天为单位），在该时间内，必须在域中所有的域控制器内复制上次登录帐户的时间。此参数设置域的 LastLogonReplicationInterval 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 msDS-LogonTimeSyncInterval。上次登录重复间隔必须至少为一天。将上次登录复制间隔设置为较低的值可以显著增加域范围内的复制次数。

以下示例说明如何将此参数设置为 10 天。
-LastLogonReplicationInterval &quot;10&quot;

注意：如果域模式设置为值“Windows2000”，则不应用此值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedDNSSuffixes</maml:name>
			<maml:description>
				<maml:para>修改允许在域中使用的域名服务器 (DNS) 后缀的列表。此参数设置 domainDNS 对象的 msDS-AllowedDNSSuffixes 属性的值。此参数使用下面的语法来添加、删除、替换或清除 DNS 后缀值。 

添加值：
-AllowedDNSSuffixes @{Add=value1,value2,...}

删除值：
-AllowedDNSSuffixes @{Remove=value3,value4,...}

替换值：
-AllowedDNSSuffixes @{Replace=value1,value2,...}

清除所有值：
-AllowedDNSSuffixes $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除 DNS 后缀值： 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为域添加和删除 DNS 后缀。
-AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一份经过修改的域对象副本，用来更新实际的 Active Directory 域对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADDomain cmdlet 检索到的域对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADDomain cmdlet 检索 ADDomain 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADDomain cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
步骤 2：修改对象实例的一个或多个属性。
$domainInstance.ManagedBy = &quot;saraDavisGroup&quot;
步骤 3：将所做更改保存到 contosoDomain。
Set-ADDomain -Instance $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastLogonReplicationInterval</maml:name>
			<maml:description>
				<maml:para>指定时间（以天为单位），在该时间内，必须在域中所有的域控制器内复制上次登录帐户的时间。此参数设置域的 LastLogonReplicationInterval 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 msDS-LogonTimeSyncInterval。上次登录重复间隔必须至少为一天。将上次登录复制间隔设置为较低的值可以显著增加域范围内的复制次数。

以下示例说明如何将此参数设置为 10 天。
-LastLogonReplicationInterval &quot;10&quot;

注意：如果域模式设置为值“Windows2000”，则不应用此值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域对象。

Instance 参数接收一个使用 Get-ADDomain cmdlet 检索到并经过修改的域对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的域对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Replace=&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>将域“FABRIKAM”中的 AllowedDNSSuffixes 设置为 {&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
 				<maml:para>将值“corp.fabrikam.com”添加到域“FABRIKAM”中的 AllowedDNSSuffixes。</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -ManagedBy 'CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>将域“FABRIKAM”中的 ManagedBy 属性设置为“CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain | Set-ADDomain -LastLogonReplicationInterval &quot;10&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将当前登录用户域的 LastLogonReplicationInterval 设置为“10”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144995</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForest
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 林。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADForest cmdlet 修改 Active Directory 林的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。

Identity 参数指定要修改的 Active Directory 林。 可以通过完全限定的域名 (FQDN)、GUID、DNS 主机名或 NetBIOS 名称来标识林。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADForestObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADForest cmdlet 检索某个林对象，然后将该对象通过管道传递到 Set-ADForest cmdlet。

Instance 参数通过应用对林对象的副本所做的更改，提供了一种更新林对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 林对象的副本，则 Set-ADForest cmdlet 会对原始林对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADForest 对象。 使用 Instance 参数时不允许使用 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 

下面的示例说明如何使用以下三种方法来修改林对象的 UPNSuffixes 属性：
 - 通过指定 Identity 和 UPNSuffixes 参数
 - 通过经由管道传递林对象并指定 UPNSuffixes 参数
 - 通过指定 Instance 参数。

方法 1：使用 Identity 和 UPNSuffixes 参数修改 fabrikam.com 林的 UPNSuffixes 属性。 

 Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

方法 2：通过管道传递 fabrikam.com 林并指定 UPNSuffixes 参数，从而修改 fabrikam.com 林的 UPNSuffixes 属性。

 Get-ADForest -Identity fabrikam.com | Set-ADForest -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

方法 3：使用 Windows PowerShell 命令行修改 fabrikam.com 林的本地实例，从而修改 fabrikam.com 林的 UPNSuffixes 属性。 然后将 Instance 参数设置为本地实例。

 $forest = Get-ADForest -Identity fabrikam.com
 $forest.UPNSuffixes = &quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;
 Set-ADForest -Instance $forest. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
-Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SPNSuffixes</maml:name>
				<maml:description>
					<maml:para>修改林的服务主体名称 (SPN) 后缀列表。 此参数设置交叉引用容器的多值 msDS-SPNSuffixes 属性。 此参数使用下面的语法来添加、删除、替换或清除 SPN 后缀值。

语法：
添加值：
  -SPNSuffixes @{Add=value1,value2,...}
删除值：
  -SPNSuffixes @{Remove=value3,value4,...}
替换值：
  -SPNSuffixes @{Replace=value1,value2,...}
清除所有值：
  -SPNSuffixes $null

可以使用分号分隔的列表来指定多项更改。 例如，使用下面的语法添加和删除 SPN 后缀值 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为林添加和删除 SPN 后缀。
  -@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UPNSuffixes</maml:name>
				<maml:description>
					<maml:para>修改林的用户主体名称 (UPN) 后缀列表。 此参数设置交叉引用容器的多值 msDS-UPNSuffixes 属性。 此参数使用下面的语法来添加、删除、替换或清除 UPN 后缀值。 

语法：
添加值：
  -UPNSuffixes  @{Add=value1,value2,...}
删除值：
  -UPNSuffixes @{Remove=value3,value4,...}
替换值：
  -UPNSuffixes @{Replace=value1,value2,...}
清除所有值：
  -UPNSuffixes $null

可以使用分号分隔的列表来指定多项更改。 例如，使用下面的语法添加和删除 UPN 后缀值 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为林添加和删除 UPN 后缀。
  -UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
-Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SPNSuffixes</maml:name>
			<maml:description>
				<maml:para>修改林的服务主体名称 (SPN) 后缀列表。此参数设置交叉引用容器的多值 msDS-SPNSuffixes 属性。此参数使用下面的语法来添加、删除、替换或清除 SPN 后缀值。

语法：
添加值：
-SPNSuffixes @{Add=value1,value2,...}
删除值：
-SPNSuffixes @{Remove=value3,value4,...}
替换值：
-SPNSuffixes @{Replace=value1,value2,...}
清除所有值：
-SPNSuffixes $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除 SPN 后缀值 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为林添加和删除 SPN 后缀。
-@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UPNSuffixes</maml:name>
			<maml:description>
				<maml:para>修改林的用户主体名称 (UPN) 后缀列表。此参数设置交叉引用容器的多值 msDS-UPNSuffixes 属性。此参数使用下面的语法来添加、删除、替换或清除 UPN 后缀值。 

语法：
添加值：
-UPNSuffixes  @{Add=value1,value2,...}
删除值：
-UPNSuffixes @{Remove=value3,value4,...}
替换值：
-UPNSuffixes @{Replace=value1,value2,...}
清除所有值：
-UPNSuffixes $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除 UPN 后缀值 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何为林添加和删除 UPN 后缀。
-UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个林对象。

Instance 参数接收一个使用 Get-ADForest cmdlet 检索到并经过修改的林对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的林对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 fabrikam.com 林的 UPNSuffixes 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -SPNSuffixes @{add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 corp.fabrikam.com 添加到 fabrikam.com 林的 SPNSuffixes 属性</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -SPNSuffixes @{Add=&quot;corp.fabrikam.com&quot;;Remove=&quot;fabrikam&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前登录用户的林并更新 SPNSuffixes 属性。
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -UPNSuffixes $null </dev:code>
  			<dev:remarks>
  			        <maml:para>获取当前登录用户的林并清除 UPNSuffixes 属性。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144996</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 组织单位。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADOrganizationalUnit cmdlet 修改 Active Directory 组织单位的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。  

Identity 参数指定要修改的 Active Directory 组织单位。 可以通过可分辨名称 (DN) 或 GUID 来标识组织单位。
 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADOrganizationalUnitObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADOrganizationalUnit cmdlet 检索某个组织单位对象，然后将该对象通过管道传递到 Set-ADOrganizationalUnit cmdlet。

Instance 参数通过应用对组织单位对象的副本所做的更改，提供了一种更新组织单位对象的方法。 如果将 Instance 参数设置为某个经过修改的 Active Directory 组织单位对象的副本，则 Set-ADOrganizationalUnit cmdlet 会对原始组织单位对象进行相同的更改。 要获取需要修改的对象的副本，请使用 Get-ADOrganizationalUnit 对象。 如果指定 Instance 参数，则不应传递 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 

有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance。

下面的示例说明如何使用以下三种方法来修改组织单位对象的 ManagedBy 属性：
 - 通过指定 Identity 和 ManagedBy 参数
 - 通过经由管道传递组织单位对象并指定 ManagedBy 参数
 - 通过指定 Instance 参数。

方法 1：使用 Identity 和 ManagedBy 参数修改“AccountingDepartment”组织单位的 ManagedBy 属性。 

 Set-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot; -ManagedBy &quot;SaraDavisGroup&quot;

方法 2：通过管道传递“AccountingDepartment”组织单位，并指定 ManagedBy 参数，从而修改“AccountingDepartment”组织单位的 ManagedBy 属性。

 Get-ADOrganizationalUnit -Identity &quot;&quot;AccountingDepartment&quot;&quot; | Set-ADOrganizationalUnit -ManagedBy &quot;SaraDavisGroup&quot;

方法 3：通过使用 Windows PowerShell 命令行修改“AccountingDepartment”组织单位的本地实例来修改“AccountingDepartment”组织单位的 ManagedBy 属性。 然后将 Instance 参数设置为本地实例。

 $organizational unit = Get-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot;
 $organizational unit.ManagedBy = &quot;SaraDavisGroup&quot; 
 Set-ADOrganizationalUnit -Instance $organizational unit. 

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>指定组织单位的街道地址。此参数设置组织单位对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“street”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一份经过修改的组织单位对象副本，用来更新实际的 Active Directory 组织单位对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADOrganizationalUnit cmdlet 检索到的组织单位对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADOrganizationalUnit cmdlet 检索 ADOrganizationalUnit 对象实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADOrganizationalUnit cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
步骤 2：修改对象实例的一个或多个属性。
    $organizationalUnitInstance.ManagedBy = &quot;CN=SaraDavisGroup,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
步骤 3：将所做的修改保存到 Accounting。
    Set-ADOrganizationalUnit -Instance $organizationalUnitInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>指定用户所在的城镇。此参数设置用户的 City 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“l”。

以下示例说明如何设置此参数。
-City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>指定用户所选语言的国家或地区代码。此参数设置用户对象的 Country 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“c”。Windows 2000 不使用该值。

以下示例说明如何设置此参数。
-Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADGroup
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
Microsoft.ActiveDirectory.Management.ADDomain

此示例说明如何将此参数设置为名为“ADObjectInstance”的 ADObject 对象实例。
-Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一份经过修改的组织单位对象副本，用来更新实际的 Active Directory 组织单位对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。

Instance 参数只能更新使用 Get-ADOrganizationalUnit cmdlet 检索到的组织单位对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADOrganizationalUnit cmdlet 检索 ADOrganizationalUnit 对象实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADOrganizationalUnit cmdlet 会将所做的修改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
步骤 2：修改对象实例的一个或多个属性。
$organizationalUnitInstance.ManagedBy = &quot;CN=SaraDavisGroup,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
步骤 3：将所做的修改保存到 Accounting。
Set-ADOrganizationalUnit -Instance $organizationalUnitInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定管理对象的用户或组。注意：括号中的标识符是属性的 LDAP 显示名称。
可分辨名称 
示例：CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

此参数使用 LDAP 显示名称“managedBy”设置 Active Directory 属性。 

以下示例说明如何指定此参数。
-ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>指定用户的邮政编码。此参数设置用户的 PostalCode 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“postalCode”。

以下示例说明如何设置此参数。
-PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>指定是否阻止删除对象。当此属性设置为 true 时，不能在未更改属性值的情况下删除对应的对象。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何将此参数设置为 true。
-ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>指定用户或组织单位所在的省/市/自治区。此参数设置用户或组织单位对象的 State 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“st”。

以下示例说明如何设置此参数。
-State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>指定组织单位的街道地址。此参数设置组织单位对象的 StreetAddress 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“street”。

以下示例说明如何设置此参数。
-StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个组织单位对象。

Instance 参数接收一个使用 Get-ADOrganizationalUnit cmdlet 检索到并经过修改的组织单位对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的组织单位对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Description &quot;This Organizational Unit holds all of the users accounts of FABRIKAM.COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 distinguishedName 为 OU=UserAccounts,DC=FABRIKAM,DC=COM 的 OrganizationalUnit 的说明。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 distinguishedName 为 OU=UserAccounts,DC=FABRIKAM,DC=COM 的 OrganizationalUnit 的 ProtectedFromAccidentalDeletion 属性设置为 $false。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Country &quot;AU&quot; -StreetAddress &quot;45 Martens Place&quot; -City Balmoral -State QLD -PostalCode 4171 -Replace @{co=&quot;Australia&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 OrganizationalUnit“OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM”的 Country、State、City、PostalCode 和 co 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$EuropeSalesOU = Get-ADOrganizationalUnit &quot;OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
$EuropeSalesOU.Country = &quot;UK&quot;
$EuropeSalesOU.StreetAddress = &quot;22 Station Rd&quot;
$EuropeSalesOU.City = &quot;QUARRINGTON&quot;
$EuropeSalesOU.PostalCode = &quot;NG34 0NI&quot;
$EuropeSalesOU.co =&quot;United Kingdom&quot;
Set-ADOrganizationalUnit -Instance $EuropeSalesOU</dev:code>
  			<dev:remarks>
  			        <maml:para>将 OrganizationalUnit“OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM”用作模板创建新的 OrganizationalUnit。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot; -Country &quot;UK&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>在 AD LDS 实例中设置 OrganizationalUnit“OU=Managed,DC=AppNC”的 Country 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144997</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountControl
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 帐户的用户帐户控制 (UAC) 值。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountControl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountControl cmdlet 修改 Active Directory 用户帐户或计算机帐户的用户帐户控制 (UAC) 值。 UAC 值由 cmdlet 参数来表示。 例如，设置 PasswordExpired 参数以更改帐户过期状态，并修改 ADS_UF_PASSWORD_EXPIRED UAC 值。 

Identity 参数指定要修改的 Active Directory 帐户。 
可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将帐户对象传递到 Identity 参数。 例如：可以使用 Search-ADAccount cmdlet 检索某个帐户对象，然后将该对象通过管道传递到 Set-ADAccountControl cmdlet。 同样，可以使用 Get-ADUser、Get-ADComputer 或 Get-ADServiceAccount cmdlet 检索可通过管道传递到此 cmdlet 的帐户对象。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountControl</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>修改帐户更改其密码的功能。 若要禁止帐户更改密码，请将此参数设置为 $true。 此参数更改帐户的 CannotChangePassword 属性的布尔值。

以下示例说明如何指定 PasswordCannotChange 参数。
-CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DoesNotRequirePreAuth</maml:name>
				<maml:description>
					<maml:para>指定在使用用户帐户或计算机帐户登录时是否需要经过 Kerberos 预身份验证。 此参数设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_DONT_REQUIRE_PREAUTH 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，以便需要经过 Kerberos 预身份验证才能登录帐户。
  -DoesNotRequirePreAuth $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomedirRequired</maml:name>
				<maml:description>
					<maml:para>指定主目录对帐户是否是必需的。 此参数设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_HOMEDIR_REQUIRED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使帐户不需要主目录。
  -HomedirRequired $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MNSLogonAccount</maml:name>
				<maml:description>
					<maml:para>指定帐户是否为多数节点集 (MNS) 登录帐户。 此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_MNS_LOGON_ACCOUNT 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

可以使用 MNS 登录帐户配置多节点群集而无需使用共享磁盘驱动器。

以下示例说明如何设置此参数，以便将帐户标识为 MNS 帐户。
  -MSNLogonAccount $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedToAuthForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户是否可以进行委派。 如果此参数设置为 true，则这类帐户下运行的服务可以模拟网络中其他远程服务器上的客户端。 此参数设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使帐户可以进行委派。
  -TrustedToAuthForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDESKeyOnly</maml:name>
				<maml:description>
					<maml:para>指定帐户是否被限定为仅使用 Data Encryption Standard (DES) 密钥加密类型。 此参数设置 
Active Directory 用户帐户控制属性的 ADS_UF_USE_DES_KEY_ONLY 标志。此参数的可能值为：
$false 或 0
$true 或 1 
 
以下示例说明如何设置此参数，使帐户必须使用 DES 密钥加密类型。
  -UseDESKeyOnly $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>指定帐户是否允许可逆的密码加密。此参数设置帐户的 AllowReversiblePasswordEncryption 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何将此参数设置为 true。
-AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>修改帐户更改其密码的功能。若要禁止帐户更改密码，请将此参数设置为 $true。此参数更改帐户的 CannotChangePassword 属性的布尔值。

以下示例说明如何指定 PasswordCannotChange 参数。
-CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DoesNotRequirePreAuth</maml:name>
			<maml:description>
				<maml:para>指定在使用用户帐户或计算机帐户登录时是否需要经过 Kerberos 预身份验证。此参数设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_DONT_REQUIRE_PREAUTH 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，以便需要经过 Kerberos 预身份验证才能登录帐户。
-DoesNotRequirePreAuth $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomedirRequired</maml:name>
			<maml:description>
				<maml:para>指定主目录对帐户是否是必需的。此参数设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_HOMEDIR_REQUIRED 标志。此参数的可能值包括：
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使帐户不需要主目录。
-HomedirRequired $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MNSLogonAccount</maml:name>
			<maml:description>
				<maml:para>指定帐户是否为多数节点集 (MNS) 登录帐户。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_MNS_LOGON_ACCOUNT 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

可以使用 MNS 登录帐户配置多节点群集而无需使用共享磁盘驱动器。

以下示例说明如何设置此参数，以便将帐户标识为 MNS 帐户。
-MSNLogonAccount $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>指定帐户密码是否可以过期。此参数设置帐户对象的 PasswordNeverExpires 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_DONT_EXPIRE_PASSWD 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

注意：如果帐户的 ChangePasswordAtLogon 属性设置为 true，则此参数不能设置为 $true 或 1。

以下示例说明如何设置此参数，以便密码可以过期。
-PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>指定帐户是否需要密码。此参数设置帐户（如用户帐户或计算机帐户）的 PasswordNotRequired 属性。此参数还设置 Active Directory 用户帐户控制属性的 ADS_UF_PASSWD_NOTREQD 标志。此参数的可能值为：
$false 或 0 
$true 或 1 

以下示例说明如何设置此参数，使帐户不需要密码。
-PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedToAuthForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户是否可以进行委派。如果此参数设置为 true，则这类帐户下运行的服务可以模拟网络中其他远程服务器上的客户端。此参数设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数，使帐户可以进行委派。
-TrustedToAuthForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDESKeyOnly</maml:name>
			<maml:description>
				<maml:para>指定帐户是否被限定为仅使用 Data Encryption Standard (DES) 密钥加密类型。此参数设置 
Active Directory 用户帐户控制属性的 ADS_UF_USE_DES_KEY_ONLY 标志。此参数的可能值为：
$false 或 0
$true 或 1 
 
以下示例说明如何设置此参数，使帐户必须使用 DES 密钥加密类型。
-UseDESKeyOnly $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。
 
还接受如下所示的派生类型：
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于连接到全局编录端口的情况。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl JimmyBi -PasswordNotRequired $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 userAccountControl 的标志，以确保需要密码才能登录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Jimmy Bischoff,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -CannotChangePassword $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置用户的安全描述符，以确保用户无法更改其密码。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl SQLAdmin1 -AccountNotDelegated $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 userAccountControl 中的标志，以确保帐户不可委派。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=IIS01 SvcAccount,OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM' -TrustedToAuthForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置 userAccountControl 中的标志，以确保帐户现在对于委派身份验证是可信的。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl -Identity &quot;FABRIKAM-SRV1&quot; -TrustedForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>现在，指定的计算机设置为对于委派是可信的。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl DickBe -PasswordNeverExpires $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>将用户密码设置为永久有效。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Dick Beekman,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -HomedirRequired $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>将用户帐户设置为需要主目录。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144998</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountPassword
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 帐户的密码。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountPassword cmdlet 设置用户帐户、计算机帐户或服务帐户的密码。

Identity 参数指定要修改的 Active Directory 帐户。 
可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如：可以使用 Search-ADAccount cmdlet 检索某个帐户对象，然后将该对象通过管道传递到 Set-ADAccountPassword cmdlet。 同样，可以使用 Get-ADUser、Get-ADComputer 或 Get-ADServiceAccount cmdlet 检索可通过管道传递到此 cmdlet 的帐户对象。

除非指定了 Reset 参数，否则必须设置 OldPassword 和 NewPassword 参数以设置密码。 如果指定了 Reset 参数，密码会被设置为您提供的 NewPassword 值，并且不需要设置 OldPassword 参数。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewPassword</maml:name>
				<maml:description>
					<maml:para>指定新密码值。该值存储为加密的字符串。

以下示例说明如何设置此参数。 此命令将提示并等待您输入密码。
  -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OldPassword</maml:name>
				<maml:description>
					<maml:para>指定最近的密码值。 该值处理为加密的字符串。

以下示例说明如何设置此参数。此命令将提示并等待您输入密码。
 -OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Reset</maml:name>
				<maml:description>
					<maml:para>指定重置帐户的密码。 使用此参数时，必须设置 NewPassword 参数。 无需指定 OldPassword 参数。

以下示例说明如何使用此参数设置新密码。 此命令将提示并等待您输入密码。
  -Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 用户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“userInstance”的用户对象实例。
-Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewPassword</maml:name>
			<maml:description>
				<maml:para>指定新密码值。该值存储为加密的字符串。

以下示例说明如何设置此参数。此命令将提示并等待您输入密码。
-NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OldPassword</maml:name>
			<maml:description>
				<maml:para>指定最近的密码值。该值处理为加密的字符串。

以下示例说明如何设置此参数。此命令将提示并等待您输入密码。
-OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Reset</maml:name>
			<maml:description>
				<maml:para>指定重置帐户的密码。使用此参数时，必须设置 NewPassword 参数。无需指定 OldPassword 参数。

以下示例说明如何使用此参数设置新密码。此命令将提示并等待您输入密码。
-Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。 此 cmdlet 不适用于连接到全局编录端口的情况。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword 'CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com' -Reset -NewPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>将 DistinguishedName 为“CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com”的用户帐户的密码设置为“p@ssw0rd”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity tmakovec -OldPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force) -NewPassword (ConvertTo-SecureString -AsPlainText &quot;qwert@12345&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>将 SamAccountName 为“tmakovec”的用户帐户的密码设置为“qwert@12345”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity saradavi</dev:code>
  			<dev:remarks>
 				<maml:para>Please enter the current password for 'CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com'
Password:**********
Please enter the desired password for 'CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com'
Password:***********
Repeat Password:***********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>设置 DistinguishedName 为“CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com”的用户帐户的密码（会提示用户输入旧密码和新密码）。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$newPassword = (Read-Host -Prompt &quot;Provide New Password&quot; -AsSecureString); Set-ADAccountPassword -Identity mollyd -NewPassword $newPassword -Reset</dev:code>
  			<dev:remarks>
 				<maml:para>Provide New Password: **********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>提示用户输入新密码，新密码存储在名为 $newPassword 的临时变量中，然后用于重置 SamAccountName 为 mollyd 的用户帐户的密码。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS C:\Users\administrator.FABRIKAM&gt; set-adaccountpassword &quot;CN=Molly Dempsey,OU=AccountDeptOU,DC=AppNC&quot; -server &quot;dsp13a24:60000&quot;
</dev:code>
  			<dev:remarks>
 				<maml:para>Please enter the current password for 'CN=mollyd,OU=AccountDeptOU,DC=AppNC'
Password:**********
Please enter the desired password for 'CN=mollyd,OU=AccountDeptOU,DC=AppNC'
Password:**********
Repeat Password:**********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>在 AD LDS 实例“dsp13a24:60000”中，设置 DistinguishedName 为“CN=mollyd,OU=AccountDeptOU,DC=AppNC”的用户帐户的密码（会提示用户输入旧密码和新密码）。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144999</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>设置 Active Directory 帐户的过期日期。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountExpiration cmdlet 设置用户帐户、计算机帐户或服务帐户的过期日期。 要指定确切时间，请使用 DateTime 参数。 要从当前时间指定一个时间段，请使用 TimeSpan 参数。 

Identity 参数指定要修改的 Active Directory 帐户。 
可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将帐户对象传递到 Identity 参数。 例如：可以使用 Search-ADAccount cmdlet 检索某个帐户对象，然后通过管道将该对象传递到 Set-ADAccountExpiration cmdlet。 同样，可以使用 Get-ADUser、Get-ADComputer 或 Get-ADServiceAccount cmdlet 检索可通过管道传递到此 cmdlet 的帐户对象。

对于 AD LDS 环境，除下列两种情况外，必须指定 Partition 参数：
  -cmdlet 从 Active Directory 提供程序驱动器中运行。
  -为 AD LDS 环境定义了默认的命名上下文或分区。 要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>指定从当前时间开始的一个时间间隔。 帐户会在该时间间隔结束时过期。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须介于 
-10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-TimeSpan &quot;2&quot;
将时间设置为 4 小时
-TimeSpan &quot;4:00&quot;
将时间设置为 5 分钟
      -TimeSpan &quot;0:5&quot;
将时间设置为 45 秒
      -TimeSpan &quot;0:0:45&quot;

例如，要将帐户设置为在 10 天后过期，请按如下方式指定 TimeSpan 参数。

   -TimeSpan &quot;10&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>使用 DateTime 值指定帐户的过期时间。 以下示例说明用于指定 DateTime 值的常用语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。
&quot;2000-04-17T14:22:48.0000000&quot; 

以下示例说明如何将 DateTime 参数设置为 2012 年 6 月 18 日上午 2:00:00。
  -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>使用 DateTime 值指定帐户的过期时间。以下示例说明用于指定 DateTime 值的常用语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。
&quot;2000-04-17T14:22:48.0000000&quot; 

以下示例说明如何将 DateTime 参数设置为 2012 年 6 月 18 日上午 2:00:00。
-DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>指定从当前时间开始的一个时间间隔。帐户会在该时间间隔结束时过期。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须介于 
-10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-TimeSpan &quot;2&quot;
将时间设置为 4 小时
-TimeSpan &quot;4:00&quot;
将时间设置为 5 分钟
-TimeSpan &quot;0:5&quot;
将时间设置为 45 秒
-TimeSpan &quot;0:0:45&quot;

例如，要将帐户设置为在 10 天后过期，请按如下方式指定 TimeSpan 参数。

-TimeSpan &quot;10&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountExpiration KarenBe -DateTime &quot;10/18/2008&quot;
</dev:code>
  			<dev:remarks>
			        <maml:para>将 SamAccountName 为“KarenBe”的帐户设置为 2008 年 10 月 18 日到期。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroupMember BO1Accounts | where {$_.objectClass -eq &quot;user&quot;} | Set-ADAccountExpiration -timespan 60.0:0
</dev:code>
  			<dev:remarks>
			        <maml:para>将组 BO1Accounts 所含所有用户帐户的有效期设置为 60 天（从现在起）。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145000</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADServiceAccount cmdlet 修改 Active Directory 服务帐户的属性。 可以使用 cmdlet 参数来修改经常使用的属性值。 不与 cmdlet 参数关联的属性值可以使用 Add、Replace、Clear 和 Remove 参数修改。  

Identity 参数指定要修改的 Active Directory 服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将 Identity 参数设置为对象变量（例如 $&lt;localServiceAccountObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Get-ADServiceAccount cmdlet 检索某个服务帐户对象，然后通过管道将该对象传递到 Set-ADServiceAccount cmdlet。

Instance 参数提供一种更新服务帐户对象的方法：通过应用对该对象的副本所做的更改。 如果将 Instance 参数设置为某个修改过的 Active Directory 服务帐户对象的副本，则 Set-ADServiceAccount cmdlet 会对原始服务帐户对象进行相同的更改。 要获取要修改的对象的副本，请使用 Get-ADServiceAccount 对象。 如果指定 Instance 参数，则不应传递 Identity 参数。 有关 Instance 参数的详细信息，请参阅 Instance 参数说明。 

有关如何在 Active Directory cmdlet 中使用 Instance 概念的详细信息，请参阅 about_ActiveDirectory_Instance。

以下示例说明如何通过下列三种方法来修改服务帐户对象的 ServicePrincipalNames 属性：
 -通过指定 Identity 和 ServicePrincipalNames 参数
 -通过管道传递服务帐户对象并指定 ServicePrincipalNames 参数
 -通过指定 Instance 参数。

方法 1：通过使用 Identity 和 ServicePrincipalNames 参数修改 AccessIndia 服务帐户的 ServicePrincipalNames 属性。 

Set-ADServiceAccount -Identity AccessIndia -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com}

方法 2：通过管道传递 AccessIndia 服务帐户并指定 ServicePrincipalNames 参数，从而修改 AccessIndia 服务帐户的 ServicePrincipalNames 属性。

 Get-ADServiceAccount -Identity &quot;AccessIndia&quot; | Set-ADServiceAccount -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com} 


方法 3：通过使用 Windows PowerShell 命令行修改 AccessIndia 服务帐户的本地实例，从而修改 AccessIndia 服务帐户的 &lt;property&gt; 属性。 然后将 Instance 参数设置为本地实例。

$serviceAccount = Get-ADServiceAccount -Identity &quot;AccessIndia&quot;
 $serviceAccount.ServicePrincipalNames = @{Add=ACCESSAPP/india.contoso.com} 
 Set-ADServiceAccount -Instance $serviceAccount。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>指定一份经过修改的服务帐户对象的副本，用来更新实际的 Active Directory 服务帐户对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。 

Instance 参数只能更新使用 Get-ADServiceAccount cmdlet 检索到的服务帐户对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADServiceAccount cmdlet 检索 ADServiceAccount 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。 然后，Set-ADServiceAccount cmdlet 会将所做更改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
    $serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
步骤 2：修改对象实例的一个或多个属性。
    $serviceAccountInstance.Description = &quot;default&quot;
步骤 3：将所做更改保存到 ADServiceAdmin 中。
    Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>指定帐户的到期日期。将此参数设置为 0 时，帐户永不过期。此参数设置帐户对象的 AccountExpirationDate 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“accountExpires”。

指定此参数时使用 DateTime 语法。除非指定了时间，否则假定时间为当地时间。当未指定时间值时，该时间假定为当地时间 12:00:00 AM。当未指定日期时，该日期假定为当前日期。以下示例说明指定 DateTime 对象的常用语法。
  &quot;4/17/2006&quot;
&quot;Monday, April 17, 2006&quot;
&quot;2:22:45 PM&quot;
&quot;Monday, April 17, 2006 2:22:45 PM&quot;

这些示例指定相同的日期和时间，但不带秒数。
&quot;4/17/2006 2:22 PM&quot;
&quot;Monday, April 17, 2006 2:22 PM&quot;
&quot;2:22 PM&quot;

以下示例说明如何使用 RFC1123 标准指定日期和时间。此示例使用格林威治标准时间 (GMT) 来定义时间。
&quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

以下示例说明如何将往返值指定为协调世界时 (UTC)。此示例代表 UTC 时间 2006 年 4 月 17 日，星期一下午 2:22:48。 
&quot;2006-04-17T14:22:48.0000000&quot; 

以下示例说明如何将此参数设置为 2012 年 5 月 1 日下午 5 点。 
-AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>指定用户的安全上下文是否委派给服务。当此参数设置为 true 时，不会将帐户的安全上下文委派给服务，即使服务帐户设置为对于 Kerberos 委派受信任也是如此。此参数为 Active Directory 帐户设置 AccountNotDelegated 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_NOT_DELEGATED 标志。此参数的可能值包括 
$false 或 0
$true 或 1

以下示例说明如何设置此参数，使得帐户的安全上下文不委派给服务。
-AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>指定要为对象属性添加的值。使用此参数可为无法使用 cmdlet 参数修改的属性添加一个或多个值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔的值列表来为属性指定多个值，并可以通过使用分号分隔各属性来指定多个属性。此参数的格式为 
-Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

例如，如果要删除值“555-222-2222”，将值“555-222-1111”和“555-222-3333”添加到 Phone-Office-Other 属性（LDAP 显示名称“otherTelephone”），并将值“555-222-9999”添加到 Phone-Mobile-Other（LDAP 显示名称“otherMobile”），请按如下方式设置 Add 和 Remove 参数。

-Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>修改帐户的 DER 编码的 X.509v3 证书。这些证书包括由 Microsoft 证书服务颁发给此帐户的公钥证书。此参数设置帐户对象的 Certificates 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“userCertificate”。

语法：
添加值：
-Certificates @{Add=value1,value2,...}
删除值：
-Certificates @{Remove=value3,value4,...}
替换值：
-Certificates @{Replace=value1,value2,...}
清除所有值：
-Certificates $null

可以使用分号分隔的列表来指定多个操作。例如，使用下面的语法添加和删除 Certificate 值 
-Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何使用 New-Object cmdlet 创建证书，然后将它添加到用户帐户中。当此 cmdlet 运行时，&lt;certificate password&gt; 将替换为用于添加证书的密码。

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

以下示例说明如何添加指定为字节数组的证书。
Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>指定要在目录中清除的对象属性序列。使用此参数可清除一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

例如，如果要清除 Phone-Office-Other 属性的值（LDAP 显示名称“otherTelephone”），请按如下方式设置 Clear 参数。

-Clear otherTelephone

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定对象的说明。此参数设置对象的 Description 属性的值。此属性的 LDAP 显示名称 (ldapDisplayName) 是“description”。 

以下示例说明如何将此参数设置为示例描述。
-Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>指定对象的显示名称。此参数设置对象的 DisplayName 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“displayName”。

以下示例说明如何设置此参数。
-DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>指定帐户是否已启用。启用的帐户需要密码。此参数设置帐户对象的 Enabled 属性。此参数还设置 Active Directory 用户帐户控制 (UAC) 属性的 ADS_UF_ACCOUNTDISABLE 标志。此参数的可能值包括：
$false 或 0
$true 或 1 

以下示例说明如何设置此参数以启用帐户。
-Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>指定对象主页的 URL。此参数设置 Active Directory 对象的 homePage 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“wWWHomePage”。

以下示例说明如何将此参数设置为 URL。
-HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>指定一份经过修改的服务帐户对象的副本，用来更新实际的 Active Directory 服务帐户对象。如果使用此参数，则对经过修改的对象副本所做的任何修改也将应用于对应的 Active Directory 对象。cmdlet 仅更新已更改的对象属性。 

Instance 参数只能更新使用 Get-ADServiceAccount cmdlet 检索到的服务帐户对象。指定 Instance 参数时，不能指定其他设置对象属性的参数。

以下示例说明如何使用 Get-ADServiceAccount cmdlet 检索 ADServiceAccount 对象的实例。此对象使用 Windows PowerShell 命令行进行了修改。然后，Set-ADServiceAccount cmdlet 会将所做更改保存到 Active Directory 对象中。

步骤 1：检索对象的本地实例。
$serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
步骤 2：修改对象实例的一个或多个属性。
$serviceAccountInstance.Description = &quot;default&quot;
步骤 3：将所做更改保存到 ADServiceAdmin 中。
Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>指定 cmdlet 删除一个对象属性的值。使用此参数可删除一个或多个无法使用 cmdlet 参数修改的属性值。若要删除对象属性，必须使用 LDAP 显示名称。可以通过指定分号分隔列表来删除多个属性。此参数的格式为 
-Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

例如，如果要在 LDAP 显示名称为 FavColors 的属性中添加值 blue 和 green 并删除值 pink，请按如下方式设置 Add 和 Remove 参数。
-Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序应用这些参数：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>指定将替换当前值的对象属性值。使用此参数可替换一个或多个无法使用 cmdlet 参数修改的属性值。要修改对象属性，必须使用 LDAP 显示名称。可以通过指定逗号分隔列表来修改多个属性。此参数的格式为 
-Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

例如，如果要将 Phone-Office-Other 属性中的值“555-222-2222”替换为值“555-222-1111”（LDAP 显示名称“otherTelephone”），请按如下方式设置 Replace 参数。

-Replace @{otherTelephone='555-222-2222', '555-222-1111'}

同时使用 Add、Remove、Replace 和 Clear 参数时，将按以下顺序执行这些操作：
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>指定用户、组、计算机或服务帐户的安全帐户管理器 (SAM) 帐户名。描述文本的最大长度为 256 个字符。为了与旧版操作系统兼容，创建一个不超过 20 个字符的 SAM 帐户名。此参数设置帐户对象的 SAMAccountName。此属性的 LDAP 显示名称 (ldapDisplayName) 是“sAMAccountName”。

以下示例说明如何指定此参数。
-SAMAccountName &quot;saradavis&quot;

注意：如果提供的字符串值不是以‘$’字符结束，必要时系统将添加该字符。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>指定帐户的服务主体名称。此参数设置帐户的 ServicePrincipalNames 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是 servicePrincipalName。此参数使用下面的语法来添加、删除、替换或清除服务主体名称值。 
语法：
添加值：
-ServicePrincipalNames @{Add=value1,value2,...}
删除值：
-ServicePrincipalNames @{Remove=value3,value4,...}
替换值：
-ServicePrincipalNames @{Replace=value1,value2,...}
清除所有值：
-ServicePrincipalNames $null

可以使用分号分隔的列表来指定多项更改。例如，使用下面的语法添加和删除服务主体名称。 
@{Add=value1,value2,...};@{Remove=value3,value4,...}

将按以下顺序应用运算符：
..Remove
..Add
..Replace

以下示例说明如何添加和删除服务主体名称。
-ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>指定帐户对于 Kerberos 委派是否是可信的。以对 Kerberos 委派而言可信的帐户身份运行的服务可以采用请求该服务的客户端的身份。此参数设置帐户对象的 TrustedForDelegation 属性。该值还设置 Active Directory 用户帐户控制属性的 ADS_UF_TRUSTED_FOR_DELEGATION 标志。此参数的可能值为：
$false 或 0
$true 或 1

以下示例说明如何指定帐户对于 Kerberos 委派可信。
-TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。

Instance 参数接收一个使用 Get-ADServiceAccount cmdlet 检索到并经过修改的服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果指定了 PassThru 参数，则返回修改后的服务帐户对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount service1 -Description &quot;Secretive Data Server&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将服务帐户“service1”的说明设置为“Secretive Data Server”</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount Mongol01ADAM -ServicePrincipalNames @{replace=&quot;ADAMwdb/a.contoso.com&quot;, &quot;ADAMbdb/a.contoso.com&quot;} 
</dev:code>
  			<dev:remarks>
  			        <maml:para>将属性 ServicePrincipalNames 的值替换为“ADAMwdb/a.contoso.com”、“ADAMbdb/a.contoso.com”</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145001</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomainMode
		</command:name>
		<maml:description>
			<maml:para>设置 Active Directory 域的域模式。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomainMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDomainMode cmdlet 设置域的域模式。 通过设置 DomainMode 参数指定域模式。 

域模式可以设置为以下值，这些值按照功能从低到高的顺序列出。 

  Windows2000Domain
  Windows2003InterimDomain
  Windows2003Domain
  Windows2008Domain
  Windows2008R2Domain

只能将域模式更改为具有更高功能的模式。 例如，如果某个域的域模式设置为 Windows 2003，则可以使用此 cmdlet 将该模式更改为 Windows 2008。但是，在同一种情况下，不能使用此 cmdlet 将该域模式从 Windows 2003 更改为 Windows 2000。 

Identity 参数指定要修改的 Active Directory 域。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、DNS 域名或 NetBIOS 名称来标识域。 还可以将 Identity 参数设置为域对象变量（例如 $&lt;localADDomainObject&gt;），或者可以通过管道将域对象传递到 Identity 参数。 例如，可以使用 Get-ADDomain cmdlet 检索某个域对象，然后通过管道将该对象传递到 Set-ADDomainMode cmdlet。

除非指定了 -confirm:$false，否则 Set-ADDomainMode 将始终提示需要权限。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomainMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DomainMode</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 域的域模式。 可以将域模式设置为以下值之一，这些值按照功能从低到高的顺序列出。 

  Windows2000Domain 或 0
  Windows2003InterimDomain 或 1  
  Windows2003Domain 或 2
  Windows2008Domain 或 3
  Windows2008R2Domain 或 4

以下示例说明如何将此参数设置为 Windows 2008 R2。
  -DomainMode Windows2008R2Domain</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimDomain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownDomain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DomainMode</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 域的域模式。可以将域模式设置为以下值之一，这些值按照功能从低到高的顺序列出。 

Windows2000Domain 或 0
Windows2003InterimDomain 或 1  
Windows2003Domain 或 2
Windows2008Domain 或 3
Windows2008R2Domain 或 4

以下示例说明如何将此参数设置为 Windows 2008 R2。
-DomainMode Windows2008R2Domain</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainMode</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的域对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
此 cmdlet 不适用于连接到全局编录端口的情况。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomainMode -Identity fabrikam.com -DomainMode Windows2003Domain
</dev:code>
  			<dev:remarks>
  			        <maml:para>将 fabrikam.com 域的 DomainMode 属性设置为 Windows2003Domain。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$pdc = Get-ADDomainController -Discover -Service PrimaryDC
Set-ADDomainMode -Identity $pdc.Domain -Server $pdc.HostName[0] -DomainMode Windows2003Domain</dev:code>
  			<dev:remarks>
  			        <maml:para>将当前登录用户的域的 DomainMode 设置为 Windows2003Domain。 设置操作以 PrimaryDC FSMO 为目标来应用更新。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145002</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForestMode
		</command:name>
		<maml:description>
			<maml:para>设置 Active Directory 林的林模式。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForestMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADForestMode cmdlet 设置 Active Directory 林的林模式。 通过设置 ForestMode 参数指定林模式。 林模式可以设置为以下值，这些值按照功能从低到高的顺序列出。 
  Windows2000Forest
  Windows2003InterimForest
  Windows2003Forest  
  Windows2008Forest
  Windows2008R2Forest

Identity 参数指定要修改的 Active Directory 林。 可以通过完全限定的域名 (FQDN)、GUID、DNS 主机名或 NetBIOS 名称来标识林。 还可以通过管道传递林对象来指定林。 例如，可以使用 Get-ADForest cmdlet 检索某个林对象，然后通过管道将该对象传递到 Set-ADForestMode。

Set-ADForestMode 在默认情况下将提示进行确认。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForestMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
-Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ForestMode</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 林的林模式。此参数的可能值为：Windows2000Forest 或 0
  Windows2003InterimForest 或 1
  Windows2003Forest 或 2
  Windows2008Forest 或 3
  Windows2008R2Forest 或 4

这些值按照功能从低到高的顺序列出。 

以下示例说明如何设置此参数。
  -ForestMode Windows2008R2Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimForest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownForest</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ForestMode</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 林的林模式。此参数的可能值为：Windows2000Forest 或 0
Windows2003InterimForest 或 1
Windows2003Forest 或 2
Windows2008Forest 或 3
Windows2008R2Forest 或 4

这些值按照功能从低到高的顺序列出。 

以下示例说明如何设置此参数。
-ForestMode Windows2008R2Forest</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForestMode</command:parameterValue>
			<dev:type>
				<maml:name>ADForestMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 林对象。圆括号中的标识符是属性的 LDAP 显示名称。

完全限定的域名
示例：corp.contoso.com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
DNS 主机名
示例：dnsServer.corp.contoso.com
NetBIOS 名称
示例：corp

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为林对象实例。 

此示例说明如何将参数设置为完全限定的域名。
-Identity &quot;corp.contoso.com&quot;

此示例说明如何将此参数设置为名为“forestInstance”的林对象实例。
-Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个林对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					指定了 PassThru 参数后，将返回经过修改的林对象。 默认情况下，此 cmdlet 不生成任何输出。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForestMode -Identity fabrikam.com -ForestMode Windows2003Forest
</dev:code>
  			<dev:remarks>
  			        <maml:para>在林 fabrikam.com 中将 ForestMode 设置为 Windows2003Forest。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$currentForest = Get-ADForest 
Set-ADForestMode -Identity $currentForest -Server $currentForest.SchemaMaster -ForestMode Windows2008R2Forest 
</dev:code>
  			<dev:remarks>
  			        <maml:para>设置当前登录用户的林的林模式。 设置操作以架构主机 FSMO 为目标来应用更新。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145003</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>修改 Active Directory 域的默认密码策略。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDefaultDomainPasswordPolicy cmdlet 修改域的默认密码策略的属性。 可以使用 cmdlet 参数来修改属性值。 

Identity 参数指定要修改其默认密码策略的域。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID)、DNS 域名或 NETBIOS 名称来标识域。 还可以将该参数设置为 ADDomain 对象变量，或者通过管道将 ADDomain 对象传递给 Identity 参数。 例如，可以使用 Get-ADDomain cmdlet 检索某个域对象，然后通过管道将该对象传递到 Set-ADDomainDefaultPasswordPolicy cmdlet。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>指定是否为密码策略启用密码复杂性。如果启用，则密码必须包含以下三种字符中的两种： 
大写字符（A、B、C、D、E…）
小写字符（a、b、c、d、e…）
数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
$false 或 0 - 禁用密码复杂性
$true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
-ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。在锁定持续时间段到期之前，无法登录到已锁定的帐户。此参数设置密码策略对象的 lockoutDuration 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutDuration &quot;2&quot;
将时间设置为 4 小时
-LockoutDuration &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutDuration &quot;0:5&quot;
将时间设置为 45 秒
LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。此参数设置密码策略对象的 lockoutObservationWindow 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
[-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
-LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
-LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
-LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定您可以使用同一个密码的最大时间长度。超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
MaxPasswordAge &quot;2&quot;
将时间跨度设置为前 2 天
MaxPasswordAge &quot;-2&quot;
将时间跨度设置为 4 小时
MaxPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
MaxPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
MaxPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
-MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
-MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
-MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
-MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>指定密码必须包含的最少字符数。此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
-MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>指定要保存的先前密码的数目。用户不能重新使用已保存的密码列表中的密码。此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
-PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>指定目录是否必须使用可逆加密来存储密码。此参数设置密码策略的 ReversibleEncryption 属性。此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
-ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>指定是否为密码策略启用密码复杂性。如果启用，则密码必须包含以下三种字符中的两种： 
大写字符（A、B、C、D、E…）
小写字符（a、b、c、d、e…）
数字（0、1、2、3…） 

此参数设置密码策略的 ComplexityEnabled 属性。 

此参数的可能值包括：
$false 或 0 - 禁用密码复杂性
$true 或 1 - 启用密码复杂性

以下示例说明如何将此参数设置为 true。
-ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 域对象。圆括号中的标识符是属性的 LDAP 显示名称。所有值都属于代表域的 domainDNS 对象。 

可分辨名称
示例：DC=redmond,DC=corp,DC=contoso,DC=com 
GUID (objectGUID)
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid)
示例：S-1-5-21-3165297888-301567370-
DNS 域名 
示例：redmond.corp.contoso.com
NetBIOS 域名 
示例：redmond

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为域对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“domainInstance”的域对象实例。
-Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>指定失败登录尝试次数超过锁定阈值后帐户被锁定的时间长度。在锁定持续时间段到期之前，无法登录到已锁定的帐户。此参数设置密码策略对象的 lockoutDuration 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-LockoutDuration”。

密码策略的锁定持续时间必须大于或等于锁定观测时间。使用 LockOutObservationWindow 参数可设置锁定观察时间。 

以如下格式指定锁定持续时间间隔。
[-]D.H:M:S.F
其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutDuration &quot;2&quot;
将时间设置为 4 小时
-LockoutDuration &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutDuration &quot;0:5&quot;
将时间设置为 45 秒
LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 （30 分钟）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>指定在不成功的登录尝试的次数重置为 0 之前，两次不成功的登录尝试之间的最大时间间隔。当不成功的登录尝试的次数超过密码策略锁定阈值时，帐户将被锁定。此参数设置密码策略对象的 lockoutObservationWindow 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“msDS-lockoutObservationWindow”。

密码策略的锁定观测时间必须小于或等于锁定持续时间。使用 LockoutDuration 参数可设置锁定持续时间。

以如下格式指定时间间隔。
[-]D:H:M:S.F 

其中：
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 0:0:0:0.0 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间设置为 2 天
-LockoutObservationWindow &quot;2&quot;
将时间设置为 4 小时
-LockoutObservationWindow &quot;4:00&quot;
将时间设置为 5 分钟
-LockoutObservationWindow &quot;0:5&quot;
将时间设置为 45 秒
-LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 （30 分钟）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>指定锁定帐户之前允许的不成功登录尝试次数。当两次未成功的登录尝试之间的时间短于为锁定观测时间范围所指定的时间时，此数字将递增。此参数设置密码策略的 LockoutThreshold 属性。 

以下示例说明如何将锁定阈值设置为 3 次登录尝试。
-LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定您可以使用同一个密码的最大时间长度。超过此时间段后，密码到期，您必须创建新的密码。 

此参数设置密码策略的 maxPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“maxPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
MaxPasswordAge &quot;2&quot;
将时间跨度设置为前 2 天
MaxPasswordAge &quot;-2&quot;
将时间跨度设置为 4 小时
MaxPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
MaxPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 （42 天）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>指定可以更改密码前的最小时间长度。

此参数设置密码策略的 minPasswordAge 属性。此属性的 LDAP 显示名称 (ldapDisplayName) 是“minPwdAge”。

以如下格式指定时间间隔。
[-]D.H:M:S.F
其中：
[-] = 指定负时间间隔
D = 天（0 到 10675199）
H = 时（0 到 23）
M = 分（0 到 59）
S = 秒（0 到 59）
F= 几分之一秒（0 到 9999999）

注意：时间值必须在 -10675199:02:48:05.4775808 和 10675199:02:48:05.4775807 之间。

以下示例说明如何设置此参数。
将时间跨度设置为 2 天
-MinPasswordAge &quot;2&quot;
将时间跨度设置为 4 小时
-MinPasswordAge &quot;4:00&quot;
将时间跨度设置为 5 分钟
-MinPasswordAge &quot;0:5&quot;
将时间跨度设置为 45 秒
-MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 （1 天）</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>指定密码必须包含的最少字符数。此参数设置密码策略的 MinPasswordLength 属性。 

以下示例说明如何设置此参数。
-MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>指定要保存的先前密码的数目。用户不能重新使用已保存的密码列表中的密码。此参数设置密码策略的 PasswordHistoryCount 属性。 

以下示例说明如何设置此参数，以保存 10 个以前的密码。
-PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>指定目录是否必须使用可逆加密来存储密码。此参数设置密码策略的 ReversibleEncryption 属性。此参数的可能值包括以下值：
$false 或 0
$true 或 1 


以下示例说明如何将此参数设置为 true。
-ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个域对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无 </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDefaultDomainPasswordPolicy -Identity fabrikam.com -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MaxPasswordAge 10.00:00:00</dev:code>
  			<dev:remarks>
  			        <maml:para>设置给定域的默认域密码策略。注意：将 MaxPwdAge 设置为 0 等于将其设置为“永不”（在 Active Directory 中为 Int64.MinValue 或 -9223372036854775808）。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser | Set-ADDefaultDomainPasswordPolicy -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>设置当前登录用户的域的默认域密码策略。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145004</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDefaultDomainPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Uninstall-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>从计算机中卸载 Active Directory 服务帐户。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Uninstall</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Uninstall-ADServiceAccount cmdlet 在运行该 cmdlet 的计算机上删除 Active Directory 服务帐户。 指定的服务帐户必须安装在该计算机上。 

Identity 参数指定要卸载的 Active Directory 服务帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识服务帐户。 还可以将此参数设置为服务帐户对象变量（例如 $&lt;localServiceAccountObject&gt;），或者通过管道将服务帐户对象传递到 Identity 参数。 例如，可以使用 Get-ADServiceAccount 获取一个服务帐户对象，然后通过管道将该对象传递到 Uninstall-ADServiceAccount cmdlet。

如果可写 DC 的访问权限不可用，使用 ForceRemoveLocal switch 参数可以从本地计算机删除帐户而不会导致命令失败。 当您在位于具有只对只读域控制器 (RODC) 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上卸载托管服务时，需要此参数。 如果您传递此参数并且该服务器具有到可写 DC 的访问权限，该帐户也会从 Active Directory 域服务中的计算机帐户中断开连接。 如果使用该参数，建议您针对可写 DC 运行 Remove-ADComputerServiceAccount cmdlet 以可靠地从计算机中断开托管服务帐户。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Uninstall-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			  <maml:name>ForceRemoveLocal</maml:name>
			  <maml:description>
			    <maml:para>如果可写 DC 的访问权限不可用，使用 ForceRemoveLocal switch 参数可以从本地计算机删除帐户而不会导致命令失败。 当您在位于具有只对只读域控制器 (RODC) 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上卸载托管服务时，需要此参数。 如果您传递此参数并且该服务器具有到可写 DC 的访问权限，该帐户也会从 Active Directory 域服务中的计算机帐户中断开连接。 如果使用该参数，建议您针对可写 DC 运行 Remove-ADComputerServiceAccount cmdlet 以可靠地从计算机中断开托管服务帐户。</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
		  <maml:name>ForceRemoveLocal</maml:name>
		  <maml:description>
		    <maml:para>如果可写 DC 的访问权限不可用，使用 ForceRemoveLocal switch 参数可以从本地计算机删除帐户而不会导致命令失败。 当您在位于具有只对只读域控制器 (RODC) 的访问权限的分段网络或站点（例如外围网络或 DMZ）的服务器上卸载托管服务时，需要此参数。 如果您传递此参数并且该服务器具有到可写 DC 的访问权限，该帐户也会从 Active Directory 域服务中的计算机帐户中断开连接。 如果使用该参数，建议您针对可写 DC 运行 Remove-ADComputerServiceAccount cmdlet 以可靠地从计算机中断开托管服务帐户。</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：WebAccount$
  
cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为对象实例。 

此示例说明如何将参数设置为可分辨名称。
-Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“AccountInstance”的帐户对象实例。
-Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个服务帐户对象。
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 AD LDS。
此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
				<maml:para>从本地计算机卸载托管服务帐户 SQL-SRV1。 该操作需要到可写 DC 的访问权限。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Uninstall-ADServiceAccount $a 
Remove-ADServiceAccount $a </dev:code>
  			<dev:remarks>
				<maml:para>在本地计算机中搜索具有名为 SQL-HR-svc-01 的托管服务帐户。  卸载此帐户然后从目录中删除它。 该操作需要到可写 DC 的访问权限。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1 -ForceRemoveLocal
</dev:code>
			<dev:remarks>
				<maml:para>从本地计算机中卸载托管服务帐户 SQL-SRV1，即使不提供到可写 DC 的访问权限。</maml:para>
				<maml:para>建议您针对可写 DC 运行 Remove-ADComputerServiceAccount cmdlet 以可靠地从计算机中断开托管服务帐户。</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145005</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unlock-ADAccount
		</command:name>
		<maml:description>
			<maml:para>解除 Active Directory 帐户的锁定。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unlock</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Unlock-ADAccount cmdlet 还原已锁定帐户的 Active Directory 域服务 (AD DS) 访问权限。 如果输入错误密码的次数超过帐户密码策略所允许的最大次数，则 AD DS 访问权限将针对帐户挂起或锁定。

Identity 参数指定要解除锁定的 Active Directory 帐户。 可以通过可分辨名称 (DN)、GUID、安全标识符 (SID) 或安全帐户管理器 (SAM) 帐户名来标识帐户。 还可以将 Identity 参数设置为帐户对象变量（例如 $&lt;localADAccountObject&gt;），或者可以通过管道将对象传递到 Identity 参数。 例如，可以使用 Search-ADAccount cmdlet 获取一个帐户对象，然后通过管道将该对象传递到 Unlock-ADAccount cmdlet 以解除帐户的锁定。 同样，可以使用 Get-ADUser 和 Get-ADComputer 获取要通过管道传递的对象。

对于 AD LDS 环境，除下列情况外，必须指定 Partition 参数：    - 使用一个 DN 标识对象：分区将从该 DN 自动生成。- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则使用当前路径来设置分区。- 指定了默认的命名上下文或分区。 
要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unlock-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定要使用的身份验证方法。此参数的可能值包括：
Negotiate 或 0
Basic 或 1

默认身份验证方法为 Negotiate。

基本身份验证方法需要安全套接字层 (SSL) 连接。

以下示例说明如何将此参数设置为 Basic。
-AuthType Basic</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定用于执行此任务的用户帐户凭据。默认凭据是当前登录用户的凭据，除非 cmdlet 是从 Active Directory PowerShell 提供程序驱动器中运行的。如果 cmdlet 是从这样的提供程序驱动器运行的，则与该驱动器相关联的帐户为默认帐户。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

如果现用凭据没有执行任务的目录级权限，Active Directory PowerShell 将返回终止错误。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>通过提供以下属性值之一指定 Active Directory 帐户对象。圆括号中的标识符是属性的 LDAP 显示名称。

可分辨名称 
示例：CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
GUID (objectGUID) 
示例：599c3d2e-f72d-4d20-8a88-030d99495f20 
安全标识符 (objectSid) 
示例：S-1-5-21-3165297888-301567370-576410423-1103
SAM 帐户名 (sAMAccountName) 
示例：saradavis

cmdlet 搜索默认命名上下文或分区来查找对象。如果找到两个或更多对象，cmdlet 将返回非终止错误。 

此参数还可通过管道获取此对象，或者您也可以将此参数设置为帐户对象实例。 

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount

此示例说明如何将参数设置为可分辨名称。
-Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

此示例说明如何将此参数设置为名为“accountInstance”的帐户对象实例。
-Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 分区的可分辨名称。可分辨名称必须是当前目录服务器上的命名上下文之一。cmdlet 搜索此分区来查找 Identity 参数定义的对象。 
下面两个示例说明如何指定此参数的值。
-Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
-Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
在很多情况下，如果没有指定值，Partition 参数将使用默认值。下面给出了确定默认值的规则。请注意，规则将按列出顺序进行评估，一旦可以确定默认值，则不再评估规则。

在 AD DS 环境中，在以下情况下将设置 Partition 的默认值：如果 - Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果前面所有的情况都不适用，则 Partition 的默认值将设置为目标域的默认分区或命名上下文。

在 AD LDS 环境中，在以下情况下将设置 Partition 的默认值： 
- 如果 Identity 参数设置为可分辨名称，则根据该可分辨名称自动生成 Partition 的默认值。 
- 如果从 Active Directory 提供程序驱动器运行 cmdlet，则根据该驱动器的当前路径自动生成 Partition 的默认值。
- 如果目标 AD LDS 实例有默认命名上下文，则 Partition 的默认值将设置为该默认命名上下文。要为 AD LDS 环境指定默认的命名上下文，请设置 AD LDS 实例的 Active Directory 目录服务代理 (DSA) 对象 (nTDSDSA) 的 msDS-defaultNamingContext 属性。
- 如果前面所有的情况都不适用，则 Partition 参数将不采用任何默认值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>返回新对象或修改过的对象。默认情况下（即，如果未指定 –PassThru），此 cmdlet 不生成任何输出。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>通过为相应的域名或目录服务器提供以下值之一，指定要连接到的 Active Directory 域服务实例。服务可以是以下任何一种：Active Directory 轻型域服务、Active Directory 域服务或 Active Directory 快照实例。
域名值：
完全限定的域名
示例：corp.contoso.com
NetBIOS 名称
示例：CORP

目录服务器值：
完全限定的目录服务器名称
示例：corp-DC12.corp.contoso.com
NetBIOS 名称
示例：corp-DC12
完全限定的目录服务器名称和端口
示例：corp-DC12.corp.contoso.com:3268

Server 参数的默认值由下列方法（按它们列出的顺序）之一决定：
-通过使用通过管道传递的对象中的 Server 值。
-在该驱动器下运行时，通过使用与 Active Directory PowerShell 提供程序驱动器关联的服务器信息。
-通过使用运行 Powershell 的计算机所在的域。 

以下示例说明如何将完全限定域名指定为参数值。
-Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>在执行命令之前提示您进行确认。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>描述如果执行该命令会发生什么情况（无需实际执行该命令）。</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>“无”或 Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Identity 参数接收一个帐户对象。

还接受如下所示的派生类型：
Microsoft.ActiveDirectory.Management.ADUser
Microsoft.ActiveDirectory.Management.ADComputer
Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          此 cmdlet 不适用于 Active Directory 快照。
此 cmdlet 不适用于只读域控制器。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
			        <maml:para>解除 SamAccountName 为 KimAb 的帐户的锁定。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
			        <maml:para>解除 DistinguishedName 为“CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM”的帐户的锁定。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145006</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<ProviderHelp>
<!-- v  0.0.0.0  -->


<Name>
	ActiveDirectory
</Name>

<Drives>
	<Para>使用名称 AD 装入的默认驱动器：</Para>
</Drives>
<Synopsis>
	用于访问存储在 Active Directory 目录服务 (ADDS)、Active Directory 轻型目录服务 (AD LDS) 和快照卷中的数据的适用于 Windows PowerShell 的 Active Directory 提供程序在 Windows Powershell 内部公开为 LDAP 服务器。
</Synopsis>

<DetailedDescription>
	<para>Active Directory 提供程序实现一组用于在 Active Directory 树中进行命令行导航的命令，类似于在文件系统中导航。 提供程序实现如 dir、ls (get-childitem) 和 cd、mkdir（set-location、new-item）等标准命令。 它还通过 PowerShell 驱动器保持与 Active Directory 的给定实例的连接。 使用 Active Directory 提供程序，管理员可以同时连接到多个 Active Directory 实例；例如，多个域中的多个域控制器、AD LDS 实例或快照。 然后，管理员可以将所有这些实例视为 PowerShell 驱动器，对其执行创建、读取、更新、和删除等标准操作。  

这些 Active Directory 提供程序 cmdlet 会重写 Windows core PowerShell cmdlet。 Active Directory 提供程序 cmdlet 为： 

· Get-PSProvider
· New-PSDrive
· Get-PSDrive
· Remove-PSDrive
· Get-ChildItem
· Get-Item
· New-Item
· Remove-Item
· Move-Item
· Rename-Item
· Get-ItemProperty
· Set-ItemProperty
· Clear-ItemProperty
· Get-ACL
· Set-ACL

说明： 
Active Directory 模块 cmdlet 也可在 Active Directory 提供程序驱动器下使用。

实际上，与更常规用途的 cmdlet 相比，Active Directory 模块 cmdlet 更为有用。 有关详细信息，请参阅 about_ActiveDirectory。</para>
</DetailedDescription>

<Capabilities>
	<para></para>
</Capabilities>
<Filters>
	<para>LDAP 筛选器是 Active Directory 提供程序 cmdlet 所支持的唯一筛选器格式。</para>
</Filters>
<Notes>
	支持非 Microsoft 目录服务并非 ActiveDirectory 提供程序的目标。

如果在 Root DSE 下运行，则 -Filter 参数不起作用。

除 Get-ChildItem 以外的所有 Active Directory 提供程序 cmdlet 都在单个对象上运行。 要处理多个对象，首先需要使用 -Filter 调用 Get-ChildItem，然后通过管道将结果传递给相应的 cmdlet（例如 set-Acl）
</Notes>
<Tasks>
	<Task>
  		<Title>
			管理驱动器
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>创建一个与 consoto.Com 域中的域控制器连接并且以域 rootDSE 为根的新驱动器。</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 2 --------------------------
				</Title> 
				<Introduction>
					<para>创建一个与 contoso.com 连接并且以域 NC 为根的新驱动器。</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;DC=contoso,DC=com&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 3 --------------------------
				</Title> 
				<Introduction>
					<para>删除 contosoAD 驱动器</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Remove-PSDrive contosoAD
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 4 --------------------------
				</Title> 
				<Introduction>
					<para>查看系统中已装入的所有驱动器。</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Get-PSDrive
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			导航
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>设置当前位置。</para>
				</Introduction> 
	  			<Code>
					PS C:\set-location AD:
				</Code>
				<Remarks>
					<para>该 Active Directory 提供程序通过分层导航系统（与文件系统非常类似）公开 Active Directory 数据库。 

例如，您可以使用以下命令在目录中导航：
cd
dir
remove

“.”和“..”等其他命令行接口范例将按预期运行。</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			读取对象
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>获取 samAccountName 为 ContosoUser1 的用户的所有属性</para>
				</Introduction> 
	  			<Code>
					PS AD:\&gt;Get-ChildItem -filter &quot;(sAMAccountName=ContosoUser1)&quot; -properties * -recurse
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			更新对象
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>设置用户的 otherTelephone（多值属性）</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Set-ItemProperty -Path &quot;AD:\CN= ContosoUser1,CN=Users,DC=Contoso,DC=com&quot; -Name otherTelephone -value &quot;111-111-1111&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			安全描述符管理 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>获取 ACL</para>
				</Introduction> 
	  			<Code>
					$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 2 --------------------------
				</Title> 
				<Introduction>
					<para>获取用户</para>
				</Introduction> 
	  			<Code>
					$user = get-aduser adpsuser1
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 3 --------------------------
				</Title> 
				<Introduction>
					<para>为写入属性创建 ACE</para>
				</Introduction> 
	  			<Code>
					$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 4 --------------------------
				</Title> 
				<Introduction>
					<para>向 ACL 中添加 ACE</para>
				</Introduction> 
	  			<Code>
					$acl.AddAccessRule($ace)
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 示例 5 --------------------------
				</Title> 
				<Introduction>
					<para>设置 ACL</para>
				</Introduction> 
	  			<Code>
					Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
				</Code>
				<Remarks>
					<para>修改用户的安全描述符以添加新的 ace。</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			安全描述符管理 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 示例 1 --------------------------
				</Title> 
				<Introduction>
					<para>获取用户的安全描述符</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Get-ACL -Path &quot;AD:\CN=ContosoUser1,CN=Users,DC=Contoso,DC= com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
</Tasks>
<DynamicParameters>
</DynamicParameters>
<RelatedLinks>
    <navigationLink>
        <linkText>about_providers</linkText>
        <uri/>
    </navigationLink>
</RelatedLinks>



<CmdletHelpPaths>
<CmdletHelpPath ID="0">\n
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>从 Active Directory 对象中清除属性的值。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Clear-ItemProperty cmdlet 删除属性的值，但不删除该属性。 可以使用此 cmdlet 从 Active Directory 对象属性值中删除数据。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定要删除的属性的名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Simple
  Negotiate - 使用基础 SPNEGO 安全提供程序
  Simple - 绑定进程以明文形式发送用户名和密码
        （建议仅用于 SSL 加密）
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。 如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。 与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Simple
Negotiate - 使用基础 SPNEGO 安全提供程序
Simple - 绑定进程以明文形式发送用户名和密码
（建议仅用于 SSL 加密）
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定要删除的属性的名称。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>无</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; description</dev:code>
  			<dev:remarks>
  			        <maml:para>清除 DistinguishedName 为“AD:\CN=ADPSUser1,DC=Fabrikam,DC=com”的 Active Directory 对象的说明属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty -Path &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; -Name otherTelephone</dev:code>
  			<dev:remarks>
  			        <maml:para>从对象“AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com”的多值属性 otherTelephone 中删除值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152477</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Item
		</command:name>
		<maml:description>
			<maml:para>获取位于指定位置的项。 此 cmdlet 能够对 Active Directory 存储进行基本搜索。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-Item cmdlet 获取位于指定位置的项。 除非使用通配符 (*) 来请求该项的所有内容，否则此命令不会获取位于该位置的项的内容。
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定一个或多个位置的路径。 允许使用通配符。 默认位置为当前目录。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
  Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。 与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>指定省略特定项。 此参数的值对 path 参数进行限定。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>指定数字形式的页面大小。 默认值为 256。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要对每个项（Active Directory 对象）检索的用逗号分隔的属性列表。  可以使用通配符 * 检索所有属性。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>指定要从搜索返回的最大条目数。 
默认值为 0（零），表示无限制。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>指定省略特定项。此参数的值对 path 参数进行限定。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>指定数字形式的页面大小。默认值为 256。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定一个或多个位置的路径。允许使用通配符。默认位置为当前目录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要对每个项（Active Directory 对象）检索的用逗号分隔的属性列表。可以使用通配符 * 检索所有属性。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>指定要从搜索返回的最大条目数。 
默认值为 0（零），表示无限制。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个或多个 ADObject 对象。 ADObject 包含驻留在存储区中的某个对象的 Name、DistinguishedName、ObjectClass 和 ObjectGUID。 此外，它还包含一个属性包，用于容纳请求的属性名称和值。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item .</dev:code>
  			<dev:remarks>
				<maml:para>PSPath            : ActiveDirectory::DC=fabrikam,DC=com 
PSParentPath      : 
PSChildName       : DC=fabrikam,DC=com 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : d66301e9-b1da-41ef-866c-12bde9b4a0a8 
distinguishedName : DC=fabrikam,DC=com 
name              : fabrikam 
objectClass       : domainDNS </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取当前位置的默认属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties samAccountName</dev:code>
  			<dev:remarks>
				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
sAMAccountName        : user1 
lastLogon             : 0 
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0 
distinguishedName     : CN=User1,DC=fabrikam,DC=com 
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取对象“AD:\CN=User1,DC=fabrikam,DC=com”的 samAccountName 属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties * </dev:code>
  			<dev:remarks>
				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
codePage              : 0 
cn                    : user1 
otherHomePhone        : {111-1111} 
logonCount            : 0 
description           : blah 
sAMAccountName        : user1 
lastLogon             : 0 
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0 
distinguishedName     : CN=User1,DC=fabrikam,DC=com 
dSCorePropagationData : {12/31/1600 4:00:00 PM} 
pwdLastSet            : 0 
badPasswordTime       : 0 
uSNChanged            : 14933 
whenChanged           : 3/17/2009 12:31:52 PM 
userAccountControl    : 546 
instanceType          : 4 
objectSid      : S-1-5-21-1743280271-992198667-3042434588-1102 
lastLogoff            : 0 
sAMAccountType        : 805306368 
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
primaryGroupID        : 513 
uSNCreated            : 14930 
countryCode           : 0 
nTSecurityDescriptor  : System.DirectoryServices.ActiveDirectorySecurity 
accountExpires        : 9223372036854775807 
whenCreated           : 3/17/2009 12:31:25 PM 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取对象“AD:\CN=User1,DC=fabrikam,DC=com”的所有属性。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152475</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ChildItem
		</command:name>
		<maml:description>
			<maml:para>在提供对 Active Directory 存储进行单级和子树范围搜索的位置中，获取位于一个或多个指定位置中的项和子项。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ChildItem</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ChildItem cmdlet 获取位于指定位置的项。 如果该项为容器，则此命令将获取容器内的各项（称为子项）。 可以使用 -Recurse 参数获取所有子容器中的所有项。 

如果指定的路径是 ROOTDSE 位置，这将返回由指定端口上的服务器所托管的所有分区的列表。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ChildItem</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定一个或多个位置的路径。 不允许使用通配符。默认位置为当前目录。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>为搜索指定 LDAP 筛选器。 如果指定的路径是 ROOTDSE 项，则将忽略筛选器。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 

可能值为：Negotiate 和 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>忽略指定项。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定路径的格式类型。可能值为：X500（例如 CN=Users,DC=fabricam,DC=com）或 Canonical（例如 fabricam.com/Users）</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>只检索指定项。 此参数的值对 Path 参数进行限定。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>只检索位置中的项的名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>指定数字形式的页面大小。 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>指定要对每个项（Active Directory 对象）检索的用逗号分隔的属性列表。可以使用通配符 * 检索所有属性。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>获取位于指定位置及其所有子项中的项。可能值为：True 或 False。

注意：使用此 cmdlet 会调用子树搜索。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>指定要从搜索返回的最大条目数。 
默认值为 0（零），表示无限制。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 

可能值为：Negotiate 和 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>忽略指定项。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>为搜索指定 LDAP 筛选器。如果指定的路径是 ROOTDSE 项，则将忽略筛选器。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>指定路径的格式类型。可能值为：X500（例如CN=Users,DC=fabricam,DC=com）或 Canonical（例如 fabricam.com/Users）</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>只检索指定项。此参数的值对 Path 参数进行限定。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>只检索位置中的项的名称。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>指定数字形式的页面大小。 </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定一个或多个位置的路径。不允许使用通配符。默认位置为当前目录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>指定要对每个项（Active Directory 对象）检索的用逗号分隔的属性列表。可以使用通配符 * 检索所有属性。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>获取位于指定位置及其所有子项中的项。可能值为：True 或 False。

注意：使用此 cmdlet 会调用子树搜索。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>指定要从搜索返回的最大条目数。 
默认值为 0（零），表示无限制。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取容器“AD:\OU=TestOU,DC=fabrikam,DC=com”中的所有对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>获取容器中的所有用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; -Recurse
</dev:code>
  			<dev:remarks>
  			        <maml:para>以递归方式获取路径“AD:\OU=TestOU,DC=fabrikam,DC=com”下的所有用户。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152471</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>检索指定的 Active Directory 对象的属性。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ItemProperty cmdlet 获取指定的 Active Directory 对象的属性。 可以使用 Get-ItemProperty 查看 Active Directory 对象属性和值。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 对象的路径。不允许使用通配符。默认位置为当前目录。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定要检索的属性的名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定要检索的属性的名称。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 对象的路径。不允许使用通配符。默认位置为当前目录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回包含所请求属性的名称和值的 PSObject。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname</dev:code>
  			<dev:remarks>
				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
samaccountname : User1 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取对象“AD:\CN=User1,DC=fabrikam,DC=com”的 samAccountName 属性</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname, objectSid </dev:code>
  			<dev:remarks>
				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
samaccountname : User1 
objectSid      : S-1-5-21-1743280271-992198667-3042434588-1102</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>获取对象“AD:\CN=User1,DC=fabrikam,DC=com”的 samaccountname 和 objectSid 属性</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152479</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Acl
		</command:name>
		<maml:description>
			<maml:para>获取 Active Directory 对象的安全描述符。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ACL cmdlet 获取表示 Active Directory 对象的安全描述符的对象。 安全描述符包含 Active Directory 对象的访问控制列表 (ACL)。 ACL 指定用户和用户组要访问 Active Directory 对象所需的权限。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Acl</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>从系统访问控制列表 (SACL) 中获取安全描述符的审核数据。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Audit</maml:name>
			<maml:description>
				<maml:para>从系统访问控制列表 (SACL) 中获取安全描述符的审核数据。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ActiveDirectorySecurity（继承自 System.Security.AccessControl.DirectoryObjectSecurity）</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回一个 ActiveDirectorySecurity 对象，用于表示通过执行此 cmdlet 指定的返回对象的安全描述符。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
			        <maml:para>获取用户 ADPSUser1 的安全描述符。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Path                       Owner                      Access
----                       -----                      ------
ActiveDirectory::CN=Use... FABRIKAM\Domain Admins   NT AUTHORITY\SELF Allo...</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
			        <maml:para>获取用户 User1 的安全描述符。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152469</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-Item
		</command:name>
		<maml:description>
			<maml:para>将 Active Directory 对象从一个位置（容器）移动到另一个位置。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-Item cmdlet 将 Active Directory 对象（包括其属性、内容和子项）从一个位置（容器）移动到另一个位置（容器）。 但这些位置必须由同一提供程序支持。 移动 Active Directory 对象时，会将其添加到新位置，并将其从原始位置删除。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将对其执行此操作的项的路径</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>指定要将项移动到的位置的路径。 这必须是 Active Directory 容器。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
  Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CrossDomain</maml:name>
				<maml:description>
					<maml:para>指定跨域移动。 必须提供目标 DC 的 DNS 名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CrossDomain</maml:name>
			<maml:description>
				<maml:para>指定跨域移动。必须提供目标 DC 的 DNS 名称。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>指定要将项移动到的位置的路径。这必须是 Active Directory 容器。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将对其执行此操作的项的路径</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Cmdlet 输出由 PassThru 标志控制。</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果未指定 -PassThru，则为 无。
如果指定了 -PassThru，则会将表示已移动对象的 ADObject 写入管道中。

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将用户对象从一个组织单位移动到另一个组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=Users,DC=ADPS,DC=Fabrikam,DC=com&quot; -Destination &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>移动容器对象及其所有子项。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; &quot;AD:\OU=TestOU,DC=child,DC=fabrikam,DC=com&quot; -CrossDomain dc1.child.fabrikam.com

</dev:code>
  			<dev:remarks>
  			        <maml:para>使用 CrossDomain 移动将对象移动到另一个域。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152476</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-Item
		</command:name>
		<maml:description>
			<maml:para>创建新的 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-Item cmdlet 创建新的 Active Directory 对象。 该 cmdlet 还可以设置该新对象的值。 </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定新 AD 对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定新 AD 对象的名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 

可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>指定新项的 AD 对象类，例如：组、用户或组织单位等。

如果 ItemType 参数设置为“Directory”，则该 cmdlet 会创建一个新的组织单位。

PowerShell 提供程序 cmdlet mkdir 会对“Directory”调用带 ItemType 参数集的 New-Item cmdlet，这样，当在 ActiveDirectory 提供程序中使用 mkdir（别名 md）cmdlet 时，该 cmdlet 将创建一个新的组织单位。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>指定新项的值。 以关联数组的形式指定新对象属性和值。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定新 AD 对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定新 AD 对象的名称。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 

可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>指定新项的 AD 对象类，例如：组、用户或组织单位等。

如果 ItemType 参数设置为“Directory”，则该 cmdlet 会创建一个新的组织单位。

PowerShell 提供程序 cmdlet mkdir 会对“Directory”调用带 ItemType 参数集的 New-Item cmdlet，这样，当在 ActiveDirectory 提供程序中使用 mkdir（别名 md）cmdlet 时，该 cmdlet 将创建一个新的组织单位。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>指定新项的值。以关联数组的形式指定新对象属性和值。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 

可能值为：Negotiate 或 Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ItemType</maml:name>
			<maml:description>
				<maml:para>指定新项的 AD 对象类，例如：组、用户或组织单位等。

如果 ItemType 参数设置为“Directory”，则该 cmdlet 会创建一个新的组织单位。

PowerShell 提供程序 cmdlet mkdir 会对“Directory”调用带 ItemType 参数集的 New-Item cmdlet，这样，当在 ActiveDirectory 提供程序中使用 mkdir（别名 md）cmdlet 时，该 cmdlet 将创建一个新的组织单位。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定新 AD 对象的名称。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定新 AD 对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>指定新项的值。以关联数组的形式指定新对象属性和值。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject if -PassThru is specified</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回表示目录中新创建对象的 ADObject。
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Name &quot;OU=TestOU3&quot; -Itemtype organizationalUnit </dev:code>
  			<dev:remarks>
				<maml:para>PSPath            : ActiveDirectory::OU=TestOU3,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName       : OU=TestOU3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 786ee969-88b7-43ba-80d2-acc3d624b06e 
distinguishedName : OU=TestOU3,DC=fabrikam,DC=com 
name              : TestOU3 
objectClass       : organizationalUnit </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>在当前位置创建新的组织单位。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Path &quot;CN=Users,DC=fabrikam,DC=com&quot; -Name &quot;CN=User3&quot; -ItemType user -Value @{samAccountName='user3';description='test user'} </dev:code>
  			<dev:remarks>
				<maml:para>PSPath            : ActiveDirectory::CN=User3,CN=Users,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::CN=Users,DC=fabrikam,DC=com 
PSChildName       : CN=User3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 617e9745-21b2-44f5-9a91-e2d1831059eb 
objectClass       : user 
distinguishedName : CN=User3,CN=Users,DC=fabrikam,DC=com 
name              : User3 
sAMAccountName    : user3 
description       : test user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>在指定容器中创建新用户，并在创建过程中设置该用户的 samAccountName 和 description 属性。 </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152472</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-PSDrive
		</command:name>
		<maml:description>
			<maml:para>为 Windows PowerShell 驱动器创建新的 Active Directory。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>PSDrive</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-PsDrive cmdlet 为 Windows PowerShell 驱动器创建新的 Active Directory，该驱动器表示到 Active Directory 存储的连接。

就像操作任何映射驱动器那样，您可以使用创建的 PsDrive 访问关联数据存储中的数据。 可以更改驱动器中的位置（set-location、cd 或 chdir），并且可以访问驱动器的内容（get-item、get-childitem 或 dir）。
    
但是，Active Directory PsDrive 仅对 Windows PowerShell 是已知的。 不能使用 Windows 资源管理器、WMI、COM、.NET 或使用类似 Net Use 的工具访问它们。
    
PsDrive 仅存在于当前 Windows PowerShell 控制台中。 要使驱动器具有持久性，可以导出在其中添加了驱动器的控制台，或者在 Windows PowerShell 配置文件中保存 New-PsDrive 命令。

要删除 New-PsDrive 所创建的驱动器，请使用 Remove-PsDrive。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-PSDrive</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>PSProvider</maml:name>
				<maml:description>
					<maml:para>指定支持此类型的驱动器的 Windows PowerShell 提供程序（“PsProvider”）。

例如，如果 PsDrive 与网络共享或文件系统目录关联，则 PsProvider 为“FileSystem”。 如果 PsDrive 与注册表项关联，则 PsProvider 为“Registry”。

要查看 Windows PowerShell 控制台中 PsProvider 的列表，请键入“get-psprovider”。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Root</maml:name>
				<maml:description>
					<maml:para>指定要添加的驱动器的提供程序内部根目录或路径。 对 X500 格式使用 DN；对规范格式使用规范名称。
指定一个将连接定向到 RootDSE 的空字符串。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>指定要创建的驱动器的简短说明。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定提供程序驱动器的路径类型。  允许值为 X500 或 Canonical。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>指定用于标识驱动器安装范围的索引。

注意：此参数将被忽略。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>指定要创建的驱动器的简短说明。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>指定提供程序驱动器的路径类型。允许值为 X500 或 Canonical。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>指定使用 GC 端口连接到全局编录。</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>PSProvider</maml:name>
			<maml:description>
				<maml:para>指定支持此类型的驱动器的 Windows PowerShell 提供程序（“PsProvider”）。

例如，如果 PsDrive 与网络共享或文件系统目录关联，则 PsProvider 为“FileSystem”。如果 PsDrive 与注册表项关联，则 PsProvider 为“Registry”。

要查看 Windows PowerShell 控制台中 PsProvider 的列表，请键入“get-psprovider”。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Root</maml:name>
			<maml:description>
				<maml:para>指定要添加的驱动器的提供程序内部根目录或路径。对 X500 格式使用 DN；对规范格式使用规范名称。
指定一个将连接定向到 RootDSE 的空字符串。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>指定用于标识驱动器安装范围的索引。

注意：此参数将被忽略。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>PSDrive if -PassThru is specified</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					返回 ADDriveInfo 对象。 ADDriveInfo 派生自 PSDriveInfo，并且包含以下附加属性。

public class ADDriveInfo : PSDriveInfo
    {
        public string Server {get; set;}
        public ADPathFormat FormatType {get; set;}
        public ADAuthType AuthType {get; set;}
        public bool GlobalCatalog {get; set;} 
        public bool SecureSocketLayer {get; set;}
        public bool Encryption {get; set;}
        public bool Signing {get; set;}
    }
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          在导入 Active Directory 模块后，将为加入域的计算机创建新的 PSDrive。 默认的驱动器将装入默认的 LDAP 服务器的 rootDSE。 默认的驱动器名称将为“AD”。
当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。

                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;DC=fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Name           Used (GB)     Free (GB) Provider      Root 
----           ---------     --------- --------      ---- 
AD1                                    ActiveDire... DC=fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>说明</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>将驱动器装入默认服务器上的默认命名上下文。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADGC -PSProvider ActiveDirectory -Root &quot;&quot; -server fabrikam.com:3268</dev:code>
  			<dev:remarks>
  			        <maml:para>将驱动器装入全局编录上的 rootDSE。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADLDS -PsProvider ActiveDirectory -Root &quot;DC=AppNC,DC=com&quot; -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>将驱动器装入 AD LDS 实例。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;fabrikam.com/&quot; -format canonical</dev:code>
  			<dev:remarks>
  			        <maml:para>使用规范格式将驱动器装入默认服务器上的默认命名上下文。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152480</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-Item
		</command:name>
		<maml:description>
			<maml:para>删除指定的 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-Item cmdlet 删除指定的 Active Directory 对象。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate、Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>省略指定的项</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>只检索指定的对象。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>导致删除指定的位置及其所有子项中的项。 此参数允许树删除。  
可能值为：True 或 False。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate、Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>省略指定的项</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>指定格式类型。可能值为：X500 或 Canonical。</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>只检索指定的对象。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>导致删除指定的位置及其所有子项中的项。此参数允许树删除。  
可能值为：True 或 False。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					无
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\CN=User1,OU=TestOU,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>删除单个项。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Recurse</dev:code>
  			<dev:remarks>
  			        <maml:para>删除容器以及该容器下的所有对象。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152474</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-Item
		</command:name>
		<maml:description>
			<maml:para>重命名 Active Directory 对象。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Rename-Item cmdlet 更改指定的 Active Directory 对象的名称。 此 cmdlet 不影响被重命名的对象的内容。

该名称必须为相对可分辨名称。  不能使用 Rename-Item 移动项。 若要移动并重命名 Active Directory 对象，请使用 Move-Item cmdlet。
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-Item</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>指定 Active Directory 对象的新名称。 该名称必须为 RDN（相对可分辨名称）。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。可能值为：Negotiate 和 Basic。

Negotiate - 使用基础 SPNEGO 安全提供程序

Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。可能值为：Negotiate 和 Basic。

Negotiate - 使用基础 SPNEGO 安全提供程序

Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>指定 Active Directory 对象的新名称。该名称必须为 RDN（相对可分辨名称）。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Cmdlet 输出由 PassThru 标志控制。</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果未指定 -PassThru，则为 无。
如果指定了 -PassThru，则会将表示重命名后对象的 ADObject 写入管道中。

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-Item &quot;AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com&quot; &quot;CN=User4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>将“AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com”处的用户对象重命名为“CN=User4”。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152473</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>设置 Active Directory 对象的属性值。 </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ItemProperty cmdlet 设置 Active Directory 对象的属性值。 可以使用此 cmdlet 更新（添加、替换和删除）Active Directory 对象的属性值。</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>指定其值将被替换的 Active Directory 对象属性名称的列表。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>指定要替换的 Active Directory 对象属性的值。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddPropertyValue</maml:name>
				<maml:description>
					<maml:para>指定将作为关联数组添加的属性值。 这对于多值属性非常有用。 有关详细信息，请参阅 about_associative_array 帮助。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate、Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemovePropertyValue</maml:name>
				<maml:description>
					<maml:para>指定将作为关联数组删除的属性值。这对于多值属性非常有用。有关详细信息，请参阅 about_associative_array 帮助。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddPropertyValue</maml:name>
			<maml:description>
				<maml:para>指定将作为关联数组添加的属性值。这对于多值属性非常有用。有关详细信息，请参阅 about_associative_array 帮助。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>指定用于连接服务器的授权类型。 
可能值为：Negotiate、Basic。
Negotiate - 使用基础 SPNEGO 安全提供程序
Basic – 通过安全套接字层 (SSL) 连接执行简单绑定。
</maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>指定执行此任务的安全上下文的凭据。如果此安全上下文没有执行任务的目录级权限，则目录将返回一个错误。与驱动器相关的凭据信息将用作默认值。

要指定此参数，可以键入用户名，如“User1”或“Domain01\User01”，也可以指定 PSCredential 对象。如果为此参数指定用户名，cmdlet 将提示您输入密码。 

也可以使用脚本或使用 Get-Credential cmdlet 来创建 PSCredential 对象。然后可以将 Credential 参数设置为 PSCredential 对象。以下示例说明如何创建凭据。
$AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

下面说明如何将 Credential 参数设置为这些凭据。
-Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>下面列出了此参数的可接受值：</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			<dev:type>
				<maml:name>psobject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>指定其值将被替换的 Active Directory 对象属性名称的列表。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemovePropertyValue</maml:name>
			<maml:description>
				<maml:para>指定将作为关联数组删除的属性值。这对于多值属性非常有用。有关详细信息，请参阅 about_associative_array 帮助。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>指定要连接的特定 Active Directory 实例（DS 或 LDS）。参数输入值可以是：域名、林名或主机名:端口。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>指定要替换的 Active Directory 对象属性的值。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Cmdlet 输出由 PassThru 标志控制。</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果未指定 -PassThru，则为 无。
如果指定了 -PassThru，则包含要修改的属性的名称和值的 PSObject 会写入管道中。

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -value ('111-111-1111','222-222-2222')</dev:code>
  			<dev:remarks>
  			        <maml:para>设置对象“AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com”的多值属性 otherTelephone 的值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -Value @('333-333-3333')</dev:code>
  			<dev:remarks>
  			        <maml:para>向对象“AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com”的多值属性 otherTelephone 中添加新值。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152478</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-Acl
		</command:name>
		<maml:description>
			<maml:para>更改指定的 Active Directory 对象的安全描述符。</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-Acl cmdlet 更改指定的 Active Directory 对象的安全描述符，以便与您提供的安全描述符中的值相匹配。

若要使用 Set-ACL，请使用 Path 参数标识希望更改其安全描述符的资源，并使用 AclObject 参数提供一个包含您要应用的值的安全描述符。 Set-ACL 使用 AclObject 参数的值作为模型，更改资源安全描述符中的值使其与 AclObject 参数中的值相匹配。 Set-ACL 将 Path 标识的对象的安全描述符设置为由 AclObject 指定的值


</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Acl</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>指定将执行此操作的对象的路径。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>AclObject</maml:name>
				<maml:description>
					<maml:para>指定具有所需属性值的 ACL。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>AclObject</maml:name>
			<maml:description>
				<maml:para>指定具有所需属性值的 ACL。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			<dev:type>
				<maml:name>ObjectSecurity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Active Directory 提供程序将忽略此参数。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>指定将执行此操作的对象的路径。</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Cmdlet 输出由 PassThru 标志控制。</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					如果未指定 -PassThru，则为 无
如果指定了 -PassThru，则会返回表示修改过的安全描述符的 ActiveDirectorySecurity 对象。

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          当通过使用 Server 参数设置快照目标时，此 cmdlet 不起作用。
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 示例 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ACL &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;  | Set-Acl &quot;AD:\CN=ADPSUser2,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>使用一个用户对象的 Get-ACL cmdlet 的管道传递结果设置另一个用户对象的安全描述符。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 示例 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># Get the ACL
$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
# Get the user
$user = Get-ADUser &quot;CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
# Create ACE for write property
$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
# Add ACE to ACL
$acl.AddAccessRule($ace)
# Set the ACL
Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
</dev:code>
  			<dev:remarks>
  			        <maml:para>通过添加新 ACE 修改用户的安全描述符。</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152470</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

</CmdletHelpPath>
</CmdletHelpPaths>
</ProviderHelp>
</helpItems>
