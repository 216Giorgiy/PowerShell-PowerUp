TÓPICO
    Filtro do Active Directory

DESCRIÇÃO RESUMIDA
    Descreve a sintaxe e o comportamento do filtro de pesquisa para o
    qual existe suporte do módulo do Active Directory para o Windows
    PowerShell.

DESCRIÇÃO LONGA
    A maioria dos cmdlets get-AD* do módulo do Active Directory usam o
    parâmetro Filter para procurar objetos. O parâmetro Filter foi
    implementado para substituir a função do Filtro LDAP e adiciona
    suporte para as variáveis do PowerShell, tipos de dados ricos,
    verificação aprimorada de erros e um formulário estendido do
    Active Directory da Linguagem de Expressão do PowerShell.

    Para obter mais informações sobre a sintaxe da Linguagem de
    Expressão do Windows PowerShell, consulte about_filter.

    Observação: o tópico about_filter do PowerShell refere-se a mais
    tópicos com suporte de linguagem de expressão.


  Suporte à sintaxe do filtro LDAP
    A sintaxe do filtro LDAP tem suporte no parâmetro LDAPFiler. Você
    encontrará exemplos de filtro LDAP junto com novos exemplos de
    filtro do módulo do Active Directory na seção Exemplos de filtro
    desse tópico.


  Amplitude e profundidade de pesquisa
    A amplitude e a profundidade de sua pesquisa controlada por filtro
    podem ser modificadas por dois parâmetros de cmdlet do módulo
    do Active Directory: SearchBase e SearchScope.

    No contexto do provedor do Active Directory, se o parâmetro
    Searchbase não for especificado, SearchBase será o padrão para
    o caminho atual. Quando a execução não está subordinada ao
    provedor do Active Directory, SearchBase será o padrão para 
    DefaultNamingContext do servidor.
    
    O parâmetro The SearchScope é o padrão para o valor Subtree, do
    tipo enumerado ADSearchScope.

    Para obter mais informações, consulte as descrições dos parâmetros
    SearchBase e SearchScope em qualquer cmdlet Get-AD *.


  Comportamento do resultado de pesquisa
    O comportamento do módulo do Active Directory ao retornar
    resultados de uma pesquisa é modificado por meio de dois
    parâmetros de cmdlet: ResultPageSize e ResultSetSize.

    ResultSetSize controla o número máximo de objetos retornados.

    ResultPageSize especifica o número máximo de objetos para cada
    página retornada de informações.

    Consulte as descrições dos parâmetros ResultPageSize e
    ResultSetSize em qualquer cmdlet get-AD* para obter
    mais informações.


  Comportamento de tempo limite
    As seguintes instruções especificam as condições de tempo limite
    no módulo do Active Directory e descrevem o que pode ser feito
    sobre um tempo limite.

    O tempo limite padrão do módulo do Active Directory para todas as
    operações é 2 minutos.

    Para a operação de pesquisa, o módulo do Active Directory usa o
    controle de paginação com um tempo limite de 2 minutos para cada
    pesquisa de página.

    Observação: como uma pesquisa pode envolver várias solicitações de
    páginas do servidor, o tempo de pesquisa total talvez ultrapasse
    2 minutos.

    Um erro de TimeoutException indica que ocorreu um tempo limite.

    Para uma operação de pesquisa, você pode optar por usar um tamanho
    de página menor, definido com o parâmetro ResultPageSize, se
    estiver obtendo um erro TimeoutException.

    Se depois de fazer essas alterações você ainda estiver obtendo um
    erro TimeoutException, considere a otimização do seu filtro
    usando a orientação na sessão Otimizando filtros deste tópico.


  Otimizando filtros
    Você pode aprimorar o comportamento do filtro de pesquisa usando
    essas diretrizes.

    Evite usar o parâmetro Recursive já que ele intensifica o uso de
    recursos da operação de pesquisa.

    Evite usar operadores AND bit a bit e operadores OR bit a bit.
    Para obter mais informações, consulte a sessão Operadores com
    suporte deste tópico.

    Evite usar o operador lógico NOT.

    Separe sua pesquisa em várias consultas com condições
    mais refinadas.

    Observação: para obter uma descrição completa de sintaxe e uso de
    filtros, consulte a seção Sintaxe de filtro deste tópico.


  Exemplos de filtros
    A seção a seguir mostra muitos exemplos de uso de filtros em
    consultas comuns.

    -------------------------- EXEMPLO 1 --------------------------

    Obter todas as entradas:

        Equivalente de filtro LDAP
        (objectClass=*)

        Get-ADObject -Filter 'ObjectClass -like "*"'


    -------------------------- Exemplo 2 --------------------------

    Obter entradas que contêm "bob" em alguma parte do nome comum:

        Equivalente de filtro LDAP
        (cn=*bob*)

        Get-ADObject -Filter 'CN -like "*bob*"'


    -------------------------- Exemplo 3 --------------------------


    Obter entradas com uma contagem de senha incorreta maior
    que cinco:

        Equivalente de filtro LDAP
        (badpwdcount>=5)

        Get-ADUser -Filter 'badpwdcount -ge 5'


    -------------------------- Exemplo 4 --------------------------


    Obter todos os usuários com um atributo de e-mail:

        Equivalente de filtro LDAP
        (&(objectClass=user)(email=*))

        Get-ADUser -filter 'email -like "*"'

        -ou-

        Get-ADObject -filter 'email -like "*" -and ObjectClass -eq
        "user"'


    -------------------------- Exemplo 5 --------------------------


    Obter todas as entradas de usuário com um atributo de e-mail e um
    sobrenome igual a "sousa":

        Equivalente de filtro LDAP
        (&(sn=sousa)(objectClass=user)(email=*))

        Get-ADUser -Filter 'Email -like "*" -and SurName -eq "smith"'

        -ou-

        Get-ADUser -Filter 'Email -like "*" -and sn -eq "smith"'


    -------------------------- Exemplo 6 --------------------------


    Obter todas as entradas de usuário com nome comum
    que começa com "adriano" e usuários com nome comum igual a
    "pedro" ou "margarete":

        Equivalente de filtro LDAP
        (&(objectClass=user) | (cn=adriano*)(cn=pedro)(cn=margarete))

        Get-ADUser -Filter 'CN -like "andy*" -or CN -eq "steve" -or
        CN -eq "margaret"'

    Esse segundo script do PowerShell no exemplo mostra uma lógica
    mais complexa e o uso de controle de precedência por meio
    de parênteses.

        Get-ADObject -Filter 'objectClass -eq "user" -and
         (CN -like "andy*" -or CN -eq "steve" -or CN -eq "margaret")'


    -------------------------- Exemplo 7 --------------------------


    Obter todas as entradas sem um atributo de e-mail:

        Equivalente de filtro LDAP
        (!(email=*))

        Get-ADUser -Filter '-not Email -like "*"'

        -ou-

        Get-ADUser -Filter 'Email -notlike "*"'


    -------------------------- Exemplo 8 --------------------------


    Obter todos os usuários que não fizeram logon desde 1º de janeiro
    de 2007:

        Equivalente de filtro LDAP
        (&(lastlogon<=X)(objectClass=user))
        //em que X é o número de fatias de 100 nanossegundos desde 1º
        de janeiro de 1601

        $date = new-object System.DateTime -ArgumentList @(2007,1,1
        ,0,0,0)
        Get-ADUser -Filter '-not LastLogon -le $date'


    -------------------------- Exemplo 9 --------------------------


    Obter todos os usuários que fizeram logon nos últimos cinco dias:

        Equivalente de filtro LDAP
        (&(lastLogon>=128812906535515110)
          (objectClass=user)(!(objectClass=computer)))

        $date = (get-date) - (new-timespan -days 5)
        Get-ADUser -Filter 'lastLogon -gt $date'


    -------------------------- Exemplo 10 -------------------------


    O exemplo de cadeia de caracteres de consulta a seguir procura
    objetos de grupo que têm o sinalizador ADS_GROUP_TYPE_SECURITY_ENABLED
    definido. Saiba que o valor decimal de ADS_GROUP_TYPE_SECURITY_ENABLED
    (0x80000000 = 2147483648) é usado para o valor de comparação.

        Equivalente de filtro LDAP
        (&(objectCategory=group)(groupType:1.2.840.113556.1.4.803:
        =2147483648))

        Get-ADGroup -filter 'groupType -band 0x80000000'


    -------------------------- Exemplo 11 -------------------------


    LDAP_MATCHING_RULE_IN_CHAIN é um OID de regra de correspondência
    criado para fornecer um método de pesquisa da ascendência de um
    objeto. Muitos aplicativos que usam o Active Directory e o AD
    LDS normalmente funcionam com dados hierárquicos, que são
    ordenados por relacionamentos pai-filho. Anteriormente, os
    aplicativos executavam expansão de grupo transitório para
    descobrir a associação do grupo que usava muita largura de banda
    da rede. Os aplicativos iam e vinham várias vezes para descobrir
    se um objeto cairia "na cadeia", se um link fosse atravessado
    até o fim.

    Um exemplo de uma consulta como essa é a criada para verificar se
    o usuário "usuário1" é membro do grupo "grupo1".

    NOTA: o usuário1 talvez não seja um membro direto de grupo1. Ele
    pode ser membro de algum outro grupo, que é membro de grupo1.

    Você definiria a base como o usuário DN (cn=usuário1, cn
    =users, dc=x), o escopo como base e usaria a consulta:

        Equivalente de filtro LDAP
        (memberof:1.2.840.113556.1.4.1941:=(cn=Grupo1,OU=groupsOU,DC=x)))

        Get-ADUser -Filter 'memberOf -RecursiveMatch "CN=Administrators,
        CN=Builtin,DC=Fabrikam,DC=com"'
        -SearchBase "CN=Administrator,CN=Users,DC=Fabrikam,DC=com"

    ---------------------------------------------------------------

  Sintaxe de filtro
    As seguintes descrições de sintaxe usam o formulário Backus-Naur
    para mostrar a Linguagem de Expressão do PowerShell para o
    parâmetro Filter.

        <filter>  ::= "{" <FilterComponentList> "}"

        <FilterComponentList> ::= <FilterComponent> |
          <FilterComponent> <JoinOperator> <FilterComponent> |
          <NotOperator>  <FilterComponent>

        <FilterComponent> ::= <attr> <FilterOperator> <value> |
          "(" <FilterComponent> ")"

        <FilterOperator> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt"
        | "-gt" |
          "-approx" | "-bor" | "-band" | "-recursivematch" | "-like" |
          "-notlike"

        <JoinOperator> ::= "-and" | "-or"

        <NotOperator> ::= "-not"

        <attr> ::= <PropertyName> | <LDAPDisplayName do atributo>

        <value>::= <esse valor será comparado aos dados do objeto para
        o atributo <ATTR> usando o operador de filtro especificado>
       
    Para obter uma lista de nomes de propriedade com suporte e seus
    tipos, consulte get-help about_ActiveDirectory_ObjectModel.


  Operadores aceitos
    A tabela a seguir mostra operadores de filtro de pesquisa
    frequentemente usados.


                                                    
    Operador         Descrição                     Equivalente LDAP
    --------------- ------------------------------ --------------------- 
    -eq              É igual a. Não aceita           =
                     pesquisa com curingas.
    -ne              É diferente de. Não aceita      !x = y
                     pesquisa com curingas.
    -approx          Aproximadamente igual a         ~=
    -le              Lexicograficamente menor que    <=
                     ou igual a
    -lt              Lexicograficamente menor que    !x >= y
    -ge              Lexicograficamente maior que    >=
                     ou igual a
    -gt              Lexicograficamente maior que    !x <= y

    -and             E                               &
    -or              OU                              |
    -not             NÃO                             !
    -bor             OR bit a bit                    :1.2.840.113556.1.4.804:=    
    -band            AND bit a bit                   :1.2.840.113556.1.4.803:=    
    -recursivematch  Use LDAP_MATCHING_RULE_IN_CHAIN :1.2.840.113556.1.4.1941:=
                     (Observação: esse controle 
                     funciona apenas com o Windows 
                     2008 ou posterior.)
    -like            Semelhante a -eq e aceita a     =
                     comparação com curingas. O 
                     único caractere curinga 
                     aceito é: *     
    -notlike         Diferente. Aceita a comparação  !x = y
                     com curingas.        


    Nota: curingas do PowerShell, diferentes de "*", como "?" não são
    aceitos pela sintaxe do parâmetro -Filter.


  Precedência de operador
    A listagem a seguir mostra a precedência de operadores para
    filtros da maior para a menor.

    Maior precedência:  -eq | -ge | -le | -approx | -band | -bor |
                          -recursivematch | -ne | -like
                        -not
                        -and
    Menor precedência:  -or


  Caracteres especiais
    A sequência de escape a seguir deve ser usada para especificar
    caracteres especiais em dados STRING do Filtro do AD, ou seja,
    dados entre " " ou ' ' (aspas duplas ou simples).

    Caractere ASCII     Substituto de sequência de escape
    ------------------- ------------------------------------------------
    "                   `"  (Essa sequência de escape só será
                             necessária se os dados STRING forem 
                             incluídos entre aspas duplas.)
    '                   ''  (Essa sequência de escape só será
                             necessária se os dados da STRING forem 
                             incluídos entre aspas simples.)
    NUL                 \00 (Essa é uma sequência de escape de LDAP
                             padrão.)
    \                   \5c (Essa é uma sequência de escape de LDAP
                             padrão.)


  Caracteres especiais LDAP
    O analisador ADFilter converterá automaticamente todos os
    caracteres abaixo localizados em dados STRING, ou seja, dados
    entre " " ou ' ', para sua sequência de escape de LDAP. Os
    usuários finais não precisam conhecer essas sequências de escape
    de LDAP.

    Caractere ASCII     Substituto de sequência de escape
    ------------------- ------------------------------------------------
    *                    \2a  (O caractere * será convertido apenas em
                               comparações -eq e -ne. Os usuários devem 
                               usar operadores -like e -notlike para a 
                               comparação com curingas.)
    (                    \28
    )                    \29
    /                    \2f



  Outros tópicos de suporte do módulo do Active Directory
    Para obter mais informações sobre como otimizar filtros, consulte
    Creating More Efficient Microsoft Active Directory-Enabled
    Applications na biblioteca do MSDN.

    Para obter mais informações sobre objetos do módulo do Active
    Directory e seus atributos, consulte about_ActiveDirector
    y_ObjectModel.

    Para obter mais informações sobre a sintaxe da Linguagem de
    Expressão do Windows PowerShell, consulte about_filter.

    Observação: o tópico about_filter do PowerShell refere-se a mais
    tópicos com suporte de linguagem de expressão.


CONSULTE TAMBÉM
    about_ActiveDirectory
    about_ActiveDirectory_ObjectModel
    about_filter
