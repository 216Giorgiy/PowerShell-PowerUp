РАЗДЕЛ
    Фильтр Active Directory

КРАТКОЕ ОПИСАНИЕ
    Описывает синтаксис и поведение фильтра поиска, поддерживаемого
    модулем Active Directory для Windows PowerShell.

ПОЛНОЕ ОПИСАНИЕ
    Большинство командлетов get-AD* модуля Active Directory используют
    для поиска объектов параметр Filter. Параметр Filter был
    реализован в качестве замены функции LDAP Filter и поддерживает
    переменные PowerShell, сложные типы данных, усовершенствованные возможности
    проверки ошибок и расширенную для Active Directory форму языка
    PowerShell Expression Language.

    Дополнительные сведения о синтаксисе языка Windows PowerShell
    Expression Language см в разделе about_filter.

    Примечание. В разделе about_filter справки PowerShell содержатся
    ссылки на другие вспомогательные разделы о языке
    Expression Language.

  
  Поддержка синтаксиса фильтра LDAP
    Поддержка синтаксиса фильтра LDAP реализуется через параметр
    LDAPFilter. Примеры фильтров LDAP, а также примеры фильтров
    нового модуля Active Directory, приведены в разделе "Примеры
    фильтров" этого раздела.


  Глубина и ширина поиска
    Глубина и ширина поиска с использованием фильтра ограничивается
    двумя параметрами командлетов модуля Active Directory:
    SearchBase и SearchScope.

    Если при функционировании в контексте поставщика Active Directory
    не указан параметр Searchbase, для SearchBase по умолчанию
    устанавливается значение, соответствующее текущему пути. При
    функционировании без использования поставщика Active Directory
    для параметра SearchBase по умолчанию устанавливается значение
    параметра DefaultNamingContext сервера.
   
    Параметр SearchScope по умолчанию имеет значение Subtree
    перечисляемого типа ADSearchScope.

    Дополнительные сведения см. в описаниях параметров SearchBase и
    SearchScope любого командлета Get-AD*.


  Поведение при возврате результатов поиска
    Поведение модуля Active Directory при возврате результатов поиска
    определяется двумя параметрами командлета: ResultPageSize
    и ResultSetSize.

    ResultSetSize задает максимальное число возвращаемых объектов.

    ResultPageSize задает максимальное число объектов для каждой из
    возвращаемых страниц информации.

    Дополнительные сведения см. в описаниях параметров ResultPageSize
    и ResultSetSize любого командлета get-AD*.


  Поведение тайм-аута
    Ниже приведены условия применения тайм-аутов в модуле Active
    Directory и описано, как можно управлять ими.

    Тайм-аут модуля Active Directory для всех операций по умолчанию
    равен 2 минутам.

    Для операции поиска модуль Active Directory использует элемент
    управления страницами, при этом тайм-аут для поиска каждой
    страницы составляет 2 минуты.

    Примечание. Поскольку при поиске могут использоваться несколько
    запросов страницы сервера, общее время поиска может превышать
    две минуты.

    Ошибка TimeoutException указывает, что время ожидания истекло.

    Для операции поиска можно установить меньший размер страницы (с
    помощью параметра ResultPageSize), если возникает ошибка TimeoutException.
    
    Если после внесения таких изменений по-прежнему возникает ошибка
    TimeoutException, следует рассмотреть возможность оптимизации фильтра,
    воспользовавшись инструкциями в подразделе "Оптимизация фильтров"
    этого раздела.


  Оптимизация фильтров
    Следующие рекомендации позволяют повысить качество
    работы фильтров.

    Не используйте параметр Recursive, поскольку он приводит к более
    интенсивному использованию ресурсов при операции поиска.

    Не используйте побитовые операторы И и ИЛИ. Дополнительные сведения см.
    в подразделе "Поддерживаемые операции" далее в этом разделе.

    Не используйте логический оператор НЕ.

    Разбейте операцию поиска не насколько запросов с более
    узкими условиями,

    Примечание. Полное описание синтаксиса фильтра и рекомендации 
    по использованию фильтров см. в подразделе "Синтаксис фильтра" этого раздела.


  Примеры фильтров

    В следующем разделе приведено большое число примеров использования
    фильтров в распространенных запросах.

    -------------------------- ПРИМЕР 1 --------------------------

    Получение всех элементов:

        Эквивалентный фильтр LDAP
        (objectClass=*)

 
       Get-ADObject -Filter 'ObjectClass -like "*"'


    -------------------------- Пример 2 --------------------------

    Получение элементов, содержащих слово "valery" в поле
    общего имени:

        Эквивалентный фильтр LDAP
        (cn=*valery*)

        Get-ADObject -Filter 'CN -like "*valery*"'


    -------------------------- Пример 3 --------------------------


    Получение элементов с числом неверно введенных паролей
    больше пяти.

        Эквивалентный фильтр LDAP
        (badpwdcount>=5)

        Get-ADUser -Filter 'badpwdcount -ge 5'



    -------------------------- Пример 4 --------------------------


    Получение всех пользователей с атрибутом адреса электронной почты:

        Эквивалентный фильтр LDAP
        (&(objectClass=user)(email=*))


        Get-ADUser -filter 'email -like "*"'

        -или-

        Get-ADObject -filter 'email -like "*" -and ObjectClass -eq
        "user"'


    -------------------------- Пример 5 --------------------------

    Получение всех записей пользователей с атрибутом адреса
    электронной почты и фамилией "Korepin":

        Эквивалентный фильтр LDAP
        (&(sn=korepin)(objectClass=user)(email=*))


        Get-ADUser -Filter 'Email -like "*" -and SurName -eq
        "korepin"'

        -или-

        Get-ADUser -Filter 'Email -like "*" -and sn -eq "korepin"'


    -------------------------- Пример 6 --------------------------


    Получение всех записей пользователей, у которых общее имя
    начинается с "anton", и пользователей с общим именем "ivan" или
    "svetlana":

        Эквивалентный фильтр LDAP
        (&(objectClass=user) | (cn=anton*)(cn=ivan)(cn=svetlana))


        Get-ADUser -Filter 'CN -like "anton*" -or CN -eq "ivan" -or
        CN -eq "svetlana"'


    Во втором скрипте PowerShell в этом примере показана более сложная
    логика с использованием приоритетов, обозначаемых скобками.


        Get-ADObject -Filter 'objectClass -eq "user" -and
         (CN -like "anton*" -or CN -eq "ivan" -or CN -eq "svetlana")'


    -------------------------- Пример 7 --------------------------


    Получение всех записей без атрибута адреса электронной почты:

        Эквивалентный фильтр LDAP
        (!(email=*))


        Get-ADUser -Filter '-not Email -like "*"'

        -или-

        Get-ADUser -Filter 'Email -notlike "*"'


    -------------------------- Пример 8 --------------------------


    Получение всех пользователей, которые не входили в систему
    с 1 января 2007 г.

        Эквивалентный фильтр LDAP
        (&(lastlogon<=X)(objectClass=user))
        //где X - количество 100-наносекундных интервалов с 1 января
        1601 года


        $date = new-object System.DateTime -ArgumentList @(2007,1,1,0,0,0)
        Get-ADUser -Filter '-not LastLogon -le $date'


    -------------------------- Пример 9 --------------------------


    Получение всех пользователей, вошедших в систему в течение
    последних 5 дней.

        Эквивалентный фильтр LDAP
        (&(lastLogon>=128812906535515110)
          (objectClass=user)(!(objectClass=computer)))


        $date = (get-date) - (new-timespan -days 5)
        Get-ADUser -Filter 'lastLogon -gt $date'


    -------------------------- Пример 10 -------------------------


    В следующем примере строка запроса обеспечивает поиск объектов
    группы, у которых установлен флаг ADS_GROUP_TYPE_SECURITY
    _ENABLED. Следует иметь в виду, что для сравнения используется
    десятичное значение флага ADS_GROUP_TYPE_SECURITY_ENABLED
    (0x80000000 = 2147483648).

        Эквивалентный фильтр LDAP
        (&(objectCategory=group)(groupType:1.2.840.113556.1.4.803:=2147483648))

        Get-ADGroup -filter 'groupType -band 0x80000000'


    -------------------------- Пример 11 -------------------------


    LDAP_MATCHING_RULE_IN_CHAIN - это OID соответствующего правила,
    которое предназначено для предоставления метода поиска родителя
    объекта. Многие приложения, использующие Active Directory и
    службы Active Directory облегченного доступа к каталогам, обычно
    работают с иерархическими данными, для которых установлены
    отношения "родитель-потомок". Ранье приложения выполняли
    транзитивное расширение группы, чтобы определить принадлежность
    к группе, что создавало большую нагрузку на сеть. При этом
    приложениям требовалось выполнить несколько циклов запросов для
    полного прохода по ссылке, чтобы определить, находится ли объект
    "в цепочке".

    В качестве примера такого запроса можно привести определение того,
    является ли пользователь user1 членом группы group1.

    ПРИМЕЧАНИЕ. Пользователь user1 может не являться непосредственным
    членом группы group1. Он может являться членом другой группы,
    которая является членом группы group1.

    В качестве базы необходимо установить DN пользователя (cn=user1, 
    cn=users, dc=x), в качестве области - базу, и выполнить
    следующий запрос.

        Эквивалентный фильтр LDAP
        (memberof:1.2.840.113556.1.4.1941:=(cn=Group1,OU=groupsOU,DC
        =x)))

        Get-ADUser -Filter 'memberOf -RecursiveMatch "C
        N=Administrators,
        CN=Builtin,DC=Fabrikam,DC=com"'
        -SearchBase "CN=Administrator,CN=Users,DC=Fabrikam,DC=com"

    ---------------------------------------------------------------

  Синтаксис фильтра
    Ниже представлены определения синтаксиса параметра Filter в языке
    PowerShell Expression Language в форме Бэкуса-Наура.

        <фильтр>  ::= "{" <список_компонентов_фильтра> "}"

        <список_компонентов_фильтра> ::= <компонент_фильтра> |
          <компонент_фильтра> <оператор_Join> <компонент_фильтра> |
          <оператор_Not>  <компонент_фильтра>

        <компонент_фильтра> ::= <атрибут> <оператор_фильтра>
        <значение> |
          "(" <компонент_фильтра> ")"

        <оператор_фильтра> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt" |
        "-gt" | "-approx" | "-bor" | "-band" | "-recursivematch" | "-like" |
          "-notlike"

        <оператор_Join> ::= "-and" | "-or"

        <оператор_Not> ::= "-not"

        <атрибут> ::= <имя_свойства> | <параметр
        LDAPDisplayName атрибута>

        <значение>::= <это значение будет сравниваться с данными
        объекта (атрибут <атрибут>) с помощью заданного оператора
        фильтра>

    Список поддерживаемых имен свойств и их типов см. в разделе get
    -help about_ActiveDirectory_ObjectModel.

  Поддерживаемые операторы
    В следующей таблице описаны часто используемые операторы
    фильтра поиска.

                                                    
    Оператор         Описание                           Эквивалент LDAP
    --------------- ----------------------------------- ---------------------
    
    -eq              Равно. Поиск с использованием      =
                     подстановочных знаков
                     не поддерживается.            
    -ne              Не равно. Поиск с использованием   !x = y
                     подстановочных знаков
                     не поддерживается.         
    -approx          Примерно равно.                    ~=
    -le              Лексикографически меньше           <=
                     или равно     
    -lt              Лексикографически меньше           !x >= y
    -ge              Лексикографически больше           >=
                     или равно       
    -gt              Лексикографически больше           !x <= y

    -and             И                                  &
    -or              ИЛИ                                |
    -not             НЕ                                 !
    -bor             Побитовое ИЛИ                      :1.2.840.113556.1.4.804:=
    -band            Побитовое И                        :1.2.840.113556.1.4.803:=
    -recursivematch  Используйте                        :1.2.840.113556.1.4.1941:=
                     LDAP_MATCHING_RULE_IN_CHAIN
                     (Примечание. Этот элемент
                     управления работает только с
                     Windows 2008 и более поздними
                     версиями.) 
    -like            Аналог -eq, поддерживается         =
                     сравнение с учетом подстановочных
                     знаков. Единственный 
                     поддерживаемый подстановочный 
                     знак: *.    
    -notlike         Не похоже. Поддерживается          !x = y
                     сравнение с учетом подстановочных
                     знаков.         

    Примечание. Подстановочные знаки PowerShell, отличные от "*",
    например "?", не поддерживаются синтаксисом параметра -Filter.

  Приоритет операторов
    В следующем примере демонстрируется приоритет выполнения
    операторов фильтров от высшего к низшему.

    Высший приоритет: -eq | -ge | -le | -approx | -band | -bor |
                        -recursivematch | -ne | -like
                      -not
                      -and
    Низший приоритет: -or

  Специальные знаки
    Для указания специальных знаков в данных фильтра AD типа STRING,
    т. е. в данных, заключенных в двойные (" ") или одинарные (' ')
    кавычки, должна использоваться следующая escape-последовательность.
    

    ASCII-символ       Escape-последовательность для замены
    ------------------ ------------------------------------------------
    
    "                  `" (Эта escape-последовательность требуется
                           только в том случае, если данные типа STRING
                           заключены в двойные кавычки.)
    '                  " (Эта escape-последовательность требуется
                          только в том случае, если данные типа STRING
                          заключены в одинарные кавычки.)
    NUL                \00 (Стандартная escape-последовательность
                            LDAP.)
    \                  \5c (Стандартная escape-последовательность
                            LDAP.)

  Специальные знаки LDAP
    Средство синтаксического анализа ADFilter автоматически
    преобразует все перечисленные ниже знаки, найденные в данных
    типа STRING (т. е. в данных, заключенных в двойные (" ") или
    одинарные (' ') кавычки) в соответствующую escape-последовательность LDAP.
    Конечным пользователям не требуется знать об этих escape-последовательностях
    LDAP.

    ASCII-символ        Escape-последовательность для замены
    ------------------- ------------------------------------------------
    
    *                   \2a (Знак * будет преобразован только при
                             сравнении -eq или -ne. Для сравнения 
                             с учетом подстановочных знаков пользователям
                             следует использовать операторы -like и
                             -notlike.)
    (                   \28
    )                   \29
    /                   \2f


  Другие вспомогательные разделы, посвященные модулю Active Directory
    Дополнительные сведения об оптимизации фильтров см. в разделе
    "Создание более эффективных приложений с поддержкой Microsoft
    Active Directory" в библиотеке MSDN.

    Дополнительные сведения об объектах модулей Active Directory и их
    атрибутах см. в разделе about_ActiveDirectory_ObjectModel.

    Дополнительные сведения о синтаксисе языка Windows PowerShell
    Expression Language см в разделе about_filter.

    Примечание. В разделе about_filter справки PowerShell содержатся
    ссылки на другие вспомогательные разделы о языке
    Expression Language.


CМ. ТАКЖЕ
    about_ActiveDirectory
    about_ActiveDirectory_ObjectModel
    about_filter

