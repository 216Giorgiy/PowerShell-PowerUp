<?xml version="1.0" encoding="utf-8"?>

<helpItems schema="maml">
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹에 하나 이상의 멤버를 추가합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADGroupMember cmdlet은 하나 이상의 사용자, 그룹, 서비스 계정 또는 컴퓨터를 Active Directory 그룹의 새 멤버로 추가합니다.
 
Identity 매개 변수는 새 멤버를 받는 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 그룹 개체 변수를 지정하거나 파이프라인을 통해 Identity 매개 변수로 그룹 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 가져온 다음 파이프라인을 통해 Add-ADGroupMember cmdlet으로 개체를 전달할 수 있습니다. 

Members 매개 변수는 그룹에 추가할 새 멤버를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM 계정 이름으로 새 멤버를 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자, 컴퓨터 및 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 새 멤버를 지정하는 경우 쉼표로 구분된 목록을 사용합니다. 파이프라인을 통해 이 cmdlet으로 사용자, 컴퓨터 또는 그룹 개체를 전달할 수는 없습니다. 파이프라인을 사용하여 사용자, 컴퓨터 또는 그룹 개체를 추가하려면 Add-ADPrincipalGroupMembership cmdlet을 사용합니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>그룹에 추가할 사용자, 그룹 및 컴퓨터 개체 집합을 쉼표로 구분된 목록으로 지정합니다. 각 개체를 식별하려면 다음 속성 값 중 하나를 사용합니다. 참고: 괄호 안의 식별자는 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.

다음 예에서는 고유 이름 및 SAM 계정 이름 속성을 지정하여 추가할 사용자 및 그룹을 지정합니다.
  -Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

다음 예에서는 현재 Windows PowerShell 세션에 정의되어 있는 사용자 및 그룹 개체를 매개 변수에 대한 입력으로 지정합니다. 

  -Members $userObject, $groupObject

이 매개 변수에 대해 지정된 개체는 Microsoft.ActiveDirectory.Management.ADPrincipal 개체로 처리됩니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup

파이프라인을 통해 이 매개 변수로 개체를 전달할 수는 없습니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>그룹에 추가할 사용자, 그룹 및 컴퓨터 개체 집합을 쉼표로 구분된 목록으로 지정합니다. 각 개체를 식별하려면 다음 속성 값 중 하나를 사용합니다. 참고: 괄호 안의 식별자는 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.

다음 예에서는 고유 이름 및 SAM 계정 이름 속성을 지정하여 추가할 사용자 및 그룹을 지정합니다.
  -Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

다음 예에서는 현재 Windows PowerShell 세션에 정의되어 있는 사용자 및 그룹 개체를 매개 변수에 대한 입력으로 지정합니다. 

  -Members $userObject, $groupObject

이 매개 변수에 대해 지정된 개체는 Microsoft.ActiveDirectory.Management.ADPrincipal 개체로 처리됩니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup

파이프라인을 통해 이 매개 변수로 개체를 전달할 수는 없습니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 그룹 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember SvcAccPSOGroup SQL01,SQL02
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 SQL01,SQL02인 사용자 계정을 SvcAccPSOGroup 그룹에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember</dev:code>
  			<dev:remarks>
 				<maml:para>cmdlet Add-ADGroupMember(명령 파이프라인 위치 1)
다음 매개 변수에 대한 값을 제공하십시오.
Identity: RodcAdmins
Members[0]: JohnSmith
Members[1]: JeffPrice
Members[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>이 cmdlet의 기본 동작을 보여 줍니다(매개 변수가 지정되지 않음). SamAccountName이 JohnSmith 및 JeffPrice인 사용자 계정을 RodcAdmins 그룹에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Server localhost:60000 -SearchBase &quot;OU=AccountDeptOU,DC=AppNC&quot; -filter { name -like &quot;AccountLeads&quot; } | Add-ADGroupMember -Members &quot;CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 &quot;AccountLeads&quot;인 AD LDS 인스턴스 localhost:60000의 조직 구성 단위 &quot;OU=AccountDeptOU,DC=AppNC&quot;에서 그룹을 가져온 다음 Add-ADGroupMember로 파이프합니다. 이 cmdlet은 DistinguishedName &quot;CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC&quot;인 사용자 계정을 이 그룹에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144933</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>멤버를 하나 이상의 Active Directory 그룹에 추가합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADPrincipalGroupMembership cmdlet은 사용자, 그룹, 서비스 계정 또는 컴퓨터를 하나 이상의 Active Directory 그룹에 새 멤버로 추가합니다.

Identity 매개 변수는 추가할 새 사용자, 컴퓨터 또는 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM 계정 이름으로 사용자, 그룹 또는 컴퓨터를 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 사용자, 그룹 또는 컴퓨터 개체 변수를 지정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 가져온 다음 파이프라인을 통해 Add-ADPrincipalGroupMembership cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADUser 또는 Get-ADComputer를 사용하여 파이프라인을 통해 전달할 사용자 및 컴퓨터 개체를 가져올 수 있습니다.

이 cmdlet은 파이프라인에서 모든 사용자, 컴퓨터 및 그룹 개체를 수집한 다음 하나의 Active Directory 작업을 사용하여 이러한 개체를 지정된 개체에 추가합니다.

MemberOf 매개 변수는 새 멤버를 받는 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 파이프라인을 통해 MemberOf 매개 변수로 그룹 개체를 전달할 수는 없습니다. 파이프라인을 통해 그룹을 전달하여 그룹에 추가하려면 Add-ADGroupMember cmdlet을 사용합니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>사용자, 컴퓨터 또는 그룹을 멤버로 추가할 Active Directory 그룹을 지정합니다. 다음 값 중 하나를 제공하여 그룹을 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

둘 이상의 그룹을 지정하는 경우 쉼표를 사용하여 목록에서 그룹을 구분합니다.

다음 예에서는 SAM 계정 이름 값을 사용하여 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>사용자, 컴퓨터 또는 그룹을 멤버로 추가할 Active Directory 그룹을 지정합니다. 다음 값 중 하나를 제공하여 그룹을 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

둘 이상의 그룹을 지정하는 경우 쉼표를 사용하여 목록에서 그룹을 구분합니다.

다음 예에서는 SAM 계정 이름 값을 사용하여 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자, 컴퓨터 또는 그룹을 나타내는 보안 주체 개체(Microsoft.ActiveDirectory.Management.ADPrincipal)는 Identity 매개 변수가 받습니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 사용자, 컴퓨터 또는 그룹 개체를 나타내는 보안 주체 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership -Identity SQLAdmin1 -MemberOf DlgtdAdminsPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 &quot;SQLAdmin1&quot;인 사용자를 &quot;DlgtdAdminsPSOGroup&quot; 그룹에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount*&quot;' | Add-ADPrincipalGroupMembership -MemberOf SvcAccPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>이름에 &quot;SvcAccount&quot;가 포함된 모든 사용자를 가져오고 &quot;SvcAccPSOGroup&quot; 그룹에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership</dev:code>
  			<dev:remarks>
 				<maml:para>cmdlet Add-ADPrincipalGroupMembership(명령 파이프라인 위치 1)
다음 매개 변수에 대한 값을 제공하십시오.
Identity: JeffPrice
MemberOf[0]: RodcAdmins
MemberOf[1]: Allowed RODC Password Replication Group
MemberOf[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>이 cmdlet의 기본 동작을 보여 줍니다(매개 변수가 지정되지 않음).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser  -Server localhost:60000 -SearchBase &quot;DC=AppNC&quot; -filter { Title -eq &quot;Account Lead&quot; -and Office -eq &quot;Branch1&quot; } | Add-ADPrincipalGroupMembership -MemberOf &quot;CN=AccountLeads,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>제목이 &quot;Account Lead&quot;인 AD LDS 인스턴스 &quot;localhost:60000&quot;의 &quot;Branch1&quot;에 있는 모든 직원을 DistinguishedName &quot;CN=AccountLeads,OU=AccountDeptOU,DC=AppNC&quot;인 그룹에 추가합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144934</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 사용자 및 그룹에 세부화된 암호 정책을 적용합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADFineGrainedPasswordPolicySubject cmdlet은 하나 이상의 글로벌 보안 그룹 및 사용자에 세분화된 암호 정책을 적용합니다. 

Identity 매개 변수는 적용할 세분화된 암호 정책을 지정합니다. 고유 이름, GUID 또는 이름으로 세분화된 암호 정책을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localPasswordPolicyObject&gt;와 같은 세분화된 암호 정책 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 세분화된 암호 정책 개체를 전달할 수도 있습니다. 예를 들어 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 세분화된 암호 정책 개체를 가져온 다음 파이프라인을 통해 Add-ADFineGrainedPasswordPolicySubject cmdlet으로 개체를 전달할 수 있습니다. 

Subjects 매개 변수는 사용자 및 글로벌 보안 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자 또는 글로벌 보안 그룹을 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자 및 글로벌 보안 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 사용자 또는 그룹을 지정하는 경우 쉼표로 구분된 목록을 사용합니다. 파이프라인을 통해 Subjects 매개 변수로 사용자 및 글로벌 보안 그룹 개체를 전달하려면 Get-ADUser 또는 Get-ADGroup cmdlet을 사용하여 사용자 또는 그룹 개체를 검색한 다음 파이프라인을 통해 Add-ADFineGrainedPasswordPolicySubject cmdlet으로 이러한 개체를 전달합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>하나 이상의 사용자 또는 그룹을 지정합니다. 둘 이상의 사용자 또는 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 다음 속성 값 중 하나로 사용자 또는 그룹을 식별할 수 있습니다.
  DN(고유 이름)
    예: CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 고유 이름 및 SAM 계정 이름을 사용하여 이 매개 변수를 사용자 및 그룹 목록으로 설정하는 방법을 보여 줍니다.
  -Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>하나 이상의 사용자 또는 그룹을 지정합니다. 둘 이상의 사용자 또는 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 다음 속성 값 중 하나로 사용자 또는 그룹을 식별할 수 있습니다.
  DN(고유 이름)
    예: CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 고유 이름 및 SAM 계정 이름을 사용하여 이 매개 변수를 사용자 및 그룹 목록으로 설정하는 방법을 보여 줍니다.
  -Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy, Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책 개체는 Identity 매개 변수가 받습니다. 사용자 및 보안 그룹 개체를 나타내는 하나 이상의 보안 주체 개체는 Subjects 매개 변수가 받습니다. Subjects 매개 변수에는 다음과 같은 파생 보안 주체 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 세분화된 암호 정책 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DomainUsersPSO -Subjects 'Domain Users'
</dev:code>
  			<dev:remarks>
  			        <maml:para>DomainUsersPSO라는 세분화된 암호 정책을 글로벌 보안 그룹 'Domain Users'에 적용합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>DlgtdAdminsPSO라는 세분화된 암호 정책을 SamAccountName이 BobKe 및 KimAb인 두 사용자에 적용합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects DlgtdAdminGroup</dev:code>
  			<dev:remarks>
  			        <maml:para>DlgtdAdminsPSO라는 세분화된 암호 정책을 DlgtdAdminGroup 그룹에 적용합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Filter {lastname -eq &quot;John&quot;} | Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>DlgtdAdminsPSO라는 세분화된 암호 정책을 이름이 John인 모든 사용자에 적용합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144935</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>읽기 전용 도메인 컨트롤러 암호 복제 정책의 허용 또는 거부 목록에 사용자, 컴퓨터 및 그룹을 추가합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADDomainControllerPasswordReplicationPolicy cmdlet은 RODC(읽기 전용 도메인 컨트롤러) 암호 복제 정책의 허용 또는 거부 목록에 하나 이상의 사용자, 컴퓨터 및 그룹을 추가합니다. 

Identity 매개 변수는 허용 및 거부 목록을 사용하여 암호 복제 정책을 적용하는 RODC를 지정합니다. GUID, IPV4Address, 전역 IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. 도메인 컨트롤러를 나타내는 서버 개체의 이름, 서버 개체의 NTDS 설정 개체에 대한 DN(고유 이름), 구성 파티션 아래에 있는 서버 개체의 NTDS 설정 개체에 대한 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN으로 도메인 컨트롤러를 식별할 수도 있습니다. Identity 매개 변수를 $&lt;localDomainControllerobject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 컨트롤러 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomainController cmdlet을 사용하여 도메인 컨트롤러 개체를 가져온 다음 파이프라인을 통해 Add-ADDomainControllerPasswordReplicationPolicy cmdlet으로 개체를 전달할 수 있습니다. 읽기 전용 도메인 컨트롤러를 지정해야 합니다. 이 매개 변수에 쓰기 가능한 도메인 컨트롤러를 지정하는 경우 cmdlet은 종료되지 않은 오류를 반환합니다. 

AllowedList 매개 변수는 허용 목록에 추가할 사용자, 컴퓨터 및 그룹을 지정합니다. 마찬가지로 DeniedList 매개 변수는 거부 목록에 추가할 사용자, 컴퓨터 및 그룹을 지정합니다. AllowedList 및 DeniedList 매개 변수 중 하나나 둘 모두를 지정해야 합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자, 컴퓨터 또는 그룹을 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자, 컴퓨터 또는 그룹 변수를 지정할 수도 있습니다. 둘 이상의 항목을 지정하는 경우 쉼표로 구분된 목록을 사용합니다. 지정한 사용자, 컴퓨터 또는 그룹이 허용 또는 거부 목록에 없더라도 cmdlet은 오류를 반환하지 않습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 계정의 목록에 추가할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 권한이 거부된 계정의 목록에 추가할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 계정의 목록에 추가할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 권한이 거부된 계정의 목록에 추가할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					RODC(읽기 전용 도메인 컨트롤러) 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 SamAccountName이 포함된 사용자 계정을 주어진 RODC의 허용 목록에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 SamAccountName이 포함된 사용자 계정을 주어진 RODC의 허용 목록에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144936</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 컴퓨터에 하나 이상의 서비스 계정을 추가합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Add-ADComputerServiceAccount cmdlet은 Active Directory 컴퓨터에 하나 이상의 컴퓨터 서비스 계정을 추가합니다. 

Computer 매개 변수는 새 서비스 계정을 호스트할 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. Computer 매개 변수를 $&lt;localComputerobject&gt;와 같은 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Computer 매개 변수로 컴퓨터 개체를 전달할 수도 있습니다. 예를 들어 Get-ADComputer cmdlet을 사용하여 컴퓨터 개체를 검색한 다음 파이프라인을 통해 Add-ADComputerServiceAccount cmdlet으로 개체를 전달할 수 있습니다. 

ServiceAccount 매개 변수는 추가할 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. $&lt;localServiceAccountObject&gt;와 같은 서비스 계정 개체 변수를 지정할 수도 있습니다. 둘 이상의 계정을 지정하는 경우 쉼표로 구분된 목록을 사용합니다.

참고: 서비스 계정을 추가하는 작업은 서비스 계정을 로컬로 설치하는 작업과 다릅니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>하나 이상의 Active Directory 서비스 계정을 지정합니다. 다음 속성 값 중 하나를 사용하여 서비스 계정을 식별할 수 있습니다. 
  고유 이름 
    예: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
   SAM 계정 이름(sAMAccountName) 
    예: serviceadmin

다음 예에서는 SAM 계정 이름을 사용하여 이 매개 변수에 서비스 계정을 지정하는 방법을 보여 줍니다.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>하나 이상의 Active Directory 서비스 계정을 지정합니다. 다음 속성 값 중 하나를 사용하여 서비스 계정을 식별할 수 있습니다. 
  고유 이름 
    예: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
   SAM 계정 이름(sAMAccountName) 
    예: serviceadmin

다음 예에서는 SAM 계정 이름을 사용하여 이 매개 변수에 서비스 계정을 지정하는 방법을 보여 줍니다.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Computer 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 컴퓨터 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1
</dev:code>
  			<dev:remarks>
  			        <maml:para>서비스 계정 'SvcAcct1'을 컴퓨터 계정 'ComputerAcct1'에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2
</dev:code>
  			<dev:remarks>
  			        <maml:para>두 서비스 계정 'SvcAcct1,SvcAcct2'를 컴퓨터 계정 'ComputerAcct1'에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144937</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Reset-ADServiceAccountPassword
		</command:name>
		<maml:description>
			<maml:para>컴퓨터의 서비스 계정 암호를 다시 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Reset</command:verb>
		<command:noun>ADServiceAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Reset-ADServiceAccountPassword cmdlet은 로컬 컴퓨터의 서비스 계정 암호를 다시 설정합니다. 서비스 계정이 설치된 컴퓨터에서 이 cmdlet을 실행해야 합니다.
 
Identity 매개 변수는 암호가 다시 설정되는 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localServiceAccountObject&gt;와 같은 서비스 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 서비스 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADServiceAccount cmdlet을 사용하여 서비스 계정 개체를 검색한 다음 파이프라인을 통해 Reset- ADServiceAccountPassword cmdlet으로 개체를 전달할 수 있습니다.

참고: 컴퓨터의 암호를 다시 설정하면 해당 컴퓨터의 서비스 계정 암호도 모두 다시 설정됩니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Apply-ADServiceAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Reset-ADServiceAccountPassword ServiceAccount1
</dev:code>
  			<dev:remarks>
  			        <maml:para>서비스 계정 'ServiceAccount1'의 암호를 다시 설정합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144938</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정의 만료 날짜를 지웁니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Clear-ADAccountExpiration cmdlet은 Active Directory 사용자 또는 컴퓨터 계정의 만료 날짜를 지웁니다. 계정의 만료 날짜를 지우면 계정이 만료되지 않습니다.

Identity 매개 변수는 수정할 사용자 또는 컴퓨터 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자 또는 그룹을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localUserObject&gt;와 같은 사용자 또는 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 사용자 또는 컴퓨터 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser, Get-ADComputer 또는 Search-ADAccount cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Clear-ADAccountExpiration cmdlet으로 개체를 전달할 수 있습니다. 

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체(Microsoft.ActiveDirectory.Management.ADAccount)는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity JeffPrice
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 JeffPrice인 사용자의 계정 만료 날짜를 지웁니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity &quot;CN=JeffPrice,DC=AppNC&quot; -server &quot;FABRIKAM-SVR1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스 &quot;FABRIKAM-SVR1:60000&quot;에서 DistinguishedName이 &quot;CN=JeffPrice,DC=AppNC&quot;인 사용자의 계정 만료 날짜를 지웁니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144939</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정을 사용하지 않도록 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Disable-ADAccount cmdlet은 Active Directory 사용자, 컴퓨터 또는 서비스 계정을 사용하지 않도록 설정합니다.
 
Identity 매개 변수는 사용하지 않도록 설정할 Active Directory 사용자, 컴퓨터 서비스 계정 또는 기타 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 사용자 계정 개체를 검색한 다음 파이프라인을 통해 Disable-Account cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADComputer 및 Search-ADAccount를 사용하여 계정 개체를 검색할 수 있습니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 KimAB인 계정을 사용하지 않도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;인 계정을 사용하지 않도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Disable-ADAccount
</dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; OU의 모든 계정을 사용하지 않도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144940</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>Active Directory 선택적 기능을 사용하지 않도록 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Disable-ADOptionalFeature는 특정 도메인 모드나 포리스트 모드와 연결된 Active Directory 선택적 기능을 사용하지 않도록 설정합니다.

Identity 매개 변수는 사용하지 않도록 설정할 Active Directory 선택적 기능을 지정합니다. DN(고유 이름), 기능 GUID 또는 개체 GUID로 선택적 기능을 식별할 수 있습니다. 매개 변수를 $&lt;localOptionalFeatureObject&gt;와 같은 선택적 기능 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 선택적 기능 개체를 전달할 수도 있습니다. 예를 들어 Get-ADOptionalFeature cmdlet을 사용하여 선택적 기능 개체를 검색한 다음 파이프라인을 통해 Disable-ADOptionalFeature cmdlet으로 개체를 전달할 수 있습니다.

Scope 매개 변수는 선택적 기능이 사용되지 않는 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값은 Domain 및 Forest입니다. 

Target 매개 변수는 선택적 기능이 사용되지 않는 도메인 또는 포리스트를 지정합니다. FQDN(정규화된 도메인 이름), NetBIOS 이름 또는 도메인 NC(도메인 명명 컨텍스트)의 DN(고유 이름)으로 도메인 또는 포리스트를 식별할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>기능이 사용되거나 사용되지 않도록 설정되는 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  Domain 또는 0
  Forest 또는 1

다음 예에서는 이 매개 변수를 설정하여 선택적 기능이 포리스트 범위에서 사용되거나 사용되지 않도록 설정하는 방법을 보여 줍니다.
  -Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>선택적 기능을 수정할 도메인 또는 포리스트를 지정합니다. 다음 값 중 하나를 지정하여 대상 도메인 또는 포리스트를 식별할 수 있습니다.  
  포리스트 또는 도메인의 정규화된 도메인 이름 
    예: corp.Fabrikam.com
  포리스트 또는 도메인의 NetBIOS 이름
    예: corp
  도메인 NC(도메인 명명 컨텍스트)의 고유 이름
    예:  DC=corp,DC=Fabrikam,DC=com

다음 예에서는 이 매개 변수를 도메인 NC로 설정하는 방법을 보여 줍니다.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>기능이 사용되거나 사용되지 않도록 설정되는 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  Domain 또는 0
  Forest 또는 1

다음 예에서는 이 매개 변수를 설정하여 선택적 기능이 포리스트 범위에서 사용되거나 사용되지 않도록 설정하는 방법을 보여 줍니다.
  -Scope Forest</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>선택적 기능을 수정할 도메인 또는 포리스트를 지정합니다. 다음 값 중 하나를 지정하여 대상 도메인 또는 포리스트를 식별할 수 있습니다.  
  포리스트 또는 도메인의 정규화된 도메인 이름 
    예: corp.Fabrikam.com
  포리스트 또는 도메인의 NetBIOS 이름
    예: corp
  도메인 NC(도메인 명명 컨텍스트)의 고유 이름
    예:  DC=corp,DC=Fabrikam,DC=com

다음 예에서는 이 매개 변수를 도메인 NC로 설정하는 방법을 보여 줍니다.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					선택적 기능 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'fabrikam' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>포리스트(NetBIOS 이름 'fabrikam')의 선택적 기능(이름 'Feature 1')을 사용하지 않도록 설정합니다. 이 작업은 명명 마스터 FSMO 역할을 가진 DC에 대해 수행해야 합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature -Identity 'CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>포리스트(FQDN 이름 'fabrikam.com')의 선택적 기능(dn 'CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com')을 사용하지 않도록 설정합니다. 이 작업은 명명 마스터 FSMO 역할을 가진 DC에 대해 수행해야 합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionaFeature -Identity '54ec6e43-75a8-445b-aa7b-346a1e096659' -Scope Domain -Target 'DC=fabrikam,DC=com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>도메인(dn 'DC=ntdev,DC=fabrikam,DC=com')의 선택적 기능(기능 GUID '54ec6e43-75a8-445b-aa7b-346a1e096659')을 사용하지 않도록 설정합니다. 이 작업은 명명 마스터 FSMO 역할을 가진 DC에 대해 수행해야 합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스(dn 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}')의 선택적 기능(이름 'Feature 1')을 사용하지 않도록 설정합니다. 이 작업은 명명 마스터 FSMO 역할을 가진 AD LDS 인스턴스에 대해 수행해야 합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144941</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정을 사용하도록 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Enable-ADAccount cmdlet은 Active Directory 사용자, 컴퓨터 또는 서비스 계정을 사용하도록 설정합니다.
 
Identity 매개 변수는 사용하도록 설정할 Active Directory 사용자, 컴퓨터 또는 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Enable-ADAccount cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADComputer 및 Search-ADAccount를 사용하여 계정 개체를 검색할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 KimAb인 계정을 사용하도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;인 계정을 사용하도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Enable-ADAccount
</dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; OU의 모든 계정을 사용하지 않도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144942</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>Active Directory 선택적 기능을 사용하도록 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Enable-ADOptionalFeature는 특정 도메인 모드나 포리스트 모드와 연결된 Active Directory 선택적 기능을 사용하도록 설정합니다. 지정된 도메인 모드나 포리스트 모드에 종속된 Active Directory 선택적 기능은 도메인 모드나 포리스트 모드가 설정된 후 명시적으로 사용하도록 설정해야 합니다.

Identity 매개 변수는 사용하도록 설정할 Active Directory 선택적 기능을 지정합니다. DN(고유 이름), 기능 GUID 또는 개체 GUID로 선택적 기능을 식별할 수 있습니다. 매개 변수를 $&lt;localOptionalFeatureObject&gt;와 같은 선택적 기능 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 선택적 기능 개체를 전달할 수도 있습니다. 예를 들어 Get-ADOptionalFeature cmdlet을 사용하여 선택적 기능 개체를 검색한 다음 파이프라인을 통해 Enable-ADOptionalFeature cmdlet으로 개체를 전달할 수 있습니다.

Scope 매개 변수는 선택적 기능이 사용될 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값은 Domain 및 Forest입니다. 

Target 매개 변수는 선택적 기능이 사용될 도메인 또는 포리스트를 지정합니다. FQDN(정규화된 도메인 이름), NetBIOS 이름 또는 도메인 NC(도메인 명명 컨텍스트)의 DN(고유 이름)으로 도메인 또는 포리스트를 식별할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>기능이 사용되거나 사용되지 않도록 설정되는 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  Domain 또는 0
  Forest 또는 1

다음 예에서는 이 매개 변수를 설정하여 선택적 기능이 포리스트 범위에서 사용되거나 사용되지 않도록 설정하는 방법을 보여 줍니다.
  -Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>선택적 기능을 수정할 도메인 또는 포리스트를 지정합니다. 다음 값 중 하나를 지정하여 대상 도메인 또는 포리스트를 식별할 수 있습니다.  
  포리스트 또는 도메인의 정규화된 도메인 이름 
    예: corp.Fabrikam.com
  포리스트 또는 도메인의 NetBIOS 이름
    예: corp
  도메인 NC(도메인 명명 컨텍스트)의 고유 이름
    예:  DC=corp,DC=Fabrikam,DC=com

다음 예에서는 이 매개 변수를 도메인 NC로 설정하는 방법을 보여 줍니다.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>기능이 사용되거나 사용되지 않도록 설정되는 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  Domain 또는 0
  Forest 또는 1

다음 예에서는 이 매개 변수를 설정하여 선택적 기능이 포리스트 범위에서 사용되거나 사용되지 않도록 설정하는 방법을 보여 줍니다.
  -Scope Forest</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>선택적 기능을 수정할 도메인 또는 포리스트를 지정합니다. 다음 값 중 하나를 지정하여 대상 도메인 또는 포리스트를 식별할 수 있습니다.  
  포리스트 또는 도메인의 정규화된 도메인 이름 
    예: corp.Fabrikam.com
  포리스트 또는 도메인의 NetBIOS 이름
    예: corp
  도메인 NC(도메인 명명 컨텍스트)의 고유 이름
    예:  DC=corp,DC=Fabrikam,DC=com

다음 예에서는 이 매개 변수를 도메인 NC로 설정하는 방법을 보여 줍니다.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					선택적 기능 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.

Recycle Bin Feature: Active Directory 휴지통을 사용하도록 설정하면 Active Directory 휴지통을 사용하도록 설정하기 전에 삭제된 모든 개체(삭제 표시 개체)가 재활용된 개체가 됩니다. 이러한 개체는 더 이상 삭제된 개체 컨테이너에서 표시되지 않으며 Active Directory 휴지통을 사용하여 복구할 수 없습니다.  이러한 개체를 복원하는 유일한 방법은 Active Directory 휴지통을 사용하도록 설정하기 전에 만든 AD DS 백업에서 정식으로 복원하는 것입니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Recycle Bin Feature' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -server dc1
</dev:code>
  			<dev:remarks>
  			        <maml:para>'fabrikam.com' 포리스트의 선택적 기능 'Recycle Bin Feature'를 사용하도록 설정합니다.  이 작업은 명명 마스터 FSMO 역할을 가진 도메인 컨트롤러에 대해 수행해야 합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server lds.fabrikam.com:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스 lds.fabrikam.com의 선택적 기능 'Recycle Bin Feature'를 사용하도록 설정합니다.  이 작업은 명명 마스터 FSMO 역할을 가진 AD LDS 인스턴스에 대해 수행해야 합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code> Set-ADObject -Identity &quot;CN=Partitions,CN=Configuration,CN={4F971828-5BE4-4E94-B532-58F2BFB6A3A5}&quot; -replace @{&quot;msDS-Behavior-Version&quot;=4}</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에서 ForestMode(포리스트 기능 수준)를 Windows2008R2Forest로 설정합니다. AD LDS의 Recycle Bin Feature를 사용하도록 설정하려면 ForestMode가 Windows2008R2Forest 이상이어야 합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144943</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADObject
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 개체를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADObject cmdlet은  Active Directory 개체를 가져오거나 검색을 수행하여 여러 개체를 검색합니다. 

Identity 매개 변수는 가져올 Active Directory 개체를 지정합니다. DN(고유 이름) 또는 GUID로 가져올 개체를 식별할 수 있습니다. 이 매개 변수를 $&lt;localADObject&gt;와 같은 Active Directory 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 

둘 이상의 개체를 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.  

이 cmdlet은 Active Directory 개체의 기본 속성 집합을 가져옵니다. 추가 속성을 가져오려면 Properties 매개 변수를 사용합니다. 컴퓨터 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADObject

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 Active Directory 개체를 반환합니다. 

Get-ADObject cmdlet은 기본 ADObject 속성 값 집합을 반환합니다. 추가 ADObject 속성을 검색하려면 cmdlet의 Properties 매개 변수를 사용합니다. 

ADObject 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;object&gt;를 Active Directory 개체 식별자로 바꿉니다. 

ADObject 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
      Get-ADObject &lt;object&gt;| Get-Member

ADObject 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
     GEt-ADObject &lt;object&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -LDAPFilter &quot;(objectClass=site)&quot; -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties CanonicalName | FT Name,CanonicalName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name CanonicalName
---- -------------
HQ   FABRIKAM.COM/Configuration/Sites/HQ
BO1  FABRIKAM.COM/Configuration/Sites/BO1
BO2  FABRIKAM.COM/Configuration/Sites/BO2
BO3  FABRIKAM.COM/Configuration/Sites/BO3
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>LDAP 필터 구문을 사용하여 Fabrikam의 사이트 목록을 표시합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'ObjectClass -eq &quot;site&quot;' -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties siteObjectBL | foreach {$_.siteObjectBL}
</dev:code>
  			<dev:remarks>
 				<maml:para>CN=192.167.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.166.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.165.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.164.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.163.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.162.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.161.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.160.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.159.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.158.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.157.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>구성 명명 컨텍스트에서 사이트 개체를 가져온 다음 'siteObjectBL'을 출력하는 목록을 통해 열거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02); Get-ADObject -Filter 'whenChanged -gt $changeDate' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
  			        <maml:para>'whenChanged' 특성이 지정된 날짜보다 큰 모든 개체(삭제된 개체 포함)를 가져옵니다. 필터와 일치하는 삭제된 개체와 삭제되지 않은 개체 및 재활용되지 않은 개체가 반환됩니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID        : 98118958-91c7-437d-8ada-ba0b66db823b
Deleted                                  : True
DistinguishedName : CN=Andrew Ma\0ADEL:98118958-91c7-437d-8ada-ba0b66db823b,CN=Deleted Objects,DC=FABRIKAM,DC=COM
Name              : Andrew Ma
                    DEL:98118958-91c7-437d-8ada-ba0b66db823b
ObjectClass       : user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'whenChanged' 특성이 지정된 날짜보다 큰 모든 삭제된 개체를 가져옵니다. 'name -ne &quot;Deleted Objects&quot;' 절은 삭제된 개체 컨테이너가 반환되지 않도록 합니다. 이렇게 하면 복원할 수 있는 개체만 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID        : 12d53e7f-aaf7-4790-b41a-da19044504db
Deleted                                  : True
DistinguishedName : CN=Craig Dewar\0ADEL:12d53e7f-aaf7-4790-b41a-da19044504db,CN=Deleted Objects,DC=Fabrikam,DC=com
Name              : Craig Dewar
                    DEL:12d53e7f-aaf7-4790-b41a-da19044504db
ObjectClass       : user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'whenChanged' 특성이 지정된 날짜보다 크고 삭제 시 지정된 조직 구성 단위의 하위 항목이던 모든 삭제된 개체를 가져옵니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Identity &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID                    DistinguishedName             Name                          ObjectClass
----------                    -----------------             ----                          -----------
62b2e185-9322-4980-9c93-cf... DC=AppNC                      AppNC                         domainDNS
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>LDS 인스턴스의 domainDNS 개체에 대한 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144944</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADRootDSE
		</command:name>
		<maml:description>
			<maml:para>디렉터리 서버 정보 트리의 루트를 가져옵니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADRootDSE</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADRootDSE cmdlet은 디렉터리 서버의 디렉터리 정보 트리 루트를 나타내는 개념 개체를 가져옵니다. 이 트리에서는 구성 컨테이너의 고유 이름, 디렉터리 서버의 현재 시간, 디렉터리 서버 및 도메인의 기능 수준 등과 같은 디렉터리 서버의 구성 및 기능과 관련된 정보를 제공합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADRootDSE</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADRootDSE</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 디렉터리 서버의 데이터 트리를 나타내는 ADRootDSE 개체는 이 cmdlet에 의해 출력됩니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE
</dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 3/18/2009 11:12:55 AM 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-DC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-DC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 도메인 컨트롤러에서 rooDSE를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server Fabrikam-RODC1 -Properties supportedExtension 
</dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 3/18/2009 11:12:55 AM 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-RODC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-RODC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedExtension            : {1.3.6.1.4.1.1466.20037, 1.3.6.1.4.1.1466.101.119.1, 1.2.840.113556.1.4.1781, 1.3.6.1.4.1.4203.1.11.3} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Fabrikam-RODC1 서버의 supportedExtension 속성을 비롯한 rootDSE 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server &quot;FABRIKAM-ADLDS1.Fabrikam.com:60000&quot; -Credential &quot;FABRIKAM\User1&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
currentTime                   : 3/18/2009 11:40:19 AM 
dnsHostName                   : FABRIKAM-ADLDS1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,C 
                                N=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 13967 
isSynchronized                : {TRUE} 
namingContexts                : {CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, DC=AppNC} 
schemaNamingContext           : CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
serverName                    : CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
supportedCapabilities         : {1.2.840.113556.1.4.1851 (LDAP_CAP_ACTIVE_DIRECTORY_ADAM_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>FABRIKAM\user1 자격 증명을 사용하여 FABRIKAM-ADLDS1의 rootDSE 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144945</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUser
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 사용자를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADUser cmdlet은  사용자 개체를 가져오거나 검색을 수행하여 여러 사용자 개체를 검색합니다.

Identity 매개 변수는 가져올 Active Directory 사용자를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), SAM(보안 계정 관리자) 계정 이름 또는 이름으로 사용자를 식별할 수 있습니다. 이 매개 변수를 $&lt;localUserObject&gt;와 같은 사용자 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 사용자 개체를 전달할 수도 있습니다.

둘 이상의 사용자를 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 사용자 개체의 기본 속성 집합을 검색합니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. 사용자 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 사용자 개체를 반환합니다.

이 cmdlet은 기본 ADUser 속성 값 집합을 반환합니다. 추가 ADUser 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADUser 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADUser &lt;user&gt;| Get-Member

ADUser 개체의 속성 중 가장 자주 사용되는 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADUser &lt;user&gt; -Properties Extended | Get-Member 

ADUser 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADUser &lt;user&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter * -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>'OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM' 컨테이너 아래의 모든 사용자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount&quot;' | FT Name,SamAccountName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name             SamAccountName
----             --------------
SQL01 SvcAccount SQL01
SQL02 SvcAccount SQL02
IIS01 SvcAccount IIS01
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>이름이 'SvcAccount'로 끝나는 모든 사용자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser GlenJohn -Properties * 
</dev:code>
  			<dev:remarks>
 				<maml:para>Surname           : John
Name              : Glen John
UserPrincipalName :
GivenName         : Glen
Enabled           : False
SamAccountName    : GlenJohn
ObjectClass       : user
SID               : S-1-5-21-2889043008-4136710315-2444824263-3544
ObjectGUID        : e1418d64-096c-4cb0-b903-ebb66562d99d
DistinguishedName : CN=Glen John,OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 'GlenJohn'인 사용자의 모든 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter {Name -eq &quot;GlenJohn&quot;} -SearchBase &quot;DC=AppNC&quot; -Properties mail -Server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에서 이름이 'GlenJohn'인 사용자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144946</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputer
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 컴퓨터를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADComputer cmdlet은 컴퓨터를 가져오거나 검색을 수행하여 여러 컴퓨터를 검색합니다.

Identity 매개 변수는 검색할 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. 이 매개 변수를 $&lt;localComputerObject&gt;와 같은 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 컴퓨터 개체를 전달할 수도 있습니다.

둘 이상의 컴퓨터를 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 컴퓨터 개체의 기본 속성 집합을 검색합니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. 컴퓨터 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 컴퓨터 개체를 반환합니다. 

이 Get-ADComputer cmdlet은 기본 ADComputer 속성 값 집합을 반환합니다. 추가 ADComputer 속성을 검색하려면 이 cmdlet의 Properties 매개 변수를 사용합니다. 

ADComputer 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;computer&gt;를 로컬 컴퓨터의 SAM 계정 이름과 같은 컴퓨터 식별자로 바꿉니다.

ADComputer 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADComputer &lt;computer&gt;| Get-Member

ADComputer 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADComputer &lt;computer&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 기본 스키마가 포함된 AD LD에서 작동하지 않습니다.  기본적으로 AD LDS 스키마에는 컴퓨터 클래스가 없지만 스키마가 컴퓨터 클래스를 포함하도록 확장되는 경우 이 cmdlet은 LDS에서 작동합니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer &quot;Fabrikam-SRV1&quot; -Properties *</dev:code>
  			<dev:remarks>
 				<maml:para>AccountExpirationDate             :
accountExpires                     : 9223372036854775807
AccountLockoutTime                :
AccountNotDelegated                : False
AllowReversiblePasswordEncryption False
BadLogonCount                     :
CannotChangePassword               : False
CanonicalName                      : Fabrikam.com/Computers/fabrikam-srv1
Certificates                       : {}
CN                                 : fabrikam-srv1
codePage                           : 0
countryCode                        : 0
Created                            : 3/16/2009 4:15:00 PM
createTimeStamp                    : 3/16/2009 4:15:00 PM
Deleted                           :
Description       :
DisplayName                       :
DistinguishedName                  : CN=fabrikam-srv1,CN=Computers,DC=Fabrikam,
                                     DC=com
DNSHostName                       :
DoesNotRequirePreAuth              : False
dSCorePropagationData              : {3/16/2009 4:21:51 PM, 12/31/1600 4:00:01
                                     PM}
Enabled                            : True
HomedirRequired                    : False
HomePage                          :
instanceType                       : 0
IPv4Address                       :
IPv6Address                       :
isCriticalSystemObject             : False
isDeleted                          :
LastBadPasswordAttempt            :
LastKnownParent                   :
LastLogonDate                      :
localPolicyFlags                   : 0
Location                           : NA/HQ/Building A
LockedOut                          : False
ManagedBy                          : CN=SQL Administrator 01,OU=UserAccounts,OU
                                     =Managed,DC=Fabrikam,DC=com
MemberOf                           : {}
MNSLogonAccount                    : False
Modified                           : 3/16/2009 4:23:01 PM
modifyTimeStamp                    : 3/16/2009 4:23:01 PM
msDS-User-Account-Control-Computed : 0
Name                               : fabrikam-srv1
nTSecurityDescriptor               : System.DirectoryServices.ActiveDirectorySe
                                     curity
ObjectCategory                     : CN=Computer,CN=Schema,CN=Configuration,DC=
                                     Fabrikam,DC=com
ObjectClass                        : computer
ObjectGUID        : 828306a3-8ccd-410e-9537-e6616662c0b0
objectSid                          : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
OperatingSystem                   :
OperatingSystemHotfix             :
OperatingSystemServicePack        :
OperatingSystemVersion            :
PasswordExpired                    : False
PasswordLastSet                   :
PasswordNeverExpires  : False
PasswordNotRequired                : False
PrimaryGroup                       : CN=Domain Computers,CN=Users,DC=Fabrikam,D

                                     C=com
primaryGroupID                     : 515
ProtectedFromAccidentalDeletion    : False
pwdLastSet                         : 0
SamAccountName    : fabrikam-srv1$
sAMAccountType                     : 805306369
sDRightsEffective                  : 0
ServiceAccount                     : {}
servicePrincipalName               : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
                                     alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
ServicePrincipalNames              : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
                                     alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
SID               : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
SIDHistory                         : {}
TrustedForDelegation               : False
TrustedToAuthForDelegation         : False
UseDESKeyOnly                      : False
userAccountControl                 : 4096
userCertificate                    : {}
UserPrincipalName :
uSNChanged                         : 36024
uSNCreated                         : 35966
whenChanged                        : 3/16/2009 4:23:01 PM
whenCreated                        : 3/16/2009 4:15:00 PM</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>모든 속성을 보여주는 특정 컴퓨터를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Name -like &quot;Fabrikam*&quot;' -Properties IPv4Address | FT Name,DNSHostName,IPv4Address -A</dev:code>
  			<dev:remarks>
 				<maml:para>name          dnshostname                ipv4address
----          -----------                -----------
FABRIKAM-SRV1 FABRIKAM-SRV1.Fabrikam.com 10.194.99.181
FABRIKAM-SRV2 FABRIKAM-SRV2.Fabrikam.com 10.194.100.37
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>특정 문자열로 시작하고 이름, DNS 호스트 이름 및 IPv4 주소를 표시하는 이름을 가진 모든 컴퓨터를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$d = [DateTime]::Today.AddDays(-90); Get-ADComputer -Filter 'PasswordLastSet -ge $d' -Properties PasswordLastSet | FT Name,PasswordLastSet</dev:code>
  			<dev:remarks>
 				<maml:para>Name                                                        PasswordLastSet
----                                                        ---------------
FABRIKAM-SRV4                                               3/12/2009 6:40:37 PM
FABRIKAM-SRV5                                               3/12/2009 7:05:45 PM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>지난 90일 동안 암호를 변경한 모든 컴퓨터를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -LDAPFilter &quot;(name=*laptop*)&quot; -SearchBase &quot;CN=Computers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>name
----
saradavi-laptop
jeffpr-laptop
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>LDAPFilter를 사용하여 랩톱으로 표시된 &quot;CN=Computers,DC=Fabrikam,DC=com&quot; 위치의 컴퓨터 계정을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>모든 컴퓨터 계정을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144947</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroup
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 그룹을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADGroup cmdlet은 Active Directory에서 그룹을 가져오거나 검색을 수행하여 여러 그룹을 검색합니다. 

Identity 매개 변수는 가져올 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), SAM(보안 계정 관리자) 계정 이름 또는 정식 이름으로 그룹을 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 그룹 개체 변수를 지정할 수도 있습니다. 

둘 이상의 그룹을 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 그룹 개체의 기본 속성 집합을 가져옵니다. 추가 속성을 가져오려면 Properties 매개 변수를 사용합니다. 그룹 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다. 
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 그룹 개체를 반환합니다.

Get-ADGroup cmdlet은 기본 ADGroup 속성 값 집합을 반환합니다. 추가 ADGroup 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADGroup 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;group&gt;을 Administrators와 같은 그룹 식별자로 바꿉니다.

ADGroup 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
      Get-ADGroup &lt;group&gt;| Get-Member

ADGroup 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
     Get-ADGtoup &lt;group&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup administrators
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 administrators인 그룹을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Identity S-1-5-32-544 -Properties member
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
member            : {CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com, CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com, CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com, C 
                    N=Administrator,CN=Users,DC=Fabrikam,DC=com} 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>추가 속성 멤버를 비롯하여 SID가 S-1-5-32-544인 그룹을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Filter 'GroupCategory -eq &quot;Security&quot; -and GroupScope -ne &quot;DomainLocal&quot;'</dev:code>
  			<dev:remarks>
  			        <maml:para>GroupCategory가 Security이지만 GroupScope가 DomainLocal이 아닌 모든 그룹을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup 

cmdlet Get-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Filter: * </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 cmdlet 동작을 사용하여 기본 도메인의 모든 그룹을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>AD LDS 인스턴스의 AppNC 파티션에서 모든 DomainLocal 그룹을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144948</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 세분화된 암호 정책을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADFineGrainedPasswordPolicy cmdlet은 세분화된 암호 정책을 가져오거나 검색을 수행하여 여러 세분화된 암호 정책을 검색합니다.

Identity 매개 변수는 가져올 Active Directory 세분화된 암호 정책을 지정합니다. DN(고유 이름), GUID 또는 이름으로 세분화된 암호 정책을 식별할 수 있습니다. 이 매개 변수를 $&lt;localFineGrainedPasswordPolicyObject&gt;와 같은 세분화된 암호 정책 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 세분화된 암호 정책 개체를 전달할 수도 있습니다.

둘 이상의 세분화된 암호 정책을 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 세분화된 암호 정책 개체의 기본 속성 집합을 검색합니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. FineGrainedPasswordPolicy 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오.  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책은 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 세분화된 암호 정책 개체를 반환합니다.

이 cmdlet은 기본 ADFineGrainedPasswordPolicy 속성 값 집합을 반환합니다. 추가 ADFineGrainedPasswordPolicy 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADFineGrainedPasswordPolicy 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;fine grained password policy&gt;를 로컬 세분화된 암호 정책의 이름과 같은 세분화된 암호 정책 식별자로 바꿉니다.

ADFineGrainedPasswordPolicy 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADFineGrainedPasswordPolicy &lt;fine grained password policy&gt;| Get-Member

ADFineGrainedPasswordPolicy 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADFineGrainedPasswordPolicy &lt;fine grained password policy&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*&quot;} | ft Name, Precedence,MaxPasswordAge,MinPasswordLength -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           Precedence MaxPasswordAge MinPasswordLength
----           ---------- -------------- -----------------
DomainUsersPSO        500 60.00:00:00                    8
SvcAccPSO             100 30.00:00:00                   20
AdminsPSO             200 15.00:00:00                   10
DlgtdAdminsPSO        300 20.00:00:00                   10
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy AdminsPSO
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        : AdminsPSO
ComplexityEnabled           : True
LockoutThreshold            : 0
ReversibleEncryptionEnabled : True
LockoutDuration             : 00:30:00
LockoutObservationWindow    : 00:30:00
MinPasswordLength           : 10
Precedence                  : 200
ObjectGUID        : ba1061f0-c947-4018-a399-6ad8897d26e3
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 15.00:00:00
AppliesTo                   : {}
DistinguishedName           : CN=AdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'AdminsPSO'라는 세분화된 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy 'CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -Properties *
</dev:code>
  			<dev:remarks>
 				<maml:para>msDS-LockoutDuration                     : -18000000000
msDS-PasswordSettingsPrecedence          : 300
ObjectCategory                     : CN=ms-DS-Password-Settings,CN=Schema,CN=Configuration,DC=FABRIKAM,DC=COM
DistinguishedName                        : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
ExpireOn                                 :
msDS-MinimumPasswordAge                  : -864000000000
dSCorePropagationData              : {12/31/1600 4:00:00 PM}
msDS-LockoutThreshold                    : 0
Description       : The Delegated Administrators Password Policy
LockoutThreshold                         : 0
instanceType                             : 4
msDS-PasswordComplexityEnabled           : True
MaxPasswordAge                           : 20.00:00:00
whenCreated                        : 8/15/2008 12:47:43 AM
Name                                     : DlgtdAdminsPSO
ObjectClass                              : msDS-PasswordSettings
ReversibleEncryptionEnabled              : True
msDS-PasswordReversibleEncryptionEnabled : True
Dynamic                                  : False
LockoutDuration                          : 00:30:00
msDS-PSOAppliesTo                        : {CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=Bob Kelly,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
DisplayName                       : Delegated Administrators PSO
uSNCreated                               : 16395
Modified                           : 8/20/2008 12:21:15 AM
MinPasswordAge                           : 1.00:00:00
ProtectedFromAccidentalDeletion          : False
Created                            : 8/15/2008 12:47:43 AM
sDRightsEffective                        : 15
ComplexityEnabled                        : True
PasswordHistoryCount                     : 24
msDS-MaximumPasswordAge                  : -17280000000000
MinPasswordLength                        : 10
Precedence                               : 300
ObjectGUID        : 75cf8c7a-9c93-4e81-b611-851803372cb2
msDS-MinimumPasswordLength               : 10
Deleted                                  :
Orphaned                                 : False
CN                                 : DlgtdAdminsPSO
LastKnownParent                          :
CanonicalName                      : FABRIKAM.COM/System/Password Settings Container/DlgtdAdminsPSO
modifyTimeStamp                    : 8/20/2008 12:21:15 AM
msDS-LockoutObservationWindow            : -18000000000
LockoutObservationWindow                 : 00:30:00
whenChanged                        : 8/20/2008 12:21:15 AM
createTimeStamp                    : 8/15/2008 12:47:43 AM
msDS-PasswordHistoryLength               : 24
nTSecurityDescriptor               : System.DirectoryServices.ActiveDirectorySecurity
AppliesTo                   : {CN=JeffPrice,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=GlenJohn,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
uSNChanged                               : 72719
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName이 'CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM'인 세분화된 암호 정책의 모든 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {name -like &quot;*admin*&quot;}</dev:code>
  			<dev:remarks>
 				<maml:para>AppliesTo                   : {CN=GlenJohn,CN=Users,DC=Fabrikam,DC=com, CN=JeffPrice,CN=Users,DC=Fabrikam,DC=com, CN=Administrator,CN=Users,DC=Fabrikam,DC=com} 
ComplexityEnabled           : True 
DistinguishedName           : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=Fabrikam,DC=com 
LockoutDuration             : 00:30:00
LockoutObservationWindow    : 00:30:00
LockoutThreshold            : 0
MaxPasswordAge              : 42.00:00:00
MinPasswordAge              : 1.00:00:00
MinPasswordLength           : 7
Name                        : DlgtdAdminsPSO 
ObjectClass                 : msDS-PasswordSettings 
ObjectGUID        : b7de4e6e-c291-4ce6-bb47-6bf8f807df53 
PasswordHistoryCount        : 24
Precedence                  : 100
ReversibleEncryptionEnabled : True </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>이름이 admin으로 시작하는 모든 세분화된 암호 정책 개체를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144949</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomain
		</command:name>
		<maml:description>
			<maml:para> Active Directory 도메인을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomain cmdlet은 매개 변수에 지정된 Active Directory 도메인을 가져옵니다. Identity 또는 Current 매개 변수를 설정하여 도메인을 지정할 수 있습니다.  

Identity 매개 변수는 가져올 Active Directory 도메인을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), DNS 도메인 이름 또는 NetBIOS 이름으로 가져올 도메인을 식별할 수 있습니다. 이 매개 변수를 $&lt;localDomainObject&gt;와 같은 도메인 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 개체를 전달할 수도 있습니다. 

로컬 컴퓨터나 CLU(현재 로그온한 사용자)의 도메인을 가져오려면 Current 매개 변수를 LocalComputer 또는 LoggedOnUser로 설정합니다.  Current 매개 변수를 설정하는 경우 Identity 매개 변수를 설정할 필요가 없습니다. 

Current 매개 변수가 LocalComputer 또는 LogedOnUser로 설정된 경우 cmdlet은 다음과 같은 규칙에 따라 Server 및 Credential 매개 변수를 사용합니다.

- Server 및 Credential 매개 변수를 모두 지정하지 않은 경우:
  --도메인이 LocalComputer 또는 LoggedOnUser의 도메인으로 설정되고 서버가 이 도메인에 위치합니다. 현재 로그온한 사용자의 자격 증명을 사용하여 도메인을 가져옵니다.

- Server 매개 변수를 지정하고 Credential 매개 변수를 지정하지 않은 경우:
  --도메인이 지정된 서버의 도메인으로 설정되고 cmdlet은 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있는지 확인합니다. 그런 다음 현재 로그온한 사용자의 자격 증명을 사용하여 도메인을 가져옵니다. 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있지 않으면 오류가 반환됩니다.

- Server 매개 변수를 지정하지 않고 Credential 매개 변수를 지정한 경우:
  --도메인이 LocalComputer 또는 LoggedOnUser의 도메인으로 설정되고 서버가 이 도메인에 위치합니다. 그런 다음 Credential 매개 변수에 지정된 자격 증명을 사용하여 도메인을 가져옵니다. 
- Server 및 Credential 매개 변수를 모두 지정한 경우:
도메인이 지정된 서버의 도메인으로 설정되고 cmdlet은 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있는지 확인합니다. 그런 다음 Credential 매개 변수에 지정된 자격 증명을 사용하여 도메인을 가져옵니다. 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있지 않으면 오류가 반환됩니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 도메인 개체를 반환합니다. 

이 cmdlet은 도메인의 모든 속성을 반환합니다. ADDomain 개체의 모든 속성을 보려면 다음 명령을 사용합니다. &lt;domain&gt;은 DNS 호스트 이름과 같은 도메인 컨트롤러 식별자로 바꿉니다.
  Get-ADDomain &lt;domain&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>'fabrikam.com' 도메인에 대한 도메인 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LocalComputer
</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로컬 컴퓨터 도메인에 대한 도메인 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자의 도메인에 대한 도메인 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain</dev:code>
  			<dev:remarks>
 				<maml:para>AllowedDNSSuffixes                 : {}
ChildDomains                       : {}
ComputersContainer                 : CN=Computers,DC=Fabrikam,DC=com
DeletedObjectsContainer            : CN=Deleted Objects,DC=Fabrikam,DC=com
DistinguishedName                  : DC=Fabrikam,DC=com
DNSRoot                            : Fabrikam.com
DomainControllersContainer         : OU=Domain Controllers,DC=Fabrikam,DC=com
DomainMode                         : Windows2003Domain
DomainSID                          : S-1-5-21-41432690-3719764436-1984117282
ForeignSecurityPrincipalsContainer : CN=ForeignSecurityPrincipals,DC=Fabrikam,DC=com
Forest                             : Fabrikam.com
InfrastructureMaster               : Fabrikam-DC1.Fabrikam.com
LastLogonReplicationInterval       :
LinkedGroupPolicyObjects           : {CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Fabrikam,DC=com}
LostAndFoundContainer              : CN=LostAndFound,DC=Fabrikam,DC=com
ManagedBy                          :
Name                               : Fabrikam
NetBIOSName                        : FABRIKAM
ObjectClass                        : domainDNS
ObjectGUID                         : b63b4f44-58b9-49cf-8911-b36e8575d5eb
ParentDomain                       :
PDCEmulator                        : Fabrikam-DC1.Fabrikam.com
QuotasContainer                    : CN=NTDS Quotas,DC=Fabrikam,DC=com
ReadOnlyReplicaDirectoryServers    : {CSD2722780.Fabrikam.com}
ReplicaDirectoryServers            : {Fabrikam-DC1.Fabrikam.com}
RIDMaster                          : Fabrikam-DC1.Fabrikam.com
SubordinateReferences              : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com, CN=Co
                                     nfiguration,DC=Fabrikam,DC=com}
SystemsContainer                   : CN=System,DC=Fabrikam,DC=com
UsersContainer                     : CN=Users,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 로그온한 사용자의 도메인에 대한 도메인 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144950</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomainMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADForest
		</command:name>
		<maml:description>
			<maml:para>Active Directory 포리스트를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADForest cmdlet은 매개 변수에 지정된 Active Directory 포리스트를 가져옵니다. Identity 또는 Current 매개 변수를 설정하여 포리스트를 지정할 수 있습니다.

Identity 매개 변수는 가져올 Active Directory 포리스트를 지정합니다. FQDN(정규화된 도메인 이름), DNS 호스트 이름 또는 NetBIOS 이름으로 포리스트를 식별할 수 있습니다. 이 매개 변수를 $&lt;localForestObject&gt;와 같은 포리스트 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 포리스트 개체를 전달할 수도 있습니다.

로컬 컴퓨터나 CLU(현재 로그온한 사용자)의 포리스트를 검색하려면 Current 매개 변수를 LocalComputer 또는 LoggedOnUser로 설정합니다.  Current 매개 변수를 설정하는 경우 Identity 매개 변수를 설정할 필요가 없습니다. 

Current 매개 변수가 LocalComputer 또는 LoggedOnUser로 설정된 경우 cmdlet은 다음과 같은 규칙에 따라 Server 및 Credential 매개 변수 값을 사용하여 포리스트의 도메인을 식별하는 데 사용할 도메인 및 자격 증명을 결정합니다.

- Server 및 Credential 매개 변수를 모두 지정하지 않은 경우:
  --도메인이 LocalComputer 또는 LoggedOnUser의 도메인으로 설정되고 서버가 이 도메인에 위치합니다. 현재 로그온한 사용자의 자격 증명을 사용하여 도메인을 가져옵니다.

- Server 매개 변수를 지정하고 Credential 매개 변수를 지정하지 않은 경우:
  --도메인이 지정된 서버의 도메인으로 설정되고 cmdlet은 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있는지 확인합니다. 그런 다음 현재 로그온한 사용자의 자격 증명을 사용하여 도메인을 가져옵니다. 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있지 않으면 오류가 반환됩니다.

- Server 매개 변수를 지정하지 않고 Credential 매개 변수를 지정한 경우:
  --도메인이 LocalComputer 또는 LoggedOnUser의 도메인으로 설정되고 서버가 이 도메인에 위치합니다. 그런 다음 Credential 매개 변수에 지정된 자격 증명을 사용하여 도메인을 가져옵니다. 
- Server 및 Credential 매개 변수를 모두 지정한 경우:
도메인이 지정된 서버의 도메인으로 설정되고 cmdlet은 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있는지 확인합니다. 그런 다음 Credential 매개 변수에 지정된 자격 증명을 사용하여 도메인을 가져옵니다. 서버가 LocalComputer 또는 LoggedOnUser의 도메인에 있지 않으면 오류가 반환됩니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentForestType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentForestType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					포리스트 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 포리스트 개체를 반환합니다. 

이 cmdlet은 포리스트의 모든 속성을 반환합니다. ADForest 개체의 모든 속성을 보려면 다음 명령을 사용합니다. &lt;forest&gt;는 DNS 호스트 이름과 같은 포리스트 식별자로 바꿉니다.
  Get-ADForest &lt;forest&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest Fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fabrikam.com 포리스트에 대한 포리스트 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LocalComputer
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 로컬 컴퓨터의 포리스트에 대한 포리스트 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 로그온한 사용자의 포리스트에 대한 포리스트 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest</dev:code>
  			<dev:remarks>
 				<maml:para>pplicationPartitions  : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com} 
CrossForestReferences  : {CN=northwind,CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com} 
DomainNamingMaster     : Fabrikam-DC1.Fabrikam.com 
Domains                : {Fabrikam.com} 
ForestMode             : Windows2003Forest 
GlobalCatalogs         : {Fabrikam-DC1.Fabrikam.com, CSD2722780.Fabrikam.com} 
Name                   : Fabrikam.com 
PartitionsContainer    : CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com 
RootDomain             : Fabrikam.com 
SchemaMaster           : Fabrikam-DC1.Fabrikam.com 
Sites                  : {Default-First-Site-Name, UnitedKingdomHQ, BO3, RODC-Site-Name} 
SPNSuffixes            : {}
UPNSuffixes            : {} </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 로그온한 사용자의 포리스트에 대한 포리스트 정보를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144951</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainController
		</command:name>
		<maml:description>
			<maml:para>검색 가능한 서비스 조건이나 검색 매개 변수를 기준으로 또는 NetBIOS 이름과 같은 도메인 컨트롤러 식별자를 제공하여 하나 이상의 Active Directory 도메인 컨트롤러를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainController</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainController cmdlet은 매개 변수에 지정된 도메인 컨트롤러를 가져옵니다. Identity, Filter 또는 Discover 매개 변수를 설정하여 도메인 컨트롤러를 가져올 수 있습니다.

Identity 매개 변수는 가져올 도메인 컨트롤러를 지정합니다. GUID, IPV4Address, 전역 IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. 도메인 컨트롤러를 나타내는 서버 개체의 이름, NTDS 설정 개체 또는 서버 개체의 DN(고유 이름), 구성 파티션 아래에 있는 NTDS 설정 개체 또는 서버 개체의 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN으로 도메인 컨트롤러를 식별할 수도 있습니다.  Identity 매개 변수를 $&lt;localDomainControllerObject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 컨트롤러 개체를 전달할 수도 있습니다.

둘 이상의 도메인 컨트롤러를 검색하려면 Filter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 이 cmdlet에서는 LDAP 쿼리 문자열을 사용할 수 없습니다.

DCLocator의 검색 메커니즘을 사용하여 도메인 컨트롤러를 가져오려면 Discover 매개 변수를 사용합니다. Service, SiteName, DomainName, NextClosestSite, AvoidSelf 및 ForceDiscover와 같은 매개 변수를 설정하여 검색 조건을 지정할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Discover</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수에 지정된 조건과 일치하는 검색 가능한 도메인 컨트롤러를 반환하도록 지정합니다.
DCLocator의 검색 메커니즘을 사용하여 도메인 컨트롤러를 가져오려면 Discover 매개 변수를 사용합니다. 이 매개 변수와 함께 Service, SiteName, DomainName, NextClosestSite, AvoidSelf 및 ForceDiscover와 같은 매개 변수를 설정하여 검색 조건을 지정할 수 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Discover

다음 예에서는 이름이 &quot;RODC-Site&quot;인 특정 사이트에서 사용하도록 설정된 웹 서비스가 있는 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AvoidSelf</maml:name>
				<maml:description>
					<maml:para>현재 컴퓨터를 도메인 컨트롤러로 반환하지 않도록 지정합니다. 현재 컴퓨터가 도메인 컨트롤러가 아닌 경우 이 매개 변수는 무시됩니다. 도메인에 있는 다른 도메인 컨트롤러의 이름을 가져오려는 경우에 이 매개 변수를 지정할 수 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
 -AvoidSelf</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainName</maml:name>
				<maml:description>
					<maml:para>검색할 도메인을 지정합니다. cmdlet은 이 도메인에서 검색 가능한 도메인 컨트롤러를 찾습니다. 도메인의 NetBIOS 이름 또는 FQDN(정규화된 도메인 이름)을 사용하여 도메인을 지정합니다.

다음 예에서는 이 매개 변수를 도메인의 FQDN으로 설정하는 방법을 보여 줍니다.
  -DomainName &quot;contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ForceDiscover</maml:name>
				<maml:description>
					<maml:para>cmdlet이 캐시된 모든 도메인 컨트롤러 정보를 지우고 새로 검색을 수행하게 합니다.  이 매개 변수를 지정하지 않는 경우 cmdlet은 캐시된 도메인 컨트롤러 정보를 반환할 수 있습니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ForceDiscover</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumDirectoryServiceVersion</maml:name>
				<maml:description>
					<maml:para>-Discover 스위치를 사용하여 DC를 가져올 때 도메인 컨트롤러에서 사용되어 cmdlet에 의해 반환될 수 있는 이전 운영 체제를 지정합니다. 사용할 수 있는 값:
  Windows2000 또는 1
  Windows2008 또는 2

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinimumDirectoryServiceVersion Windows2000 

다음 예에서는 Windows 2008 이상인 모든 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NextClosestSite</maml:name>
				<maml:description>
					<maml:para>클라이언트가 포함된 사이트에 도메인 컨트롤러가 없는 경우 가장 가까운 다음 사이트의 도메인 컨트롤러를 반환하도록 지정합니다. 가장 가까운 다음 사이트는 현재 사이트와 관련하여 가장 적은 사이트 링크 비용을 가진 사이트입니다. 사이트 간 비용은 물리적 근접성뿐만 아니라 대역폭 등의 요소에 따라 결정됩니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -NextClosestSite</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>가져올 도메인 컨트롤러의 유형을 지정합니다. 쉼표로 구분된 목록을 사용하여 두 가지 이상의 유형을 지정할 수 있습니다. 이 매개 변수에 사용할 수 있는 값: 
  PrimaryDC 또는 1
  GlobalCatalog 또는 2
  KDC 또는 3
  TimeService 또는 4
  ReliableTimeService 또는 5
  ADWS 또는 6

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Service GlobalCatalog, KDC 

다음 예에서는 사용하도록 설정된 웹 서비스가 있는 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -Services ADWS</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SiteName</maml:name>
				<maml:description>
					<maml:para>검색할 사이트의 이름을 지정하여 도메인 컨트롤러를 찾습니다. 이 매개 변수를 설정하지 않으면 cmdlet은 클라이언트와 동일한 사이트에서 도메인 컨트롤러를 검색합니다. 사이트 이름은 사이트 개체의 Name 속성으로 정의됩니다.

다음 예에서는 이 매개 변수를 사용하여 사이트를 지정하는 방법을 보여 줍니다.
  -SiteName &quot;redmond&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Writable</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AvoidSelf</maml:name>
			<maml:description>
				<maml:para>현재 컴퓨터를 도메인 컨트롤러로 반환하지 않도록 지정합니다. 현재 컴퓨터가 도메인 컨트롤러가 아닌 경우 이 매개 변수는 무시됩니다. 도메인에 있는 다른 도메인 컨트롤러의 이름을 가져오려는 경우에 이 매개 변수를 지정할 수 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
 -AvoidSelf</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Discover</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수에 지정된 조건과 일치하는 검색 가능한 도메인 컨트롤러를 반환하도록 지정합니다.
DCLocator의 검색 메커니즘을 사용하여 도메인 컨트롤러를 가져오려면 Discover 매개 변수를 사용합니다. 이 매개 변수와 함께 Service, SiteName, DomainName, NextClosestSite, AvoidSelf 및 ForceDiscover와 같은 매개 변수를 설정하여 검색 조건을 지정할 수 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Discover

다음 예에서는 이름이 &quot;RODC-Site&quot;인 특정 사이트에서 사용하도록 설정된 웹 서비스가 있는 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainName</maml:name>
			<maml:description>
				<maml:para>검색할 도메인을 지정합니다. cmdlet은 이 도메인에서 검색 가능한 도메인 컨트롤러를 찾습니다. 도메인의 NetBIOS 이름 또는 FQDN(정규화된 도메인 이름)을 사용하여 도메인을 지정합니다.

다음 예에서는 이 매개 변수를 도메인의 FQDN으로 설정하는 방법을 보여 줍니다.
  -DomainName &quot;contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>이 컴퓨터가 가입된 도메인의 이름</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ForceDiscover</maml:name>
			<maml:description>
				<maml:para>cmdlet이 캐시된 모든 도메인 컨트롤러 정보를 지우고 새로 검색을 수행하게 합니다.  이 매개 변수를 지정하지 않는 경우 cmdlet은 캐시된 도메인 컨트롤러 정보를 반환할 수 있습니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ForceDiscover</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumDirectoryServiceVersion</maml:name>
			<maml:description>
				<maml:para>-Discover 스위치를 사용하여 DC를 가져올 때 도메인 컨트롤러에서 사용되어 cmdlet에 의해 반환될 수 있는 이전 운영 체제를 지정합니다. 사용할 수 있는 값:
  Windows2000 또는 1
  Windows2008 또는 2

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinimumDirectoryServiceVersion Windows2000 

다음 예에서는 Windows 2008 이상인 모든 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADMinimumDirectoryServiceVersion</command:parameterValue>
			<dev:type>
				<maml:name>ADMinimumDirectoryServiceVersion</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NextClosestSite</maml:name>
			<maml:description>
				<maml:para>클라이언트가 포함된 사이트에 도메인 컨트롤러가 없는 경우 가장 가까운 다음 사이트의 도메인 컨트롤러를 반환하도록 지정합니다. 가장 가까운 다음 사이트는 현재 사이트와 관련하여 가장 적은 사이트 링크 비용을 가진 사이트입니다. 사이트 간 비용은 물리적 근접성뿐만 아니라 대역폭 등의 요소에 따라 결정됩니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -NextClosestSite</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>가져올 도메인 컨트롤러의 유형을 지정합니다. 쉼표로 구분된 목록을 사용하여 두 가지 이상의 유형을 지정할 수 있습니다. 이 매개 변수에 사용할 수 있는 값: 
  PrimaryDC 또는 1
  GlobalCatalog 또는 2
  KDC 또는 3
  TimeService 또는 4
  ReliableTimeService 또는 5
  ADWS 또는 6

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Service GlobalCatalog, KDC 

다음 예에서는 사용하도록 설정된 웹 서비스가 있는 라이브 DC를 가져오는 방법을 보여 줍니다.
  Get-ADDomainController -Discover -Services ADWS</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			<dev:type>
				<maml:name>ADDiscoverableService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SiteName</maml:name>
			<maml:description>
				<maml:para>검색할 사이트의 이름을 지정하여 도메인 컨트롤러를 찾습니다. 이 매개 변수를 설정하지 않으면 cmdlet은 클라이언트와 동일한 사이트에서 도메인 컨트롤러를 검색합니다. 사이트 이름은 사이트 개체의 Name 속성으로 정의됩니다.

다음 예에서는 이 매개 변수를 사용하여 사이트를 지정하는 방법을 보여 줍니다.
  -SiteName &quot;redmond&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>클라이언트가 있는 사이트의 이름</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Writable</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 컨트롤러 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 도메인 컨트롤러 개체를 반환합니다.

Discover 매개 변수를 사용하여 도메인 컨트롤러를 가져오는 경우 이 cmdlet은 각 도메인 컨트롤러의 기본 속성 값 집합을 반환합니다.
Identity 또는 Filter 매개 변수를 사용하여 도메인 컨트롤러를 가져오는 경우 이 cmdlet은 도메인 컨트롤러의 모든 속성을 반환합니다. 
ADDomainController 개체의 모든 속성을 보려면 다음 명령을 사용합니다. &lt;domaincontroller&gt;는 DNS 호스트 이름과 같은 도메인 컨트롤러 식별자로 바꿉니다.
  Get-ADDomainController &lt;domaincontroller&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          cmdlet이 반환하는 ADDomainController 개체의 Name 및 HostName 속성은 다음 규칙에 따라 설정됩니다.
- Discover 매개 변수를 사용하는 경우 HostName은 도메인 컨트롤러의 정규화된 도메인 이름이고 Name은 도메인 컨트롤러의 NetBIOS 이름입니다. Discover 매개 변수를 사용하면 cmdlet이 두 번째로 DCLocator를 호출하여 Name 속성을 채웁니다. WINS 서비스를 사용할 수 없는 경우 이 속성은 도메인 컨트롤러의 NetBIOS 이름으로 설정되지 않습니다.
- Identity 또는 Filter 매개 변수를 사용하는 경우 HostName은 도메인 컨트롤러 개체의 DNSHostName 특성이고 Name은 도메인 컨트롤러 개체의 Name(RDN) 특성입니다. Identity 또는 Filter 매개 변수를 사용하면 도메인 컨트롤러 개체의 DNSHostName 특성이 null인 경우 HostName 속성이 설정되지 않습니다.

이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 지정된 사이트에서 사용할 수 있는 DC를 하나 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot; -ForceDiscover</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 사이트에서 사용할 수 있는 DC를 하나 검색하게 합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service &quot;GlobalCatalog&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 현재 포리스트에서 글로벌 카탈로그를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service 2</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 현재 포리스트에서 글로벌 카탈로그를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 현재 도메인에서 사용할 수 있는 DC를 하나 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 지정된 도메인에서 사용할 수 있는 DC를 하나 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;corp.contoso.com&quot; -Service &quot;PrimaryDC&quot;,&quot;TimeService&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Discovery를 사용하여 PDC를 가져오고 시간 서버로 알려지도록 합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>NetBIOS 이름을 사용하여 도메인 컨트롤러를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>NetBIOS 이름을 사용하여 도메인 컨트롤러를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;TK5-CORP-DC-10.fabrikam.com&quot; -Server &quot;fabrikam.com&quot; -Credential &quot;corp\administrator&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>주어진 도메인(Server 매개 변수에 지정됨)에서 DNS 호스트 이름을 사용하고 관리자 자격 증명을 지정하여 도메인 컨트롤러를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;168.54.62.57&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>IP 주소를 사용하여 도메인 컨트롤러를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 12 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter  { isGlobalCatalog -eq $true -and Site -eq &quot;Default-First-Site-Name&quot; }</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 사이트의 모든 글로벌 카탈로그를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 13 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Server &quot;research.fabrikam.com&quot; -Filter { isGlobalCatalog -eq $true -and isReadOnly -eq $true }</dev:code>
  			<dev:remarks>
  			        <maml:para>클라이언트가 연결된 자식 도메인의 모든 ROGC를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 14 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController</dev:code>
  			<dev:remarks>
  			        <maml:para>사용자의 현재 세션에 있는 도메인 컨트롤러를 가져옵니다. 이 도메인 컨트롤러는 AD 공급자의 컨텍스트에서 기본 서버로 사용됩니다. 이런 식으로 이 cmdlet을 사용하면 기본적으로 사용되는 서버를 알 수 있습니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144952</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 조직 구성 단위를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADOrganizational unit cmdlet은 조직 구성 단위 개체를 가져오거나 검색을 수행하여 여러 조직 구성 단위를 가져옵니다.

Identity 매개 변수는 검색할 Active Directory 조직 구성 단위를 지정합니다. DN(고유 이름) 또는 GUID로 조직 구성 단위를 식별할 수 있습니다. 이 매개 변수를 $&lt;localOrganizationalunitObject&gt;와 같은 조직 구성 단위 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 조직 구성 단위 개체를 전달할 수도 있습니다.

둘 이상의 조직 구성 단위를 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 조직 구성 단위 개체의 기본 속성 집합을 검색합니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. 컴퓨터 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Active Directory 조직 구성 단위 개체의 ID를 지정합니다. 이 매개 변수에는 다음과 같은 ID 형식이 지정될 수 있습니다. 괄호 안의 식별자는 ID가 포함된 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;OUinstance&quot;라는 이름의 조직 구성 단위 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Active Directory 조직 구성 단위 개체의 ID를 지정합니다. 이 매개 변수에는 다음과 같은 ID 형식이 지정될 수 있습니다. 괄호 안의 식별자는 ID가 포함된 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;OUinstance&quot;라는 이름의 조직 구성 단위 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					조직 구성 단위 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 조직 구성 단위 개체를 반환합니다. 

이 cmdlet은 ADOrganizational unit의 기본 속성 값 집합을 반환합니다. 추가 ADOrganizational unit 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADOrganizational unit 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;organizational unit&gt;을 조직 구성 단위의 DN(고유 이름)과 같은 조직 구성 단위 식별자로 바꿉니다.

ADOrganizational unit 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADOrganizational unit &lt;organizational unit&gt;| Get-Member

ADOrganizational unit 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADOrganizational unit &lt;organizational unit&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Filter 'Name -like &quot;*&quot;' | FT Name, DistinguishedName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                 DistinguishedName
----                 -----------------
Domain Controllers   OU=Domain Controllers,DC=FABRIKAM,DC=COM
UserAccounts         OU=UserAccounts,DC=FABRIKAM,DC=COM
Sales                OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Marketing            OU=Marketing,OU=UserAccounts,DC=FABRIKAM,DC=COM
Production           OU=Production,OU=UserAccounts,DC=FABRIKAM,DC=COM
HumanResources       OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM
NorthAmerica         OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
SouthAmerica         OU=SouthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Europe               OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
AsiaPacific          OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Finance              OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM
Corporate            OU=Corporate,OU=UserAccounts,DC=FABRIKAM,DC=COM
ApplicationServers   OU=ApplicationServers,DC=FABRIKAM,DC=COM
Groups               OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
PasswordPolicyGroups OU=PasswordPolicyGroups,OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
Managed              OU=Managed,DC=FABRIKAM,DC=COM
ServiceAccounts      OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>도메인의 모든 조직 구성 단위를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Identity 'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' | ft Name,Country,PostalCode,City,StreetAddress,State -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        Country PostalCode City     StreetAddress    State
----        ------- ---------- ----     -------------    -----
AsiaPacific AU      4171       Balmoral 45 Martens Place QLD
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName이 'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM'인 조직 구성 단위를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -LDAPFilter '(name=*)' -SearchBase 'OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' -SearchScope OneLevel | ft Name,Country,PostalCode,City,StreetAddress,State
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        Country PostalCode City     StreetAddress    State
----                    -------                 ----------             ----                   -------------          -----
AsiaPacific AU      4171       Balmoral 45 Martens Place QLD
Europe                  UK                      NG34 0NI               QUARRINGTON            22 Station Rd
NorthAmerica            US                      02142                  Cambridge              1634 Randolph Street   MA
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>LDAP 필터를 사용하여 영업 조직 구성 단위 아래의 조직 구성 단위를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144953</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹의 멤버를 가져옵니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADGroupMember cmdlet은 Active Directory 그룹의 멤버를 가져옵니다. 멤버는 사용자, 그룹 및 컴퓨터일 수 있습니다. 

Identity 매개 변수는 액세스할 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. 파이프라인을 통해 그룹 개체를 전달하여 그룹을 지정할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 파이프라인을 통해 Get-ADGroupMember cmdlet으로 개체를 전달할 수 있습니다.

Recursive 매개 변수를 지정하는 경우 이 cmdlet은 하위 개체가 없는 그룹의 계층 구조에 있는 모든 멤버를 가져옵니다. 예를 들어 SaraDavisReports 그룹에 사용자 KarenToh 및 그룹 JohnSmithReports가 포함되어 있고 JohnSmithReports 그룹에 사용자 JoshPollock이 포함되어 있는 경우 이 cmdlet은 KarenToh와 JoshPollock을 반환합니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>cmdlet에서 하위 개체가 없는 그룹의 계층 구조에 있는 모든 멤버를 가져오도록 지정합니다. 다음 예에서는 SaraDavisReports 그룹의 계층 구조를 보여 줍니다.
+SaraDavisReports [group]
  -KarenToh [user]
  -MattHinkLaptop [computer]
  +JohnSmithReports [group]
    -JoshPollock [user]
    -ArmandoPinto [user]
    +JohnSmithComputers [group]
      -JoshComputer [computer]
  
SaraDavisReports를 그룹으로 지정하고 Recursive 매개 변수를 지정하는 경우 다음 멤버와 하위 멤버가 반환됩니다.
  KarenToh
  MattHinkLaptop
  JoshPollock
  ArmandoPinto
  JoshComputer

지정한 그룹에 멤버가 없는 경우에는 아무 것도 반환되지 않습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>cmdlet에서 하위 개체가 없는 그룹의 계층 구조에 있는 모든 멤버를 가져오도록 지정합니다. 다음 예에서는 SaraDavisReports 그룹의 계층 구조를 보여 줍니다.
+SaraDavisReports [group]
  -KarenToh [user]
  -MattHinkLaptop [computer]
  +JohnSmithReports [group]
    -JoshPollock [user]
    -ArmandoPinto [user]
    +JohnSmithComputers [group]
      -JoshComputer [computer]
  
SaraDavisReports를 그룹으로 지정하고 Recursive 매개 변수를 지정하는 경우 다음 멤버와 하위 멤버가 반환됩니다.
  KarenToh
  MattHinkLaptop
  JoshPollock
  ArmandoPinto
  JoshComputer

지정한 그룹에 멤버가 없는 경우에는 아무 것도 반환되지 않습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 그룹의 멤버인 사용자, 컴퓨터 또는 그룹을 나타내는 하나 이상의 보안 주체 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember
cmdlet Get-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: Administrators </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 동작을 사용하여 관리자 그룹의 모든 멤버를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; | get-adgroupmember -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC 
name              : SanjayPatel 
objectClass       : user 
objectGUID        : d671de28-6e40-42a7-b32c-63d336de296d 
SamAccountName    : 
SID               : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>AD LDS 인스턴스에 있는 모든 도메인 로컬 그룹의 그룹 멤버를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember -Identity administrators </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>관리자 그룹의 모든 그룹 멤버를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember &quot;Enterprise Admins&quot; -recursive </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 

distinguishedName : CN=Sagiv Hadaya,CN=Users,DC=Fabrikam,DC=com 
name              : Sagiv Hadaya 
objectClass       : user 
objectGUID        : 64706230-f179-4fe4-b8c9-f0d334e66ab1 
SamAccountName    : SHadaya 
SID               : S-1-5-21-41432690-3719764436-1984117282-1158 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>하위 그룹의 멤버를 비롯한 'Enterprise Admins' 그룹의 모든 멤버를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144954</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>지정된 사용자, 컴퓨터, 그룹 또는 서비스 계정을 포함하는 Active Directory 그룹을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADPrincipalGroupMembership cmdlet은 지정된 사용자, 컴퓨터, 그룹 또는 서비스 계정을 멤버로 포함하는 Active Directory 그룹을 가져옵니다. 이 cmdlet에서 그룹 검색을 수행하려면 글로벌 카탈로그가 있어야 합니다. 사용자, 컴퓨터 또는 그룹이 포함된 포리스트에 글로벌 카탈로그가 없는 경우 이 cmdlet은 종료되지 않은 오류를 반환합니다. 다른 도메인의 로컬 그룹을 검색하려면 ResourceContextServer 매개 변수를 사용하여 다른 도메인의 대체 서버를 지정합니다. 

Identity 매개 변수는 그룹 멤버를 결정할 사용자, 컴퓨터 또는 그룹 개체를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM 계정 이름으로 사용자, 컴퓨터 또는 그룹 개체를 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 사용자, 그룹 또는 컴퓨터 개체 변수를 지정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 파이프라인을 통해 Get-ADPrincipalGroupMembership cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADUser 또는 Get-ADComputer를 사용하여 파이프라인을 통해 전달할 사용자 및 컴퓨터 개체를 가져올 수 있습니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextPartition</maml:name>
				<maml:description>
					<maml:para>검색할 AD 또는 AD LDS 인스턴스의 파티션에 대한 고유 이름을 지정합니다. 지정된 서버에서 호스팅되는 파티션을 지정하려면 이 매개 변수와 ResourceContextServer 매개 변수를 함께 사용합니다. ResourceContextPartition 매개 변수를 지정하지 않은 경우 ResourceContextServer의 기본 파티션이 검색됩니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextServer</maml:name>
				<maml:description>
					<maml:para>cmdlet이 지정된 도메인에 있으며 사용자가 멤버로 속한 그룹의 목록을 반환하도록 지정합니다. 사용자의 계정이 있는 도메인이 아닌 도메인에서 그룹을 검색하려면 이 매개 변수를 사용합니다. 이 도메인의 기본 파티션이 아닌 파티션을 검색하려면 ResourceContextPartition 매개 변수도 지정합니다.


다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextPartition</maml:name>
			<maml:description>
				<maml:para>검색할 AD 또는 AD LDS 인스턴스의 파티션에 대한 고유 이름을 지정합니다. 지정된 서버에서 호스팅되는 파티션을 지정하려면 이 매개 변수와 ResourceContextServer 매개 변수를 함께 사용합니다. ResourceContextPartition 매개 변수를 지정하지 않은 경우 ResourceContextServer의 기본 파티션이 검색됩니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextServer</maml:name>
			<maml:description>
				<maml:para>cmdlet이 지정된 도메인에 있으며 사용자가 멤버로 속한 그룹의 목록을 반환하도록 지정합니다. 사용자의 계정이 있는 도메인이 아닌 도메인에서 그룹을 검색하려면 이 매개 변수를 사용합니다. 이 도메인의 기본 파티션이 아닌 파티션을 검색하려면 ResourceContextPartition 매개 변수도 지정합니다.


다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자, 컴퓨터 또는 그룹을 나타내는 보안 주체 개체는 Identity 매개 변수가 받습니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 사용자, 컴퓨터, 그룹 또는 서비스 계정을 멤버로 갖는 그룹 개체를 반환합니다.

Get-ADPrincipalGroupMembership cmdlet은 기본 ADGroup 속성 값 집합을 반환합니다. 추가 ADGroup 속성을 검색하려면 이 cmdlet이 생성하는 ADGroups 개체를 파이프라인을 통해 Get-ADGroup으로 전달합니다.  -Properties 매개 변수를 Get-ADGroup으로 전달하여 그룹 개체에서 필요로 하는 추가 속성을 지정합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership
cmdlet Get-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: administrator </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>cmdlet 기본 동작을 사용하여 관리자 계정이 멤버로 속한 모든 그룹을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -server localhost:60000 -identity &quot;CN=GlenJohns,DC=AppNC&quot; -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>'CN=GlenJohns,DC=AppNC' 사용자가 AD LDS 인스턴스의 멤버인 모든 그룹을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>관리자가 멤버로 속한 모든 그룹을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator -ResourceContextServer ChildDomain.Fabrikam.Com -ResourceContextPartition &quot;DC=Fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>리소스 도메인 ChildDomain.Fabrikam.Com에서 로컬 도메인의 관리자 계정이 멤버로 속한 모든 그룹을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144955</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>세분화된 암호 정책이 적용되는 사용자 및 그룹을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get- ADFineGrainedPasswordPolicySubject cmdlet은 세분화된 암호 정책이 적용될 수 있는 사용자 및 그룹을 가져옵니다.

Identity 매개 변수는 세분화된 암호 정책을 지정합니다. 고유 이름, GUID 또는 이름으로 세분화된 암호 정책을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localPasswordPolicyObject&gt;와 같은 세분화된 암호 정책 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 세분화된 암호화 정책 개체를 전달할 수도 있습니다. 예를 들어 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 세분화된 암호 정책 개체를 검색한 다음 파이프라인을 통해 Get- ADFineGrainedPasswordPolicySubject cmdlet으로 개체를 전달할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책이 적용되는 사용자 및 그룹을 나타내는 보안 주체 개체를 반환합니다. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject -Identity DomainUsersPSO | FT Name,ObjectClass,DistinguishedName -AutoSize
</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass DistinguishedName
----         ----------- -----------------
Domain Users group       CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'DomainUsersPSO'라는 암호 정책의 세분화된 암호 정책 주제를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144956</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>읽기 전용 도메인 컨트롤러의 암호 복제 정책에 대한 허용 목록 또는 거부 목록의 멤버를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicy는 RODC(읽기 전용 도메인 컨트롤러) 암호 복제 정책에 대한 적용 목록 또는 거부 목록의 멤버인 사용자, 컴퓨터, 서비스 계정 및 그룹을 가져옵니다. 적용 목록의 멤버를 가져오려면 AppliedList 매개 변수를 지정하고 거부 목록의 멤버를 가져오려면 DeniedList 매개 변수를 지정합니다.

Identity 매개 변수는 허용 및 거부 목록을 사용하여 암호 복제 정책을 적용하는 RODC를 지정합니다. GUID, IPV4Address, IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. 도메인 컨트롤러를 나타내는 서버 개체의 이름, NTDS 설정 개체 또는 서버 개체의 DN(고유 이름), 구성 파티션 아래에 있는 NTDS 설정 개체 또는 서버 개체의 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN으로 도메인 컨트롤러를 식별할 수도 있습니다. 

Identity 매개 변수를 $&lt;localDomainControllerobject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 컨트롤러 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomainController cmdlet을 사용하여 도메인 컨트롤러 개체를 검색한 다음 파이프라인을 통해 Get-ADDomainControllerPasswordReplicationPolicy cmdlet으로 개체를 전달할 수 있습니다. 

이 cmdlet에 쓰기 가능한 도메인 컨트롤러를 지정하는 경우 cmdlet은 종료되지 않은 오류를 반환합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Allowed</maml:name>
				<maml:description>
					<maml:para>cmdlet이 도메인 컨트롤러의 허용 목록에서 사용자, 컴퓨터 및 그룹을 반환하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -AllowedList </maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Denied</maml:name>
				<maml:description>
					<maml:para>cmdlet이 도메인 컨트롤러의 거부 목록에서 사용자, 컴퓨터 및 그룹을 반환하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -DeniedList </maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Allowed</maml:name>
			<maml:description>
				<maml:para>cmdlet이 도메인 컨트롤러의 허용 목록에서 사용자, 컴퓨터 및 그룹을 반환하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -AllowedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Denied</maml:name>
			<maml:description>
				<maml:para>cmdlet이 도메인 컨트롤러의 거부 목록에서 사용자, 컴퓨터 및 그룹을 반환하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -DeniedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 컨트롤러 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 컨트롤러 암호 복제 정책에 대한 적용 목록 또는 거부 목록의 멤버인 사용자, 컴퓨터, 서비스 계정 및 그룹을 나타내는 하나 이상의 개체를 반환합니다. 반환되는 목록은 지정하는 매개 변수에 따라 다릅니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -Allowed | ft Name,ObjectClass</dev:code>
  			<dev:remarks>
  			        <maml:para>RODC 도메인 컨트롤러 암호 복제 정책에서 허용되는 계정을 가져와 각 계정의 이름 및 개체 클래스를 표시합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicy -Allowed </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Allowed RODC Password Replication Group,CN=Users,DC=Fabrikam,DC=com 
Name              : Allowed RODC Password Replication Group 
ObjectClass       : group 
ObjectGUID                         : 239b0470-7f49-472d-8fcb-4911e90b2c5e 
SamAccountName    : Allowed RODC Password Replication Group 
SID               : S-1-5-21-41432690-3719764436-1984117282-571</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>도메인의 모든 RODC에서 암호 복제 정책의 허용 목록을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144957</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicyUsage
		</command:name>
		<maml:description>
			<maml:para>읽기 전용 도메인 컨트롤러가 인증하거나 도메인 컨트롤러의 표시된 목록에 있는 Active Directory 계정을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicyUsage</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicyUsage는 RODC(읽기 전용 도메인 컨트롤러)가 인증하거나 해당 RODC에 저장된 암호가 있는 사용자 또는 컴퓨터 계정을 가져옵니다. RODC에 저장된 계정의 목록을 표시된 목록이라고 합니다. 

RODC가 인증하는 계정을 가져오려면 AuthenticatedAccounts 매개 변수를 사용합니다. RODC에 저장된 암호가 있는 계정을 가져오려면 RevealedAccounts 매개 변수를 사용합니다.

Identity 매개 변수는 RODC를 지정합니다. GUID, IPV4Address, 전역 IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. 도메인 컨트롤러를 나타내는 서버 개체의 이름, 서버 개체의 NTDS 설정 개체에 대한 DN(고유 이름), 구성 파티션 아래에 있는 서버 개체의 NTDS 설정 개체에 대한 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN으로 도메인 컨트롤러를 식별할 수도 있습니다. Identity 매개 변수를 $&lt;localDomainControllerobject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 컨트롤러 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomainController cmdlet을 사용하여 도메인 컨트롤러 개체를 검색한 다음 파이프라인을 통해 Get-ADDomainControllerPasswordReplicationPolicyUsage cmdlet으로 개체를 전달할 수 있습니다. 이 cmdlet에 쓰기 가능한 도메인 컨트롤러를 지정하는 경우 cmdlet은 종료되지 않은 오류를 반환합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicyUsage</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthenticatedAccounts</maml:name>
				<maml:description>
					<maml:para>읽기 전용 도메인 컨트롤러가 인증한 계정을 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -AuthenticatedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RevealedAccounts</maml:name>
				<maml:description>
					<maml:para>읽기 전용 도메인 컨트롤러에 암호가 저장된 계정을 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -RevealedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthenticatedAccounts</maml:name>
			<maml:description>
				<maml:para>읽기 전용 도메인 컨트롤러가 인증한 계정을 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -AuthenticatedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RevealedAccounts</maml:name>
			<maml:description>
				<maml:para>읽기 전용 도메인 컨트롤러에 암호가 저장된 계정을 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -RevealedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 컨트롤러 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 RODC(읽기 전용 도메인 컨트롤러)가 인증하거나 해당 RODC에 암호가 저장된 사용자, 컴퓨터 및 서비스 계정을 나타내는 하나 이상의 계정 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -AuthenticatedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 RODC의 인증된 계정을 가져와 각 계정의 이름 및 개체 클래스를 표시합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -RevealedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 RODC의 표시된 계정을 가져와 각 계정의 이름 및 개체 클래스를 표시합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicyUsage </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=krbtgt_35512,CN=Users,DC=Fabrikam,DC=com 
Enabled           : False 
Name              : krbtgt_35512 
ObjectClass       : user 
ObjectGUID                         : 8c7268f9-add3-409c-968b-de029e517211 
SamAccountName    : krbtgt_35512 
SID               : S-1-5-21-41432690-3719764436-1984117282-1106 
UserPrincipalName : 

DistinguishedName : CN=CSD2722780,OU=Domain Controllers,DC=Fabrikam,DC=com 
Enabled           : True 
Name              : CSD2722780 
ObjectClass       : computer 
ObjectGUID                         : 63a5e005-e01f-4fc9-ae71-9d9367f808bc 
SamAccountName    : CSD2722780$ 
SID               : S-1-5-21-41432690-3719764436-1984117282-1105 
UserPrincipalName : </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>도메인의 모든 RODC에 캐시된 계정의 목록을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145018</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountResultantPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정에 대한 결과 암호 복제 정책을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountResultantPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAccountResultantPasswordReplicationPolicy는 지정된 읽기 전용 도메인 컨트롤러의 사용자, 컴퓨터 또는 서비스 계정에 대한 결과 암호 복제 정책을 가져옵니다.

정책은 다음 값 중 하나입니다.
      Allow 또는 1
      DenyExplicit 또는 0
      DenyImplicit 또는 2
      Unknown 또는 -1

Identity 매개 변수는 계정을 지정합니다. DN(고유 이름) GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자, 컴퓨터 또는 서비스 계정 개체를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localAccountobject&gt;와 같은 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser, Get-ADComputer, Get-ADServiceAccount 또는 Search-ADAccount cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Get-ADAccountResultantPasswordReplicationPolicy cmdlet으로 개체를 전달할 수 있습니다.

DomainController 매개 변수는 읽기 전용 도메인 컨트롤러를 지정합니다. IPV4Address, 전역 IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. NTDS 설정 개체 또는 서버 개체의 DN(고유 이름), 구성 파티션 아래에 있는 NTDS 설정 개체 또는 서버 개체의 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN, SamAccountName, GUID, SID로 도메인 컨트롤러를 식별할 수도 있습니다. DomainController 매개 변수를 $&lt;localDomainControllerObject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정할 수도 있습니다.  
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountResultantPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>DomainController</maml:name>
				<maml:description>
					<maml:para>RODC(읽기 전용 도메인 컨트롤러)를 지정합니다. 이 cmdlet은 해당 RODC에 대한 계정의 암호 복제 정책을 반환합니다. 다음 값 중 하나를 제공하여 도메인 컨트롤러를 식별할 수 있습니다. 
  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 DN(고유 이름)
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 DN(고유 이름)
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN(고유 이름)
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

다음 예에서는 이 매개 변수를 도메인 컨트롤러의 DNS 호스트 이름으로 설정하는 방법을 보여 줍니다.
   -DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>DomainController</maml:name>
			<maml:description>
				<maml:para>RODC(읽기 전용 도메인 컨트롤러)를 지정합니다. 이 cmdlet은 해당 RODC에 대한 계정의 암호 복제 정책을 반환합니다. 다음 값 중 하나를 제공하여 도메인 컨트롤러를 식별할 수 있습니다. 
  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 DN(고유 이름)
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 DN(고유 이름)
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN(고유 이름)
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

다음 예에서는 이 매개 변수를 도메인 컨트롤러의 DNS 호스트 이름으로 설정하는 방법을 보여 줍니다.
   -DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADResultantPasswordReplicationPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 도메인 컨트롤러의 계정에 대한 결과 암호 복제 정책을 나타내는 ADResultantPasswordReplicationPolicy 열거형 값을 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BradSu &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>도메인에서 지정된 사용자 계정에 대한 결과 암호 복제 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BobKe -DomainController &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>특정 도메인 컨트롤러에서 지정된 사용자 계정에 대한 결과 암호 복제 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy &quot;CN=Jordao Moreno,OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>특정 도메인 컨트롤러에서 지정된 사용자 계정 DN에 대한 결과 암호 복제 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144958</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUserResultantPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>사용자의 결과 암호 정책을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUserResultantPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAccountResultantPasswordPolicy는 사용자의 RSoP(결과 암호 정책 개체)를 가져옵니다. RSoP는 msDS-ResultantPSO라는 Active Directory 특성으로 정의됩니다.

사용자에게 여러 PSO(암호 정책 개체)가 연결될 수 있지만 PSO 중 하나만 RSoP입니다. PSO를 사용자에게 직접 적용하거나 사용자가 포함된 Active Directory 그룹에 적용하면 PSO가 사용자와 연결됩니다. 사용자나 그룹에 둘 이상의 PSO 정책을 연결하면 RSoP 값에 따라 적용되는 PSO가 정의됩니다. 

사용자의 결과 암호 정책 또는 RSoP는 다음 절차에 따라 결정됩니다.
  - 사용자에게 PSO가 하나만 연결된 경우 이 PSO가 RSoP입니다.
  - 둘 이상의 PSO가 사용자에게 연결된 경우 사용자에게 직접 적용되는 PSO가 RSoP입니다.  
  - 둘 이상의 PSO가 사용자에게 직접 적용되는 경우 msDS-PasswordSettingsPrecedence 특성 값이 가장 낮은 PSO가 RSoP이며 이 이벤트는 Active Directory 이벤트 로그에 경고로 기록됩니다. 이 특성 값이 가장 낮으면 PSO 우선 순위가 가장 높습니다. 예를 들어 두 PSO의 msDS-PasswordSettingsPrecedence 값이 100과 200이면 특정 값이 100인 PSO가 RSoP입니다.
  - 사용자에게 직접 적용된 PSO가 없는 경우에는 사용자를 멤버로 갖는 글로벌 보안 그룹의 PSO가 고려됩니다. 이들 중 msDS-PasswordSettingsPrecedence 값이 가장 낮은 PSO가 RSoP입니다.

Identity 매개 변수는 Active Directory 사용자를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자를 식별할 수 있습니다. 이 매개 변수를 $&lt;localUserObject&gt;와 같은 사용자 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 사용자 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 사용자 개체를 검색한 다음 파이프라인을 통해 Get-ADUserResultantPasswordPolicy cmdlet으로 개체를 전달할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUserResultantPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자의 결과 암호 정책을 나타내는 세분화된 암호 정책 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUserResultantPasswordPolicy BobKe
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        : DomainUsersPSO
ComplexityEnabled           : True
LockoutThreshold            : 10
ReversibleEncryptionEnabled : False
LockoutDuration             : 12:00:00
LockoutObservationWindow    : 00:15:00
MinPasswordLength           : 8
Precedence                  : 500
ObjectGUID                         : f8d2653c-9b3b-499e-b272-4c7f4268df4c
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 60.00:00:00
AppliesTo                   : {CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM}
DistinguishedName           : CN=DomainUsersPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 'BobKe'인 사용자에 대한 결과 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144959</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 서비스 계정을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADServiceAccount cmdlet은 서비스 계정을 가져오거나 검색을 수행하여 여러 서비스 계정을 가져옵니다.

Identity 매개 변수는 가져올 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. 이 매개 변수를 $&lt;localServiceaccountObject&gt;와 같은 서비스 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 서비스 계정 개체를 전달할 수도 있습니다.

둘 이상의 서비스 계정을 검색하려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다.

이 cmdlet은 서비스 계정 개체의 기본 속성 집합을 가져옵니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. 서비스 계정 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;

  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 서비스 계정 개체를 반환합니다. 

이 cmdlet은 기본 ADService 계정 속성 값 집합을 반환합니다. 추가 ADService 계정 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADService 계정 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;service account&gt;를 서비스 계정 이름과 같은 서비스 계정 식별자로 바꿉니다.

ADService 계정 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADService account &lt;service account&gt;| Get-Member

ADService 계정 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADService account &lt;service account&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity service1 </dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID                         : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 'service1'인 서비스 계정을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity S-1-5-21-159507390-2980359153-3438059098-29770 </dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID                         : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>SID가 'S-1-5-21-159507390-2980359153-3438059098-29770'인 서비스 계정을 검색합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {HostComputers -eq &quot;CN=SQL-Server-1, DC=contoso,DC=com&quot; }</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID                         : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : {CN=SQL-Server-1, DC=contoso,DC=com} 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>&quot;CN=SQL-Server-1,DC=contoso,DC=com&quot; 컴퓨터에 설치된 서비스 계정을 찾습니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144960</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>컴퓨터에서 호스팅되는 서비스 계정을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADComputerServiceAccount cmdlet은 지정된 호스트에서 호스트하는 모든 서비스 계정을 가져옵니다.

Computer 매개 변수는 서비스 계정을 호스트하는 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. Computer 매개 변수를 $&lt;localComputerobject&gt;와 같은 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Computer 매개 변수로 컴퓨터 개체를 전달할 수도 있습니다. 예를 들어 Get-ADComputer cmdlet을 사용하여 컴퓨터 개체를 검색한 다음 파이프라인을 통해 Get-ADComputerServiceAccount cmdlet으로 개체를 전달할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Computer 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 컴퓨터에서 호스트하는 서비스 계정을 나타내는 하나 이상의 개체를 반환합니다. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputerServiceAccount -Identity ComputerAcct1
</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True
Name              : SvcAcct1
UserPrincipalName     :
SamAccountName    : SvcAcct1$
ObjectClass       : msDS-ManagedServiceAccount
SID               : S-1-5-21-159507390-2980359153-3438059098-1104
ObjectGUID                         : 8d759d66-ef68-4360-aff6-ec3bb3425ac1
HostComputers     : {CN=ComputerAcct1,CN=Computers,DC=contoso,DC=com}
DistinguishedName : CN=SvcAcct1,CN=Managed Service Accounts,DC=contoso,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>컴퓨터 계정 'ComputerAcct1'에 호스팅된 서비스 계정을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144961</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Active Directory 도메인의 기본 암호 정책을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDefaultDomainPasswordPolicy cmdlet은 도메인의 기본 암호 정책을 가져옵니다.

Identity 매개 변수는 Active Directory 도메인을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), DNS 도메인 이름 또는 NETBIOS 이름으로 도메인을 식별할 수 있습니다. 이 매개 변수를 $&lt;localDomainObject&gt;와 같은 도메인 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 개체를 전달할 수도 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>로컬 컴퓨터의 도메인을 반환할지 아니면 CLU(현재 로그온한 사용자)를 반환할지 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  LocalComputer 또는 0
  LoggedOnUser 또는 1

다음 예에서는 현재 로그온한 사용자의 도메인을 반환하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Current LoggedOnUser</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					지정된 도메인의 기본 도메인 암호 정책 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자 도메인에서 기본 도메인 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LocalComputer</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로컬 컴퓨터에서 기본 도메인 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Identity fabrikam.com</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 도메인에서 기본 도메인 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>(Get-ADForest -Current LoggedOnUser).Domains | %{ Get-ADDefaultDomainPasswordPolicy -Identity $_ }</dev:code>
  			<dev:remarks>
  			        <maml:para>포리스트의 모든 도메인에서 기본 도메인 암호 정책 개체를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자 도메인에서 기본 도메인 암호 정책을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144962</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountAuthorizationGroup
		</command:name>
		<maml:description>
			<maml:para>계정 토큰 그룹 정보를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountAuthorizationGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADAuthorizationGroup cmdlet은 지정된 사용자, 컴퓨터 또는 서비스 계정 토큰에서 보안 그룹을 가져옵니다. 이 cmdlet에서 그룹 검색을 수행하려면 글로벌 카탈로그가 있어야 합니다. 계정이 포함된 포리스트에 글로벌 카탈로그가 없는 경우 이 cmdlet은 종료되지 않은 오류를 반환합니다.

Identity 매개 변수는 사용자, 컴퓨터 또는 서비스 계정을 지정합니다. DN(고유 이름) GUID, SID(보안 식별자), SAM(보안 계정 관리자) 계정 이름 또는 사용자 계정 이름으로 사용자, 컴퓨터 또는 서비스 계정 개체를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localAccountobject&gt;와 같은 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser, Get-ADComputer, Get-ADServiceAccount 또는 Search-ADAccount cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Get-ADAccountAuthorizationGroup cmdlet으로 개체를 전달할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountAuthorizationGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자, 컴퓨터 또는 서비스 계정을 나타내는 계정 개체는 Identity 매개 변수가 받습니다. 다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정의 보안 그룹을 나타내는 그룹 개체를 반환합니다. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup GlenJohn</dev:code>
  			<dev:remarks>
 				<maml:para>
GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Everyone
name              : Everyone
objectClass       :
SID               : S-1-1-0
distinguishedName :

GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Authenticated Users
name              : Authenticated Users
objectClass       :
SID               : S-1-5-11
distinguishedName :

GroupScope        : Global
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902
GroupCategory     : Security
SamAccountName    : Domain Users
name              : Domain Users
objectClass       : group
SID               : S-1-5-21-41432690-3719764436-1984117282-513
distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : 869fb7ad-8cf2-4dd0-ac0f-4bd3bf324669
GroupCategory     : Security
SamAccountName    : Pre-Windows 2000 Compatible Access
name              : Pre-Windows 2000 Compatible Access
objectClass       : group
SID               : S-1-5-32-554
distinguishedName : CN=Pre-Windows 2000 Compatible Access,CN=Builtin,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : c1e397c5-1e44-4270-94d1-88d6c4b78ee6
GroupCategory     : Security
SamAccountName    : Users
name              : Users
objectClass       : group
SID               : S-1-5-32-545
distinguishedName : CN=Users,CN=Builtin,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Description</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>SamAccountName이 GlenJohn인 지정된 계정의 모든 보안 그룹을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup &quot;cn=GlenJohn,dc=AppNC&quot; -Server &lt;Server&gt;:50000</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=AdminGroup,DC=AppNC
GroupCategory     : Security
GroupScope        : Global
name              : AdminGroup
objectClass       : group
objectGUID        : 4d72873f-fe09-4834-9ada-a905636d10df
SamAccountName    :
SID               : S-1-510474493-936115905-4021890855-1253703389-3958791574-3542197427</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>AD LDS 인스턴스 &lt;Server&gt;:50000에서 DistinguishedName이 &quot;cn=GlenJohn,dc=AppNC&quot;인 지정된 계정의 모든 보안 그룹을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144963</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 선택적 기능을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADOptionalFeature cmdlet은 Active Directory에서 선택적 기능을 가져오거나 검색을 수행하여 여러 선택적 기능을 가져옵니다. 

Identity 매개 변수는 가져올 Active Directory 선택적 기능을 지정합니다. DN(고유 이름), 기능 GUID 또는 개체 GUID로 선택적 기능을 식별할 수 있습니다. 매개 변수를 $&lt;localOptionalFeatureObject&gt;와 같은 선택적 기능 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 선택적 기능 개체를 전달할 수도 있습니다.

둘 이상의 선택적 기능을 검색하여 가져오려면 Filter 또는 LDAPFilter 매개 변수를 사용합니다. Filter 매개 변수는 PowerShell 표현 언어를 사용하여 Active Directory에 대한 쿼리 문자열을 작성합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. Filter 매개 변수 구문에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 기존 LDAP 쿼리 문자열이 있는 경우 LDAPFilter 매개 변수를 사용할 수 있습니다. 

이 cmdlet은 선택적 기능 개체의 기본 속성 집합을 검색합니다. 추가 속성을 검색하려면 Properties 매개 변수를 사용합니다. 컴퓨터 개체의 속성을 결정하는 방법에 대한 자세한 내용은 Properties 매개 변수 설명을 참조하십시오.  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 검색하는 쿼리 문자열을 지정합니다. 이 문자열은 PowerShell 표현 언어 구문을 사용합니다. PowerShell 표현 언어 구문은 Filter 매개 변수로 받은 값 유형에 대해 다양한 유형 변환을 지원합니다. 이 구문은 연산자가 피연산자와 값 사이에 놓이는 인오더(in-order) 표현을 사용합니다. Filter 매개 변수에 대한 자세한 내용은 about_ActiveDirectory_Filter를 참조하십시오. 

구문: 
다음 구문에서는 Backus-Naur 형식을 사용하여 이 매개 변수에 PowerShell 표현 언어를 사용하는 방법을 보여 줍니다.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName of the attribute&gt;

&lt;value&gt;::= &lt;compare this value with an &lt;attr&gt; by using the specified &lt;FilterOperator&gt;&gt;

&lt;value&gt;에 지원되는 유형의 목록은 about_ActiveDirectory_ObjectModel을 참조하십시오.

예: 
다음 예에서는 Active Directory cmdlet에서 이 구문을 사용하는 방법을 보여 줍니다.

cmdlet이 지정하는 유형의 모든 개체를 가져오려면 별표 와일드카드를 사용합니다.
모든 사용자 개체:
Get-ADUser -Filter * 
  - 또는 -
모든 컴퓨터 개체:
Get-ADComputer -Filter *

전자 메일 메시지 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  - 또는 -
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

참고: &quot;*&quot; 이외의 PowerShell 와일드카드(예: &quot;?&quot;)는 Filter 구문에 사용할 수 없습니다.

성이 Smith이고 전자 메일 특성이 있는 모든 사용자 개체를 가져오려면 다음 명령 중 하나를 사용합니다. 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;smith&quot;)} 
  - 또는 -
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Smith&quot;)} 

2007년 1월 1일 이후 로그온하지 않은 모든 사용자 개체를 가져오려면 다음 명령을 사용합니다.
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

그룹 범주가 Security이고 그룹 범위가 Global인 모든 그룹을 가져오려면 다음 명령 중 하나를 사용합니다.
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  - 또는 -
Get-ADGroup -filter {GroupType -band 0x80000000}

참고: LDAP 쿼리 문자열을 사용하여 쿼리하려면 LDAPFilter 매개 변수를 사용하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 선택적 기능 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  기능 GUID(featureGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  개체 GUID(objectGUID) 
    예: 482ab21c-823e-401e-879a-ac7383d64eb9

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 선택적 기능 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;optionalFeatureInstance&quot;라는 이름의 선택적 기능 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체를 필터링하는 데 사용되는 LDAP 쿼리 문자열을 지정합니다. 이 매개 변수를 사용하여 기존 LDAP 쿼리를 실행할 수 있습니다. Filter 매개 변수 구문은 LDAP 구문과 동일한 기능을 지원합니다. 자세한 내용은 Filter 매개 변수 설명 및 about_ActiveDirectory_Filter를 참조하십시오.

다음 예에서는 SearchBase 매개 변수에 지정된 조직 구성 단위에서 이름이 &quot;sara&quot;로 시작하는 모든 개체를 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>서버에서 검색할 출력 개체의 속성을 지정합니다. 이 매개 변수를 사용하여 기본 집합에 포함되지 않은 속성을 검색할 수 있습니다.

이 매개 변수의 속성을 쉼표로 구분된 이름 목록으로 지정합니다. 개체에 설정된 모든 특성을 표시하려면 *(별표)를 지정하십시오.

개별 확장 속성을 지정하려면 속성의 이름을 사용합니다. 기본 속성 또는 확장 속성이 아닌 속성의 경우 특성의 LDAP 표시 이름을 지정해야 합니다. 

개체의 속성을 검색하여 표시하려면 해당 개체와 연결된 Get-* cmdlet을 사용한 다음 해당 출력을 Get-Member cmdlet으로 전달합니다. 다음 예에서는 Administrators 그룹을 샘플 그룹 개체로 사용하여 그룹에 대한 속성을 검색하는 방법을 보여 줍니다.

  Get-ADGroup -Identity Administrators | Get-Member

ADGroup 개체의 모든 속성 목록을 검색하고 표시하려면 다음 명령을 사용합니다.
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

다음 예에서는 Properties 매개 변수를 사용하여 개별 속성과 기본, 확장 또는 전체 속성 집합을 검색하는 방법을 보여 줍니다. 

&quot;SaraDavis&quot;라는 ADUser 개체의 확장 속성인 &quot;OfficePhone&quot; 및 &quot;Organization&quot;과 기본 속성을 검색하려면 다음 명령을 사용합니다.
  GetADUser -Identity SaraDavis  -Properties OfficePhone,Organization

사용자의 기본 속성 및 LDAP 표시 이름이 &quot;otherTelephone&quot; 및 &quot;otherMobile&quot;인 속성을 검색하려면 다음 명령을 사용합니다.
   GetADUser -Identity SaraDavis  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					선택적 기능 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 선택적 기능 개체를 반환합니다. 

이 cmdlet은 기본 ADOptionalFeature 속성 값 집합을 반환합니다. 추가 ADOptionalFeature 속성을 검색하려면 Properties 매개 변수를 사용합니다. 

ADOptionalFeature 개체의 속성을 보려면 다음 예를 참조하십시오. 이러한 예를 실행하려면 &lt;optional feature&gt;를 선택적 기능의 고유 이름과 같은 선택적 기능 식별자로 바꿉니다.

ADOptionalFeature 개체의 기본 속성 집합 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADOptionalFeature &lt;optional feature&gt;| Get-Member

ADOptionalFeature 개체의 모든 속성 목록을 가져오려면 다음 명령을 사용합니다.
   Get-ADOptionalFeature &lt;optional feature&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 포리스트의 사용 가능한 모든 선택적 기능의 목록을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature'</dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 'Recycle Bin Feature'인 선택적 기능을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 766ddcd8-acd0-445e-f3b9-a7f9b6744f2a</dev:code>
  			<dev:remarks>
  			        <maml:para>기능 GUID가 '766ddcd8-acd0-445e-f3b9-a7f9b6744f2a'인 선택적 기능을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스의 'Recycle Bin Feature' 선택적 기능을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144964</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Install-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>컴퓨터에 Active Directory 서비스 계정을 설치합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Install</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Install-ADServiceAccount cmdlet은 기존 Active Directory 서비스 계정을 cmdlet이 실행되는 컴퓨터에 설치합니다. 이 cmdlet은 컴퓨터가 서비스 계정을 호스트할 수 있는지 확인합니다. 또한 이 cmdlet은 컴퓨터에서 사용자 작업 없이 서비스 계정 암호를 주기적으로 다시 설정할 수 있도록 필요한 경우 로컬로 변경합니다.

Identity 매개 변수는 설치할 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. 이 매개 변수를 $&lt;localServiceaccountObject&gt;와 같은 서비스 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 서비스 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADServiceAccount를 사용하여 서비스 계정 개체를 가져온 다음 파이프라인을 통해 Install-ADServiceAccount로 개체를 전달할 수 있습니다.

AccountPassword 매개 변수를 사용하면 관리 서비스 계정의 암호를 포함하는 SecureString을 전달할 수 있습니다. 또는 관리 서비스 계정 암호를 묻는 PromptForPassword 매개 변수를 사용할 수도 있습니다. 지정한 암호는 관리 서비스 계정에 제공된 암호와 일치해야 합니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에 설치하는 경우 DC(도메인 컨트롤러)에 대한 읽기 전용 액세스 권한만 있고 쓰기 액세스 권한은 없으며 암호를 전달하는 작업이 필요합니다. 이러한 경우 관리 서비스 계정을 만들고 적합한 컴퓨터 계정에 연결한 다음 잘 알려진 암호를 할당해야 합니다. 이 암호는 RODC(읽기 전용 도메인 컨트롤러) 사이트의 서버에 관리 서비스 계정을 설치하는 경우 전달됩니다. AccountPassword 및 PromptForPassword 매개 변수를 모두 전달하는 경우 AccountPassword 매개 변수가 우선적으로 적용됩니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Install-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>AccountPassword</maml:name>
			  <maml:description>
			    <maml:para>AccountPassword 매개 변수를 사용하면 제공한 관리 서비스 계정의 암호를 포함하는 SecureString 값 형식을 전달할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에 설치하는 경우 DC(도메인 컨트롤러)에 대한 읽기 전용 액세스 권한만 있고 쓰기 액세스 권한은 없으면 이 작업이 필요합니다. 이러한 경우 관리 서비스 계정을 만들고 적합한 컴퓨터 계정에 연결한 다음 잘 알려진 암호를 할당해야 합니다. 이 암호는 RODC(읽기 전용 도메인 컨트롤러) 사이트의 서버에 관리 서비스 계정을 설치하는 경우 전달됩니다. AccountPassword 및 PromptForPassword 매개 변수를 모두 전달하는 경우 AccountPassword 매개 변수가 우선적으로 적용됩니다.</maml:para>
			  </maml:description>
			  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>PromptForPassword</maml:name>
			  <maml:description>
			    <maml:para>PromptForPassword 매개 변수를 사용하면 구축한 관리 서비스 계정의 암호를 입력할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에 설치하는 경우 DC(도메인 컨트롤러)에 대한 읽기 전용 액세스 권한만 있고 쓰기 액세스 권한은 없으면 이 작업이 필요합니다. 이러한 경우 관리 서비스 계정을 만들고 적합한 컴퓨터 계정에 연결한 다음 잘 알려진 암호를 할당해야 합니다. 이 암호는 RODC(읽기 전용 도메인 컨트롤러) 사이트의 서버에 관리 서비스 계정을 설치하는 경우 전달됩니다. AccountPassword 및 PromptForPassword 매개 변수를 모두 전달하는 경우 AccountPassword 매개 변수가 우선적으로 적용됩니다.</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>AccountPassword</maml:name>
		  <maml:description>
		    <maml:para>AccountPassword 매개 변수를 사용하면 제공한 관리 서비스 계정의 암호를 포함하는 SecureString 값 형식을 전달할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에 설치하는 경우 DC(도메인 컨트롤러)에 대한 읽기 전용 액세스 권한만 있고 쓰기 액세스 권한은 없으면 이 작업이 필요합니다. 이러한 경우 관리 서비스 계정을 만들고 적합한 컴퓨터 계정에 연결한 다음 잘 알려진 암호를 할당해야 합니다. 이 암호는 RODC(읽기 전용 도메인 컨트롤러) 사이트의 서버에 관리 서비스 계정을 설치하는 경우 전달됩니다. AccountPassword 및 PromptForPassword 매개 변수를 모두 전달하는 경우 AccountPassword 매개 변수가 우선적으로 적용됩니다.</maml:para>
		  </maml:description>
		  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>PromptForPassword</maml:name>
		  <maml:description>
		    <maml:para>PromptForPassword 매개 변수를 사용하면 구축한 관리 서비스 계정의 암호를 입력할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에 설치하는 경우 DC(도메인 컨트롤러)에 대한 읽기 전용 액세스 권한만 있고 쓰기 액세스 권한은 없으면 이 작업이 필요합니다. 이러한 경우 관리 서비스 계정을 만들고 적합한 컴퓨터 계정에 연결한 다음 잘 알려진 암호를 할당해야 합니다. 이 암호는 RODC(읽기 전용 도메인 컨트롤러) 사이트의 서버에 관리 서비스 계정을 설치하는 경우 전달됩니다. AccountPassword 및 PromptForPassword 매개 변수를 모두 전달하는 경우 AccountPassword 매개 변수가 우선적으로 적용됩니다.</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' 
</dev:code>
  			<dev:remarks>
 				<maml:para>이름이 'SQL-HR-svc-01'인 관리 서비스 계정을 로컬 컴퓨터에 설치합니다.</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Install-ADServiceAccount $a </dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 'SQL-HR-svc-01'인 관리 서비스 계정을 기본 디렉터리에서 가져오고 로컬 컴퓨터에 설치합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -AccountPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
			<dev:remarks>
				<maml:para>이름이 'SQL-HR-svc-01'인 관리 서비스 계정을 로컬 컴퓨터에 설치합니다.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -PromptForPassword
</dev:code>
			<dev:remarks>
				<maml:para>'SQL-HR-svc-01'의 현재 암호를 입력하십시오.
암호:******</maml:para>
				<maml:para>입력한 암호를 확인한 후 이름이 'SQL-HR-svc-01'인 관리 서비스 계정을 로컬 컴퓨터에 설치합니다.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144965</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Reset-ADServiceAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체 또는 개체의 컨테이너를 다른 컨테이너나 도메인으로 이동합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADObject cmdlet은 개체나 개체의 컨테이너를 컨테이너 간이나 도메인 간에 이동합니다. 

Identity 매개 변수는 이동할 Active Directory 개체 또는 컨테이너를 지정합니다. DN(고유 이름) 또는 GUID로 개체 또는 컨테이너를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADObject cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Move-ADObject cmdlet으로 개체를 전달할 수 있습니다. 또한 Get-ADGroup, Get-ADUser, Get-ADComputer, Get-ADServiceAccount, Get-ADOrganizationalUnit 및 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 파이프라인을 통해 이 cmdlet으로 전달할 수 있는 개체를 가져올 수 있습니다.

TargetPath 매개 변수를 지정해야 합니다. 이 매개 변수는 개체 또는 컨테이너의 새 위치를 식별합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>개체의 새 위치를 지정합니다. 이 위치는 컨테이너 또는 조직 구성 단위의 경로여야 합니다.

다음 예에서는 고유 이름을 제공하여 대상 경로를 지정하는 방법을 보여 줍니다.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetServer</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값을 제공하여 사용할 Active Directory 인스턴스를 지정합니다. 

참고: 도메인 간 이동에는 FQDN 서버 이름이 필요합니다.

도메인 이름 값:
  FQDN(정규화된 도메인 이름)
    예: contoso.com

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: server01.europe.contoso.com
  정규화된 디렉터리 서버 이름 및 포트
    예: server01.europe.contoso.com:3268

다음 예에서는 정규화된 디렉터리 서버 이름을 지정하여 대상 서버를 지정하는 방법을 보여 줍니다.
  -TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>개체의 새 위치를 지정합니다. 이 위치는 컨테이너 또는 조직 구성 단위의 경로여야 합니다.

다음 예에서는 고유 이름을 제공하여 대상 경로를 지정하는 방법을 보여 줍니다.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetServer</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값을 제공하여 사용할 Active Directory 인스턴스를 지정합니다. 

참고: 도메인 간 이동에는 FQDN 서버 이름이 필요합니다.

도메인 이름 값:
  FQDN(정규화된 도메인 이름)
    예: contoso.com

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: server01.europe.contoso.com
  정규화된 디렉터리 서버 이름 및 포트
    예: server01.europe.contoso.com:3268

다음 예에서는 정규화된 디렉터리 서버 이름을 지정하여 대상 서버를 지정하는 방법을 보여 줍니다.
  -TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.AObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다. 다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;OU=ManagedGroups,DC=Fabrikam,DC=Com&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>조직 구성 단위 'ManagedGroups'를 새 위치로 이동합니다. 성공적으로 이동하려면 실수로 삭제되지 않도록 OU 'ManagedGroups'를 보호하지 않아야 합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 GUID로 식별된 개체를 새 위치로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;1c2ea8a8-c2b7-4a87-8190-0e8a166aee16&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>개체를 새 위치로 이동합니다. 개체와 대상 경로는 GUID를 사용하여 지정됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com&quot; -TargetPath &quot;OU=Accounting,DC=Europe,DC=Fabrikam,DC=com&quot; -TargetServer &quot;server01.europe.fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 'CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com'인 개체를 다른 도메인으로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=AccountLeads,DC=AppNC&quot; -TargetPath &quot;OU=AccountDeptOU,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>개체를 LDS 인스턴스 내의 새 위치로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144966</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServer
		</command:name>
		<maml:description>
			<maml:para>Active Directory의 디렉터리 서버를 새 사이트로 이동합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADDirectoryServer cmdlet은 Active Directory의 디렉터리 서버를 동일한 도메인 내의 새 사이트로 이동합니다.

Identity 매개 변수는 이동할 디렉터리 서버를 지정합니다. 다음 값 중 하나로 디렉터리 서버 개체를 지정할 수 있습니다.
  서버 개체의 이름(name) 
  NTDS 설정 개체의 DN(고유 이름)
  디렉터리 서버를 나타내는 서버 개체의 DN(고유 이름)
  구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)

Identity 매개 변수를 $&lt;localDirectoryServerObject&gt;와 같은 디렉터리 서버 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomainController를 사용하여 디렉터리 서버 개체를 가져온 다음 파이프라인을 통해 Move-ADDirectoryServer cmdlet으로 해당 개체를 전달할 수 있습니다.

Site 매개 변수는 디렉터리 서버의 새 사이트를 지정합니다. DN(고유 이름) 또는 GUID로 사이트를 식별할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 서버 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

서버 개체의 이름(name) 
  AD LDS 인스턴스의 경우 이름의 구문은 &lt;computer-name&gt;$&lt;instance-name&gt;입니다.
    예: asia-w7-vm4$instance1
    참고: Windows PowerShell에서 이 값을 입력할 때 달러 기호($)에 대한 이스케이프 문자로 억음 기호(`)를 사용해야 합니다. 따라서 이전 예의 경우 다음과 같이 입력할 수 있습니다. asia-w7-vm4`$instance1
  다른 Active Directory 인스턴스의 경우 이름 속성 값을 사용합니다.
    예: corp-DC01

NTDS 설정 개체의 고유 이름
  예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

디렉터리 서버를 나타내는 서버 개체의 고유 이름
  예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  예: 599c3d2e-f72d-4d20-8a88-030d99495f20

구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)
  예: 768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;directoryServerInstance&quot;라는 디렉터리 서버 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Site</maml:name>
				<maml:description>
					<maml:para>디렉터리 서버의 새 사이트를 지정합니다. 다음 속성 값 중 하나로 사이트를 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  DN(고유 이름)
    예: CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID (ObjectGUID)
   예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  이름(name)
    예: NA-CAN-QBC 

다음 예에서는 이 매개 변수에서 사이트 이름을 사용하여 사이트 개체를 지정하는 방법을 보여 줍니다.
  -Site  &quot;NA-CAN-QBC&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 서버 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

서버 개체의 이름(name) 
  AD LDS 인스턴스의 경우 이름의 구문은 &lt;computer-name&gt;$&lt;instance-name&gt;입니다.
    예: asia-w7-vm4$instance1
    참고: Windows PowerShell에서 이 값을 입력할 때 달러 기호($)에 대한 이스케이프 문자로 억음 기호(`)를 사용해야 합니다. 따라서 이전 예의 경우 다음과 같이 입력할 수 있습니다. asia-w7-vm4`$instance1
  다른 Active Directory 인스턴스의 경우 이름 속성 값을 사용합니다.
    예: corp-DC01

NTDS 설정 개체의 고유 이름
  예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

디렉터리 서버를 나타내는 서버 개체의 고유 이름
  예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  예: 599c3d2e-f72d-4d20-8a88-030d99495f20

구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)
  예: 768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;directoryServerInstance&quot;라는 디렉터리 서버 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Site</maml:name>
			<maml:description>
				<maml:para>디렉터리 서버의 새 사이트를 지정합니다. 다음 속성 값 중 하나로 사이트를 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  DN(고유 이름)
    예: CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID (ObjectGUID)
   예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  이름(name)
    예: NA-CAN-QBC 

다음 예에서는 이 매개 변수에서 사이트 이름을 사용하여 사이트 개체를 지정하는 방법을 보여 줍니다.
  -Site  &quot;NA-CAN-QBC&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			<dev:type>
				<maml:name>ADSite</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					디렉터리 서버 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServer -Identity &quot;FABRIKAM-DC2&quot; -Site &quot;Branch-Office-Site&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>도메인 컨트롤러 &quot;FABRIKAM-DC2&quot;를 &quot;Branch-Office-Site&quot; 사이트로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Move-ADDirectoryServer -site &quot;RODC-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>모든 읽기 전용 도메인 컨트롤러를 &quot;RODC-Site-Name&quot; 사이트로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144967</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServerOperationMasterRole</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServerOperationMasterRole
		</command:name>
		<maml:description>
			<maml:para>작업 마스터 역할을 Active Directory 디렉터리 서버로 이동합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServerOperationMasterRole</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-ADDirectoryServerOperationMasterRole cmdlet은 하나 이상의 작업 마스터 역할을 디렉터리 서버로 이동합니다. 작업 마스터 역할을 다른 도메인의 디렉터리 서버로 이동하려면 두 도메인의 자격 증명이 동일해야 합니다. 

Identity 매개 변수는 역할을 받는 디렉터리 서버를 지정합니다. 다음 값 중 하나로 디렉터리 서버 개체를 지정할 수 있습니다.
  서버 개체의 이름(name) 
  NTDS 설정 개체의 DN(고유 이름)
  디렉터리 서버를 나타내는 서버 개체의 DN(고유 이름)
  구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)

AD LDS 인스턴스의 경우 서버 개체 이름의 구문은 &lt;computer-name&gt;$&lt;instance-name&gt;입니다. 다음은 이 구문의 예입니다. 
  asia-w7-vm4$instance1
Windows PowerShell에서 이 값을 입력할 때 달러 기호($)에 대한 이스케이프 문자로 억음 기호(`)를 사용해야 합니다. 따라서 이 예의 경우 다음과 같이 입력할 수 있습니다. 
  asia-w7-vm4`$instance1

이 매개 변수를 $&lt;localDirectoryServerObject&gt;와 같은 디렉터리 서버 개체 변수로 설정할 수도 있습니다.

OperationMasterRole 매개 변수는 이동할 작업 마스터 역할을 지정합니다. 작업 역할에는 PDCEmulator, RIDMaster, InfrastructureMaster, SchemaMaster 또는 DomainNamingMaster가 있습니다. 둘 이상의 역할을 지정하려면 쉼표로 구분된 목록을 사용합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServerOperationMasterRole</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 서버 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

서버 개체의 이름(name) 
  AD LDS 인스턴스의 경우 이름의 구문은 &lt;computer-name&gt;$&lt;instance-name&gt;입니다.
    예: asia-w7-vm4$instance1
    참고: Windows PowerShell에서 이 값을 입력할 때 달러 기호($)에 대한 이스케이프 문자로 억음 기호(`)를 사용해야 합니다. 따라서 이전 예의 경우 다음과 같이 입력할 수 있습니다. asia-w7-vm4`$instance1
  다른 Active Directory 인스턴스의 경우 이름 속성 값을 사용합니다.
    예: corp-DC01

NTDS 설정 개체의 고유 이름
  예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

디렉터리 서버를 나타내는 서버 개체의 고유 이름
  예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  예: 599c3d2e-f72d-4d20-8a88-030d99495f20

구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)
  예: 768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;directoryServerInstance&quot;라는 디렉터리 서버 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>OperationMasterRole</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스의 지정된 디렉터리 서버로 이동할 하나 이상의 작업 마스터 역할을 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  PDCEmulator 또는 0
  RIDMaster 또는 1
  InfrastructureMaster 또는 2
  SchemaMaster 또는 3
  DomainNamingMaster 또는 4

여러 작업 마스터 역할을 지정하려면 쉼표로 구분된 목록을 사용합니다.

다음 예에서는 이 매개 변수를 지정하여 SchemaMaster 및 DomainNamingMaster 역할을 이동하는 방법을 보여 줍니다.
   -OperationMasterRole SchemaMaster, 4</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 서버 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

서버 개체의 이름(name) 
  AD LDS 인스턴스의 경우 이름의 구문은 &lt;computer-name&gt;$&lt;instance-name&gt;입니다.
    예: asia-w7-vm4$instance1
    참고: Windows PowerShell에서 이 값을 입력할 때 달러 기호($)에 대한 이스케이프 문자로 억음 기호(`)를 사용해야 합니다. 따라서 이전 예의 경우 다음과 같이 입력할 수 있습니다. asia-w7-vm4`$instance1
  다른 Active Directory 인스턴스의 경우 이름 속성 값을 사용합니다.
    예: corp-DC01

NTDS 설정 개체의 고유 이름
  예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

디렉터리 서버를 나타내는 서버 개체의 고유 이름
  예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

구성 파티션에 있는 서버 개체의 GUID(objectGUID)
  예: 599c3d2e-f72d-4d20-8a88-030d99495f20

구성 파티션에 있는 NTDS 설정 개체의 GUID(objectGUID)
  예: 768c44de-f72d-66e0-8a88-0523ca495f20

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;directoryServerInstance&quot;라는 디렉터리 서버 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>OperationMasterRole</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스의 지정된 디렉터리 서버로 이동할 하나 이상의 작업 마스터 역할을 지정합니다. 이 매개 변수에 사용할 수 있는 값: 
  PDCEmulator 또는 0
  RIDMaster 또는 1
  InfrastructureMaster 또는 2
  SchemaMaster 또는 3
  DomainNamingMaster 또는 4

여러 작업 마스터 역할을 지정하려면 쉼표로 구분된 목록을 사용합니다.

다음 예에서는 이 매개 변수를 지정하여 SchemaMaster 및 DomainNamingMaster 역할을 이동하는 방법을 보여 줍니다.
   -OperationMasterRole SchemaMaster, 4</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			<dev:type>
				<maml:name>ADOperationMasterRole[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>참고 참조</dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					디렉터리 서버 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 디렉터리 서버 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole &quot;FABRIKAM-DC1&quot; PDCEmulator</dev:code>
  			<dev:remarks>
  			        <maml:para>PDC 에뮬레이터 역할을 도메인 컨트롤러 &quot;FABRIKAM-DC1&quot;로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole -Identity &quot;FABRIKAM-DC2&quot; -OperationMasterRole PDCEmulator,SchemaMaster</dev:code>
  			<dev:remarks>
  			        <maml:para>PDC 에뮬레이터 및 스키마 마스터 역할을 도메인 컨트롤러 &quot;FABRIKAM-DC2&quot;로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole Fabrikam-DC`$instance1 -OperationMasterRole schemaMaster -server Fabrikam-DC:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>스키마 마스터 FSMO 소유자를 &quot;Fabrikam-DC&quot; 서버의 AD LDS 인스턴스 &quot;instance1&quot;로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144968</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체를 만듭니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADObject cmdlet은 새 조직 구성 단위나 새 사용자 계정과 같은 새 Active Directory 개체를 만듭니다. 이 cmdlet을 사용하여 모든 유형의 Active Directory 개체를 만들 수 있습니다. 여러 개체 속성을 cmdlet 매개 변수를 설정하여 정의할 수 있습니다. cmdlet 매개 변수로 설정할 수 없는 설정은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다. 
새 Active Directory 개체를 만들려면 Name 및 Type 매개 변수를 설정해야 합니다. Name은 새 개체의 이름을 지정합니다. Type 매개 변수는 만들 개체의 유형을 나타내는 Active Directory 스키마 클래스의 LDAP 표시 이름을 지정합니다. Type 값의 예로는 computer, group, organizational unit, user 등을 들 수 있습니다.
Path 매개 변수는 개체가 만들어질 컨테이너를 지정합니다. Path 매개 변수를 지정하지 않는 경우 이 cmdlet은 도메인에 있는 Active Directory 개체의 기본 명명 컨텍스트 컨테이너에 개체를 만듭니다.

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.
방법 1: New-ADObject cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.
방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 Active Directory 개체를 만들거나 기존 Active Directory 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. Active Directory cmdlet이 Instance 매개 변수를 사용하는 방법에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.
방법 3: Import-CSV cmdlet을 Add-ADObject cmdlet과 함께 사용하여 여러 Active Directory 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADObject cmdlet으로 이 개체를 전달하여 Active Directory 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>만들 개체 유형을 지정합니다. Type 매개 변수를 만들 개체의 유형을 나타내는 Active Directory 스키마 클래스의 LDAP 표시 이름으로 설정합니다. 유형 값의 예로는 user, computer 및 group 등을 들 수 있습니다.

다음 예에서는 이 매개 변수를 사용하여 새 Active Directory 그룹 개체를 만드는 방법을 보여 줍니다.
  -Type &quot;group&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 Active Directory 개체의 템플릿으로 사용할 Active Directory 개체의 인스턴스를 지정합니다.

기존 Active Directory 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 Active Directory 개체를 생성할 수 있습니다. 다음 예에서는 이 두 매개 변수를 사용하여 새 Active Directory 개체를 만드는 방법을 보여 줍니다.

방법 1: 기존 Active Directory 개체를 새 개체의 템플릿으로 사용합니다. 기존 Active Directory 개체 인스턴스를 검색하려면 Get-ADObject와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADObject cmdlet의 Instance 매개 변수에 제공하여 새 Active Directory 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $objectInstance = Get-ADObject -Identity saraDavisDesktop 
  New-ADObject -Name &quot;ellenAdamsDesktop&quot;  -Instance $ObjectInstance -Type &quot;computer&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADObject를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADObject cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 개체를 만듭니다. 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Ellen Adams New Computer&quot; New-ADObject -Name ellenAdamsDesktop  -Instance $ObjectInstance -Type computer

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 Active Directory 개체의 템플릿으로 사용할 Active Directory 개체의 인스턴스를 지정합니다.

기존 Active Directory 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 Active Directory 개체를 생성할 수 있습니다. 다음 예에서는 이 두 매개 변수를 사용하여 새 Active Directory 개체를 만드는 방법을 보여 줍니다.

방법 1: 기존 Active Directory 개체를 새 개체의 템플릿으로 사용합니다. 기존 Active Directory 개체 인스턴스를 검색하려면 Get-ADObject와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADObject cmdlet의 Instance 매개 변수에 제공하여 새 Active Directory 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $objectInstance = Get-ADObject -Identity saraDavisDesktop 
  New-ADObject -Name &quot;ellenAdamsDesktop&quot;  -Instance $ObjectInstance -Type &quot;computer&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADObject를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADObject cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 개체를 만듭니다. 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Ellen Adams New Computer&quot; New-ADObject -Name ellenAdamsDesktop  -Instance $ObjectInstance -Type computer

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>만들 개체 유형을 지정합니다. Type 매개 변수를 만들 개체의 유형을 나타내는 Active Directory 스키마 클래스의 LDAP 표시 이름으로 설정합니다. 유형 값의 예로는 user, computer 및 group 등을 들 수 있습니다.

다음 예에서는 이 매개 변수를 사용하여 새 Active Directory 그룹 개체를 만드는 방법을 보여 줍니다.
  -Type &quot;group&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 개체의 템플릿인 Active Directory 개체는 Instance 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  -Microsoft.ActiveDirectory.Management.ADPartition
  -Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 Active Directory 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -Name '192.168.1.0/26' -Type subnet -Description '192.168.1.0/255.255.255.192' -OtherAttributes @{location=&quot;Building A&quot;;siteObject=&quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;} -Path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>설명된 특성을 사용하여 HQ 사이트에서 서브넷 개체를 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$subnetTemplate = get-adobject -Identity &quot;CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com&quot; -properties description,location; new-adobject -instance $subnetTemplate -name &quot;192.168.1.0/28&quot; -type subnet -path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>다른 서브넷 개체를 템플릿으로 사용하여 새 서브넷 개체를 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -name SaraDavisContact -type contact -ProtectedFromAccidentalDeletion $true -OtherAttributes @{'msDS-SourceObjectDN'=&quot;CN=FabrikamContacts,DC=CONTOSO,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>새 연락 개체를 만들고 msDS-SourceObjectDN 속성을 설정한 다음 실수로 삭제되지 않도록 개체를 보호합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>new-adobject -name Apps -type container -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>LDS 인스턴스에 'Apps'라는 새 컨테이너 개체를 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144969</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADUser
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 사용자를 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADUser cmdlet은 새 Active Directory 사용자를 만듭니다. cmdlet 매개 변수를 사용하여 자주 사용되는 사용자 속성 값을 설정할 수 있습니다. 

cmdlet 매개 변수와 연결되지 않은 속성 값은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다.  이 매개 변수를 사용하는 경우 다음 예와 같이 특성 이름을 작은따옴표로 묶어야 합니다.

New-ADUser -SamAccountName &quot;glenjohn&quot;  -GivenName &quot;Glen&quot; -Surname &quot;John&quot; -DisplayName &quot;Glen John&quot; -Path 'CN=Users,DC=fabrikam,DC=local' -OtherAttributes @{'msDS-PhoneticDisplayName'=&quot;GlenJohn&quot;}

사용자를 만들려면 SAMAccountName 매개 변수를 지정해야 합니다. 

New-ADUser cmdlet을 사용하여 iNetOrgPerson 계정과 같은 다른 유형의 사용자 계정을 만들 수 있습니다. AD DS에서 이렇게 하려면 Type 매개 변수를 만들 계정 유형의 LDAP 표시 이름으로 설정합니다. 이 유형은 하위 클래스가 user이고 개체 범주가 person인 Active Directory 스키마의 클래스일 수 있습니다.

Path 매개 변수는 새 사용자의 컨테이너 또는 OU(조직 구성 단위)를 지정합니다. Path 매개 변수를 지정하지 않는 경우 이 cmdlet은 도메인에 있는 사용자 개체의 기본 컨테이너에 사용자를 만듭니다.

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.

방법 1: New-ADUser cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.

방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 사용자 개체를 만들거나 기존 사용자 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 

방법 3: Import-CSV cmdlet을 New-ADUser cmdlet과 함께 사용하여 여러 Active Directory 사용자 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADUser cmdlet으로 이 개체를 전달하여 사용자 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 암호가 설정되지 않으며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다. 
암호가 지정되지 않음 - 암호가 설정되지 않으며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다. 
사용자 암호가 지정됨 - 암호가 설정되며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다.   
참고: 
기본적으로 사용자 계정은 암호 없이 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 사용자 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 사용자 계정이 사용하도록 설정되지 않습니다.  
암호가 실패하는 경우에도 계정이 만들어집니다.

다음 예에서는 이 매개 변수를 설정하는 한 가지 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>사용자의 회사를 지정합니다. 이 매개 변수는 사용자 개체의 Company 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;company&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>사용자의 부서를 지정합니다. 이 매개 변수는 사용자의 Department 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;department&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>사용자의 사업부를 지정합니다. 이 매개 변수는 사용자 개체의 Division 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;division&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>사용자의 전자 메일 주소를 지정합니다. 이 매개 변수는 사용자 개체의 EmailAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mail&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>사용자의 직원 ID를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeID 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeID&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>사용자의 직원 번호를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeNumber 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>사용자의 팩스 번호를 지정합니다. 이 매개 변수는 사용자 개체의 Fax 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;facsimileTelephoneNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>사용자의 이름을 지정합니다. 이 매개 변수는 사용자 개체의 GivenName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;givenName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>사용자의 홈 디렉터리를 지정합니다. 이 매개 변수는 사용자 개체의 HomeDirectory 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDirectory&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>HomeDirectory 속성에 정의된 UNC 경로와 연결된 드라이브를 지정합니다. 드라이브 문자는 &quot;&lt;DriveLetter&gt;:&quot;로 지정됩니다. 여기서 &lt;DriveLetter&gt;는 연결할 드라이브에 해당하는 문자를 나타냅니다. &lt;DriveLetter&gt;는 단일 대문자여야 하며 콜론이 필요합니다. 이 매개 변수는 사용자 개체의 HomeDrive 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDrive&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 집 전화 번호를 지정합니다. 이 매개 변수는 사용자의 HomePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homePhone&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>사용자 이름의 일부를 나타내는 머리글자를 지정합니다. 이 값을 사용자의 중간 이름 머리글자로 사용할 수 있습니다. 이 매개 변수는 사용자의 Initials 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;initials&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 사용자 개체의 템플릿으로 사용할 사용자 개체의 인스턴스를 지정합니다.

기존 사용자 개체의 인스턴스를 템플릿으로 사용하거나 템플릿을 사용하기 위해 새 사용자 개체를 생성할 수 있습니다.  Windows PowerShell 명령줄이나 스크립트를 사용하여 새 사용자 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 사용자 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 사용자 개체를 새 개체의 템플릿으로 사용합니다. 기존 사용자 개체의 인스턴스를 검색하려면 Get-ADUser와 같은 cmdlet을 사용합니다. 그런 다음 이 개체의 New-ADUser cmdlet의 Instance 매개 변수에 제공하여 새 사용자 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $userInstance = Get-ADUser -Identity &quot;saraDavis&quot; 
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance -DisplayName &quot;EllenAdams&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADUser 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADUser cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 사용자 개체를 만듭니다. 

  $userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
  $userInstance.DisplayName = &quot;Ellen Adams&quot;
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>사용자가 액세스할 수 있는 컴퓨터를 지정합니다. 둘 이상의 컴퓨터를 지정하려면 쉼표로 구분된 단일 목록을 만듭니다. SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 또는 컴퓨터의 DNS 호스트 이름을 사용하여 컴퓨터를 식별할 수 있습니다. SAM 계정 이름은 컴퓨터의 NetBIOS 이름과 동일합니다.

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userWorkStations&quot;입니다. 

다음 예에서는 SAMAccountName(NetBIOS 이름) 및 DNSHostName 값을 사용하여 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>사용자의 관리자를 지정합니다. 이 매개 변수는 사용자의 Manager 속성을 설정합니다. 이 매개 변수는 다음 속성 값 중 하나를 제공하여 설정됩니다.  참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;manager&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Manager saradavis </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 휴대폰 번호를 지정합니다. 이 매개 변수는 사용자 개체의 MobilePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mobile&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>사용자 회사의 위치를 지정합니다. 이 매개 변수는 사용자 개체의 Office 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;office&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Office  &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 회사 전화 번호를 지정합니다. 이 매개 변수는 사용자 개체의 OfficePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;telephoneNumber&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>사용자의 조직을 지정합니다. 이 매개 변수는 사용자 개체의 Organization 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;o&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>사용자의 성 및 이름 외에 더 추가할 이름(예: 사용자의 중간 이름)을 지정합니다. 이 매개 변수는 사용자 개체의 OtherName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;middleName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OtherName  &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 새 계정에 암호가 필요하지 않습니다. 이 매개 변수는 계정 개체의 PasswordNotRequired 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>사용자의 우체국 사서함 번호를 지정합니다. 이 매개 변수는 사용자 개체의 POBox 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postOfficeBox&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>사용자 프로필의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자 개체의 ProfilePath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;profilePath&quot;입니다.

다음 예에서는 이 매개 변수를 로컬 경로 및 UNC 경로로 설정하는 방법을 보여 줍니다.    -ProfilePath &quot;E:\users\profiles\saraDavis&quot;
   -ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>사용자 로그온 스크립트의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자의 ScriptPath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;scriptPath&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>로그온하는 데 스마트 카드가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자의 SmartCardLoginRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_SMARTCARD_REQUIRED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 스마트 카드가 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>사용자의 주소를 지정합니다. 이 매개 변수는 사용자 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;streetAddress&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>사용자의 성을 지정합니다. 이 매개 변수는 사용자 개체의 Surname 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sn&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Surname  &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>사용자의 직함을 지정합니다. 이 매개 변수는 사용자 개체의 Title 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;title&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Title  &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>만들 개체 유형을 지정합니다. Type 매개 변수를 만들 개체의 유형을 나타내는 Active Directory 스키마 클래스의 LDAP 표시 이름으로 설정합니다. 선택된 유형은 User 스키마 클래스의 하위 클래스여야 합니다.  이 매개 변수를 지정하지 않으면 기본값인 &quot;User&quot;로 설정됩니다.

다음 예에서는 이 매개 변수를 사용하여 새 Active Directory InetOrgPerson 개체를 만드는 방법을 보여 줍니다.
  -Type &quot;InetOrgPerson&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 암호가 설정되지 않으며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다. 
암호가 지정되지 않음 - 암호가 설정되지 않으며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다. 
사용자 암호가 지정됨 - 암호가 설정되며 계정을 사용하도록 설정하라는 요청이 없으면 계정이 사용하지 않도록 설정됩니다.   
참고: 
기본적으로 사용자 계정은 암호 없이 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 사용자 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 사용자 계정이 사용하도록 설정되지 않습니다.  
암호가 실패하는 경우에도 계정이 만들어집니다.

다음 예에서는 이 매개 변수를 설정하는 한 가지 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>사용자의 회사를 지정합니다. 이 매개 변수는 사용자 개체의 Company 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;company&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>사용자의 부서를 지정합니다. 이 매개 변수는 사용자의 Department 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;department&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>사용자의 사업부를 지정합니다. 이 매개 변수는 사용자 개체의 Division 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;division&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>사용자의 전자 메일 주소를 지정합니다. 이 매개 변수는 사용자 개체의 EmailAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mail&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>사용자의 직원 ID를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeID 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeID&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>사용자의 직원 번호를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeNumber 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>사용자의 팩스 번호를 지정합니다. 이 매개 변수는 사용자 개체의 Fax 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;facsimileTelephoneNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>사용자의 이름을 지정합니다. 이 매개 변수는 사용자 개체의 GivenName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;givenName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>사용자의 홈 디렉터리를 지정합니다. 이 매개 변수는 사용자 개체의 HomeDirectory 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDirectory&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>HomeDirectory 속성에 정의된 UNC 경로와 연결된 드라이브를 지정합니다. 드라이브 문자는 &quot;&lt;DriveLetter&gt;:&quot;로 지정됩니다. 여기서 &lt;DriveLetter&gt;는 연결할 드라이브에 해당하는 문자를 나타냅니다. &lt;DriveLetter&gt;는 단일 대문자여야 하며 콜론이 필요합니다. 이 매개 변수는 사용자 개체의 HomeDrive 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDrive&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 집 전화 번호를 지정합니다. 이 매개 변수는 사용자의 HomePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homePhone&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>사용자 이름의 일부를 나타내는 머리글자를 지정합니다. 이 값을 사용자의 중간 이름 머리글자로 사용할 수 있습니다. 이 매개 변수는 사용자의 Initials 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;initials&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 사용자 개체의 템플릿으로 사용할 사용자 개체의 인스턴스를 지정합니다.

기존 사용자 개체의 인스턴스를 템플릿으로 사용하거나 템플릿을 사용하기 위해 새 사용자 개체를 생성할 수 있습니다.  Windows PowerShell 명령줄이나 스크립트를 사용하여 새 사용자 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 사용자 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 사용자 개체를 새 개체의 템플릿으로 사용합니다. 기존 사용자 개체의 인스턴스를 검색하려면 Get-ADUser와 같은 cmdlet을 사용합니다. 그런 다음 이 개체의 New-ADUser cmdlet의 Instance 매개 변수에 제공하여 새 사용자 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $userInstance = Get-ADUser -Identity &quot;saraDavis&quot; 
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance -DisplayName &quot;EllenAdams&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADUser 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADUser cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 사용자 개체를 만듭니다. 

  $userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
  $userInstance.DisplayName = &quot;Ellen Adams&quot;
  New-ADUser -SAMAccountName &quot;ellenAdams&quot;  -Instance $userInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>사용자가 액세스할 수 있는 컴퓨터를 지정합니다. 둘 이상의 컴퓨터를 지정하려면 쉼표로 구분된 단일 목록을 만듭니다. SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 또는 컴퓨터의 DNS 호스트 이름을 사용하여 컴퓨터를 식별할 수 있습니다. SAM 계정 이름은 컴퓨터의 NetBIOS 이름과 동일합니다.

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userWorkStations&quot;입니다. 

다음 예에서는 SAMAccountName(NetBIOS 이름) 및 DNSHostName 값을 사용하여 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>사용자의 관리자를 지정합니다. 이 매개 변수는 사용자의 Manager 속성을 설정합니다. 이 매개 변수는 다음 속성 값 중 하나를 제공하여 설정됩니다.  참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;manager&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Manager saradavis </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 휴대폰 번호를 지정합니다. 이 매개 변수는 사용자 개체의 MobilePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mobile&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>사용자 회사의 위치를 지정합니다. 이 매개 변수는 사용자 개체의 Office 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;office&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Office  &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 회사 전화 번호를 지정합니다. 이 매개 변수는 사용자 개체의 OfficePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;telephoneNumber&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>사용자의 조직을 지정합니다. 이 매개 변수는 사용자 개체의 Organization 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;o&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>사용자의 성 및 이름 외에 더 추가할 이름(예: 사용자의 중간 이름)을 지정합니다. 이 매개 변수는 사용자 개체의 OtherName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;middleName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OtherName  &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 새 계정에 암호가 필요하지 않습니다. 이 매개 변수는 계정 개체의 PasswordNotRequired 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.  
- 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>사용자의 우체국 사서함 번호를 지정합니다. 이 매개 변수는 사용자 개체의 POBox 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postOfficeBox&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>사용자 프로필의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자 개체의 ProfilePath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;profilePath&quot;입니다.

다음 예에서는 이 매개 변수를 로컬 경로 및 UNC 경로로 설정하는 방법을 보여 줍니다.    -ProfilePath &quot;E:\users\profiles\saraDavis&quot;
   -ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>사용자 로그온 스크립트의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자의 ScriptPath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;scriptPath&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>로그온하는 데 스마트 카드가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자의 SmartCardLoginRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_SMARTCARD_REQUIRED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 스마트 카드가 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>사용자의 주소를 지정합니다. 이 매개 변수는 사용자 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;streetAddress&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>사용자의 성을 지정합니다. 이 매개 변수는 사용자 개체의 Surname 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sn&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Surname  &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>사용자의 직함을 지정합니다. 이 매개 변수는 사용자 개체의 Title 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;title&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Title  &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>만들 개체 유형을 지정합니다. Type 매개 변수를 만들 개체의 유형을 나타내는 Active Directory 스키마 클래스의 LDAP 표시 이름으로 설정합니다. 선택된 유형은 User 스키마 클래스의 하위 클래스여야 합니다.  이 매개 변수를 지정하지 않으면 기본값인 &quot;User&quot;로 설정됩니다.

다음 예에서는 이 매개 변수를 사용하여 새 Active Directory InetOrgPerson 개체를 만드는 방법을 보여 줍니다.
  -Type &quot;InetOrgPerson&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>user</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 사용자 개체의 템플릿인 사용자 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 사용자 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Certificate (new-object System.Security.Cryptography.X509Certificates.X509Certificate -ArgumentList &quot;export.cer&quot;) </dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;export.cer&quot; 파일에서 가져온 인증서를 사용하여 'GlenJohn'이라는 새 사용자를 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -OtherAttributes @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>'GlenJohn'이라는 새 사용자를 만들고 새 개체에 대해 직함 및 메일 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Type iNetOrgPerson -Path &quot;DC=AppNC&quot; -server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에 'GlenJohn'이라는 새 inetOrgPerson을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144970</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADComputer
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 컴퓨터를 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADComputer cmdlet은 새 Active Directory 컴퓨터 개체를 만듭니다. 이 cmdlet은 컴퓨터를 도메인에 가입시키지 않습니다. cmdlet 매개 변수를 사용하여 자주 사용되는 컴퓨터 속성 값을 설정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 OtherAttributes 매개 변수를 사용하여 수정할 수 있습니다. 

이 cmdlet을 사용하면 컴퓨터를 도메인에 추가하기 전에 컴퓨터 계정을 프로비전할 수 있습니다. 미리 만들어진 이러한 컴퓨터 개체는 오프라인 도메인 가입, 보안되지 않은 도메인 가입 및 RODC 도메인 가입 시나리오에서 사용할 수 있습니다.
Path 매개 변수는 새 컴퓨터의 컨테이너 또는 OU(조직 구성 단위)를 지정합니다. Path 매개 변수를 지정하지 않는 경우 이 cmdlet은 도메인에 있는 컴퓨터 개체의 기본 컨테이너에 컴퓨터 계정을 만듭니다. 

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.
방법 1: New-ADComputer cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.
방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 컴퓨터 개체를 만들거나 기존 컴퓨터 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 
방법 3: Import-CSV cmdlet을 Add-ADComputer cmdlet과 함께 사용하여 여러 Active Directory 컴퓨터 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADComputer cmdlet으로 이 개체를 전달하여 컴퓨터 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.
 암호가 지정되지 않음 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

사용자 암호가 지정됨 - 암호가 설정되며, 사용자가 제공한 암호가 암호 정책을 따르거나 계정이 사용하지 않도록 설정된 시점에 암호가 설정되어 있는 경우 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

참고:  기본적으로 컴퓨터 계정은 240자인 임의의 암호를 사용하여 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 컴퓨터 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호(임의로 생성되거나 사용자가 제공한 암호)가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 컴퓨터 계정이 사용하도록 설정되지 않습니다. 
암호가 실패하는 경우에도 계정이 만들어집니다.

새 ADComputer 개체는 항상 사용하지 않도록 설정되거나 사용자가 요청하거나 임의로 생성된 암호를 갖습니다. 빈 암호와 같이 도메인 암호 정책을 위반하는 암호를 사용하는 경우 사용하도록 설정된 컴퓨터 계정 개체를 만들 수 없습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>컴퓨터의 FQDN(정규화된 도메인 이름)을 지정합니다. 이 매개 변수는 컴퓨터 개체의 DNSHostName 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;dNSHostName&quot;입니다. 

다음 예에서는 이 매개 변수를 FQDN으로 설정하는 방법을 보여 줍니다.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 컴퓨터 개체의 템플릿으로 사용할 컴퓨터 개체의 인스턴스를 지정합니다.

기존 컴퓨터 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 컴퓨터 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 컴퓨터 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 사용자 개체를 새 개체의 템플릿으로 사용합니다. 기존 컴퓨터 개체의 인스턴스를 검색하려면 Get-ADcomputer를 사용합니다. 그런 다음 이 개체를 New-ADcomputer cmdlet의 Instance 매개 변수에 제공하여 새 컴퓨터 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $computerInstance = Get-ADcomputer -Identity ellenAdamsDesktop 
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;MustChange242&quot; 
-samAccountName &quot;saraDavisDesktop&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADcomputer 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADcomputer cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 컴퓨터 개체를 만듭니다. 

  $computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>컴퓨터의 위치(예: 회사 번호)를 지정합니다. 이 매개 변수는 컴퓨터의 Location 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;location&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Location  &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>운영 체제 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystem 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystem&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>운영 체제 핫픽스 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 operatingSystemHotfix 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;operatingSystemHotfix&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>운영 체제 서비스 팩의 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemServicePack 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemServicePack&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>운영 체제 버전을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemVersion 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemVersion&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들면 다음과 같습니다. New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 제공된 SAMAccountName 문자열이 '$'로 끝나지 않으면 필요한 경우 이 문자가 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.
 암호가 지정되지 않음 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

사용자 암호가 지정됨 - 암호가 설정되며, 사용자가 제공한 암호가 암호 정책을 따르거나 계정이 사용하지 않도록 설정된 시점에 암호가 설정되어 있는 경우 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

참고:  기본적으로 컴퓨터 계정은 240자인 임의의 암호를 사용하여 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 컴퓨터 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호(임의로 생성되거나 사용자가 제공한 암호)가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 컴퓨터 계정이 사용하도록 설정되지 않습니다. 
암호가 실패하는 경우에도 계정이 만들어집니다.

새 ADComputer 개체는 항상 사용하지 않도록 설정되거나 사용자가 요청하거나 임의로 생성된 암호를 갖습니다. 빈 암호와 같이 도메인 암호 정책을 위반하는 암호를 사용하는 경우 사용하도록 설정된 컴퓨터 계정 개체를 만들 수 없습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>컴퓨터의 FQDN(정규화된 도메인 이름)을 지정합니다. 이 매개 변수는 컴퓨터 개체의 DNSHostName 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;dNSHostName&quot;입니다. 

다음 예에서는 이 매개 변수를 FQDN으로 설정하는 방법을 보여 줍니다.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 컴퓨터 개체의 템플릿으로 사용할 컴퓨터 개체의 인스턴스를 지정합니다.

기존 컴퓨터 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 컴퓨터 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 컴퓨터 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 사용자 개체를 새 개체의 템플릿으로 사용합니다. 기존 컴퓨터 개체의 인스턴스를 검색하려면 Get-ADcomputer를 사용합니다. 그런 다음 이 개체를 New-ADcomputer cmdlet의 Instance 매개 변수에 제공하여 새 컴퓨터 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $computerInstance = Get-ADcomputer -Identity ellenAdamsDesktop 
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;MustChange242&quot; 
-samAccountName &quot;saraDavisDesktop&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADcomputer 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADcomputer cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 컴퓨터 개체를 만듭니다. 

  $computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
  New-ADcomputer -Name &quot;saraDavisDesktop&quot;  -Instance $computerInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>컴퓨터의 위치(예: 회사 번호)를 지정합니다. 이 매개 변수는 컴퓨터의 Location 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;location&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Location  &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>운영 체제 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystem 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystem&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>운영 체제 핫픽스 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 operatingSystemHotfix 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;operatingSystemHotfix&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>운영 체제 서비스 팩의 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemServicePack 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemServicePack&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>운영 체제 버전을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemVersion 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemVersion&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 제공된 SAMAccountName 문자열이 '$'로 끝나지 않으면 필요한 경우 이 문자가 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 컴퓨터 개체의 템플릿인 컴퓨터 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 컴퓨터 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV2&quot; -SamAccountName &quot;FABRIKAM-SRV2&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot; OU에 새 컴퓨터 계정을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV3&quot; -SamAccountName &quot;FABRIKAM-SRV3&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot; -Enabled $true -Location &quot;Redmond,WA&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>특정 OU 아래에 새 컴퓨터 계정을 만듭니다. 이 계정은 사용하도록 설정되고 &quot;Redmond,WA&quot;에 위치합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templateComp = get-adcomputer &quot;LabServer-00&quot; -properties &quot;Location&quot;,&quot;OperatingSystem&quot;,&quot;OperatingSystemHotfix&quot;,&quot;OperatingSystemServicePack&quot;,&quot;OperatingSystemVersion&quot;; New-ADComputer -Instance $templateComp -Name &quot;LabServer-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>템플릿 개체에서 새 컴퓨터 계정을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144971</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹을 만듭니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADGroup cmdlet은 새 Active Directory 그룹 개체를 만듭니다. 여러 개체 속성을 cmdlet 매개 변수를 설정하여 정의할 수 있습니다. cmdlet 매개 변수로 설정할 수 없는 속성은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다.

Name 및 GroupScope 매개 변수는 그룹의 이름과 범위를 지정하며 새 그룹을 만드는 데 필요합니다. GroupType 매개 변수를 설정하여 새 그룹을 보안 또는 메일 그룹으로 정의할 수 있습니다. Path 매개 변수는 새 그룹의 컨테이너 또는 OU(조직 구성 단위)를 지정합니다.

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.
방법 1: New-ADGroup cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.
방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 그룹 개체를 만들거나 기존 그룹 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 
방법 3: Import-CSV cmdlet을 New-ADGroup cmdlet과 함께 사용하여 여러 Active Directory 그룹 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADGroup cmdlet으로 이 개체를 전달하여 그룹 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>그룹의 그룹 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  DomainLocal 또는 0
  Global 또는 1
  Universal 또는 2

이 매개 변수는 그룹 개체의 GroupScope 속성을 지정된 값으로 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;groupType&quot;입니다.

다음 예에서는 이 매개 변수를 DomainLocal로 설정하는 두 가지 방법을 보여 줍니다.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>그룹의 범주를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Distribution 또는 0  
  Security 또는 1 
 
이 매개 변수는 그룹의 GroupCategory 속성을 설정합니다. 이 매개 변수 값은 다른 그룹 값과 결합하여 &quot;groupType&quot;이라는 이름의 LDAP 표시 이름(ldapDisplayName) 특성을 설정합니다.

다음 예에서는 그룹이 보안 그룹임을 지정하는 방법을 보여 줍니다.
  -GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 그룹 개체의 템플릿으로 사용할 그룹 개체의 인스턴스를 지정합니다.

기존 그룹 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 그룹 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 그룹 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 그룹 개체를 새 개체의 템플릿으로 사용합니다. Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 이 개체를 New-ADGroup cmdlet의 Instance 매개 변수에 전달하여 새 그룹 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $groupInstance = Get-ADGroup -Identity &quot;KarenTohReports&quot; 
  New-ADGroup -Name &quot;Sara Davis Reports&quot;  -Instance $groupInstance GroupType DomainLocal

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADGroup 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADGroup cmdlet의 Instance 매개 변수에 전달하여 새 그룹 개체를 만듭니다. 

  $groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
  $groupTemplateGroupType = DomainLocal
  New-ADGroup -Name &quot;Sara Davis Reports&quot; -Instance $groupInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>그룹의 범주를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Distribution 또는 0  
  Security 또는 1 
 
이 매개 변수는 그룹의 GroupCategory 속성을 설정합니다. 이 매개 변수 값은 다른 그룹 값과 결합하여 &quot;groupType&quot;이라는 이름의 LDAP 표시 이름(ldapDisplayName) 특성을 설정합니다.

다음 예에서는 그룹이 보안 그룹임을 지정하는 방법을 보여 줍니다.
  -GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Security</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>그룹의 그룹 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  DomainLocal 또는 0
  Global 또는 1
  Universal 또는 2

이 매개 변수는 그룹 개체의 GroupScope 속성을 지정된 값으로 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;groupType&quot;입니다.

다음 예에서는 이 매개 변수를 DomainLocal로 설정하는 두 가지 방법을 보여 줍니다.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 그룹 개체의 템플릿으로 사용할 그룹 개체의 인스턴스를 지정합니다.

기존 그룹 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 그룹 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 그룹 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 그룹 개체를 새 개체의 템플릿으로 사용합니다. Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 이 개체를 New-ADGroup cmdlet의 Instance 매개 변수에 전달하여 새 그룹 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $groupInstance = Get-ADGroup -Identity &quot;KarenTohReports&quot; 
  New-ADGroup -Name &quot;Sara Davis Reports&quot;  -Instance $groupInstance GroupType DomainLocal

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADGroup 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADGroup cmdlet의 Instance 매개 변수에 전달하여 새 그룹 개체를 만듭니다. 

  $groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
  $groupTemplateGroupType = DomainLocal
  New-ADGroup -Name &quot;Sara Davis Reports&quot; -Instance $groupInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 그룹 개체의 템플릿인 그룹 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 그룹 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Name &quot;RODC Admins&quot; -SamAccountName RODCAdmins -GroupCategory Security -GroupScope Global -DisplayName &quot;RODC Administrators&quot; -Path &quot;CN=Users,DC=Fabrikam,DC=Com&quot; -Description &quot;Members of this group are RODC Administrators&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>'CN=Users,DC=Fabrikam,DC=Com' 컨테이너에 'RODC Admins'라는 새 그룹을 만들고 새 개체에 대한 GroupCategory, DisplayName, GroupScope 및 Description 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup 

cmdlet New-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
GroupScope: Universal 
Name: FabrikamBranch1 </dev:code>
  			<dev:remarks>
  			        <maml:para>cmdlet 기본 동작을 사용하여 새 그룹을 만듭니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup FabrikamBranch1 -Properties Description | New-ADGroup  -Name Branch1Employees  -SamAccountName Branch1Employees -GroupCategory Distribution -PassThru 
</dev:code>
  			<dev:remarks>
 				<maml:para>GroupScope        : Universal 
Name              : Branch1Employees 
GroupCategory     : Distribution 
SamAccountName    : Branch1Employees 
ObjectClass       : group 
ObjectGUID                         : 8eebce44-5df7-4bed-a98b-b987a702103e 
SID               : S-1-5-21-41432690-3719764436-1984117282-1117 
DistinguishedName : CN=Branch1Employees,CN=Users,DC=Fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 그룹에서 속성 값을 사용하여 새 그룹을 만듭니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Server localhost:60000 -Path &quot;OU=AccountDeptOU,DC=AppNC&quot; -Name AccountLeads -GroupScope DomainLocal  -GroupCategory Distribution </dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에 'AccountLeads'라는 새 그룹을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144972</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-CSV</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 세분화된 암호 정책을 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADFineGrainedPasswordPolicy cmdlet은 새 Active Directory 세분화된 암호 정책을 만듭니다. cmdlet 매개 변수를 사용하여 자주 사용되는 세분화된 암호 정책 속성 값을 설정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다. 

새 세분화된 암호 정책을 만들려면 Name 및 Precedence 매개 변수를 설정해야 합니다. 

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.
방법 1: New-ADFineGrainedPasswordPolicy cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.

방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 세분화된 암호 정책 개체를 만들거나 기존의 세분화된 암호 정책 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 

방법 3: Import-CSV cmdlet을 New-ADFineGrainedPasswordPolicy cmdlet과 함께 사용하여 여러 Active Directory 세분화된 암호 정책 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADFineGrainedPasswordPolicy cmdlet으로 이 개체를 전달하여 세분화된 암호 정책 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>모든 세분화된 암호 정책 중 특정 세분화된 암호 정책의 우선 순위를 정의하는 값을 지정합니다. 이 매개 변수는 세분화된 암호 정책의 Precedence 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-PasswordSettingsPrecedence&quot;입니다.

이 값은 사용자 또는 그룹에 둘 이상의 암호 정책이 적용될 경우 사용할 암호 정책을 결정합니다. 충돌이 발생할 경우에는 Precedence 속성 값이 낮은 암호 정책이 우선적으로 적용됩니다. 예를 들어 PasswordPolicy1의 Precedence 속성 값이 200이고 PasswordPolicy2의 Precedence 속성 값이 100이면 PasswordPolicy2가 사용됩니다. 

일반적으로 암호 정책 우선 순위 값은 나중에 정책을 쉽게 추가할 수 있도록 10 또는 100의 배수로 할당됩니다. 예를 들어 정책의 초기 우선 순위 값을 100 및 200으로 설정하면 우선 순위 값이 150인 다른 정책을 추가할 수 있습니다. 

지정한 Precedence 매개 변수가 이미 다른 암호 정책 개체에 할당된 경우에는 cmdlet이 종료 오류를 반환합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 세분화된 암호 정책 개체의 템플릿으로 사용할 세분화된 암호 정책 개체의 인스턴스를 지정합니다.

기존 세분화된 암호 정책 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 세분화된 암호 정책 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 새 세분화된 암호 정책 개체를 만드는 방법을 보여 줍니다.

방법 1: 기존 세분화된 암호 정책 개체를 새 개체의 템플릿으로 사용합니다. 기존 세분화된 암호 정책 개체의 인스턴스를 검색하려면 Get-ADFineGrainedPasswordPolicy와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADFineGrainedPasswordPolicy cmdlet의 Instance 매개 변수에 제공하여 새 세분화된 암호 정책 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADFineGrainedPasswordPolicy 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADFineGrainedPasswordPolicy cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 세분화된 암호 정책 개체를 만듭니다. 

  $fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  $fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 세분화된 암호 정책 개체의 템플릿으로 사용할 세분화된 암호 정책 개체의 인스턴스를 지정합니다.

기존 세분화된 암호 정책 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 세분화된 암호 정책 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 새 세분화된 암호 정책 개체를 만드는 방법을 보여 줍니다.

방법 1: 기존 세분화된 암호 정책 개체를 새 개체의 템플릿으로 사용합니다. 기존 세분화된 암호 정책 개체의 인스턴스를 검색하려면 Get-ADFineGrainedPasswordPolicy와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADFineGrainedPasswordPolicy cmdlet의 Instance 매개 변수에 제공하여 새 세분화된 암호 정책 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADFineGrainedPasswordPolicy 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADFineGrainedPasswordPolicy cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 세분화된 암호 정책 개체를 만듭니다. 

  $fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  $fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 (30분)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 (30분)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 (42일)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 (1일)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>모든 세분화된 암호 정책 중 특정 세분화된 암호 정책의 우선 순위를 정의하는 값을 지정합니다. 이 매개 변수는 세분화된 암호 정책의 Precedence 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-PasswordSettingsPrecedence&quot;입니다.

이 값은 사용자 또는 그룹에 둘 이상의 암호 정책이 적용될 경우 사용할 암호 정책을 결정합니다. 충돌이 발생할 경우에는 Precedence 속성 값이 낮은 암호 정책이 우선적으로 적용됩니다. 예를 들어 PasswordPolicy1의 Precedence 속성 값이 200이고 PasswordPolicy2의 Precedence 속성 값이 100이면 PasswordPolicy2가 사용됩니다. 

일반적으로 암호 정책 우선 순위 값은 나중에 정책을 쉽게 추가할 수 있도록 10 또는 100의 배수로 할당됩니다. 예를 들어 정책의 초기 우선 순위 값을 100 및 200으로 설정하면 우선 순위 값이 150인 다른 정책을 추가할 수 있습니다. 

지정한 Precedence 매개 변수가 이미 다른 암호 정책 개체에 할당된 경우에는 cmdlet이 종료 오류를 반환합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 세분화된 정책 개체의 템플릿인 세분화된 암호 정책 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 세분화된 암호 정책 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADFineGrainedPasswordPolicy -Name &quot;DomainUsersPSO&quot; -Precedence 500 -ComplexityEnabled $true -Description &quot;The Domain Users Password Policy&quot; -DisplayName &quot;Domain Users PSO&quot; -LockoutDuration &quot;0.12:00:00&quot; -LockoutObservationWindow &quot;0.00:15:00&quot; -LockoutThreshold 10
</dev:code>
  			<dev:remarks>
  			        <maml:para>'DomainUsersPSO'라는 새 세분화된 암호 정책 개체를 만들고 이 개체에 대한 Precedence, ComplexityEnabled, Description, DisplayName, LockoutDuration, LockoutObservationWindw 및 LockoutThreshold 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templatePSO = New-Object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
$templatePSO.ComplexityEnabled = $true
$templatePSO.LockoutDuration = [TimeSpan]::Parse(&quot;0.12:00:00&quot;)
$templatePSO.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$templatePSO.LockoutThreshold = 10
$templatePSO.MinPasswordAge = [TimeSpan]::Parse(&quot;0.00:10:00&quot;)
$templatePSO.PasswordHistoryCount = 24
$templatePSO.ReversibleEncryptionEnabled = $false

New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;SvcAccPSO&quot; -Precedence 100 -Description &quot;The Service Accounts Password Policy&quot; -DisplayName &quot;Service Accounts PSO&quot; -MaxPasswordAge &quot;30.00:00:00&quot; -MinPasswordLength 20
New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;AdminsPSO&quot; -Precedence 200 -Description &quot;The Domain Administrators Password Policy&quot; -DisplayName &quot;Domain Administrators PSO&quot; -MaxPasswordAge &quot;15.00:00:00&quot; -MinPasswordLength 10</dev:code>
  			<dev:remarks>
  			        <maml:para>템플릿 개체를 사용하여 새 세분화된 암호 정책 개체를 두 개 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144973</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 조직 구성 단위를 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADOrganizationalUnit cmdlet은 새 Active Directory 조직 구성 단위를 만듭니다. cmdlet 매개 변수를 사용하여 자주 사용되는 조직 구성 단위 속성 값을 설정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다. 

새 조직 구성 단위를 만들려면 Name 매개 변수를 설정해야 합니다. Path 매개 변수를 지정하지 않는 경우 이 cmdlet은 도메인의 기본 NC 헤드 아래에 조직 구성 단위를 만듭니다.
다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.
방법 1: New-ADOrganizationalUnit cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.
방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 조직 구성 단위 개체를 만들거나 기존 조직 구성 단위 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 
방법 3: Import-CSV cmdlet을 New-ADOrganizationalUnit cmdlet과 함께 사용하여 여러 Active Directory 조직 구성 단위 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADOrganizationalUnit cmdlet으로 이 개체를 전달하여 조직 구성 단위 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 조직 구성 단위 개체의 템플릿으로 사용할 조직 구성 단위 개체의 인스턴스를 지정합니다.

기존 조직 구성 단위 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 조직 구성 단위 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 조직 구성 단위 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 조직 구성 단위 개체를 새 개체의 템플릿으로 사용합니다. 기존 조직 구성 단위 개체의 인스턴스를 검색하려면 Get-ADOrganizationalUnit을 사용합니다. 그런 다음 이 개체를 New-ADOrganizationalUnit cmdlet의 Instance 매개 변수에 제공하여 새 조직 구성 단위 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADOrganizationalUnit 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADOrganizationalUnit cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 조직 구성 단위 개체를 만듭니다. 

  $OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  $OrganizationalUnitInstance.Country = Australia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>조직 구성 단위의 주소를 지정합니다. 이 매개 변수는 조직 구성 단위 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;street&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 조직 구성 단위 개체의 템플릿으로 사용할 조직 구성 단위 개체의 인스턴스를 지정합니다.

기존 조직 구성 단위 개체의 인스턴스를 템플릿으로 사용하거나 Windows PowerShell 명령줄이나 스크립트를 사용하여 새 조직 구성 단위 개체를 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 조직 구성 단위 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 조직 구성 단위 개체를 새 개체의 템플릿으로 사용합니다. 기존 조직 구성 단위 개체의 인스턴스를 검색하려면 Get-ADOrganizationalUnit을 사용합니다. 그런 다음 이 개체를 New-ADOrganizationalUnit cmdlet의 Instance 매개 변수에 제공하여 새 조직 구성 단위 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADOrganizationalUnit 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADOrganizationalUnit cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 조직 구성 단위 개체를 만듭니다. 

  $OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  $OrganizationalUnitInstance.Country = Australia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>조직 구성 단위의 주소를 지정합니다. 이 매개 변수는 조직 구성 단위 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;street&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 조직 구성 단위 개체의 템플릿인 조직 구성 단위 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 조직 구성 단위 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>실수로 삭제되지 않도록 보호되는 'UserAccounts'라는 새 OrganizationalUnit을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false</dev:code>
  			<dev:remarks>
  			        <maml:para>삭제되지 않도록 보호되지 않는 'UserAccounts'라는 새 OrganizationalUnit을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -OtherAttributes @{seeAlso=&quot;CN=HumanResourceManagers,OU=Groups,OU=Managed,DC=Fabrikam,DC=com&quot;;managedBy=&quot;CN=TomC,DC=FABRIKAM,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>'seeAlso' 및 'managedBy' 속성을 지정된 값으로 설정하여 실수로 삭제되지 않도록 보호되는 'UserAccounts'라는 OrganizationalUnit을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$ouTemplate = Get-ADOrganizationalUnit &quot;OU=UserAccounts,DC=Fabrikam,DC=com&quot; -properties seeAlso,managedBy; New-ADOrganizationalUnit -name TomCReports -instance $ouTemplate</dev:code>
  			<dev:remarks>
  			        <maml:para>'OU=UserAccounts,DC=Fabrikam,DC=com' OrganizationalUnit의 데이터를 또 다른 새 OrganizationalUnit의 템플릿으로 사용합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -name &quot;Managed&quot; -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>LDS 인스턴스에 'Managed'라는 새 OrganizationalUnit을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144974</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 서비스 계정을 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-ADServiceAccount cmdlet은 새 Active Directory 서비스 계정을 만듭니다. cmdlet 매개 변수를 사용하여 자주 사용되는 서비스 계정 속성 값을 설정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 OtherAttributes 매개 변수를 사용하여 설정할 수 있습니다. 

Path 매개 변수는 새 서비스 계정 개체의 컨테이너 또는 OU(조직 구성 단위)를 지정합니다. Path 매개 변수를 지정하지 않는 경우 이 cmdlet은 도메인에 있는 서비스 계정 개체의 기본 컨테이너에 개체를 만듭니다.

다음에서는 이 cmdlet을 사용하여 개체를 만드는 여러 가지 방법을 보여 줍니다.

방법 1: New-ADServiceAccount cmdlet을 사용하여 필수 매개 변수를 지정하고 cmdlet 매개 변수를 사용하여 추가 속성 값을 설정합니다.

방법 2: 템플릿을 사용하여 새 개체를 만듭니다. 이렇게 하려면 새 서비스 계정 개체를 만들거나 기존 서비스 계정 개체의 복사본을 검색하고 Instance 매개 변수를 이 개체로 설정합니다. Instance 매개 변수에 제공되는 개체는 새 개체를 위한 템플릿으로 사용됩니다. cmdlet 매개 변수를 설정하여 템플릿의 속성 값을 재정의할 수 있습니다. 예 및 추가 정보를 보려면 이 cmdlet의 Instance 매개 변수 설명을 참조하십시오. 

방법 3: Import-CSV cmdlet을 New-ADServiceAccount cmdlet과 함께 사용하여 여러 Active Directory 서비스 계정 개체를 만듭니다. 이렇게 하려면 Import-CSV cmdlet을 사용하여 개체 속성 목록이 들어 있는 CSV(쉼표로 구분된 값) 파일에서 사용자 지정 개체를 만듭니다. 그런 다음 파이프라인을 통해 New-ADServiceAccount cmdlet으로 이 개체를 전달하여 서비스 계정 개체를 만듭니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.
 암호가 지정되지 않음 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

사용자 암호가 지정됨 - 암호가 설정되며, 사용자가 제공한 암호가 암호 정책을 따르거나 계정이 사용하지 않도록 설정된 시점에 암호가 설정되어 있는 경우 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

참고: 기본적으로 서비스 계정은 240자인 임의의 암호를 사용하여 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 서비스 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호(임의로 생성되거나 사용자가 제공한 암호)가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 서비스 계정이 사용하도록 설정되지 않습니다.

새 ADServiceAccount 개체는 항상 사용하지 않도록 설정되거나 사용자가 요청하거나 임의로 생성된 암호를 갖습니다. 빈 암호와 같이 도메인 암호 정책을 위반하는 암호를 사용하는 경우 사용하도록 설정된 서비스 계정 개체를 만들 수 없습니다.
 암호가 실패하는 경우에도 계정이 만들어집니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>새 서비스 계정 개체의 템플릿으로 사용할 서비스 계정 개체의 인스턴스를 지정합니다.

기존 서비스 계정 개체의 인스턴스를 템플릿으로 사용하거나 템플릿을 사용하기 위해 새 서비스 계정 개체를 생성할 수 있습니다.  Windows PowerShell 명령줄이나 스크립트를 사용하여 새 서비스 계정을 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 서비스 계정 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 서비스 계정 개체를 새 개체의 템플릿으로 사용합니다. 기존 서비스 계정 개체의 인스턴스를 검색하려면 Get-ADServiceAccount와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADServiceAccount cmdlet의 Instance 매개 변수에 제공하여 새 서비스 계정 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $serviceaccountInstance = Get-ADServiceAccount -Identity  
  New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADServiceAccount 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADServiceAccount cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 서비스 계정 개체를 만듭니다. 

  $serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
  $serviceaccountInstance. Description &quot;Service Account 2&quot;

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 제공된 SAMAccountName 문자열이 '$'로 끝나지 않으면 필요한 경우 이 문자가 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>계정의 새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

암호 매개 변수가 사용되는 방식에 따라 다음과 같은 조건이 적용됩니다.

$null 암호가 지정됨 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.
 암호가 지정되지 않음 - 임의의 암호가 설정되며 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

사용자 암호가 지정됨 - 암호가 설정되며, 사용자가 제공한 암호가 암호 정책을 따르거나 계정이 사용하지 않도록 설정된 시점에 암호가 설정되어 있는 경우 계정을 사용하지 않도록 설정하라는 요청이 없으면 계정이 사용하도록 설정됩니다.

참고: 기본적으로 서비스 계정은 240자인 임의의 암호를 사용하여 만들어집니다. 사용자가 암호를 제공하는 경우 해당 암호를 설정하려고 하지만 암호 정책 제한 때문에 설정하지 못할 수 있습니다. 하지만 서비스 계정이 만들어지며 Set-ADAccountPassword를 사용하여 해당 계정에 암호를 설정할 수 있습니다. 계정을 안전하게 유지하기 위해 유효한 암호(임의로 생성되거나 사용자가 제공한 암호)가 설정되거나 PasswordNotRequired가 true로 설정되지 않으면 서비스 계정이 사용하도록 설정되지 않습니다.

새 ADServiceAccount 개체는 항상 사용하지 않도록 설정되거나 사용자가 요청하거나 임의로 생성된 암호를 갖습니다. 빈 암호와 같이 도메인 암호 정책을 위반하는 암호를 사용하는 경우 사용하도록 설정된 서비스 계정 개체를 만들 수 없습니다.
 암호가 실패하는 경우에도 계정이 만들어집니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -AccountPassword(Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>새 서비스 계정 개체의 템플릿으로 사용할 서비스 계정 개체의 인스턴스를 지정합니다.

기존 서비스 계정 개체의 인스턴스를 템플릿으로 사용하거나 템플릿을 사용하기 위해 새 서비스 계정 개체를 생성할 수 있습니다.  Windows PowerShell 명령줄이나 스크립트를 사용하여 새 서비스 계정을 생성할 수 있습니다. 다음 예에서는 이 두 메서드를 사용하여 서비스 계정 개체 템플릿을 만드는 방법을 보여 줍니다.

방법 1: 기존 서비스 계정 개체를 새 개체의 템플릿으로 사용합니다. 기존 서비스 계정 개체의 인스턴스를 검색하려면 Get-ADServiceAccount와 같은 cmdlet을 사용합니다. 그런 다음 이 개체를 New-ADServiceAccount cmdlet의 Instance 매개 변수에 제공하여 새 서비스 계정 개체를 만듭니다. 해당 매개 변수를 설정하여 새 개체의 속성 값을 재정의할 수 있습니다. 

  $serviceaccountInstance = Get-ADServiceAccount -Identity  
  New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

방법 2: Windows PowerShell 명령줄 인터페이스를 사용하여 새 ADServiceAccount 개체를 만들고 속성 값을 설정합니다. 그런 다음 이 개체를 New-ADServiceAccount cmdlet의 Instance 매개 변수에 전달하여 새 Active Directory 서비스 계정 개체를 만듭니다. 

  $serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
  $serviceaccountInstance. Description &quot;Service Account 2&quot;

참고: 지정된 특성의 유효성이 검사되지 않으므로 존재하지 않거나 설정할 수 없는 특성을 설정하려고 시도하면 오류가 발생합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>개체의 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다. 

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -Name &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>cmdlet 매개 변수로 표현되지 않는 특성에 대한 개체 특성 값을 지정합니다. 이 매개 변수를 사용하여 동시에 하나 이상의 매개 변수를 설정할 수 있습니다. 특성이 둘 이상의 값을 취하는 경우 값을 여러 개 할당할 수 있습니다. 특성을 식별하려면 Active Directory 스키마에서 해당 특성에 정의된 LDAPDisplayName(ldapDisplayName)을 지정합니다.

구문:
특성에 단일 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
특성에 여러 값을 지정하는 경우
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

세미콜론을 사용하여 특성을 구분하여 여러 개의 특성에 값을 지정할 수 있습니다.  다음 구문에서는 여러 개의 특성에 값을 설정하는 방법을 보여 줍니다.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

다음 예에서는 이 매개 변수를 사용하는 방법을 보여 줍니다.

유니코드 문자열 집합을 취하는 favColors라는 사용자 지정 특성 값을 설정하려면 다음 구문을 사용합니다. 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

favColors 및 dateOfBirth의 값을 동시에 설정하려면 다음 구문을 사용하십시오.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01/01/1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 개체가 만들어지는 컨테이너 또는 OU(조직 구성 단위)의 X.500 경로를 지정합니다.  

대개 값이 지정되지 않은 경우 Path 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Path의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Path의 기본값이 설정됩니다.
  - cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 매개 변수는 공급자 드라이브의 현재 경로로 설정됩니다.
  - cmdlet에 기본 경로가 있는 경우 이 경로가 사용됩니다.  예를 들어 New-ADUser에서 Path 매개 변수는 기본값인 Users 컨테이너로 지정됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Path의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Path 매개 변수는 기본값을 사용하지 않습니다.

다음 예에서는 이 매개 변수를 OU로 설정하는 방법을 보여 줍니다.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

참고:  New-Item, Remove-Item, Remove-ItemProperty, Rename-Item 및 Set-ItemProperty와 같은 Active Directory 공급자 cmdlet에도 Path 속성이 포함되어 있습니다. 하지만 공급자 cmdlet의 경우에는 Active Directory cmdlet과 달리 Path 매개 변수가 컨테이너가 아닌 실제 개체의 경로를 식별합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 제공된 SAMAccountName 문자열이 '$'로 끝나지 않으면 필요한 경우 이 문자가 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					새 서비스 계정 개체의 템플릿인 서비스 계정 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 새 서비스 계정 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -Enabled $true</dev:code>
  			<dev:remarks>
  			        <maml:para>새 계정의 이름을 지정하기만 하여 AD DS에서 사용하도록 설정된 새 서비스 계정을 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -ServicePrincipalNames &quot;MSSQLSVC/Machine3.corp.contoso.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Service1이라는 새 서비스 계정을 만들고 서비스 계정의 SerivcePrincipalName을 등록합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144975</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADObject cmdlet은 Active Directory 개체를 제거합니다. 이 cmdlet을 사용하여 모든 유형의 Active Directory 개체를 제거할 수 있습니다.

Identity 매개 변수는 제거할 Active Directory 개체를 지정합니다. DN(고유 이름) 또는 GUID로 개체를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localObject&gt;와 같은 Active Directory 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADObject cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Remove-ADObject cmdlet으로 개체를 전달할 수 있습니다. 

제거하도록 지정한 개체에 하위 개체가 있는 경우 Recursive 매개 변수를 지정해야 합니다. 

AD LDS 환경의 경우 다음과 같은 경우를 제외하고 Partition 매개 변수를 지정해야 합니다.     - DN을 사용하여 개체를 식별하는 경우: 파티션이 DN에서 자동으로 생성됩니다.     - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우: 현재 경로가 파티션을 설정하는 데 사용됩니다.     - 기본 명명 컨텍스트 또는 파티션이 지정된 경우 
AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체와 해당 개체에 포함된 모든 자식 개체를 제거하도록 지정합니다. 
  
다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive

참고: 이 매개 변수를 지정하면 ProtectedFromAccidentalDeletion으로 표시된 개체가 있는 경우에도 모든 자식 개체가 제거됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>삭제된 개체와 비활성화된 정방향 및 역방향 연결을 검색하도록 지정합니다. 이 매개 변수를 지정하면 cmdlet에서 다음 LDAP 컨트롤을 사용합니다. 
  Show Deleted Objects (1.2.840.113556.1.4.417)
  Show Deactivated Links (1.2.840.113556.1.4.2065)

참고: 이 매개 변수를 지정하지 않으면 cmdlet에서 삭제된 개체에 대한 작업을 수행하거나 반환하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체와 해당 개체에 포함된 모든 자식 개체를 제거하도록 지정합니다. 
  
다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive

참고: 이 매개 변수를 지정하면 ProtectedFromAccidentalDeletion으로 표시된 개체가 있는 경우에도 모든 자식 개체가 제거됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다. 다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 글로벌 카탈로그 포트에 연결된 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject 'CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
 				<maml:para>확인
이 작업을 수행하시겠습니까?
대상 &quot;CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM&quot;에서 &quot;제거&quot; 작업을 수행합니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName 'CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM'으로 식별된 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>확인
이 작업을 수행하시겠습니까?
대상 &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;에서 &quot;제거&quot; 작업을 수행합니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>자식 개체를 비롯하여 DistinguishedName이 'OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM'인 컨테이너를 삭제합니다. 참고: 실수로 삭제되지 않도록 보호되는 것을 비롯하여 컨테이너의 모든 자식 컨테이너도 삭제됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;65511e76-ea80-45e1-bc93-08a78d8c4853&quot; -Confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>확인 메시지를 표시하지 않고 objectGUID가 '65511e76-ea80-45e1-bc93-08a78d8c4853'인 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject -Identity &quot;CN=InternalApps,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>확인
이 작업을 수행하시겠습니까?
대상 &quot;CN=InternalApps,DC=AppNC&quot;에서 &quot;제거&quot; 작업을 수행합니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName이 'CN=InternalApps,DC=AppNC'인 개체를 LDS 인스턴스에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot; -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects | Remove-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>'OU=Accounting,DC=Fabrikam,DC=com' 컨테이너에 있던 휴지통의 모든 개체를 재활용합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144976</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADUser
		</command:name>
		<maml:description>
			<maml:para>Active Directory 사용자를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADUser cmdlet은 Active Directory 사용자를 제거합니다.

Identity 매개 변수는 제거할 Active Directory 사용자를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localUserObject&gt;와 같은 사용자 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 사용자 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 사용자 개체를 검색한 다음 파이프라인을 통해 Remove-ADUser cmdlet으로 개체를 전달할 수 있습니다. 

DN으로 ADUser를 식별할 경우 Partition 매개 변수가 자동으로 결정됩니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity GlenJohn
</dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountName이 'GlenJohn'인 사용자를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | where {$_.ObjectClass -eq 'user'} | Remove-ADUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>사용하지 않도록 설정된 계정을 가진 모든 사용자를 검색하고 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity &quot;CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 'CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM'인 사용자를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser &quot;cn=glenjohn,dc=appnc&quot; -Server Lds.Fabrikam.com:50000 | Remove-ADUser</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 'cn=glenjohn,dc=appnc'인 사용자를 AD LDS 인스턴스에서 가져오고 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144977</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Active Directory 컴퓨터를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADComputer cmdlet은 Active Directory 컴퓨터를 제거합니다.

Identity 매개 변수는 제거할 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localComputerObject&gt;와 같은 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 컴퓨터 개체를 전달할 수도 있습니다. 예를 들어 Get-ADComputer cmdlet을 사용하여 컴퓨터 개체를 검색한 다음 파이프라인을 통해 Remove-ADComputer cmdlet으로 개체를 전달할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputer -Identity &quot;FABRIKAM-SRV4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>특정 컴퓨터를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer</dev:code>
  			<dev:remarks>
 				<maml:para>확인
이 작업을 수행하시겠습니까?
대상 &quot;CN=LabServer-01,CN=Computers,DC=Fabrikam,DC=com&quot;에서 &quot;제거&quot; 작업을 수행합니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): a
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>지정된 위치에서 모든 컴퓨터를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 위치에서 모든 컴퓨터를 제거하고 확인 메시지를 사용하지 않도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144978</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADGroup cmdlet은 Active Directory 그룹 개체를 제거합니다. 이 cmdlet을 사용하여 보안 그룹과 메일 그룹을 제거할 수 있습니다.

Identity 매개 변수는 제거할 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), SAM(보안 계정 관리자) 계정 이름 또는 정식 이름으로 그룹을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADGroupObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 파이프라인을 통해 Remove-ADGroup cmdlet으로 개체를 전달할 수 있습니다.

DN으로 ADGroup을 식별할 경우 Partition 매개 변수가 자동으로 결정됩니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup SanjaysReports </dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=SanjayReports,DC=Fabrikam,DC=com&quot;에서 &quot;제거&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;):</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 'SanjaysReports'인 그룹을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'Name -like &quot;Sanjay*&quot;' | remove-adgroup </dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=SanjaysReports,DC=Fabrikam,DC=com&quot;에서 &quot;제거&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>이름이 'Sanjay'로 시작하는 모든 그룹을 가져온 다음 제거합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup 
cmdlet Remove-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
Identity: SanjaysTeam</dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=SanjaysTeam,DC=Fabrikam,DC=com&quot;에서 &quot;제거&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 cmdlet 동작을 사용하여 samAccountName이 'SanjaysTeam'인 그룹을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144979</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Active Directory 세분화된 암호 정책을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADFineGrainedPasswordPolicy cmdlet은 Active Directory 세분화된 암호 정책을 제거합니다.

Identity 매개 변수는 제거할 Active Directory 세분화된 암호 정책을 지정합니다. 고유 이름 또는 GUID로 세분화된 암호 정책을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localFineGrainedPasswordPolicyObject&gt;와 같은 세분화된 암호 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 세분화된 암호 정책 개체를 전달할 수도 있습니다. 예를 들어 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 세분화된 암호 정책 개체를 검색한 다음 파이프라인을 통해 Remove-ADFineGrainedPasswordPolicy cmdlet으로 개체를 전달할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy MyPolicy
</dev:code>
  			<dev:remarks>
  			        <maml:para>'MyPolicy'라는 세분화된 암호 정책 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy -Identity 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM'인 세분화된 암호 정책 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*user*&quot;} | Remove-ADFineGrainedPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>이름에 user가 포함된 모든 세분화된 암호 정책 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144980</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Active Directory 조직 구성 단위를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADOrganizationalUnit cmdlet은 Active Directory 조직 구성 단위를 제거합니다.

Identity 매개 변수는 제거할 조직 구성 단위를 지정합니다. DN(고유 이름) 또는 GUID로 조직 구성 단위를 식별할 수 있습니다. 이 매개 변수를 $&lt;localOrganizationUnitObject&gt;와 같은 조직 구성 단위 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADOrganizationalUnit cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Remove-ADOrganizationalUnit cmdlet으로 개체를 전달할 수 있습니다. 

제거하도록 지정한 개체에 하위 개체가 있는 경우 Recursive 매개 변수를 지정해야 합니다. 

조직 구성 단위 개체의 ProtectedFromAccidentalDeletion 속성이 true로 설정된 경우 이 cmdlet은 종료 오류를 반환합니다. 

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Active Directory 조직 구성 단위 개체의 ID를 지정합니다. 이 매개 변수에는 다음과 같은 ID 형식이 지정될 수 있습니다. 괄호 안의 식별자는 ID가 포함된 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;OUinstance&quot;라는 이름의 조직 구성 단위 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>cmdlet이 조직 구성 단위와 해당 조직 구성 단위에 포함된 모든 하위 항목을 제거하도록 지정합니다. 비어 있지 않은 OU(조직 구성 단위)를 제거하려면 이 매개 변수를 지정해야 합니다.

참고: 이 매개 변수를 지정하면 OU 아래의 ProtectedFromAccidentalDeletion으로 표시된 모든 자식 개체가 제거됩니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Active Directory 조직 구성 단위 개체의 ID를 지정합니다. 이 매개 변수에는 다음과 같은 ID 형식이 지정될 수 있습니다. 괄호 안의 식별자는 ID가 포함된 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;OUinstance&quot;라는 이름의 조직 구성 단위 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>cmdlet이 조직 구성 단위와 해당 조직 구성 단위에 포함된 모든 하위 항목을 제거하도록 지정합니다. 비어 있지 않은 OU(조직 구성 단위)를 제거하려면 이 매개 변수를 지정해야 합니다.

참고: 이 매개 변수를 지정하면 OU 아래의 ProtectedFromAccidentalDeletion으로 표시된 모든 자식 개체가 제거됩니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					조직 구성 단위 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>이 항목과 모든 하위 항목을 제거하시겠습니까?
대상 'OU=Accounting,DC=Fabrikam,DC=com'에 대한 반복 제거를 수행하는 중입니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말
(기본값은 &quot;Y&quot;):y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>OrganizationalUnit과 모든 하위 항목을 제거합니다. OrganizationalUnit이 삭제되지 않도록 보호되는 경우 OrganizationalUnit과 하위 항목이 삭제되지 않습니다. OrganizationalUnit이 보호되지 않지만 하위 항목 중에 보호되는 것이 있는 경우에는 OrganizationalUnit과 하위 항목이 모두 삭제됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;1b228aa5-2c14-48b8-ad8a-2685dc22e055&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>확인 메시지를 표시하지 않고 objectGUID를 Identity로 사용하여 OrganizationalUnit을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>확인
이 작업을 수행하시겠습니까?
대상 &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;에서 &quot;제거&quot; 작업을 수행합니다.
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말
(기본값은 &quot;Y&quot;):y
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Accounting OrganizationalUnit을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>LDS 인스턴스에서 OrganizationalUnit을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144981</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹에서 하나 이상의 멤버를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADGroupMember cmdlet은 Active Directory 그룹에서 하나 이상의 사용자, 그룹, 서비스 계정 또는 컴퓨터를 제거합니다. 

Identity 매개 변수는 제거할 멤버가 포함된 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 그룹 개체 변수를 지정하거나 파이프라인을 통해 Identity 매개 변수로 그룹 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 파이프라인을 통해 Remove-ADGroupMember cmdlet으로 개체를 전달할 수 있습니다.

Members 매개 변수는 Identity 매개 변수에 지정된 그룹에서 제거할 사용자, 컴퓨터 및 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자, 컴퓨터 또는 그룹을 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자, 컴퓨터 및 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 새 멤버를 지정하는 경우 쉼표로 구분된 목록을 사용합니다. 파이프라인을 통해 이 cmdlet으로 사용자, 컴퓨터 또는 그룹 개체를 전달할 수는 없습니다. 파이프라인을 사용하여 그룹에서 사용자, 컴퓨터 또는 그룹 개체를 제거하려면 Remove-ADPrincipalGroupMembership cmdlet을 사용합니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>그룹에서 제거할 사용자, 그룹 및 컴퓨터의 집합을 지정합니다. 다음 값 중 하나를 지정하여 사용자, 그룹 및 컴퓨터를 식별할 수 있습니다. 참고: 괄호 안의 식별자는 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
   보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.

다음 예에서는 고유 이름 및 SAM 계정 이름 속성 값을 지정하여 제거할 사용자 및 그룹을 지정합니다.
  -Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

다음 예에서는 현재 Windows PowerShell 세션에 정의되어 있는 사용자 및 그룹 개체를 매개 변수에 대한 입력으로 지정합니다.  

  -Members $userObject, $groupObject

이 매개 변수에 대해 지정된 개체는 Microsoft.ActiveDirectory.Management.ADPrincipal 개체로 처리됩니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup 

파이프라인을 통해 이 매개 변수로 개체를 전달할 수는 없습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>그룹에서 제거할 사용자, 그룹 및 컴퓨터의 집합을 지정합니다. 다음 값 중 하나를 지정하여 사용자, 그룹 및 컴퓨터를 식별할 수 있습니다. 참고: 괄호 안의 식별자는 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
   보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.

다음 예에서는 고유 이름 및 SAM 계정 이름 속성 값을 지정하여 제거할 사용자 및 그룹을 지정합니다.
  -Members &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;saradavisreports&quot;

다음 예에서는 현재 Windows PowerShell 세션에 정의되어 있는 사용자 및 그룹 개체를 매개 변수에 대한 입력으로 지정합니다.  

  -Members $userObject, $groupObject

이 매개 변수에 대해 지정된 개체는 Microsoft.ActiveDirectory.Management.ADPrincipal 개체로 처리됩니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup 

파이프라인을 통해 이 매개 변수로 개체를 전달할 수는 없습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 그룹 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember -Identity &quot;DocumentReaders&quot; -Member &quot;WilsonPais&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;에서 &quot;설정&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>samAccountName이 'WilsonPais'인 사용자를 'DocumentReaders' 그룹에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember &quot;DocumentReaders&quot; &quot;administrator&quot;,&quot;Wilson Pais&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountName이 'administrator' 및 'WilsonPais'인 사용자를 'DocumentReaders' 그룹에서 제거합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember
cmdlet Remove-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
Identity: DocumentReaders 
Members[0]: Wilson Pais 
Members[1]: </dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;에서 &quot;설정&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 동작을 사용하여 'WilsonPais' 사용자를 DocumentReaders 그룹에서 제거합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 &quot;CN=AccessControl,DC=AppNC&quot; | remove-adgroupmember -member &quot;CN=GlenJohns,DC=AppNC&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>확인 
이 작업을 수행하시겠습니까? 
대상 &quot;CN=AccessControl,DC=AppNC&quot;에서 &quot;설정&quot; 작업을 수행합니다. 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>파이프라인을 사용하여 AD LDS 인스턴스의 AccessControl 그룹에서 DistinguishedName이 'CN=GlenJohns,DC=AppNC'인 사용자를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144982</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>하나 이상의 Active Directory 그룹에서 멤버를 제거합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADPrincipalGroupMembership cmdlet은 사용자, 그룹, 컴퓨터, 서비스 계정 또는 다른 모든 계정 개체를 하나 이상의 Active Directory 그룹에서 제거합니다. 

Identity 매개 변수는 제거할 사용자, 그룹 또는 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM 계정 이름으로 사용자, 그룹 또는 컴퓨터를 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 사용자, 그룹 또는 컴퓨터 개체 변수를 지정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 사용자 개체를 검색한 다음 파이프라인을 통해 Remove-ADPrincipalGroupMembership cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADGroup 또는 Get-ADComputer를 사용하여 파이프라인을 통해 전달할 그룹, 서비스 계정 및 컴퓨터 개체를 가져올 수 있습니다.

이 cmdlet은 파이프라인에서 모든 사용자, 컴퓨터, 서비스 계정 및 그룹 개체를 수집한 다음 하나의 Active Directory 작업을 사용하여 이러한 개체를 지정된 그룹에서 제거합니다.

MemberOf 매개 변수는 멤버를 제거할 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. $&lt;localGroupObject&gt;와 같은 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 파이프라인을 통해 MemberOf 매개 변수로 그룹 개체를 전달할 수는 없습니다. 파이프라인을 통해 전달된 그룹에서 멤버를 제거하려면 Remove-ADGroupMember cmdlet을 사용합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>사용자, 컴퓨터 또는 그룹을 멤버로 추가할 Active Directory 그룹을 지정합니다. 다음 값 중 하나를 제공하여 그룹을 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

둘 이상의 그룹을 지정하는 경우 쉼표를 사용하여 목록에서 그룹을 구분합니다.

다음 예에서는 SAM 계정 이름 값을 사용하여 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 보안 주체 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  - Microsoft.ActiveDirectory.Management.ADGroup
  - Microsoft.ActiveDirectory.Management.ADUser
  - Microsoft.ActiveDirectory.Management.ADComputer
  - Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;principalInstance&quot;라는 이름의 보안 주체 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>사용자, 컴퓨터 또는 그룹을 멤버로 추가할 Active Directory 그룹을 지정합니다. 다음 값 중 하나를 제공하여 그룹을 식별할 수 있습니다. 참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

둘 이상의 그룹을 지정하는 경우 쉼표를 사용하여 목록에서 그룹을 구분합니다.

다음 예에서는 SAM 계정 이름 값을 사용하여 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -MemberOf &quot;SaraDavisGroup&quot;, &quot;JohnSmithGroup&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자, 컴퓨터 또는 그룹을 나타내는 보안 주체 개체는 Identity 매개 변수가 받습니다. 이 매개 변수에는 다음과 같은 파생 유형도 사용할 수 있습니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 사용자, 컴퓨터 또는 그룹 개체를 나타내는 보안 주체 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership -Identity &quot;Wilson Pais&quot; -MemberOf &quot;Administrators&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>그룹에서 멤버 제거 
지정한 그룹에서 지정한 모든 멤버를 제거하시겠습니까? 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): Y</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'Wilson Pais' 사용자를 Administrators 그룹에서 제거합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership 
cmdlet Remove-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
Identity: Kim Abercrombie 
MemberOf[0]: Administrators 
MemberOf[1]: AccessControl 
MemberOf[2]: </dev:code>
  			<dev:remarks>
 				<maml:para>그룹에서 멤버 제거 
지정한 그룹에서 지정한 모든 멤버를 제거하시겠습니까? 
[Y] 예  [A] 모두 예  [N] 아니요  [L] 모두 아니요  [S] 일시 중단  [?] 도움말 (기본값은 &quot;Y&quot;): Y</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 동작을 사용하여 'Kim Abercrombie' 사용자를 Administrators 및 AccessControl 그룹에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-aduser -server localhost:60000 -Identity &quot;CN=GlenJohns,DC=AppNC&quot; | remove-adprincipalgroupmembership -memberof &quot;CN=AccessControl,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>파이프라인을 사용하여 DistinguishedName이 'CN=GlenJohns,DC=AppNC'인 사용자를 검색하고 DistinguishedName이 'CN=AccessControl,DC=AppNC'인 그룹에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144983</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>세분화된 암호 정책에서 하나 이상의 사용자를 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADFineGrainedPasswordPolicySubject cmdlet은 세분화된 암호 정책에서 하나 이상의 글로벌 보안 그룹 및 사용자를 제거합니다.

Identity 매개 변수는 세분화된 암호 정책을 지정합니다. 고유 이름 또는 GUID로 세분화된 암호 정책을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localFineGrainedPasswordPolicyObject&gt;와 같은 세분화된 암호 정책 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 세분화된 암호 정책 개체를 전달할 수도 있습니다. 예를 들어 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 세분화된 암호 정책 개체를 검색한 다음 파이프라인을 통해 Remove-ADFineGrainedPasswordPolicySubject cmdlet으로 개체를 전달할 수 있습니다. 

Subjects 매개 변수는 암호 정책에서 제거할 사용자 및 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), SAM(보안 계정 관리자) 계정 이름 또는 정식 이름으로 사용자 또는 그룹을 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자 또는 그룹 개체 변수를 지정할 수도 있습니다. 둘 이상의 사용자 또는 그룹을 지정하는 경우 쉼표로 구분된 목록을 사용합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>하나 이상의 사용자 또는 그룹을 지정합니다. 둘 이상의 사용자 또는 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 다음 속성 값 중 하나로 사용자 또는 그룹을 식별할 수 있습니다.
  DN(고유 이름)
    예: CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 고유 이름 및 SAM 계정 이름을 사용하여 이 매개 변수를 사용자 및 그룹 목록으로 설정하는 방법을 보여 줍니다.
  -Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>하나 이상의 사용자 또는 그룹을 지정합니다. 둘 이상의 사용자 또는 그룹을 지정하려면 쉼표로 구분된 목록을 사용합니다. 다음 속성 값 중 하나로 사용자 또는 그룹을 식별할 수 있습니다.
  DN(고유 이름)
    예: CN=SaraDavis,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

참고: 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

개체를 이 매개 변수에 직접 제공할 수도 있습니다.

다음 예에서는 고유 이름 및 SAM 계정 이름을 사용하여 이 매개 변수를 사용자 및 그룹 목록으로 설정하는 방법을 보여 줍니다.
  -Subjects &quot;CN=SaraDavis, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;saradavisreports&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 세분화된 암호 정책 개체를 나타내는 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 'BobKe' 및 'KimAb'인 두 사용자에서 'DlgtdAdminsPSO'라는 세분화된 암호 정책을 제거합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject  DlgtdAdminsPSO | where {$_.Name -like &quot;*Price&quot;} | Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>DlgtdAdminsPSO라는 세분화된 암호 정책이 적용되는 이름 목록에서 이름이 'Price'로 끝나는 모든 주체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145019</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>읽기 전용 도메인 컨트롤러 암호 복제 정책의 허용 또는 거부 목록에서 사용자, 컴퓨터 및 그룹을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADDomainControllerPasswordReplicationPolicy cmdlet은 RODC(읽기 전용 도메인 컨트롤러) 암호 복제 정책의 허용 또는 거부 목록에서 하나 이상의 사용자, 컴퓨터 및 그룹을 제거합니다. 

Identity 매개 변수는 허용 및 거부 목록을 사용하여 암호 복제 정책을 적용하는 RODC를 지정합니다. GUID, IPV4Address, 전역 IPV6Address 또는 DNS 호스트 이름으로 도메인 컨트롤러를 식별할 수 있습니다. 도메인 컨트롤러를 나타내는 서버 개체의 이름, NTDS 설정 개체 또는 서버 개체의 DN(고유 이름), 구성 파티션 아래에 있는 NTDS 설정 개체 또는 서버 개체의 GUID 또는 도메인 컨트롤러를 나타내는 컴퓨터 개체의 DN으로 도메인 컨트롤러를 식별할 수도 있습니다. Identity 매개 변수를 $&lt;localDomainControllerobject&gt;와 같은 도메인 컨트롤러 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 컨트롤러 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomainController cmdlet을 사용하여 도메인 컨트롤러 개체를 검색한 다음 파이프라인을 통해 Remove-ADDomainControllerPasswordReplicationPolicy cmdlet으로 개체를 전달할 수 있습니다. 읽기 전용 도메인 컨트롤러를 제공해야 합니다. 

AllowedList 매개 변수는 허용 목록에서 제거할 사용자, 컴퓨터 및 그룹을 지정합니다. 마찬가지로 DeniedList 매개 변수는 거부 목록에서 제거할 사용자, 컴퓨터 및 그룹을 지정합니다. AllowedList 및 DeniedList 매개 변수 중 하나나 둘 모두를 지정해야 합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자, 컴퓨터 또는 그룹을 식별할 수 있습니다. $&lt;localUserObject&gt;와 같은 사용자, 컴퓨터 또는 그룹 변수를 지정할 수도 있습니다. 둘 이상의 항목을 지정하는 경우 쉼표로 구분된 목록을 사용합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 계정의 목록에서 제거할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 없는 계정의 목록에서 제거할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터, 그룹 또는 기타 계정을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예: CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 있는 계정의 목록에서 제거할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터 또는 그룹을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예:  CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -AllowedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>이 RODC(읽기 전용 도메인 컨트롤러)에 암호를 복제할 수 없는 계정의 목록에서 제거할 사용자, 컴퓨터, 그룹 또는 기타 계정을 지정합니다. 쉼표로 구분된 목록을 사용하여 값을 여러 개 지정할 수 있습니다. 각 사용자, 컴퓨터, 그룹 또는 기타 계정을 식별하려면 다음 속성 값 중 하나를 사용합니다.
  고유 이름 
      예: CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com
  GUID(objectGUID) 
      예:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
      예:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
      예:  saradavis

다음 예에서는 SAM 계정 이름 및 고유 이름을 사용하여 그룹 및 사용자를 지정하는 방법을 보여 줍니다.
  -DeniedList &quot;SaraDavisGroup&quot;, &quot;CN=SaraDavis,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 도메인 컨트롤러 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 다르게 지정하지 않는 한 이 값은 도메인 컨트롤러를 나타내는 서버 개체에 사용됩니다.

  GUID(objectGUID)
    예: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    예: 157.59.132.61
  전역 IPV6Address 
    예: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS 호스트 이름(dNSHostName)
    예: corp-DC01.corp.contoso.com
  서버 개체의 이름
    예: corp-DC01$
  NTDS 설정 개체의 고유 이름
    예: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  도메인 컨트롤러를 나타내는 서버 개체의 고유 이름
    예: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  구성 파티션에 있는 NTDS 설정 개체의 GUID
    예: 68adaf21-e28d-6012-bca8-320d93450ab0
  구성 파티션에 있는 서버 개체의 GUID
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20
  도메인 컨트롤러를 나타내는 컴퓨터 개체의 고유 이름
    예: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다.

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 NTDS 설정 개체의 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

다음 예에서는 이 매개 변수를 &quot;AD_DCInstance&quot;라는 이름의 도메인 컨트롤러 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					RODC(읽기 전용 도메인 컨트롤러) 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 읽기 전용 도메인 컨트롤러 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountName이 'JesperAaberg' 및 'AdrianaAdams'인 사용자를 'FABRIKAM-RODC1' RODC의 허용 목록에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountName이 'MichaelAllen' 및 'ElizabethAndersen'인 사용자를 'FABRIKAM-RODC1' RODC의 거부 목록에서 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144984</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 서비스 계정을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADServiceAccount cmdlet은 Active Directory 서비스 계정을 제거합니다. 이 cmdlet은 서비스 계정을 사용하는 컴퓨터는 변경하지 않습니다. 이 작업 후에 서비스 계정은 대상 컴퓨터에서 더 이상 호스팅되지 않지만 디렉터리에 여전히 존재합니다.

Identity 매개 변수는 제거할 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localSerivceAccountObject&gt;와 같은 서비스 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 서비스 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADServiceAccount cmdlet을 사용하여 서비스 계정 개체를 검색한 다음 파이프라인을 통해 Remove-ADServiceAccount cmdlet으로 개체를 전달할 수 있습니다. 

참고: 서비스 계정을 제거하는 작업은 서비스 계정을 로컬로 제거하는 작업과 다릅니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
  			        <maml:para>'service1'이라는 서비스 계정을 제거합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {Name -like 'SQL*'} | Remove-ADServiceAccount </dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 'SQL'로 시작하는 모든 서비스 계정을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144985</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>컴퓨터에서 하나 이상의 서비스 계정을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-ADComputerServiceAccount cmdlet은 Active Directory 컴퓨터에서 서비스 계정을 제거합니다.

Computer 매개 변수는 제거할 서비스 계정이 포함된 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. Computer 매개 변수를 $&lt;localComputerobject&gt;와 같은 컴퓨터 개체 변수로 설정하거나 파이프라인을 통해 Computer 매개 변수로 컴퓨터 개체를 전달할 수도 있습니다. 예를 들어 Get-ADComputer cmdlet을 사용하여 컴퓨터 개체를 검색한 다음 파이프라인을 통해 Remove-ADComputerServiceAccount cmdlet으로 개체를 전달할 수 있습니다. 

ServiceAccount 매개 변수는 제거할 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. $&lt;localServiceAccountObject&gt;와 같은 서비스 계정 개체 변수를 지정할 수도 있습니다. 둘 이상의 서비스 계정을 지정하는 경우 쉼표로 구분된 목록을 사용합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>하나 이상의 Active Directory 서비스 계정을 지정합니다. 다음 속성 값 중 하나를 사용하여 서비스 계정을 식별할 수 있습니다. 
  고유 이름 
    예: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
   SAM 계정 이름(sAMAccountName) 
    예: serviceadmin

다음 예에서는 SAM 계정 이름을 사용하여 이 매개 변수에 서비스 계정을 지정하는 방법을 보여 줍니다.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>하나 이상의 Active Directory 서비스 계정을 지정합니다. 다음 속성 값 중 하나를 사용하여 서비스 계정을 식별할 수 있습니다. 
  고유 이름 
    예: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
   SAM 계정 이름(sAMAccountName) 
    예: serviceadmin

다음 예에서는 SAM 계정 이름을 사용하여 이 매개 변수에 서비스 계정을 지정하는 방법을 보여 줍니다.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Computer 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 컴퓨터 개체를 나타내는 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1 
</dev:code>
  			<dev:remarks>
  			        <maml:para>컴퓨터 계정 'ComputerAcct1'에서 서비스 계정 'SvcAcct1'을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2</dev:code>
  			<dev:remarks>
  			        <maml:para>컴퓨터 계정 'ComputerAcct1'에서 서비스 계정 'SvcAcct1,SvcAcct2'를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144986</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체의 이름을 변경합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Rename-ADObject cmdlet은 Active Directory 개체의 이름을 바꿉니다. 이 cmdlet은 LDAP 표시 이름(ldapDisplayName)이 &quot;name&quot;인 Active Directory 개체의 Name 속성을 설정합니다. 사용자의 지정된 이름, 성 및 기타 이름을 수정하려면 Set-ADUser cmdlet을 사용합니다. 사용자, 컴퓨터 또는 그룹의 SAM(보안 계정 관리자) 계정 이름을 수정하려면 Set-ADUser, Set-ADComputer 또는 Set-ADGroup cmdlet을 사용합니다.

Identity 매개 변수는 이름을 바꿀 개체를 지정합니다. DN(고유 이름) 또는 GUID로 개체 또는 컨테이너를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADObject cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Rename-ADObject cmdlet으로 개체를 전달할 수 있습니다. 또한 Get-ADGroup, Get-ADUser, Get-ADComputer, Get-ADServiceAccount, Get-ADOrganizationalUnit 및 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 파이프라인을 통해 이 cmdlet으로 전달할 수 있는 개체를 가져올 수 있습니다.

NewName 매개 변수는 개체의 새 이름을 정의하며 반드시 지정해야 합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>개체의 새 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다.

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -NewName &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>개체의 새 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다.

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.

  -NewName &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy

				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot; -NewName UnitedKingdomHQ</dev:code>
  			<dev:remarks>
  			        <maml:para>기존 사이트 'HQ'의 이름을 새 이름 'UnitedKingdomHQ'로 바꿉니다. 고유 이름이 -Identity 매개 변수에서 제공되면 -Partition 매개 변수가 필요하지 않습니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;AmsterdamHQ&quot; -Partition &quot;CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>objectGUID가 '4777c8e8-cd29-4699-91e8-c507705a0966'인 개체의 이름을 'SiteNewName'으로 바꿉니다. -Identity 매개 변수에 제공된 GUID에서 사이트 개체의 명명 컨텍스트를 알 수 없기 때문에 -Partition 매개 변수가 필요합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com&quot; -NewName Groups</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguisehdName이 'OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com'인 개체의 이름을 'Groups'로 바꿉니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;DavidAhs&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>objectGUID가 '4777c8e8-cd29-4699-91e8-c507705a0966'인 개체의 이름을 'DavidAhs'로 바꿉니다. 개체가 도메인의 기본 명명 컨텍스트에 있기 때문에 -Partition 매개 변수가 지정되지 않습니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;CN=Apps,DC=AppNC&quot; -NewName &quot;InternalApps&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>LDS 인스턴스에서 'CN=Apps,DC=AppNC' 컨테이너의 이름을 'InternalApps'로 바꿉니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144987</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Restore-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체를 복원합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Restore</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Restore-ADObject cmdlet은 삭제된 Active Directory 개체를 복원합니다. 

NewName 매개 변수는 복원된 개체의 새 이름을 지정합니다. NewName 매개 변수를 지정하지 않는 경우 LDAP 표시 이름이 &quot;msDS-lastKnownRDN&quot;인 Active Directory 특성 값이 사용됩니다. TargetPath 매개 변수는 복원된 개체의 새 위치를 지정합니다. TargetPath 매개 변수를 지정하지 않는 경우 LDAP 표시 이름이 &quot;lastKnownParent&quot;인 Active Directory 특성 값이 사용됩니다.

Identity 매개 변수는 복원할 Active Directory 개체를 지정합니다. DN(고유 이름) 또는 GUID로 개체를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADObject cmdlet에서 IncludeDeletedObjects 매개 변수를 지정하여 삭제된 개체를 검색할 수 있습니다. 그런 다음 파이프라인을 통해 Restore-ADObject cmdlet으로 개체를 전달할 수 있습니다. 

참고: Get-ADObject cmdlet을 통해 -IncludedeDeletedObjects 매개 변수를 지정하여 삭제된 개체의 고유 이름을 가져올 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restore-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>개체의 새 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다.

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -NewName &quot;SaraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>개체의 새 위치를 지정합니다. 이 위치는 컨테이너 또는 조직 구성 단위의 경로여야 합니다.

다음 예에서는 고유 이름을 제공하여 대상 경로를 지정하는 방법을 보여 줍니다.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>개체의 새 이름을 지정합니다. 이 매개 변수는 Active Directory 개체의 Name 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;name&quot;입니다.

다음 예에서는 이 매개 변수를 이름 문자열로 설정하는 방법을 보여 줍니다.
  -NewName &quot;SaraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>개체의 새 위치를 지정합니다. 이 위치는 컨테이너 또는 조직 구성 단위의 경로여야 합니다.

다음 예에서는 고유 이름을 제공하여 대상 경로를 지정하는 방법을 보여 줍니다.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 복원된 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;613dc90a-2afd-49fb-8bd8-eac48c6ab59f&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>삭제된 개체의 'msDS-LastKnownRDN' 특성을 -NewName 매개 변수로 설정하고 'lastKnownRDN'을 -TargetPath 매개 변수로 설정하면서 ADObject를 복원합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;CN=Kim Abercrombie\0ADEL:613dc90a-2afd-49fb-8bd8-eac48c6ab59f,CN=Deleted Objects,DC=FABRIKAM,DC=COM&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>삭제된 개체의 'msDS-LastKnownRDN' 특성을 -NewName 매개 변수로 설정하고 'lastKnownRDN'을 -TargetPath 매개 변수로 설정하면서 ADObject를 복원합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'samaccountname -eq &quot;kimabercrombie&quot;' -IncludeDeletedObjects | Restore-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>samaccountname이 kimabercrombie인 삭제된 사용자를 찾아 복원합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject  -Identity '6bb3bfe9-4355-48ee-b3b6-4fda6917d31d' -Server server1:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>ObjectGUID를 사용하여 AD-LDS 개체를 복원합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'msds-lastknownrdn -eq &quot;user1&quot;'  -Server server1:50000 -IncludeDeletedObjects -SearchBase &quot;o=app1,c=us&quot; | Restore-ADObject </dev:code>
  			<dev:remarks>
  			        <maml:para>msds-LastKnownRDN을 사용하여 AD-LDS 개체를 복원합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144988</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Search-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 사용자, 컴퓨터 또는 서비스 계정을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Search</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Search-ADAccount cmdlet은 매개 변수에 지정된 조건에 맞는 하나 이상의 사용자, 컴퓨터 또는 서비스 계정을 검색합니다. 검색 조건에는 계정 상태, 암호 상태 등이 있습니다. 예를 들어 AccountExpired 매개 변수를 지정하여 만료된 모든 계정을 검색할 수 있습니다. 마찬가지로 PasswordExpired 매개 변수를 지정하여 암호가 만료된 모든 계정을 검색할 수 있습니다. UsersOnly 매개 변수를 지정하여 검색 범위를 사용자 계정으로만 제한할 수 있습니다. 마찬가지로 ComputersOnly 매개 변수를 지정하는 경우 이 cmdlet은 컴퓨터 계정만 검색합니다.

AccountExpiring 및 AccountInactive와 같은 일부 검색 매개 변수에서는 기본 시간이 사용되며, DateTime 또는 TimeSpan 매개 변수를 사용하여 이 기본 시간을 변경할 수 있습니다. DateTime 매개 변수는 고유한 개별 지정하고 TimeSpan 매개 변수는 현재 시간으로부터의 시간 범위를 지정합니다. 예를 들어 10일 내에 만료되는 모든 계정을 검색하려면 AccountExpiring 및 TimeSpan 매개 변수를 지정하고 TimeSpan 값을 &quot;10.00:00:00&quot;으로 설정합니다. 2012년 12월 31일 전에 만료되는 모든 계정을 검색하려면 DateTime 매개 변수를 &quot;12/31/2012&quot;로 설정합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountDisabled</maml:name>
				<maml:description>
					<maml:para>사용되지 않는 계정을 검색하도록 지정합니다. ADAccount Enabled 속성을 false로 설정하면 계정을 사용할 수 없게 됩니다. 

다음 예에서는 AccountDisabled 매개 변수를 지정하는 방법을 보여 줍니다.
  -AccountDisabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpired</maml:name>
				<maml:description>
					<maml:para>만료된 계정을 검색하도록 지정합니다. ADAccount AccountExpirationDate 속성을 지난 시간으로 설정하면 계정이 만료됩니다. AccountExpirationDate 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

다음 예에서는 AccountExpired 매개 변수를 지정하는 방법을 보여 줍니다.
  -AccountExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiring</maml:name>
				<maml:description>
					<maml:para>지정된 기간 내에 또는 지정된 시간에 만료되는 계정을 검색하도록 지정합니다. 기간을 지정하려면 AccountExpiring 매개 변수를 TimeSpan 매개 변수와 함께 사용합니다. 특정 시간을 지정하려면 AccountExpiring 매개 변수를 DateTime 매개 변수와 함께 사용합니다. 

다음 예에서는 다음 10일 내에 만료되는 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -AccountExpiring -TimeSpan 10

다음 예에서는 2012년 6월 18일 오전 2시 전에 만료되는 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>AccountExpiring, AccountInactive 및 PasswordExpiring과 같은 Search-ADAccount 매개 변수에 개별 시간 값을 지정합니다.

다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 자정으로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다.
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 AccountExpiring 매개 변수를 2012년 6월 18일 오전 2시의 DateTime 값으로 설정하는 방법을 보여 줍니다.

  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>시간 간격을 설정합니다. 이 매개 변수는 AccountExpiring과 같은 Search-ADAccount 매개 변수의 시간 값을 지정하는 데 사용됩니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -TimeSpan &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
   -TimeSpan &quot;-2&quot;
  시간을 4시간으로 설정합니다.
    -TimeSpan &quot;4:00&quot;

예를 들어 10일 내에 만료되는 모든 계정을 검색하려면 AccountExpiring 및 TimeSpan 매개 변수를 다음과 같이 지정합니다.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountInactive</maml:name>
				<maml:description>
					<maml:para>지정된 기간 내 또는 지정된 시간 이후에 로그온하지 않은 계정을 검색하도록 지정합니다. 기간을 지정하려면 TimeSpan 매개 변수를 사용합니다. 특정 시간을 지정하려면 DateTime 매개 변수를 사용합니다. 이 특성은 도메인이 Windows Server 2003 도메인 기능 수준에 있는 경우에만 사용되므로 이 매개 변수는 해당 모드에서만 작동합니다.

다음 예에서는 지난 10일 동안 비활성 상태인 계정을 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountInactive -TimeSpan 10

다음 예에서는 2008년 7월 16일 오전 12시 이후 비활성 상태인 계정을 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountInactive  -DateTime &quot;7/16/2008&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>AccountExpiring, AccountInactive 및 PasswordExpiring과 같은 Search-ADAccount 매개 변수에 개별 시간 값을 지정합니다.

다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 자정으로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다.
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 AccountExpiring 매개 변수를 2012년 6월 18일 오전 2시의 DateTime 값으로 설정하는 방법을 보여 줍니다.

  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>시간 간격을 설정합니다. 이 매개 변수는 AccountExpiring과 같은 Search-ADAccount 매개 변수의 시간 값을 지정하는 데 사용됩니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -TimeSpan &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
   -TimeSpan &quot;-2&quot;
  시간을 4시간으로 설정합니다.
    -TimeSpan &quot;4:00&quot;

예를 들어 10일 내에 만료되는 모든 계정을 검색하려면 AccountExpiring 및 TimeSpan 매개 변수를 다음과 같이 지정합니다.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockedOut</maml:name>
				<maml:description>
					<maml:para>잠긴 계정을 검색하도록 지정합니다.

다음 예에서는 잠긴 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -LockedOut</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordExpired</maml:name>
				<maml:description>
					<maml:para>암호가 만료된 계정을 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -PasswordExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>암호가 만료되지 않은 계정을 검색하도록 지정합니다.

다음 예에서는 PasswordNeverExpires 매개 변수를 지정하는 방법을 보여 줍니다.
   -PasswordNeverExpires </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountDisabled</maml:name>
			<maml:description>
				<maml:para>사용되지 않는 계정을 검색하도록 지정합니다. ADAccount Enabled 속성을 false로 설정하면 계정을 사용할 수 없게 됩니다. 

다음 예에서는 AccountDisabled 매개 변수를 지정하는 방법을 보여 줍니다.
  -AccountDisabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpired</maml:name>
			<maml:description>
				<maml:para>만료된 계정을 검색하도록 지정합니다. ADAccount AccountExpirationDate 속성을 지난 시간으로 설정하면 계정이 만료됩니다. AccountExpirationDate 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

다음 예에서는 AccountExpired 매개 변수를 지정하는 방법을 보여 줍니다.
  -AccountExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiring</maml:name>
			<maml:description>
				<maml:para>지정된 기간 내에 또는 지정된 시간에 만료되는 계정을 검색하도록 지정합니다. 기간을 지정하려면 AccountExpiring 매개 변수를 TimeSpan 매개 변수와 함께 사용합니다. 특정 시간을 지정하려면 AccountExpiring 매개 변수를 DateTime 매개 변수와 함께 사용합니다. 

다음 예에서는 다음 10일 내에 만료되는 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -AccountExpiring -TimeSpan 10

다음 예에서는 2012년 6월 18일 오전 2시 전에 만료되는 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountInactive</maml:name>
			<maml:description>
				<maml:para>지정된 기간 내 또는 지정된 시간 이후에 로그온하지 않은 계정을 검색하도록 지정합니다. 기간을 지정하려면 TimeSpan 매개 변수를 사용합니다. 특정 시간을 지정하려면 DateTime 매개 변수를 사용합니다. 이 특성은 도메인이 Windows Server 2003 도메인 기능 수준에 있는 경우에만 사용되므로 이 매개 변수는 해당 모드에서만 작동합니다.

다음 예에서는 지난 10일 동안 비활성 상태인 계정을 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountInactive -TimeSpan 10

다음 예에서는 2008년 7월 16일 오전 12시 이후 비활성 상태인 계정을 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountInactive  -DateTime &quot;7/16/2008&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComputersOnly</maml:name>
			<maml:description>
				<maml:para>컴퓨터 계정만 검색하도록 지정합니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ComputersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>AccountExpiring, AccountInactive 및 PasswordExpiring과 같은 Search-ADAccount 매개 변수에 개별 시간 값을 지정합니다.

다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 자정으로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다.
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 AccountExpiring 매개 변수를 2012년 6월 18일 오전 2시의 DateTime 값으로 설정하는 방법을 보여 줍니다.

  -AccountExpiring -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockedOut</maml:name>
			<maml:description>
				<maml:para>잠긴 계정을 검색하도록 지정합니다.

다음 예에서는 잠긴 계정을 검색하도록 지정하는 방법을 보여 줍니다.
  -LockedOut</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordExpired</maml:name>
			<maml:description>
				<maml:para>암호가 만료된 계정을 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -PasswordExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>암호가 만료되지 않은 계정을 검색하도록 지정합니다.

다음 예에서는 PasswordNeverExpires 매개 변수를 지정하는 방법을 보여 줍니다.
   -PasswordNeverExpires </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 한 페이지에 포함할 개체 수를 지정합니다. 

기본값은 페이지당 개체 256개입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인 서비스 쿼리에 대해 반환하는 최대 개체 수를 지정합니다. 모든 개체를 받으려면 이 매개 변수를 $null(null 값)로 설정합니다. Ctrl+C를 사용하여 쿼리와 개체의 반환을 중지할 수 있습니다. 
기본값은 $null입니다. 
다음 예에서는 반환된 개체를 모두 받도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>검색할 Active Directory 경로를 지정합니다. 

Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 해당 드라이브의 현재 경로입니다.

AD DS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행하는 경우 이 매개 변수의 기본값은 대상 도메인의 기본 명명 컨텍스트입니다.

AD LDS 대상에 대해 Active Directory 공급자 드라이브 외부에서 cmdlet을 실행할 때의 기본값은 대상 LDS 인스턴스의 기본 명명 컨텍스트입니다(AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정하여 기본 명명 컨텍스트가 지정된 경우).  대상 AD LDS 인스턴스에 대해 기본 명명 컨텍스트가 지정되지 않은 경우 이 매개 변수는 기본값을 가지지 않습니다.

다음 예에서는 OU에서 검색하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있는 경우 모든 파티션이 검색됩니다. SearchBase 매개 변수의 값이 빈 문자열로 설정되어 있고 GC 포트에 연결되어 있지 않으면 오류가 발생합니다.
다음 예에서는 이 매개 변수를 빈 문자열로 설정하는 방법을 보여 줍니다.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Active Directory 검색의 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Base 또는 0
  OneLevel 또는 1
  Subtree 또는 2

Base 쿼리는 현재 경로 또는 개체만 검색합니다. OneLevel 쿼리는 해당 경로 또는 개체의 바로 아래 항목을 검색합니다. Subtree 쿼리는 현재 경로/개체 및 이 경로/개체의 모든 하위 항목을 검색합니다.

다음 예에서는 이 매개 변수를 subtree 검색으로 설정하는 방법을 보여 줍니다.
  -SearchScope Subtree</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>시간 간격을 설정합니다. 이 매개 변수는 AccountExpiring과 같은 Search-ADAccount 매개 변수의 시간 값을 지정하는 데 사용됩니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -TimeSpan &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
   -TimeSpan &quot;-2&quot;
  시간을 4시간으로 설정합니다.
    -TimeSpan &quot;4:00&quot;

예를 들어 10일 내에 만료되는 모든 계정을 검색하려면 AccountExpiring 및 TimeSpan 매개 변수를 다음과 같이 지정합니다.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UsersOnly</maml:name>
			<maml:description>
				<maml:para>사용자 계정만 검색하도록 지정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -UsersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					매개 변수에 설정된 조건에 맞는 하나 이상의 계정 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----            -----------
Guest           user
krbtgt          user
krbtgt_51399   user
AmyAl-LPTOP     computer
DeepakAn-DSKTOP computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>사용하지 않도록 설정된 모든 사용자, 컴퓨터 및 서비스 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -UsersOnly | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----         -----------
Guest           user
krbtgt          user
krbtgt_51399   user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>사용하지 않도록 설정된 모든 사용자를 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----            -----------
Greg Chapman    user
Claus Hansen    user
Tomasz Bochenek user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>만료된 모든 사용자, 컴퓨터 및 서비스 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -TimeSpan 6.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----           -----------
Iulian Calinov user
John Campbell  user
Garth Fort     user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>다음 6일 안에 만료되는 모든 사용자, 컴퓨터 및 서비스 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountInactive -TimeSpan 90.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----                        -----------
FABRIKAM-RODC1 computer
Guest           user
krbtgt          user
krbtgt_51399   user
Almudena Benito             user
Aaron Con                   user
Adina Hagege                user
Aaron Nicholls              user
Aaron M. Painter            user
Jeff Phillips               user
Flemming Pedersen           user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>지난 90일 동안 비활성화된 모든 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----                        -----------
Stan Orme                   user
Danni Ortman                user
Matej Potokar               user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>암호가 만료된 모든 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordNeverExpires | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----           -----------
Guest           user
Toni Poe       user
Anders Riis    user
Fabien Hernoux user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>암호가 만료되지 않는 모든 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -LockedOut | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----           -----------
Toni Poe       user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>잠긴 모든 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -ComputersOnly | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----           -----------
TPOE-PC1       computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>사용하지 않도록 설정된 모든 컴퓨터 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -DateTime &quot;3/18/2009&quot; | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name        ObjectClass
----         -----------
Anders Riis  user

</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>2009년 3월 18일에 만료되는 모든 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-AdAccount -AccountDisabled -SearchBase &quot;DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled               : False
Name                  : SanjayPatel
UserPrincipalName     :
PasswordNeverExpires  :
LockedOut             : False
ObjectGUID                         : d671de28-6e40-42a7-b32c-63d336de296d
ObjectClass           : user
SID               : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944
PasswordExpired       : False
LastLogonDate         :
DistinguishedName     : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC
AccountExpirationDate :</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>LDS 인스턴스 &quot;FABRIKAM-SRV1:60000&quot;에서 사용하지 않도록 설정된 모든 사용자, 컴퓨터 및 서비스 계정을 반환합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144989</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountResultantPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADObject
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADObject cmdlet은 Active Directory 개체의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.  

Identity 매개 변수는 수정할 Active Directory 개체를 지정합니다. DN(고유 이름) 또는 GUID로 개체를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADObject cmdlet을 사용하여 개체를 검색한 다음 파이프라인을 통해 Set-ADObject cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 개체를 업데이트할 수 있습니다. 수정된 Active Directory 개체의 복사본에 Instance 매개 변수를 설정하는 경우 Set-ADObject cmdlet은 원본 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADObject 개체를 사용합니다. Instance 매개 변수를 사용하는 경우에는 Identity 매개 변수가 허용되지 않습니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 세 가지 방법을 사용하여 개체의 DisplayName 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 DisplayName 매개 변수 지정
 -파이프라인을 통해 개체를 전달하고 DisplayName 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 DisplayName 매개 변수를 사용하여 SecurityLevel2AccessGroup 개체의 DisplayName 속성을 수정합니다. 

 Set-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; -DisplayName &quot;Security Level 2&quot;

방법 2: 파이프라인을 통해 SecurityLevel2AccessGroup 개체를 전달하고 DisplayName 매개 변수를 지정하여 SecurityLevel2AccessGroup 개체의 DisplayName 속성을 수정합니다.

 Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; | Set-ADObject -DisplayName &quot;Security Level 2&quot;

방법 3: Windows PowerShell 명령줄을 통해 SecurityLevel2AccessGroup 개체의 로컬 인스턴스를 수정하여 SecurityLevel2AccessGroup 개체의 DisplayName 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $adobject = Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot;
 $adobject.DisplayName = &quot;Security Level 2&quot; 
 Set-ADObject -Instance $adobject. 

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 개체를 업데이트하는 데 사용할 Active Directory 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADObject cmdlet을 사용하여 검색된 Active Directory 개체만 업데이트할 수 있습니다.  Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADObject cmdlet을 사용하여 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADObject cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $objectInstance.Description = &quot;New Description&quot;
3단계: 개체의 변경 내용을 저장합니다.
    Set-ADObject -Instance $objectInstance </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 개체를 업데이트하는 데 사용할 Active Directory 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADObject cmdlet을 사용하여 검색된 Active Directory 개체만 업데이트할 수 있습니다.  Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADObject cmdlet을 사용하여 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADObject cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $objectInstance.Description = &quot;New Description&quot;
3단계: 개체의 변경 내용을 저장합니다.
    Set-ADObject -Instance $objectInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Active Directory 개체는 Identity 매개 변수가 받습니다. 다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

Get-ADObject cmdlet을 사용하여 검색된 다음 수정된 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Description 'Distribution List of Antonio Alwan Direct Reports'
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 'CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM'인 개체에 대한 Description 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM' -Add @{siteList='CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM'} -Partition 'CN=Configuration,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>'CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM' 사이트를 DistinguishedName이 'CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM'인 개체에 대한 siteList 속성에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Add @{url=$urlValues}</dev:code>
  			<dev:remarks>
  			        <maml:para>objectGuid가 'cdadd380-d3a8-4fd1-9d30-5cf72d94a056'인 개체에서 두 가지 새 URL을 urlValues 속성에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Replace @{url=$urlValues;description=&quot;Antonio Alwan&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>다중값 특성 'url'의 이전 값을 새 값으로 바꾸고 'description' 특성의 값을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Remove @{url=&quot;www.contoso.com&quot;} -Replace @{description=&quot;Antonio Alwan (European Manager)&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>'url' 특성에서 지정된 값을 제거하고 'description' 특성의 값을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$myComp = Get-ADObject -identity &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Properties &quot;userAccountControl&quot;,&quot;description&quot;

#Now set the new account control using powershell bitwise OR operation (-bor) and set description
$myComp.userAccountControl = $myComp.userAccountControl -bor 50
$myComp.description = &quot;Setting a new UAC on the object&quot;

#Save the changes
Set-ADObject -Instance $myComp</dev:code>
  			<dev:remarks>
  			        <maml:para>'userAccountControl' 특성을 업데이트하고 'description' 특성의 값을 설정하여 개체에서 새 UAC 비트를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adobject &quot;CN=InternalApps,DC=AppNC&quot; -protectedFromAccidentalDeletion $true -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>LDS 인스턴스의 &quot;CN=InternalApps,DC=AppNC&quot; 컨테이너를 실수로 삭제되지 못하게 보호되도록 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144990</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADUser
		</command:name>
		<maml:description>
			<maml:para>Active Directory 사용자를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADUser cmdlet은 Active Directory 사용자의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.

Identity 매개 변수는 수정할 Active Directory 사용자를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 사용자를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localUserObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADUser cmdlet을 사용하여 사용자를 검색한 다음 파이프라인을 통해 Set-ADUser cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 사용자를 업데이트할 수 있습니다. 수정된 Active Directory 사용자 개체의 복사본에 Instance 매개 변수를 설정하는 경우 Set-ADUser cmdlet은 원본 사용자 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADUser 개체를 사용합니다. Instance 매개 변수를 사용하는 경우에는 Identity 매개 변수가 허용되지 않습니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 세 가지 방법을 사용하여 사용자의 Manager 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 Manager 매개 변수 지정
 -파이프라인을 통해 사용자를 전달하고 Manager 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 Manager 매개 변수를 사용하여 &quot;saraDavis&quot; 사용자의 Manager 속성을 수정합니다. 

 Set-ADUser -Identity &quot;saraDavis&quot; -Manager &quot;JimCorbin&quot;

방법 2: 파이프라인을 통해 &quot;saraDavis&quot; 사용자를 전달하고 Manager 매개 변수를 지정하여 &quot;saraDavis&quot; 사용자의 Manager 속성을 수정합니다.

 Get-ADUser -Identity &quot;saraDavis&quot; | Set-ADUser -Manager &quot;JimCorbin&quot;

방법 3: Windows PowerShell 명령줄을 통해 &quot;saraDavis&quot; 사용자의 로컬 인스턴스를 수정하여 &quot;saraDavis&quot; 사용자의 Manager 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $user = Get-ADUser -Identity &quot;saraDavis&quot;
 $user.Manager = &quot;JimCorbin&quot; 
 Set-ADUser -Instance $user. 

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>사용자의 회사를 지정합니다. 이 매개 변수는 사용자 개체의 Company 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;company&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>사용자의 부서를 지정합니다. 이 매개 변수는 사용자의 Department 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;department&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>사용자의 사업부를 지정합니다. 이 매개 변수는 사용자 개체의 Division 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;division&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>사용자의 전자 메일 주소를 지정합니다. 이 매개 변수는 사용자 개체의 EmailAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mail&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>사용자의 직원 ID를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeID 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeID&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>사용자의 직원 번호를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeNumber 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>사용자의 팩스 번호를 지정합니다. 이 매개 변수는 사용자 개체의 Fax 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;facsimileTelephoneNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>사용자의 이름을 지정합니다. 이 매개 변수는 사용자 개체의 GivenName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;givenName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>사용자의 홈 디렉터리를 지정합니다. 이 매개 변수는 사용자 개체의 HomeDirectory 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDirectory&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>HomeDirectory 속성에 정의된 UNC 경로와 연결된 드라이브를 지정합니다. 드라이브 문자는 &quot;&lt;DriveLetter&gt;:&quot;로 지정됩니다. 여기서 &lt;DriveLetter&gt;는 연결할 드라이브에 해당하는 문자를 나타냅니다. &lt;DriveLetter&gt;는 단일 대문자여야 하며 콜론이 필요합니다. 이 매개 변수는 사용자 개체의 HomeDrive 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDrive&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 집 전화 번호를 지정합니다. 이 매개 변수는 사용자의 HomePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homePhone&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>사용자 이름의 일부를 나타내는 머리글자를 지정합니다. 이 값을 사용자의 중간 이름 머리글자로 사용할 수 있습니다. 이 매개 변수는 사용자의 Initials 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;initials&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>사용자가 액세스할 수 있는 컴퓨터를 지정합니다. 둘 이상의 컴퓨터를 지정하려면 쉼표로 구분된 단일 목록을 만듭니다. SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 또는 컴퓨터의 DNS 호스트 이름을 사용하여 컴퓨터를 식별할 수 있습니다. SAM 계정 이름은 컴퓨터의 NetBIOS 이름과 동일합니다.

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userWorkStations&quot;입니다. 

다음 예에서는 SAMAccountName(NetBIOS 이름) 및 DNSHostName 값을 사용하여 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>사용자의 관리자를 지정합니다. 이 매개 변수는 사용자의 Manager 속성을 설정합니다. 이 매개 변수는 다음 속성 값 중 하나를 제공하여 설정됩니다.  참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;manager&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Manager saradavis </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 휴대폰 번호를 지정합니다. 이 매개 변수는 사용자 개체의 MobilePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mobile&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>사용자 회사의 위치를 지정합니다. 이 매개 변수는 사용자 개체의 Office 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;office&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Office  &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>사용자의 회사 전화 번호를 지정합니다. 이 매개 변수는 사용자 개체의 OfficePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;telephoneNumber&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>사용자의 조직을 지정합니다. 이 매개 변수는 사용자 개체의 Organization 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;o&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>사용자의 성 및 이름 외에 더 추가할 이름(예: 사용자의 중간 이름)을 지정합니다. 이 매개 변수는 사용자 개체의 OtherName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;middleName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OtherName  &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>사용자의 우체국 사서함 번호를 지정합니다. 이 매개 변수는 사용자 개체의 POBox 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postOfficeBox&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>사용자 프로필의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자 개체의 ProfilePath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;profilePath&quot;입니다.

다음 예에서는 이 매개 변수를 로컬 경로 및 UNC 경로로 설정하는 방법을 보여 줍니다.    -ProfilePath &quot;E:\users\profiles\saraDavis&quot;
   -ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>사용자 로그온 스크립트의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자의 ScriptPath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;scriptPath&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>로그온하는 데 스마트 카드가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자의 SmartCardLoginRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_SMARTCARD_REQUIRED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 스마트 카드가 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>사용자의 주소를 지정합니다. 이 매개 변수는 사용자 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;streetAddress&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>사용자의 성을 지정합니다. 이 매개 변수는 사용자 개체의 Surname 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sn&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Surname  &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>사용자의 직함을 지정합니다. 이 매개 변수는 사용자 개체의 Title 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;title&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Title  &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>수정해야 하는 Active Directory 사용자 개체와 이 개체에 적용해야 하는 변경 내용의 집합을 식별하는 ADUser 개체를 지정합니다. 이 매개 변수를 사용하면 ADUser 개체에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다. 
-Instance 매개 변수의 값으로 지정된 ADUser 개체는 Get-ADUser cmdlet을 사용하여 검색한 상태여야 합니다. Instance 매개 변수를 지정하면 해당 개체의 개별 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADUser cmdlet을 사용하여 ADUser 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADUser cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $userInstance = Get-ADUser  -Identity saraDavis
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $userInstance.EmailAddress = &quot;saradavis@contoso.com&quot;
3단계: saraDavis에 대한 변경 내용을 저장합니다.
    Set-ADUser -Instance $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>사용자의 회사를 지정합니다. 이 매개 변수는 사용자 개체의 Company 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;company&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>사용자의 부서를 지정합니다. 이 매개 변수는 사용자의 Department 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;department&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>사용자의 사업부를 지정합니다. 이 매개 변수는 사용자 개체의 Division 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;division&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>사용자의 전자 메일 주소를 지정합니다. 이 매개 변수는 사용자 개체의 EmailAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mail&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmailAddress &quot;saradavis@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>사용자의 직원 ID를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeID 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeID&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>사용자의 직원 번호를 지정합니다. 이 매개 변수는 사용자 개체의 EmployeeNumber 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;employeeNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>사용자의 팩스 번호를 지정합니다. 이 매개 변수는 사용자 개체의 Fax 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;facsimileTelephoneNumber&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>사용자의 이름을 지정합니다. 이 매개 변수는 사용자 개체의 GivenName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;givenName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>사용자의 홈 디렉터리를 지정합니다. 이 매개 변수는 사용자 개체의 HomeDirectory 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDirectory&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDirectory &quot;\\users\saraDavisHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>HomeDirectory 속성에 정의된 UNC 경로와 연결된 드라이브를 지정합니다. 드라이브 문자는 &quot;&lt;DriveLetter&gt;:&quot;로 지정됩니다. 여기서 &lt;DriveLetter&gt;는 연결할 드라이브에 해당하는 문자를 나타냅니다. &lt;DriveLetter&gt;는 단일 대문자여야 하며 콜론이 필요합니다. 이 매개 변수는 사용자 개체의 HomeDrive 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homeDrive&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 집 전화 번호를 지정합니다. 이 매개 변수는 사용자의 HomePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;homePhone&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>사용자 이름의 일부를 나타내는 머리글자를 지정합니다. 이 값을 사용자의 중간 이름 머리글자로 사용할 수 있습니다. 이 매개 변수는 사용자의 Initials 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;initials&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>수정해야 하는 Active Directory 사용자 개체와 이 개체에 적용해야 하는 변경 내용의 집합을 식별하는 ADUser 개체를 지정합니다. 이 매개 변수를 사용하면 ADUser 개체에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다. 
-Instance 매개 변수의 값으로 지정된 ADUser 개체는 Get-ADUser cmdlet을 사용하여 검색한 상태여야 합니다. Instance 매개 변수를 지정하면 해당 개체의 개별 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADUser cmdlet을 사용하여 ADUser 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADUser cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $userInstance = Get-ADUser  -Identity saraDavis
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $userInstance.EmailAddress = &quot;saradavis@contoso.com&quot;
3단계: saraDavis에 대한 변경 내용을 저장합니다.
    Set-ADUser -Instance $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>사용자가 액세스할 수 있는 컴퓨터를 지정합니다. 둘 이상의 컴퓨터를 지정하려면 쉼표로 구분된 단일 목록을 만듭니다. SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 또는 컴퓨터의 DNS 호스트 이름을 사용하여 컴퓨터를 식별할 수 있습니다. SAM 계정 이름은 컴퓨터의 NetBIOS 이름과 동일합니다.

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userWorkStations&quot;입니다. 

다음 예에서는 SAMAccountName(NetBIOS 이름) 및 DNSHostName 값을 사용하여 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -LogonWorkstations &quot;saraDavisDesktop,saraDavisLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>사용자의 관리자를 지정합니다. 이 매개 변수는 사용자의 Manager 속성을 설정합니다. 이 매개 변수는 다음 속성 값 중 하나를 제공하여 설정됩니다.  참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;manager&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Manager saradavis </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 휴대폰 번호를 지정합니다. 이 매개 변수는 사용자 개체의 MobilePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;mobile&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>사용자 회사의 위치를 지정합니다. 이 매개 변수는 사용자 개체의 Office 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;office&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Office  &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>사용자의 회사 전화 번호를 지정합니다. 이 매개 변수는 사용자 개체의 OfficePhone 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;telephoneNumber&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OfficePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>사용자의 조직을 지정합니다. 이 매개 변수는 사용자 개체의 Organization 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;o&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>사용자의 성 및 이름 외에 더 추가할 이름(예: 사용자의 중간 이름)을 지정합니다. 이 매개 변수는 사용자 개체의 OtherName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;middleName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -OtherName  &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>사용자의 우체국 사서함 번호를 지정합니다. 이 매개 변수는 사용자 개체의 POBox 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postOfficeBox&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>사용자 프로필의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자 개체의 ProfilePath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;profilePath&quot;입니다.

다음 예에서는 이 매개 변수를 로컬 경로 및 UNC 경로로 설정하는 방법을 보여 줍니다.    -ProfilePath &quot;E:\users\profiles\saraDavis&quot;
   -ProfilePath &quot;\\users\profiles\saraDavis&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>사용자 로그온 스크립트의 경로를 지정합니다. 이 값은 로컬 절대 경로이거나 UNC(범용 명명 규칙) 경로일 수 있습니다. 이 매개 변수는 사용자의 ScriptPath 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;scriptPath&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -ScriptPath &quot;\\logonScripts\saradavisLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>로그온하는 데 스마트 카드가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자의 SmartCardLoginRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_SMARTCARD_REQUIRED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 스마트 카드가 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>사용자의 주소를 지정합니다. 이 매개 변수는 사용자 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;streetAddress&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>사용자의 성을 지정합니다. 이 매개 변수는 사용자 개체의 Surname 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sn&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Surname  &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>사용자의 직함을 지정합니다. 이 매개 변수는 사용자 개체의 Title 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;title&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Title  &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					사용자 개체는 Identity 매개 변수가 받습니다.

Get-ADUser cmdlet을 사용하여 검색된 다음 수정된 사용자 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 사용자 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser AntonioAl -HomePage 'http://fabrikam.com/employees/AntonioAl' -LogonWorkstations 'AntonioAl-DSKTOP,AntonioAl-LPTOP'
</dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountName이 AntonioAL인 사용자의 homepage 속성을 http://fabrikam.com/employees/AntonioAl로 설정하고 LogonWorkstations 속성을 AntonioAl-DSKTOP,AntonioAl-LPTOP로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase 'OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Properties DisplayName | % {Set-ADUser $_ -DisplayName ($_.Surname + ' ' + $_.GivenName)}
</dev:code>
  			<dev:remarks>
  			        <maml:para>OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM 조직 구성 단위 아래에 있는 디렉터리에서 모든 사용자를 가져옵니다.  이러한 사용자 개체의 DisplayName 속성을 Surname 속성과 GivenName 속성을 연결한 값으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Replace @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>samAccountNAme이 GlenJohn인 사용자의 title 속성을 director로 설정하고 mail 속성을 glenjohn@fabrikam.com으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Remove @{otherMailbox=&quot;glen.john&quot;} -Add @{url=&quot;fabrikam.com&quot;} -Replace @{title=&quot;manager&quot;} -Clear description</dev:code>
  			<dev:remarks>
  			        <maml:para>otherMailbox 속성에서 glen.john을 제거하고 fabrikam.com을 url 속성에 추가한 다음 title 속성을 manager로 바꾸고 description 속성을 지워서 samAccountName이 GlenJohn인 사용자의 개체를 수정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$user = Get-ADUser GlenJohn -Properties mail,department 
$user.mail = &quot;glen@fabrikam.com&quot;
$user.department = &quot;Accounting&quot;
Set-ADUser -instance $user </dev:code>
  			<dev:remarks>
  			        <maml:para>instance 매개 변수를 사용하여 samAccountName이 GlenJohn인 사용자 개체의 mail 및 department 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># create a byte array for the M-F 8:00 am to 5 pm logon hours
$hours = New-Object byte[] 21
$hours[5] = 255; $hours[8] = 255; $hours[11] = 255; $hours[14] = 255; $hours[17] = 255;
$hours[6] = 1; $hours[9] = 1; $hours[12] = 1; $hours[15] = 1; $hours[18] = 1;

# create a hashtable to update the logon hours and a description
$replaceHashTable = New-Object HashTable
$replaceHashTable.Add(&quot;logonHours&quot;, $hours)
$replaceHashTable.Add(&quot;description&quot;, &quot;Sarah Davis can only logon from Monday through Friday from 8:00 AM to 5:00 PM&quot;)

# set the value of the logonHours and description attributes
Set-ADUser &quot;SarahDavis&quot; -Replace $replaceHashTable
</dev:code>
  			<dev:remarks>
  			        <maml:para>사용자 로그온 시간을 월요일부터 금요일까지 오전 8시에서 오후 5시까지로 설정하고 설명을 추가합니다. &quot;logonHours&quot; 특성이 지정된 바이트 배열로 업데이트되고 description 특성이 지정된 문자열로 업데이트됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144991</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Active Directory 컴퓨터 개체를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADComputer cmdlet은 Active Directory 컴퓨터 개체의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.

Identity 매개 변수는 수정할 Active Directory 컴퓨터를 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 컴퓨터를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localComputerObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADComputer cmdlet을 사용하여 컴퓨터 계정을 검색한 다음 파이프라인을 통해 Set-ADComputer cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 컴퓨터 개체 복사본의 변경 사항을 적용하여 컴퓨터를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 컴퓨터의 복사본으로 설정하는 경우 Set-ADComputer cmdlet은 원본 컴퓨터 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADComputer 개체를 사용합니다. Instance 매개 변수를 지정하는 경우에는 identity 매개 변수를 전달하지 않아야 합니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 컴퓨터 개체의 Location 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 Location 매개 변수 지정
 -파이프라인을 통해 컴퓨터 개체를 전달하고 Location 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 Location 매개 변수를 사용하여 saraDavisLaptop 컴퓨터의 Location 속성을 수정합니다. 

 Set-ADComputer  -Identity SaraDavisLaptop  -Location  &quot;W4013&quot;

방법 2: 파이프라인을 통해 컴퓨터 개체를 전달하고 Location 매개 변수를 지정하여 saraDavisLaptop 컴퓨터의 Location 속성을 수정합니다.

 Get-ADComputer SaraDavisLaptop | Set-ADcomputer -Location  &quot;W4013&quot;

방법 3:  Windows PowerShell 명령줄을 통해 컴퓨터 개체의 로컬 인스턴스를 수정하여 saraDavisLaptop 컴퓨터의 Location 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $computer = Get-ADcomputer saraDavisLaptop
 $computer.Location=  &quot;W4013&quot;
 Set-ADComputer -Instance $computer</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>컴퓨터의 FQDN(정규화된 도메인 이름)을 지정합니다. 이 매개 변수는 컴퓨터 개체의 DNSHostName 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;dNSHostName&quot;입니다. 

다음 예에서는 이 매개 변수를 FQDN으로 설정하는 방법을 보여 줍니다.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>컴퓨터의 위치(예: 회사 번호)를 지정합니다. 이 매개 변수는 컴퓨터의 Location 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;location&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Location  &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>운영 체제 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystem 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystem&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>운영 체제 핫픽스 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 operatingSystemHotfix 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;operatingSystemHotfix&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>운영 체제 서비스 팩의 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemServicePack 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemServicePack&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>운영 체제 버전을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemVersion 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemVersion&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 컴퓨터 개체를 업데이트하는 데 사용할 컴퓨터 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADComputer cmdlet을 사용하여 검색된 컴퓨터 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADComputer cmdlet을 사용하여 ADComputer 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADComputer cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $computerInstance = Get-ADComputer  -Identity saraDavisDesktop
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $computerInstance.Description = &quot;Sara Davis Computer&quot;
3단계: saraDavisDesktop에 대한 변경 내용을 저장합니다.
    Set-ADComputer -Instance $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>계정 암호를 변경할 수 있는지 여부를 지정합니다. 이 매개 변수는 계정의 CannotChangePassword 속성을 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정 암호를 변경할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>다음 로그온 시도 시 암호를 변경해야 하는지 여부를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

PasswordNeverExpires 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 로그온 시 암호를 변경해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>컴퓨터의 FQDN(정규화된 도메인 이름)을 지정합니다. 이 매개 변수는 컴퓨터 개체의 DNSHostName 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;dNSHostName&quot;입니다. 

다음 예에서는 이 매개 변수를 FQDN으로 설정하는 방법을 보여 줍니다.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 컴퓨터 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  보안 계정 관리자 계정 이름(sAMAccountName) 
    예: SaraDavisDesktop

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 지정된 식별자가 DN이면 해당 DN으로부터 검색할 파티션이 계산됩니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 컴퓨터 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saraDavisDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;computerInstance&quot;라는 이름의 컴퓨터 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 컴퓨터 개체를 업데이트하는 데 사용할 컴퓨터 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADComputer cmdlet을 사용하여 검색된 컴퓨터 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADComputer cmdlet을 사용하여 ADComputer 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADComputer cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $computerInstance = Get-ADComputer  -Identity saraDavisDesktop
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $computerInstance.Description = &quot;Sara Davis Computer&quot;
3단계: saraDavisDesktop에 대한 변경 내용을 저장합니다.
    Set-ADComputer -Instance $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>컴퓨터의 위치(예: 회사 번호)를 지정합니다. 이 매개 변수는 컴퓨터의 Location 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;location&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Location  &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>운영 체제 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystem 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystem&quot;입니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>운영 체제 핫픽스 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 operatingSystemHotfix 속성을 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;operatingSystemHotfix&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>운영 체제 서비스 팩의 이름을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemServicePack 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemServicePack&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>운영 체제 버전을 지정합니다. 이 매개 변수는 컴퓨터 개체의 OperatingSystemVersion 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;operatingSystemVersion&quot;입니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>각 사용자 계정은 &lt;user&gt;@&lt;DNS-domain-name&gt; 형식의 UPN(사용자 계정 이름)을 가지고 있습니다. UPN은 관리자가 지정하는 이름으로, 시스템이 사용하는 LDAP 고유 이름보다 짧으며 기억하기가 더 쉽습니다. UPN은 사용자 개체의 DN에 의존하지 않으므로 사용자 로그온 이름에 영향을 주지 않으면서 사용자 개체를 이동하거나 이름을 바꿀 수 있습니다. UPN을 사용하여 로그온할 때 사용자는 더 이상 로그온 대화 상자의 목록에서 도메인을 선택할 필요가 없습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					컴퓨터 개체는 Identity 매개 변수가 받습니다.

Get-ADComputer cmdlet을 사용하여 검색된 다음 수정된 컴퓨터 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 컴퓨터 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 글로벌 카탈로그 포트에 연결된 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ServicePrincipalName @{Replace=&quot;MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM:1456&quot;,&quot;MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:analyze&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 컴퓨터의 SPN 값을 수정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -Location &quot;NA/HQ/Building A&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 컴퓨터의 위치를 수정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ManagedBy &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>사용자의 SAM 계정 이름을 사용하여 지정된 컴퓨터의 ManagedBy 특성 값을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$comp = Get-ADComputer &quot;FABRIKAM-SRV1&quot;; $comp.Location = &quot;NA/HQ/Building A&quot;; $comp.ManagedBy = &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;; Set-ADComputer -Instance $comp</dev:code>
  			<dev:remarks>
  			        <maml:para>설정된 instance 매개 변수를 사용하여 지정된 컴퓨터의 Location 및 ManagedBy 특성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144992</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Active Directory 그룹을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADGroup cmdlet은 Active Directory 그룹의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.  

Identity 매개 변수는 수정할 Active Directory 그룹을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 그룹을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localGroupObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 그룹 개체를 전달할 수도 있습니다. 예를 들어 Get-ADGroup cmdlet을 사용하여 그룹 개체를 검색한 다음 파이프라인을 통해 Set-ADGroup cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 그룹 개체를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 그룹 개체의 복사본으로 설정하는 경우 Set-ADGroup cmdlet은 원본 그룹 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADGroup 개체를 사용합니다. Instance 매개 변수를 사용하는 경우에는 Identity 매개 변수가 허용되지 않습니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 그룹 개체의 Description 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 Description 매개 변수 지정
 -파이프라인을 통해 그룹 개체를 전달하고 Description 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 Description 매개 변수를 사용하여 SecurityLevel2Access 그룹의 Description 속성을 수정합니다. 

Set-ADGroup -Identity SecurityLevel2Access -Description &quot;Used to authorize Security Level 2 access.&quot;

방법 2: 파이프라인을 통해 SecurityLevel2Access 그룹을 전달하고 Description 매개 변수를 지정하여 SecurityLevel2Access 그룹의 Description 속성을 수정합니다.

Get-ADGroup -Identity &quot;SecurityLevel2Access&quot; | Set-ADGroup -Description &quot;Used to authorize Security Level 2 access.&quot;

방법 3: Windows PowerShell 명령줄을 통해 SecurityLevel2Access 그룹의 로컬 인스턴스를 수정하여 SecurityLevel2Access 그룹의 &lt;property&gt; 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $group = Get-ADGroup -Identity &quot;SecurityLevel2Access&quot;
 $group.Description = &quot;Used to authorize Security Level 2 access.&quot; 
 Set-ADGroup -Instance $group. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>그룹의 범주를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Distribution 또는 0  
  Security 또는 1 
 
이 매개 변수는 그룹의 GroupCategory 속성을 설정합니다. 이 매개 변수 값은 다른 그룹 값과 결합하여 &quot;groupType&quot;이라는 이름의 LDAP 표시 이름(ldapDisplayName) 특성을 설정합니다.

다음 예에서는 그룹이 보안 그룹임을 지정하는 방법을 보여 줍니다.
  -GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>그룹의 그룹 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  DomainLocal 또는 0
  Global 또는 1
  Universal 또는 2

이 매개 변수는 그룹 개체의 GroupScope 속성을 지정된 값으로 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;groupType&quot;입니다.

다음 예에서는 이 매개 변수를 DomainLocal로 설정하는 두 가지 방법을 보여 줍니다.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 그룹 개체를 업데이트하는 데 사용할 그룹 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADGroup cmdlet을 사용하여 검색된 그룹 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADGroup cmdlet을 사용하여 ADGroup 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADGroup cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $groupInstance = Get-ADGroup  -Identity &quot;SaraDavisReports&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $groupInstance.GroupScope= &quot;Global&quot;  

3단계: &quot;SaraDavisReports&quot;에 대한 변경 내용을 저장합니다.
    Set-ADGroup -Instance $groupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>그룹의 범주를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Distribution 또는 0  
  Security 또는 1 
 
이 매개 변수는 그룹의 GroupCategory 속성을 설정합니다. 이 매개 변수 값은 다른 그룹 값과 결합하여 &quot;groupType&quot;이라는 이름의 LDAP 표시 이름(ldapDisplayName) 특성을 설정합니다.

다음 예에서는 그룹이 보안 그룹임을 지정하는 방법을 보여 줍니다.
  -GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Security</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>그룹의 그룹 범위를 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  DomainLocal 또는 0
  Global 또는 1
  Universal 또는 2

이 매개 변수는 그룹 개체의 GroupScope 속성을 지정된 값으로 설정합니다. 이 속성의 LDAP 표시 이름은 &quot;groupType&quot;입니다.

다음 예에서는 이 매개 변수를 DomainLocal로 설정하는 두 가지 방법을 보여 줍니다.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 값 중 하나를 제공하여 Active Directory 그룹 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM(보안 계정 관리자) 계정 이름(sAMAccountName) 
    예: saradavisreports

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=saradavisreports,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;ADGroupInstance&quot;라는 이름의 그룹 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 그룹 개체를 업데이트하는 데 사용할 그룹 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADGroup cmdlet을 사용하여 검색된 그룹 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADGroup cmdlet을 사용하여 ADGroup 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADGroup cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $groupInstance = Get-ADGroup  -Identity &quot;SaraDavisReports&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $groupInstance.GroupScope= &quot;Global&quot;  

3단계: &quot;SaraDavisReports&quot;에 대한 변경 내용을 저장합니다.
    Set-ADGroup -Instance $groupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					그룹 개체는 Identity 매개 변수가 받습니다.

Get-ADGroup cmdlet을 사용하여 검색된 다음 수정된 그룹 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 그룹 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; -description &quot;Access Group&quot; -passthru 
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName     : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID                         : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>ADAM 인스턴스에서 AccessControl 그룹의 description 속성을 &quot;Access Group&quot;으로 설정합니다. 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>파이프라인을 통해 이름이 access로 시작하는 모든 그룹에 대한 설명을 수정합니다. 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS adam:\DC=AppNC&gt; get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; $group = get-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; 
PS adam:\DC=AppNC&gt; $group.description = &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; set-adgroup -Instance $group -passthru </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID                         : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>instance 매개 변수를 통해 AccessControl 그룹의 description 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144993</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Active Directory 세분화된 암호 정책을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADFineGrainedPasswordPolicy cmdlet은 Active Directory 세분화된 암호 정책의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.  

Identity 매개 변수는 수정할 Active Directory 세분화된 암호 정책을 지정합니다. DN(고유 이름), GUID 또는 이름으로 세분화된 암호 정책을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localFineGrainedPasswordPolicyObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 세분화된 암호 정책 개체를 검색한 다음 파이프라인을 통해 Set-ADFineGrainedPasswordPolicy cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 세분화된 암호 정책 개체를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 세분화된 암호 정책 개체의 복사본으로 설정하는 경우 Set-ADFineGrainedPasswordPolicy cmdlet은 세분화된 암호 정책 개체 원본을 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADFineGrainedPasswordPolicy 개체를 사용합니다. Instance 매개 변수를 사용하는 경우에는 Identity 매개 변수가 허용되지 않습니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 세분화된 암호 정책 개체의 Precedence 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 Precedence 매개 변수 지정
 -파이프라인을 통해 세분화된 암호 정책 개체를 전달하고 Precedence 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 Precedence 매개 변수를 사용하여 세분화된 암호 정책 Level3Policy의 Precedence 속성을 수정합니다. 

 Set-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot; -Precedence 150

방법 2: 파이프라인을 통해 세부화된 암호 정책 Level3Policy를 전달하고 Precedence 매개 변수를 지정하여 세분화된 암호 정책 Level3Policy의 Precedence 속성을 수정합니다.

 Get-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot;| Set-ADFineGrainedPasswordPolicy -Precedence 150

방법 3: Windows PowerShell 명령줄을 통해 세분화된 암호 정책 Level3Policy의 로컬 인스턴스를 수정하여 세분화된 암호 정책 Level3Policy의 Precedence 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

$fineGrainedPasswordPolicy = Get-ADFineGrainedPasswordPolicy Level3Policy
 $fineGrainedPasswordPolicy.Precedence = 150 
 Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicy</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>모든 세분화된 암호 정책 중 특정 세분화된 암호 정책의 우선 순위를 정의하는 값을 지정합니다. 이 매개 변수는 세분화된 암호 정책의 Precedence 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-PasswordSettingsPrecedence&quot;입니다.

이 값은 사용자 또는 그룹에 둘 이상의 암호 정책이 적용될 경우 사용할 암호 정책을 결정합니다. 충돌이 발생할 경우에는 Precedence 속성 값이 낮은 암호 정책이 우선적으로 적용됩니다. 예를 들어 PasswordPolicy1의 Precedence 속성 값이 200이고 PasswordPolicy2의 Precedence 속성 값이 100이면 PasswordPolicy2가 사용됩니다. 

일반적으로 암호 정책 우선 순위 값은 나중에 정책을 쉽게 추가할 수 있도록 10 또는 100의 배수로 할당됩니다. 예를 들어 정책의 초기 우선 순위 값을 100 및 200으로 설정하면 우선 순위 값이 150인 다른 정책을 추가할 수 있습니다. 

지정한 Precedence 매개 변수가 이미 다른 암호 정책 개체에 할당된 경우에는 cmdlet이 종료 오류를 반환합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 세분화된 암호 정책 개체를 업데이트하는 데 사용할 세분화된 암호 정책 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 검색된 세분화된 암호 정책 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.
 
다음은 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 ADFineGrainedPasswordPolicy 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADFineGrainedPasswordPolicy cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy  -Identity PasswordPolicyLevel2
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $fineGrainedPasswordPolicyInstance.Precedence = 250
3단계: PasswordPolicyLevel2에 대한 변경 내용을 저장합니다.
    Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory의 세분화된 암호 정책 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름(distinguishedName)
    예: CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  이름(name) 
    예: PasswordPolicyLevel1

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 세분화된 암호 정책 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=Strict Password Policy,CN=Password Settings Container,CN=System,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;fineGrainedPasswordPolicyInstance&quot;라는 이름의 세분화된 암호 정책 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 세분화된 암호 정책 개체를 업데이트하는 데 사용할 세분화된 암호 정책 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 검색된 세분화된 암호 정책 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.
 
다음은 Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 ADFineGrainedPasswordPolicy 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADFineGrainedPasswordPolicy cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy  -Identity PasswordPolicyLevel2
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $fineGrainedPasswordPolicyInstance.Precedence = 250
3단계: PasswordPolicyLevel2에 대한 변경 내용을 저장합니다.
    Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;

  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>모든 세분화된 암호 정책 중 특정 세분화된 암호 정책의 우선 순위를 정의하는 값을 지정합니다. 이 매개 변수는 세분화된 암호 정책의 Precedence 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-PasswordSettingsPrecedence&quot;입니다.

이 값은 사용자 또는 그룹에 둘 이상의 암호 정책이 적용될 경우 사용할 암호 정책을 결정합니다. 충돌이 발생할 경우에는 Precedence 속성 값이 낮은 암호 정책이 우선적으로 적용됩니다. 예를 들어 PasswordPolicy1의 Precedence 속성 값이 200이고 PasswordPolicy2의 Precedence 속성 값이 100이면 PasswordPolicy2가 사용됩니다. 

일반적으로 암호 정책 우선 순위 값은 나중에 정책을 쉽게 추가할 수 있도록 10 또는 100의 배수로 할당됩니다. 예를 들어 정책의 초기 우선 순위 값을 100 및 200으로 설정하면 우선 순위 값이 150인 다른 정책을 추가할 수 있습니다. 

지정한 Precedence 매개 변수가 이미 다른 암호 정책 개체에 할당된 경우에는 cmdlet이 종료 오류를 반환합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					세분화된 암호 정책 개체는 Identity 매개 변수가 받습니다.

Get-ADFineGrainedPasswordPolicy cmdlet을 사용하여 검색된 다음 수정된 세분화된 암호 정책 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 세분화된 암호 정책 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy MyPolicy -Precedence 100 -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 MyPolicy인 FineGrainedPasswordPolicy 개체의 Precedence, LockoutDuration, LockoutObservationWindow, ComplexityEnabled, ReversibleEncryptionEnabled 및 MinPasswordLength 속성을 업데이트합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -MinPasswordLength 12
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM인 FineGrainedPasswordPolicy 개체의 MinPasswordLength 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$fgpp = Get-ADFineGrainedPasswordPolicy MyPolicy
$fgpp.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$fgpp.LockoutThreshold = 10
$fgpp.MinPasswordLength = 8
$fgpp.PasswordHistoryCount = 24
Set-ADFineGrainedPasswordPolicy -Instance $fgpp
</dev:code>
  			<dev:remarks>
  			        <maml:para>이름이 MyPolicy인 FineGrainedPasswordPolicy 개체를 가져오고 개체의 속성 집합을 업데이트한 다음 instance 매개 변수를 사용하여 수정 내용을 디렉터리에 기록합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144994</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomain
		</command:name>
		<maml:description>
			<maml:para>Active Directory 도메인을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDomain cmdlet은 Active Directory 도메인의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.

Identity 매개 변수는 수정할 도메인을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), DNS 도메인 이름 또는 NetBIOS 이름으로 도메인을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localDomainObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomain cmdlet을 사용하여 도메인 개체를 검색한 다음 파이프라인을 통해 Set-ADDomain cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 도메인 개체 복사본의 변경 사항을 적용하여 도메인 개체를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 도메인 개체의 복사본으로 설정하는 경우 Set-ADDomain cmdlet은 원본 도메인 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADDomain 개체를 사용합니다. Instance 매개 변수를 지정하는 경우에는 identity 매개 변수를 전달하지 않아야 합니다.  Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. 

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 사용자의 ManagedBy 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 ManagedBy 매개 변수 지정
 -파이프라인을 통해 사용자를 전달하고 ManagedBy 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 ManagedBy 매개 변수를 사용하여 London 도메인의 ManagedBy 속성을 수정합니다. 

 Set-ADDomain -Identity London -ManagedBy SaraDavis

방법 2: 파이프라인을 통해 London 도메인을 전달하고 ManagedBy 매개 변수를 지정하여 London 도메인의 ManagedBy 속성을 수정합니다.

 Get-ADDomain London | Set-ADDomain -ManagedBy SaraDavis

방법 3: Windows PowerShell 명령줄을 통해 London 도메인의 로컬 인스턴스를 수정하여 London 도메인의 ManagedBy 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $domain = Get-ADDomain London
 $domain.ManagedBy = SaraDavis 
 Set-ADDomain -Instance $domain. 
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>도메인에서 허용된 DNS(도메인 이름 서버) 접미사의 목록을 수정합니다. 이 매개 변수는 domainDNS 개체의 msDS-AllowedDNSSuffixes 특성 값을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 DNS 접미사 값을 추가, 제거 또는 대체하거나 지웁니다. 

값을 추가하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Add=value1,value2,...}

값을 제거하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Remove=value3,value4,...}

값을 바꾸려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Replace=value1,value2,...}

모든 값을 지우려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 DNS 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 도메인의 DNS 접미사를 추가 및 제거하는 방법을 보여 줍니다.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>계정의 마지막 로그온 시간이 도메인의 모든 도메인 컨트롤러에 복제되어야 하는 제한 시간(일 수)을 지정합니다. 이 매개 변수는 도메인의 LastLogonReplicationInterval 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 msDS-LogonTimeSyncInterval입니다. 마지막 로그온 복제 간격은 하루 이상이어야 합니다. 마지막 로그온 복제 간격을 낮은 값으로 설정하면 도메인 전체에서의 복제 작업이 상당히 증가될 수 있습니다.

다음 예에서는 이 매개 변수를 10일로 설정하는 방법을 보여 줍니다.
  -LastLogonReplicationInterval &quot;10&quot;

참고: 이 값은 도메인 모드가 &quot;Windows2000&quot; 값으로 설정된 경우 적용되지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 도메인 개체를 업데이트하는 데 사용할 도메인 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADDomain cmdlet을 사용하여 검색된 도메인 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADDomain cmdlet을 사용하여 ADDomain 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADDomain cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $domainInstance.ManagedBy = &quot;saraDavisGroup&quot;
3단계: contosoDomain에 대한 변경 내용을 저장합니다.
    Set-ADDomain -Instance $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>도메인에서 허용된 DNS(도메인 이름 서버) 접미사의 목록을 수정합니다. 이 매개 변수는 domainDNS 개체의 msDS-AllowedDNSSuffixes 특성 값을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 DNS 접미사 값을 추가, 제거 또는 대체하거나 지웁니다. 

값을 추가하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Add=value1,value2,...}

값을 제거하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Remove=value3,value4,...}

값을 바꾸려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Replace=value1,value2,...}

모든 값을 지우려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 DNS 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 도메인의 DNS 접미사를 추가 및 제거하는 방법을 보여 줍니다.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>계정의 마지막 로그온 시간이 도메인의 모든 도메인 컨트롤러에 복제되어야 하는 제한 시간(일 수)을 지정합니다. 이 매개 변수는 도메인의 LastLogonReplicationInterval 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 msDS-LogonTimeSyncInterval입니다. 마지막 로그온 복제 간격은 하루 이상이어야 합니다. 마지막 로그온 복제 간격을 낮은 값으로 설정하면 도메인 전체에서의 복제 작업이 상당히 증가될 수 있습니다.

다음 예에서는 이 매개 변수를 10일로 설정하는 방법을 보여 줍니다.
  -LastLogonReplicationInterval &quot;10&quot;

참고: 이 값은 도메인 모드가 &quot;Windows2000&quot; 값으로 설정된 경우 적용되지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedDNSSuffixes</maml:name>
			<maml:description>
				<maml:para>도메인에서 허용된 DNS(도메인 이름 서버) 접미사의 목록을 수정합니다. 이 매개 변수는 domainDNS 개체의 msDS-AllowedDNSSuffixes 특성 값을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 DNS 접미사 값을 추가, 제거 또는 대체하거나 지웁니다. 

값을 추가하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Add=value1,value2,...}

값을 제거하려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Remove=value3,value4,...}

값을 바꾸려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes @{Replace=value1,value2,...}

모든 값을 지우려면 다음 구문을 사용합니다.
  -AllowedDNSSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 DNS 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 도메인의 DNS 접미사를 추가 및 제거하는 방법을 보여 줍니다.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 도메인 개체를 업데이트하는 데 사용할 도메인 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADDomain cmdlet을 사용하여 검색된 도메인 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADDomain cmdlet을 사용하여 ADDomain 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADDomain cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $domainInstance.ManagedBy = &quot;saraDavisGroup&quot;
3단계: contosoDomain에 대한 변경 내용을 저장합니다.
    Set-ADDomain -Instance $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastLogonReplicationInterval</maml:name>
			<maml:description>
				<maml:para>계정의 마지막 로그온 시간이 도메인의 모든 도메인 컨트롤러에 복제되어야 하는 제한 시간(일 수)을 지정합니다. 이 매개 변수는 도메인의 LastLogonReplicationInterval 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 msDS-LogonTimeSyncInterval입니다. 마지막 로그온 복제 간격은 하루 이상이어야 합니다. 마지막 로그온 복제 간격을 낮은 값으로 설정하면 도메인 전체에서의 복제 작업이 상당히 증가될 수 있습니다.

다음 예에서는 이 매개 변수를 10일로 설정하는 방법을 보여 줍니다.
  -LastLogonReplicationInterval &quot;10&quot;

참고: 이 값은 도메인 모드가 &quot;Windows2000&quot; 값으로 설정된 경우 적용되지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 개체는 Identity 매개 변수가 받습니다.

Get-ADDomain cmdlet을 사용하여 검색된 다음 수정된 도메인 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 도메인 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Replace=&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>AllowedDNSSuffixes의 값을 &quot;FABRIKAM&quot; 도메인의 {&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
 				<maml:para>&quot;corp.fabrikam.com&quot; 값을 &quot;FABRIKAM&quot; 도메인의 AllowedDNSSuffixes에 추가합니다.</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -ManagedBy 'CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;FABRIKAM&quot; 도메인의 ManagedBy 속성을 'CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM'으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain | Set-ADDomain -LastLogonReplicationInterval &quot;10&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자 도메인의 LastLogonReplicationInterval을 &quot;10&quot;으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144995</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForest
		</command:name>
		<maml:description>
			<maml:para>Active Directory 포리스트를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADForest cmdlet은 Active Directory 포리스트의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.

Identity 매개 변수는 수정할 Active Directory 포리스트를 지정합니다. FQDN(정규화된 도메인 이름), GUID, DNS 호스트 이름 또는 NetBIOS 이름으로 포리스트를 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADForestObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADForest cmdlet을 사용하여 포리스트 개체를 검색한 다음 파이프라인을 통해 Set-ADForest cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 포리스트 개체를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 포리스트 개체의 복사본으로 설정하는 경우 Set-ADForest cmdlet은 원본 포리스트 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADForest 개체를 사용합니다. Instance 매개 변수를 사용하는 경우에는 Identity 매개 변수가 허용되지 않습니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. 

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 포리스트 개체의 UPNSuffixes 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 UPNSuffixes 매개 변수 지정
 -파이프라인을 통해 포리스트 개체를 전달하고 UPNSuffixes 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 UPNSuffixes 매개 변수를 사용하여 fabrikam.com 포리스트의 UPNSuffixes 속성을 수정합니다. 

 Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

방법 2: 파이프라인을 통해 fabrikam.com 포리스트를 전달하고 UPNSuffixes 매개 변수를 지정하여 fabrikam.com 포리스트의 UPNSuffixes 속성을 수정합니다.

 Get-ADForest -Identity fabrikam.com | Set-ADForest -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

방법 3: Windows PowerShell 명령줄을 통해 fabrikam.com 포리스트의 로컬 인스턴스를 수정하여 fabrikam.com 포리스트의 UPNSuffixes 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $forest = Get-ADForest -Identity fabrikam.com
 $forest.UPNSuffixes = &quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;
 Set-ADForest -Instance $forest. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SPNSuffixes</maml:name>
				<maml:description>
					<maml:para>포리스트의 SPN(서비스 사용자 이름) 접미사 목록을 수정합니다. 이 매개 변수는 상호 참조 컨테이너의 다중값 msDS-SPNSuffixes 속성을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 SPN 접미사 값을 추가, 제거 또는 대체하거나 지웁니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -SPNSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 SPN 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 포리스트의 SPNSuffixes를 추가 및 제거하는 방법을 보여 줍니다.
  -@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UPNSuffixes</maml:name>
				<maml:description>
					<maml:para>포리스트의 UPN(사용자 계정 이름) 접미사 목록을 수정합니다. 이 매개 변수는 상호 참조 컨테이너의 다중값 msDS-UPNSuffixes 속성을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 UPN 접미사 값을 추가, 제거 또는 대체하거나 지웁니다. 

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -UPNSuffixes  @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -UPNSuffixes @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -UPNSuffixes @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -UPNSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 UPN 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 포리스트의 UPN 접미사를 추가 및 제거하는 방법을 보여 줍니다.
  -UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SPNSuffixes</maml:name>
			<maml:description>
				<maml:para>포리스트의 SPN(서비스 사용자 이름) 접미사 목록을 수정합니다. 이 매개 변수는 상호 참조 컨테이너의 다중값 msDS-SPNSuffixes 속성을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 SPN 접미사 값을 추가, 제거 또는 대체하거나 지웁니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -SPNSuffixes @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -SPNSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 SPN 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 포리스트의 SPNSuffixes를 추가 및 제거하는 방법을 보여 줍니다.
  -@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UPNSuffixes</maml:name>
			<maml:description>
				<maml:para>포리스트의 UPN(사용자 계정 이름) 접미사 목록을 수정합니다. 이 매개 변수는 상호 참조 컨테이너의 다중값 msDS-UPNSuffixes 속성을 설정합니다. 이 매개 변수는 다음 구문을 사용하여 UPN 접미사 값을 추가, 제거 또는 대체하거나 지웁니다. 

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -UPNSuffixes  @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -UPNSuffixes @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -UPNSuffixes @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -UPNSuffixes $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 UPN 접미사 값을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 포리스트의 UPN 접미사를 추가 및 제거하는 방법을 보여 줍니다.
  -UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					포리스트 개체는 Identity 매개 변수가 받습니다.

Get-ADForest cmdlet을 사용하여 검색된 다음 수정된 포리스트 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 포리스트 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>fabrikam.com 포리스트의 UPNSuffixes 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -SPNSuffixes @{add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>corp.fabrikam.com을 fabrikam.com 포리스트의 SPNSuffixes 속성에 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -SPNSuffixes @{Add=&quot;corp.fabrikam.com&quot;;Remove=&quot;fabrikam&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자의 포리스트를 가져오고 SPNSuffixes 속성을 업데이트합니다.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -UPNSuffixes $null </dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자의 포리스트를 가져오고 UPNSuffixes 속성을 지웁니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144996</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Active Directory 조직 구성 단위를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADOrganizationalUnit cmdlet은 Active Directory 조직 구성 단위의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.  

Identity 매개 변수는 수정할 Active Directory 조직 구성 단위를 지정합니다. DN(고유 이름) 또는 GUID로 조직 구성 단위를 식별할 수 있습니다.
 Identity 매개 변수를 $&lt;localADOrganizationalUnitObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADOrganizationalUnit cmdlet을 사용하여 조직 구성 단위 개체를 검색한 다음 파이프라인을 통해 Set-ADOrganizationalUnit cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 조직 구성 단위 개체를 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 조직 구성 단위 개체의 복사본으로 설정하는 경우 Set-ADOrganizationalUnit cmdlet은 원본 조직 구성 단위 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADOrganizationalUnit 개체를 사용합니다. Instance 매개 변수를 지정하는 경우에는 Identity 매개 변수를 전달하지 않아야 합니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. 

Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 조직 구성 단위 개체의 ManagedBy 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 ManagedBy 매개 변수 지정
 -파이프라인을 통해 조직 구성 단위 개체를 전달하고 ManagedBy 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 ManagedBy 매개 변수를 사용하여 &quot;AccountingDepartment&quot; 조직 구성 단위의 ManagedBy 속성을 수정합니다. 

 Set-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot; -ManagedBy &quot;SaraDavisGroup&quot;

방법 2: 파이프라인을 통해 &quot;AccountingDepartment&quot; 조직 구성 단위를 전달하고 ManagedBy 매개 변수를 지정하여 &quot;AccountingDepartment&quot; 조직 구성 단위의 ManagedBy 속성을 수정합니다.

 Get-ADOrganizationalUnit -Identity &quot;&quot;AccountingDepartment&quot;&quot; | Set-ADOrganizationalUnit -ManagedBy &quot;SaraDavisGroup&quot;

방법 3: Windows PowerShell 명령줄을 통해 &quot;AccountingDepartment&quot; 조직 구성 단위의 로컬 인스턴스를 수정하여 &quot;AccountingDepartment&quot; 조직 구성 단위의 ManagedBy 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

 $organizational unit = Get-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot;
 $organizational unit.ManagedBy = &quot;SaraDavisGroup&quot; 
 Set-ADOrganizationalUnit -Instance $organizational unit. 

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>조직 구성 단위의 주소를 지정합니다. 이 매개 변수는 조직 구성 단위 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;street&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 조직 구성 단위 개체를 업데이트하는 데 사용할 조직 구성 단위 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADOrganizationalUnit cmdlet을 사용하여 검색된 조직 구성 단위 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADOrganizationalUnit cmdlet을 사용하여 ADOrganizationalUnit 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADOrganizationalUnit cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $organizationalUnitInstance.ManagedBy = &quot;CN=SaraDavisGroup,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
3단계: Accounting에 대한 변경 내용을 저장합니다.
    Set-ADOrganizationalUnit -Instance $organizationalUnitInstance </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>사용자의 구/군/시를 지정합니다. 이 매개 변수는 사용자의 City 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;l&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>사용자가 선택한 언어의 국가 또는 지역 코드를 지정합니다. 이 매개 변수는 사용자 개체의 Country 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;c&quot;입니다. 이 값은 Windows 2000에서는 사용하지 않습니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=saradavis,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

다음 예에서는 이 매개 변수를 &quot;ADObjectInstance&quot;라는 이름의 ADObject 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 조직 구성 단위 개체를 업데이트하는 데 사용할 조직 구성 단위 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다.

Instance 매개 변수는 Get-ADOrganizationalUnit cmdlet을 사용하여 검색된 조직 구성 단위 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADOrganizationalUnit cmdlet을 사용하여 ADOrganizationalUnit 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADOrganizationalUnit cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $organizationalUnitInstance.ManagedBy = &quot;CN=SaraDavisGroup,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
3단계: Accounting에 대한 변경 내용을 저장합니다.
    Set-ADOrganizationalUnit -Instance $organizationalUnitInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 개체를 관리하는 사용자 또는 그룹을 지정합니다. 참고: 괄호 안의 식별자는 해당 속성의 LDAP 표시 이름입니다.
  고유 이름 
    예:  CN=SaraDavis,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

이 매개 변수는 &quot;managedBy&quot;라는 LDAP 표시 이름으로 Active Directory 특성을 설정합니다. 

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>사용자의 우편 번호를 지정합니다. 이 매개 변수는 사용자의 PostalCode 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;postalCode&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>삭제하지 못하도록 개체를 보호할지 여부를 지정합니다. 이 속성을 true로 설정하는 경우 이 속성의 값을 변경하지 않고는 해당 개체를 삭제할 수 없습니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>사용자 또는 조직 구성 단위의 시/도를 지정합니다. 이 매개 변수는 사용자 또는 조직 구성 단위 개체의 State 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;st&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -State  &quot;Nevada&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>조직 구성 단위의 주소를 지정합니다. 이 매개 변수는 조직 구성 단위 개체의 StreetAddress 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;street&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					조직 구성 단위 개체는 Identity 매개 변수가 받습니다.

Get-ADOrganizationalUnit cmdlet을 사용하여 검색된 다음 수정된 조직 구성 단위 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 조직 구성 단위 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Description &quot;This Organizational Unit holds all of the users accounts of FABRIKAM.COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>distinguishedName이 OU=UserAccounts,DC=FABRIKAM,DC=COM인 OrganizationalUnit에 대한 설명을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>distinguishedName이 OU=UserAccounts,DC=FABRIKAM,DC=COM인 OrganizationalUnit의 ProtectedFromAccidentalDeletion 속성을 $false로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Country &quot;AU&quot; -StreetAddress &quot;45 Martens Place&quot; -City Balmoral -State QLD -PostalCode 4171 -Replace @{co=&quot;Australia&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' OrganizationalUnit의 Country, City 및 State, PostalCode 및 co 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$EuropeSalesOU = Get-ADOrganizationalUnit &quot;OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
$EuropeSalesOU.Country = &quot;UK&quot;
$EuropeSalesOU.StreetAddress = &quot;22 Station Rd&quot;
$EuropeSalesOU.City = &quot;QUARRINGTON&quot;
$EuropeSalesOU.PostalCode = &quot;NG34 0NI&quot;
$EuropeSalesOU.co =&quot;United Kingdom&quot;
Set-ADOrganizationalUnit -Instance $EuropeSalesOU</dev:code>
  			<dev:remarks>
  			        <maml:para>'OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' OrganizationalUnit을 템플릿으로 사용하여 새 OrganizationalUnit을 만듭니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot; -Country &quot;UK&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에서 'OU=Managed,DC=AppNC' OrganizationalUnit의 Country 속성을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144997</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountControl
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정의 UAC(사용자 계정 컨트롤) 값을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountControl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountControl cmdlet은 Active Directory 사용자 또는 컴퓨터 계정의 UAC(사용자 계정 컨트롤)를 수정합니다. UAC 값은 cmdlet 매개 변수로 표시됩니다. 예를 들어 PasswordExpired 매개 변수를 설정하여 계정이 만료되는지 여부를 변경하고 ADS_UF_PASSWORD_EXPIRED UAC 값을 수정합니다. 

Identity 매개 변수는 수정할 Active Directory 계정을 지정합니다. 
DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Search-ADAccount cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Set-ADAccountControl cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADUser, Get-ADComputer 또는 Get-ADServiceAccount cmdlet을 사용하여 파이프라인을 통해 이 cmdlet으로 전달할 수 있는 계정 개체를 검색할 수 있습니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountControl</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>계정이 암호를 변경할 수 있는지 여부를 수정합니다. 계정이 암호를 변경할 수 없게 하려면 이 매개 변수를 $true로 설정합니다. 이 매개 변수는 계정에 대한 CannotChangePassword 속성의 부울 값을 변경합니다.

다음 예에서는 PasswordCannotChange 매개 변수를 지정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DoesNotRequirePreAuth</maml:name>
				<maml:description>
					<maml:para>사용자 또는 컴퓨터 계정을 사용하여 로그온하는 데 Kerberos 미리 인증이 필요한지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_DONT_REQUIRE_PREAUTH 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 Kerberos 미리 인증이 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DoesNotRequirePreAuth $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomedirRequired</maml:name>
				<maml:description>
					<maml:para>계정에 홈 디렉터리가 필요한지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_HOMEDIR_REQUIRED 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정에 홈 디렉터리가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomedirRequired $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MNSLogonAccount</maml:name>
				<maml:description>
					<maml:para>계정이 MNS(과반수 노드 집합) 로그온 계정인지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_MNS_LOGON_ACCOUNT 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

MNS 로그온 계정을 사용하면 공유 디스크 드라이브를 사용하지 않고 다중 노드 클러스터를 구성할 수 있습니다.

다음 예에서는 이 계정을 MNS 계정으로 식별하기 위해 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MSNLogonAccount $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedToAuthForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 위임할 수 있는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 해당 계정으로 실행되는 서비스가 네트워크의 다른 원격 서버에서 클라이언트를 가장할 수 있습니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 위임할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -TrustedToAuthForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDESKeyOnly</maml:name>
				<maml:description>
					<maml:para>계정이 키에 대해 DES(데이터 암호화 표준) 암호화 유형만 사용하도록 제한되는지 여부를 지정합니다. 이 매개 변수는 
Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_USE_DES_KEY_ONLY 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 
 
다음 예에서는 계정이 키에 대해 DES 암호화 유형을 사용해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -UseDESKeyOnly $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>계정에 대해 해독 가능한 암호 암호화가 허용되는지 여부를 지정합니다. 이 매개 변수는 계정의 AllowReversiblePasswordEncryption 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>계정이 암호를 변경할 수 있는지 여부를 수정합니다. 계정이 암호를 변경할 수 없게 하려면 이 매개 변수를 $true로 설정합니다. 이 매개 변수는 계정에 대한 CannotChangePassword 속성의 부울 값을 변경합니다.

다음 예에서는 PasswordCannotChange 매개 변수를 지정하는 방법을 보여 줍니다.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DoesNotRequirePreAuth</maml:name>
			<maml:description>
				<maml:para>사용자 또는 컴퓨터 계정을 사용하여 로그온하는 데 Kerberos 미리 인증이 필요한지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_DONT_REQUIRE_PREAUTH 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정에 로그온하는 데 Kerberos 미리 인증이 필요하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DoesNotRequirePreAuth $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomedirRequired</maml:name>
			<maml:description>
				<maml:para>계정에 홈 디렉터리가 필요한지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_HOMEDIR_REQUIRED 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정에 홈 디렉터리가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -HomedirRequired $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MNSLogonAccount</maml:name>
			<maml:description>
				<maml:para>계정이 MNS(과반수 노드 집합) 로그온 계정인지 여부를 지정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_MNS_LOGON_ACCOUNT 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

MNS 로그온 계정을 사용하면 공유 디스크 드라이브를 사용하지 않고 다중 노드 클러스터를 구성할 수 있습니다.

다음 예에서는 이 계정을 MNS 계정으로 식별하기 위해 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MSNLogonAccount $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>계정 암호가 만료될 수 있는지 여부를 지정합니다. 이 매개 변수는 계정 개체의 PasswordNeverExpires 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_DONT_EXPIRE_PASSWD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

참고: ChangePasswordAtLogon 속성이 true로 설정되어 있는 계정에 대해서는 이 매개 변수를 $true 또는 1로 설정할 수 없습니다.

다음 예에서는 암호가 만료될 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>계정에 암호가 필요한지 여부를 지정합니다. 이 매개 변수는 사용자 또는 컴퓨터 계정과 같은 계정의 PasswordNotRequired 속성을 설정합니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_PASSWD_NOTREQD 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 
  $true 또는 1 

다음 예에서는 계정에 암호가 필요하지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedToAuthForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 위임할 수 있는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 해당 계정으로 실행되는 서비스가 네트워크의 다른 원격 서버에서 클라이언트를 가장할 수 있습니다. 이 매개 변수는 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 위임할 수 있도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -TrustedToAuthForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDESKeyOnly</maml:name>
			<maml:description>
				<maml:para>계정이 키에 대해 DES(데이터 암호화 표준) 암호화 유형만 사용하도록 제한되는지 여부를 지정합니다. 이 매개 변수는 
Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_USE_DES_KEY_ONLY 플래그를 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 
 
다음 예에서는 계정이 키에 대해 DES 암호화 유형을 사용해야 하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -UseDESKeyOnly $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.
 
다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 글로벌 카탈로그 포트에 연결된 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl JimmyBi -PasswordNotRequired $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>로그온에 암호가 필요하도록 userAccountControl에 플래그를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Jimmy Bischoff,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -CannotChangePassword $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>사용자가 자신의 암호를 변경할 수 없도록 사용자의 보안 설명자를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl SQLAdmin1 -AccountNotDelegated $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>계정을 위임할 수 없도록 userAccountControl에 플래그를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=IIS01 SvcAccount,OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM' -TrustedToAuthForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>위임을 위해 인증할 수 있게 계정을 신뢰하도록 userAccountControl에 플래그를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl -Identity &quot;FABRIKAM-SRV1&quot; -TrustedForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 컴퓨터가 이제 위임할 수 있게 신뢰되도록 설정되었습니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl DickBe -PasswordNeverExpires $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>만료되지 않도록 사용자의 암호를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Dick Beekman,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -HomedirRequired $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>홈 디렉터리가 필요하도록 사용자 계정을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144998</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountPassword
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정의 암호를 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountPassword cmdlet은 사용자, 컴퓨터 또는 서비스 계정의 암호를 설정합니다.

Identity 매개 변수는 수정할 Active Directory 계정을 지정합니다. 
DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Search-ADAccount cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Set-ADAccountPassword cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADUser, Get-ADComputer 또는 Get-ADServiceAccount cmdlet을 사용하여 파이프라인을 통해 이 cmdlet으로 전달할 수 있는 계정 개체를 검색할 수 있습니다.

Reset 매개 변수를 지정하지 않은 경우 암호를 설정하려면 OldPassword 및 NewPassword 매개 변수를 설정해야 합니다. Reset 매개 변수를 지정하는 경우 암호는 제공하는 NewPassword 값으로 설정되며 OldPassword 매개 변수는 필요하지 않습니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewPassword</maml:name>
				<maml:description>
					<maml:para>새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OldPassword</maml:name>
				<maml:description>
					<maml:para>가장 최근의 암호 값을 지정합니다. 이 값은 암호화된 문자열로 처리됩니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
 -OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Reset</maml:name>
				<maml:description>
					<maml:para>계정의 암호를 다시 설정하도록 지정합니다. 이 매개 변수를 사용하는 경우 NewPassword 매개 변수를 설정해야 합니다. OldPassword 매개 변수는 지정할 필요가 없습니다.

다음 예에서는 이 매개 변수를 사용하여 새 암호를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 사용자 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=SaraDavis,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;userInstance&quot;라는 이름의 사용자 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewPassword</maml:name>
			<maml:description>
				<maml:para>새 암호 값을 지정합니다. 이 값은 암호화된 문자열로 저장됩니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OldPassword</maml:name>
			<maml:description>
				<maml:para>가장 최근의 암호 값을 지정합니다. 이 값은 암호화된 문자열로 처리됩니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
 -OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Reset</maml:name>
			<maml:description>
				<maml:para>계정의 암호를 다시 설정하도록 지정합니다. 이 매개 변수를 사용하는 경우 NewPassword 매개 변수를 설정해야 합니다. OldPassword 매개 변수는 지정할 필요가 없습니다.

다음 예에서는 이 매개 변수를 사용하여 새 암호를 설정하는 방법을 보여 줍니다. 이 명령을 실행하면 암호를 입력하라는 메시지가 표시됩니다.
  -Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다. 이 cmdlet은 글로벌 카탈로그 포트에 연결된 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword 'CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com' -Reset -NewPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName이 'CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com'인 사용자 계정의 암호를 'p@ssw0rd'로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity tmakovec -OldPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force) -NewPassword (ConvertTo-SecureString -AsPlainText &quot;qwert@12345&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>SamAccountName이 tmakovec인 사용자 계정의 암호를 'qwert@12345'로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity saradavi</dev:code>
  			<dev:remarks>
 				<maml:para>'CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com'의 현재 암호를 입력하십시오.
암호:**********
'CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com'의 원하는 암호를 입력하십시오.
암호:***********
암호 확인:***********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>DistinguishedName이 'CN=Sara Davis,CN=Users,DC=Fabrikam,DC=com'인 사용자 계정의 암호를 설정합니다. 이전 암호와 새 암호를 입력하라는 메시지가 표시됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$newPassword = (Read-Host -Prompt &quot;Provide New Password&quot; -AsSecureString); Set-ADAccountPassword -Identity mollyd -NewPassword $newPassword -Reset</dev:code>
  			<dev:remarks>
 				<maml:para>새 암호 입력: **********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>$newPassword라는 임시 변수에 저장된 새 암호를 입력하라는 메시지를 표시한 다음 해당 암호를 사용하여 SamAccountName이 mollyd인 사용자 계정의 암호를 다시 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS C:\Users\administrator.FABRIKAM&gt; set-adaccountpassword &quot;CN=Molly Dempsey,OU=AccountDeptOU,DC=AppNC&quot; -server &quot;dsp13a24:60000&quot;
</dev:code>
  			<dev:remarks>
 				<maml:para>'CN=mollyd,OU=AccountDeptOU,DC=AppNC'의 현재 암호를 입력하십시오.
암호:**********
'CN=mollyd,OU=AccountDeptOU,DC=AppNC'의 원하는 암호를 입력하십시오.
암호:**********
암호 확인:**********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>AD LDS 인스턴스 &quot;dsp13a24:60000&quot;에서 DistinguishedName이 'CN=mollyd,OU=AccountDeptOU,DC=AppNC'인 사용자 계정의 암호를 설정합니다. 이전 암호와 새 암호를 입력하라는 메시지가 표시됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144999</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정의 만료 날짜를 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADAccountExpiration cmdlet은 사용자, 컴퓨터 또는 서비스 계정의 만료 시간을 설정합니다. 정확한 시간을 지정하려면 DateTime 매개 변수를 사용합니다. 현재 시간으로부터의 기간을 지정하려면 TimeSpan 매개 변수를 사용합니다. 

Identity 매개 변수는 수정할 Active Directory 계정을 지정합니다. 
DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 계정 개체를 전달할 수도 있습니다. 예를 들어 Search-ADAccount cmdlet을 사용하여 계정 개체를 검색한 다음 파이프라인을 통해 Set-ADAccountExpiration cmdlet으로 개체를 전달할 수 있습니다. 마찬가지로 Get-ADUser, Get-ADComputer 또는 Get-ADServiceAccount cmdlet을 사용하여 파이프라인을 통해 이 cmdlet으로 전달할 수 있는 계정 개체를 검색할 수 있습니다.

AD LDS 환경의 경우 다음 두 가지 조건에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.
  -cmdlet이 Active Directory 공급자 드라이브에서 실행되는 경우
  -AD LDS 환경에 대해 기본 명명 컨텍스트 또는 파티션이 정의되어 있는 경우. AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>현재 시간부터 시작되는 시간 간격을 지정합니다. 계정은 해당 시간 간격이 끝나면 만료됩니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 
-10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
 시간을 2일로 설정합니다.
      -TimeSpan &quot;2&quot;
시간을 4시간으로 설정합니다.
      -TimeSpan &quot;4:00&quot;
 시간을 5분으로 설정합니다.
      -TimeSpan &quot;0:5&quot;
 시간을 45초로 설정합니다.
      -TimeSpan &quot;0:0:45&quot;

예를 들어 계정이 10일 후에 만료되도록 설정하려면 TimeSpan 매개 변수를 다음과 같이 지정합니다.

   -TimeSpan &quot;10&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>DateTime 값을 사용하여 계정의 만료 시간을 지정합니다. 다음 예에서는 DateTime 값을 지정하는 데 자주 사용되는 구문을 보여 줍니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다.
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 DateTime 매개 변수를 2012년 6월 18일 오전 2시로 설정하는 방법을 보여 줍니다.
  -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>DateTime 값을 사용하여 계정의 만료 시간을 지정합니다. 다음 예에서는 DateTime 값을 지정하는 데 자주 사용되는 구문을 보여 줍니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다.
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 DateTime 매개 변수를 2012년 6월 18일 오전 2시로 설정하는 방법을 보여 줍니다.
  -DateTime &quot;6/18/2012 2:00:00 AM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>현재 시간부터 시작되는 시간 간격을 지정합니다. 계정은 해당 시간 간격이 끝나면 만료됩니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 
-10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
 시간을 2일로 설정합니다.
      -TimeSpan &quot;2&quot;
시간을 4시간으로 설정합니다.
      -TimeSpan &quot;4:00&quot;
 시간을 5분으로 설정합니다.
      -TimeSpan &quot;0:5&quot;
 시간을 45초로 설정합니다.
      -TimeSpan &quot;0:0:45&quot;

예를 들어 계정이 10일 후에 만료되도록 설정하려면 TimeSpan 매개 변수를 다음과 같이 지정합니다.

   -TimeSpan &quot;10&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountExpiration KarenBe -DateTime &quot;10/18/2008&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>2008년 10월 18일에 만료되도록 SamAccountName이 KarenBe인 계정을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroupMember BO1Accounts | where {$_.objectClass -eq &quot;user&quot;} | Set-ADAccountExpiration -timespan 60.0:0
</dev:code>
  			<dev:remarks>
  			        <maml:para>BO1Accounts 그룹의 멤버인 모든 사용자 계정의 만료 날짜를 지금부터 60일로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145000</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 서비스 계정을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADServiceAccount cmdlet은 Active Directory 서비스 계정의 속성을 수정합니다. cmdlet 매개 변수를 사용하여 자주 사용되는 속성 값을 수정할 수 있습니다. cmdlet 매개 변수와 연결되지 않은 속성 값은 Add, Replace, Clear 및 Remove 매개 변수를 사용하여 수정할 수 있습니다.  

Identity 매개 변수는 수정할 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localServiceAccountObject&gt;와 같은 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Get-ADServiceAccount cmdlet을 사용하여 서비스 계정 개체를 검색한 다음 파이프라인을 통해 Set-ADServiceAccount cmdlet으로 개체를 전달할 수 있습니다.

Instance 매개 변수를 사용하면 개체 복사본의 변경 사항을 적용하여 서비스 계정을 업데이트할 수 있습니다. Instance 매개 변수를 수정된 Active Directory 서비스 개체의 복사본으로 설정하는 경우 Set-ADServiceAccount cmdlet은 원본 서비스 계정 개체를 동일하게 변경합니다. 수정할 개체의 복사본을 가져오려면 Get-ADServiceAccount 개체를 사용합니다. Instance 매개 변수를 지정하는 경우에는 Identity 매개 변수를 전달하지 않아야 합니다. Instance 매개 변수에 대한 자세한 내용은 Instance 매개 변수 설명을 참조하십시오. 

Instance 개념이 Active Directory cmdlet에서 사용되는 방식에 대한 자세한 내용은 about_ActiveDirectory_Instance를 참조하십시오.

다음 예에서는 다음과 같은 세 가지 방법을 사용하여 서비스 계정 개체의 ServicePrincipalNames 속성을 수정하는 방법을 보여 줍니다.
 -Identity 및 ServicePrincipalNames 매개 변수 지정
 -파이프라인을 통해 서비스 계정 개체를 전달하고 ServicePrincipalNames 매개 변수 지정
 -Instance 매개 변수 지정

방법 1: Identity 및 ServicePrincipalNames 매개 변수를 사용하여 AccessIndia 서비스 계정의 ServicePrincipalNames 속성을 수정합니다. 

Set-ADServiceAccount -Identity AccessIndia -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com}

방법 2: 파이프라인을 통해 AccessIndia 서비스 계정을 전달하고 ServicePrincipalNames 매개 변수를 지정하여 AccessIndia 서비스 계정의 ServicePrincipalNames 속성을 수정합니다.

 Get-ADServiceAccount -Identity &quot;AccessIndia&quot; | Set-ADServiceAccount -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com} 


방법 3: Windows PowerShell 명령줄을 통해 AccessIndia 서비스 계정의 로컬 인스턴스를 수정하여 AccessIndia 서비스 계정의 &lt;property&gt; 속성을 수정합니다. 그런 다음 Instance 매개 변수를 로컬 인스턴스로 설정합니다.

$serviceAccount = Get-ADServiceAccount -Identity &quot;AccessIndia&quot;
 $serviceAccount.ServicePrincipalNames = @{Add=ACCESSAPP/india.contoso.com} 
 Set-ADServiceAccount -Instance $serviceAccount. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>실제 Active Directory 서비스 계정 개체를 업데이트하는 데 사용할 서비스 계정 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다. 

Instance 매개 변수는 Get-ADServiceAccount cmdlet을 사용하여 검색된 서비스 계정 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADServiceAccount cmdlet을 사용하여 ADServiceAccount 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADServiceAccount cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $serviceAccountInstance.Description = &quot;default&quot;
3단계: ADServiceAdmin에 대한 변경 내용을 저장합니다.
    Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>계정의 만료 날짜를 지정합니다. 이 매개 변수를 0으로 설정하면 계정이 만료되지 않습니다. 이 매개 변수는 계정 개체의 AccountExpirationDate 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 accountExpires입니다.

이 매개 변수를 지정할 때는 DateTime 구문을 사용합니다. 다르게 지정하지 않는 한 로컬 시간으로 간주됩니다. 시간 값을 지정하지 않은 경우 로컬 시간 오전 12시로 간주됩니다. 날짜를 지정하지 않은 경우 현재 날짜로 간주됩니다. 다음 예에서는 DateTime 개체를 지정하는 데 자주 사용되는 구문을 보여 줍니다.
  &quot;4/17/2006&quot;
  &quot;Monday, April 17, 2006&quot;
  &quot;2:22:45 PM&quot;
  &quot;Monday, April 17, 2006 2:22:45 PM&quot;

다음 예에서는 초가 포함되지 않은 동일한 날짜 및 시간을 지정합니다.
  &quot;4/17/2006 2:22 PM&quot;
  &quot;Monday, April 17, 2006 2:22 PM&quot;
  &quot;2:22 PM&quot;

다음 예에서는 RFC1123 표준을 사용하여 날짜 및 시간을 지정하는 방법을 보여 줍니다. 다음 예에서는 GMT(그리니치 표준시)를 사용하여 시간을 정의합니다.
  &quot;Mon, 17 Apr 2006 21:22:48 GMT&quot;

다음 예에서는 왕복 값을 UTC(협정 세계시)로 지정하는 방법을 보여 줍니다. 다음 예에서는 2006년 4월 17일, 월요일, 오후 2:22:48(UTC)을 표시합니다. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

다음 예에서는 이 매개 변수를 2012년 5월 1일 오후 5시로 설정하는 방법을 보여 줍니다. 
  -AccountExpirationDate &quot;05/01/2012 5:00:00 PM&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>사용자의 보안 컨텍스트가 서비스로 위임되는지 여부를 지정합니다. 이 매개 변수를 true로 설정하면 서비스 계정이 Kerberos 위임에 대해 신뢰할 수 있도록 설정된 경우에도 계정의 보안 컨텍스트가 서비스로 위임되지 않습니다. 이 매개 변수는 Active Directory 계정의 AccountNotDelegated 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_NOT_DELEGATED 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값: 
  $false 또는 0
  $true 또는 1

다음 예에서는 계정의 보안 컨텍스트가 서비스로 위임되지 않도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>개체 속성에 추가할 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성에 하나 이상의 값을 추가할 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 값 목록을 지정하여 속성에 값을 여러 개 지정하고 이를 세미콜론으로 구분하여 속성을 여러 개 지정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
   -Add @{Attribute1LDAPDisplayName=value1, value2, ...;   Attribute2LDAPDisplayName=value1, value2, ...; AttributeNLDAPDisplayName=value1, value2, ...}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 제거하고 값 &quot;555-222-1111&quot; 및 &quot;555-222-3333&quot;을 추가하며, Phone-Mobile-Other(LDAP 표시 이름 'otherMobile')에 값 &quot;555-222-9999&quot;를 추가하려면 Add 및 Remove 매개 변수를 다음과 같이 설정합니다.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>계정의 DER로 인코딩된 X.509v3 인증서를 수정합니다. 이러한 인증서에는 Microsoft 인증서 서비스에서 이 계정에 발급한 공개 키 인증서가 포함됩니다. 이 매개 변수는 계정 개체의 Certificates 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;userCertificate&quot;입니다.

구문:
값을 추가하려면 다음 구문을 사용합니다.
  -Certificates @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -Certificates @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -Certificates @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -Certificates $null

세미콜론으로 구분된 목록을 사용하여 작업을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 Certificate 값을 추가 및 제거합니다. 
  -Certificates @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 New-Object cmdlet을 사용하여 인증서를 만든 다음 이를 사용자 계정에 추가하는 방법을 보여 줍니다. 이 cmdlet을 실행하면 &lt;certificate password&gt;가 인증서를 추가하는 데 사용된 암호로 교체됩니다.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer  &lt;certificate password&gt;
Set-ADUser saradavis  -Certificates @{Add=$cert}

다음 예에서는 바이트 배열로 지정된 인증서를 추가하는 방법을 보여 줍니다.
    Set-ADUser saradavis  -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 지워질 개체 속성의 배열을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 지울 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')의 값을 지우려면 Clear 매개 변수를 다음과 같이 설정합니다.

  -Clear otherTelephone

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>개체에 대한 설명을 지정합니다. 이 매개 변수는 개체의 Description 속성 값을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;description&quot;입니다. 

다음 예에서는 이 매개 변수를 샘플 설명으로 설정하는 방법을 보여 줍니다.
  -Description &quot;Description of the object&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>개체의 표시 이름을 지정합니다. 이 매개 변수는 개체의 DisplayName 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;displayName&quot;입니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -DisplayName &quot;Sara Davis Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>계정 활성화 여부를 지정합니다. 활성화된 계정에는 암호가 필요합니다. 이 매개 변수는 계정 개체의 Enabled 속성을 설정합니다. 이 매개 변수는 Active Directory UAC(사용자 계정 컨트롤) 특성의 ADS_UF_ACCOUNTDISABLE 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1 

다음 예에서는 계정을 활성화하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>개체 홈페이지의 URL을 지정합니다. 이 매개 변수는 Active Directory 개체의 homePage 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;wWWHomePage&quot;입니다.

다음 예에서는 이 매개 변수를 URL로 설정하는 방법을 보여 줍니다.
  -HomePage &quot;http://employees.contoso.com/sdavis&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>실제 Active Directory 서비스 계정 개체를 업데이트하는 데 사용할 서비스 계정 개체의 수정된 복사본을 지정합니다. 이 매개 변수를 사용하면 개체의 수정된 복사본에 대한 모든 수정 내용이 해당 Active Directory 개체에도 적용됩니다. cmdlet은 변경된 개체 속성만 업데이트합니다. 

Instance 매개 변수는 Get-ADServiceAccount cmdlet을 사용하여 검색된 서비스 계정 개체만 업데이트할 수 있습니다. Instance 매개 변수를 지정하면 해당 개체의 속성을 설정하는 다른 매개 변수를 지정할 수 없습니다.

다음은 Get-ADServiceAccount cmdlet을 사용하여 ADServiceAccount 개체의 인스턴스를 검색하는 방법을 보여 주는 예입니다. 이 개체는 Windows PowerShell 명령줄을 사용하여 수정됩니다. 수정 후에는 Set-ADServiceAccount cmdlet이 Active Directory 개체에 대한 변경 내용을 저장합니다.

1단계: 개체의 로컬 인스턴스를 검색합니다.
    $serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
2단계: 개체 인스턴스의 속성 하나 이상을 수정합니다.
    $serviceAccountInstance.Description = &quot;default&quot;
3단계: ADServiceAdmin에 대한 변경 내용을 저장합니다.
    Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>cmdlet이 개체 속성 값을 제거하도록 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 제거할 수 있습니다. 개체 속성을 제거하려면 LDAP 표시 이름을 사용해야 합니다. 세미콜론으로 구분된 목록을 지정하여 속성을 두 개 이상 제거할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

예를 들어 LDAP 표시 이름이 FavColors인 속성에 파랑과 녹색 값을 추가하고 분홍 값을 제거하려면 다음과 같이 Add 및 Remove 매개 변수를 설정합니다.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 매개 변수는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>현재 값을 바꿀 개체 속성의 값을 지정합니다. 이 매개 변수를 사용하여 cmdlet 매개 변수를 통해 수정할 수 없는 속성의 값을 하나 이상 바꿀 수 있습니다. 개체 속성을 수정하려면 LDAP 표시 이름을 사용해야 합니다. 쉼표로 구분된 목록을 지정하여 속성을 두 개 이상 수정할 수 있습니다. 이 매개 변수의 형식은 다음과 같습니다. 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

예를 들어 Phone-Office-Other 특성(LDAP 표시 이름 'otherTelephone')에서 값 &quot;555-222-2222&quot;를 값 &quot;555-222-1111&quot;로 바꾸려면 Replace 매개 변수를 다음과 같이 설정합니다.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Add, Remove, Replace 및 Clear 매개 변수를 함께 사용하는 경우 작업은 다음 순서로 수행됩니다.
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>사용자, 그룹, 컴퓨터 또는 서비스 계정의 SAM(보안 계정 관리자) 계정 이름을 지정합니다. 설명의 최대 길이는 256자입니다. 이전 운영 체제와의 호환성을 위해 20자 이하의 SAM 계정 이름을 만드십시오. 이 매개 변수는 계정 개체의 SAMAccountName을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;sAMAccountName&quot;입니다.

다음 예에서는 이 매개 변수를 지정하는 방법을 보여 줍니다.
  -SAMAccountName &quot;saradavis&quot;

참고: 지정된 문자열 값이 '$' 문자로 종료되지 않으면 필요한 경우 이 문자가 자동으로 추가됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>계정의 서비스 사용자 이름을 지정합니다. 이 매개 변수는 계정의 ServicePrincipalNames 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 servicePrincipalName입니다. 이 매개 변수는 다음 구문을 사용하여 서비스 사용자 이름 값을 추가, 제거, 교체하거나 지웁니다. 
구문:
값을 추가하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Add=value1,value2,...}
값을 제거하려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Remove=value3,value4,...}
값을 바꾸려면 다음 구문을 사용합니다.
  -ServicePrincipalNames @{Replace=value1,value2,...}
모든 값을 지우려면 다음 구문을 사용합니다.
  -ServicePrincipalNames $null

세미콜론으로 구분된 목록을 사용하여 변경 내용을 여러 개 지정할 수 있습니다. 예를 들어 다음 구문을 사용하여 서비스 사용자 이름을 추가 및 제거합니다. 
  @{Add=value1,value2,...};@{Remove=value3,value4,...}

연산자는 다음 순서로 적용됩니다.
..Remove
..Add
..Replace

다음 예에서는 서비스 사용자 이름을 추가 및 제거하는 방법을 보여 줍니다.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>계정을 Kerberos 위임에 대해 신뢰할 수 있는지 여부를 지정합니다. Kerberos 위임에 대해 신뢰할 수 있는 계정으로 실행되는 서비스는 해당 서비스를 요청하는 클라이언트의 ID를 사용할 수 있습니다. 이 매개 변수는 계정 개체의 TrustedForDelegation 속성을 설정합니다. 이 값은 Active Directory 사용자 계정 컨트롤 특성의 ADS_UF_TRUSTED_FOR_DELEGATION 플래그도 설정합니다. 이 매개 변수에 사용할 수 있는 값:
  $false 또는 0
  $true 또는 1

다음 예에서는 계정을 Kerberos 위임에 대해 신뢰할 수 있도록 지정하는 방법을 보여 줍니다.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.

Get-ADServiceAccount cmdlet을 사용하여 검색된 다음 수정된 서비스 계정 개체는 Instance 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 서비스 계정 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount service1 -Description &quot;Secretive Data Server&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>서비스 계정 'service1'에 대한 설명을 &quot;Secretive Data Server&quot;로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount Mongol01ADAM -ServicePrincipalNames @{replace=&quot;ADAMwdb/a.contoso.com&quot;, &quot;ADAMbdb/a.contoso.com&quot;} 
</dev:code>
  			<dev:remarks>
  			        <maml:para>&quot;ADAMwdb/a.contoso.com&quot;인 ServicePrincipalNames 속성의 값을 &quot;ADAMbdb/a.contoso.com&quot;으로 바꿉니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145001</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomainMode
		</command:name>
		<maml:description>
			<maml:para>Active Directory 도메인의 도메인 모드를 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomainMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDomainMode cmdlet은 도메인의 도메인 모드를 설정합니다. DomainMode 매개 변수를 설정하여 도메인 모드를 지정합니다. 

도메인 모드를 다음 값 중 하나로 설정할 수 있습니다. 값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 

  Windows2000Domain
  Windows2003InterimDomain
  Windows2003Domain
  Windows2008Domain
  Windows2008R2Domain

도메인 모드는 기능성이 더 높은 모드로만 변경할 수 있습니다. 예를 들어 도메인의 도메인 모드가 Windows 2003으로 설정된 경우 이 cmdlet을 사용하여 모드를 Windows 2008로 변경할 수 있습니다. 그러나 동일한 상황에서 이 cmdlet을 사용하여 도메인 모드를 Windows 2003에서 Windows 2000으로 변경할 수는 없습니다. 

Identity 매개 변수는 수정할 Active Directory 도메인을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), DNS 도메인 이름 또는 NetBIOS 이름으로 도메인을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADDomainObject&gt;와 같은 도메인 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 도메인 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomain cmdlet을 사용하여 도메인 개체를 검색한 다음 파이프라인을 통해 Set-ADDomainMode cmdlet으로 개체를 전달할 수 있습니다.

Set-ADDomainMode에서는 -confirm:$false를 지정하지 않는 경우 항상 사용 권한을 묻는 메시지를 표시합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomainMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DomainMode</maml:name>
				<maml:description>
					<maml:para>Active Directory 도메인의 도메인 모드를 지정합니다. 도메인 모드를 다음 값 중 하나로 설정할 수 있습니다. 값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 

  Windows2000Domain 또는 0
  Windows2003InterimDomain 또는 1  
  Windows2003Domain 또는 2
  Windows2008Domain 또는 3
  Windows2008R2Domain 또는 4

다음 예에서는 이 매개 변수를 Windows 2008 R2로 설정하는 방법을 보여 줍니다.
  -DomainMode Windows2008R2Domain</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimDomain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownDomain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DomainMode</maml:name>
			<maml:description>
				<maml:para>Active Directory 도메인의 도메인 모드를 지정합니다. 도메인 모드를 다음 값 중 하나로 설정할 수 있습니다. 값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 

  Windows2000Domain 또는 0
  Windows2003InterimDomain 또는 1  
  Windows2003Domain 또는 2
  Windows2008Domain 또는 3
  Windows2008R2Domain 또는 4

다음 예에서는 이 매개 변수를 Windows 2008 R2로 설정하는 방법을 보여 줍니다.
  -DomainMode Windows2008R2Domain</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainMode</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 도메인 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
이 cmdlet은 글로벌 카탈로그 포트에 연결된 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomainMode -Identity fabrikam.com -DomainMode Windows2003Domain
</dev:code>
  			<dev:remarks>
  			        <maml:para>fabrikam.com 도메인의 DomainMode 속성을 Windows2003Domain으로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$pdc = Get-ADDomainController -Discover -Service PrimaryDC
Set-ADDomainMode -Identity $pdc.Domain -Server $pdc.HostName[0] -DomainMode Windows2003Domain</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자 도메인의 DomainMode를 Windows2003Domain으로 설정합니다. Set 작업은 PrimaryDC FSMO를 대상으로 지정하여 업데이트를 적용합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145002</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForestMode
		</command:name>
		<maml:description>
			<maml:para>Active Directory 포리스트의 포리스트 모드를 설정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForestMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADForestMode cmdlet은 Active Directory 포리스트의 포리스트 모드를 설정합니다. ForestMode 매개 변수를 설정하여 포리스트 모드를 지정합니다. 포리스트 모드를 다음 값 중 하나로 설정할 수 있습니다. 값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 
  Windows2000Forest
  Windows2003InterimForest
  Windows2003Forest  
  Windows2008Forest
  Windows2008R2Forest

Identity 매개 변수는 수정할 Active Directory 포리스트를 지정합니다. FQDN(정규화된 도메인 이름), GUID, DNS 호스트 이름 또는 NetBIOS 이름으로 포리스트를 식별할 수 있습니다. 파이프라인을 통해 포리스트 개체를 전달하여 포리스트를 지정할 수도 있습니다. 예를 들어 Get-ADForest cmdlet을 사용하여 포리스트 개체를 검색한 다음 파이프라인을 통해 Set-ADForestMode cmdlet으로 개체를 전달할 수 있습니다.

Set-ADForestMode는 기본적으로 확인 메시지를 표시합니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForestMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ForestMode</maml:name>
				<maml:description>
					<maml:para>Active Directory 포리스트의 포리스트 모드를 지정합니다. 이 매개 변수에 사용할 수 있는 값:   Windows2000Forest 또는 0
  Windows2003InterimForest 또는 1
  Windows2003Forest 또는 2
  Windows2008Forest 또는 3
  Windows2008R2Forest 또는 4

값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ForestMode Windows2008R2Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimForest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownForest</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ForestMode</maml:name>
			<maml:description>
				<maml:para>Active Directory 포리스트의 포리스트 모드를 지정합니다. 이 매개 변수에 사용할 수 있는 값:   Windows2000Forest 또는 0
  Windows2003InterimForest 또는 1
  Windows2003Forest 또는 2
  Windows2008Forest 또는 3
  Windows2008R2Forest 또는 4

값은 기능성이 낮은 것부터 높은 순으로 나열되어 있습니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -ForestMode Windows2008R2Forest</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForestMode</command:parameterValue>
			<dev:type>
				<maml:name>ADForestMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 특성 값 중 하나를 제공하여 Active Directory 포리스트 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  정규화된 도메인 이름
    예: corp.contoso.com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS 호스트 이름
    예: dnsServer.corp.contoso.com
  NetBIOS 이름
    예: corp

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 포리스트 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 정규화된 도메인 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;corp.contoso.com&quot;

다음 예에서는 이 매개 변수를 &quot;forestInstance&quot;라는 이름의 포리스트 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					포리스트 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					PassThru 매개 변수가 지정된 경우 수정된 포리스트 개체를 반환합니다. 기본적으로 이 cmdlet에서는 출력을 생성하지 않습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForestMode -Identity fabrikam.com -ForestMode Windows2003Forest
</dev:code>
  			<dev:remarks>
  			        <maml:para>fabrikam.com 포리스트에서 ForestMode를 Windows2003Forest로 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$currentForest = Get-ADForest 
Set-ADForestMode -Identity $currentForest -Server $currentForest.SchemaMaster -ForestMode Windows2008R2Forest 
</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자의 포리스트에 대한 포리스트 모드를 설정합니다. Set 작업은 스키마 마스터 FSMO를 대상으로 지정하여 업데이트를 적용합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145003</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Active Directory 도메인의 기본 암호 정책을 수정합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ADDefaultDomainPasswordPolicy cmdlet은 도메인의 기본 암호 정책에 대한 속성을 수정합니다. cmdlet 매개 변수를 사용하여 속성 값을 수정할 수 있습니다. 

Identity 매개 변수는 수정할 기본 암호 정책이 적용되는 도메인을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자), DNS 도메인 이름 또는 NETBIOS 이름으로 도메인을 식별할 수 있습니다. 매개 변수를 ADDomain 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 ADDomain 개체를 전달할 수도 있습니다. 예를 들어 Get-ADDomain cmdlet을 사용하여 도메인 개체를 검색한 다음 파이프라인을 통해 Set-ADDomainDefaultPasswordPolicy cmdlet으로 개체를 전달할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>암호 정책에 대해 암호 복잡도를 사용할지 여부를 지정합니다. 사용하는 경우 암호에 다음 세 가지 문자 형식 중 두 가지가 포함되어야 합니다. 
  대문자(A, B, C, D, E…)
  소문자(a, b, c, d, e...)
  숫자(0, 1, 2, 3...) 

이 매개 변수는 암호 정책의 ComplexityEnabled 속성을 설정합니다. 

이 매개 변수에 사용할 수 있는 값:
  $false 또는 0 - 암호 복잡도를 사용하지 않습니다.
  $true 또는 1 - 암호 복잡도를 사용합니다.

다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 도메인 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다. 모든 값은 도메인을 나타내는 domainDNS 개체에 대한 것입니다. 

  고유 이름
    예: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID(objectGUID)
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid)
    예: S-1-5-21-3165297888-301567370-
  DNS 도메인 이름 
    예: redmond.corp.contoso.com
  NetBIOS 도메인 이름 
    예: redmond

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 도메인 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;domainInstance&quot;라는 이름의 도메인 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>실패한 로그인 시도 수가 잠금 임계값을 초과한 후 계정이 잠겨 있는 시간을 지정합니다. 잠금 기간이 만료되기 전에는 잠겨 있는 계정에 로그인할 수 없습니다. 이 매개 변수는 암호 정책 개체의 lockoutDuration 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-LockoutDuration&quot;입니다.

잠금 기간은 암호 정책의 잠금 관찰 시간보다 길거나 같아야 합니다. LockOutObservationWindow 매개 변수를 사용하여 잠금 관찰 시간을 설정합니다. 

잠금 지속 시간 간격을 다음 형식으로 지정합니다.
    [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutDuration &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutDuration &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutDuration &quot;0:5&quot;
  시간을 45초로 설정합니다.
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 (30분)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>실패한 두 로그인 시도 간 최대 시간 간격을 지정합니다. 이 시간이 지나면 실패한 로그인 시도 수가 0으로 다시 설정됩니다. 실패한 로그인 시도 수가 암호 정책 잠금 임계값을 초과하면 계정이 잠깁니다. 이 매개 변수는 암호 정책 개체의 lockoutObservationWindow 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;msDS-lockoutObservationWindow&quot;입니다.

잠금 관찰 기간은 암호 정책의 잠금 기간보다 짧거나 같아야 합니다. LockoutDuration 매개 변수를 사용하여 잠금 기간을 설정합니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D:H:M:S.F 

    각 항목이 나타내는 의미는 다음과 같습니다.
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 0:0:0:0.0과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간을 2일로 설정합니다.
    -LockoutObservationWindow &quot;2&quot;
  시간을 4시간으로 설정합니다.
    -LockoutObservationWindow &quot;4:00&quot;
  시간을 5분으로 설정합니다.
    -LockoutObservationWindow &quot;0:5&quot;
  시간을 45초로 설정합니다.
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 (30분)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>계정이 잠기기 전에 허용되는 실패한 로그인 시도 수를 지정합니다. 실패한 로그인 시도 간 간격이 잠금 관찰 기간에 지정된 시간보다 짧으면 이 숫자가 증가합니다. 이 매개 변수는 암호 정책의 LockoutThreshold 속성을 설정합니다. 

다음 예에서는 잠금 임계값을 세 번의 로그인 시도로 설정하는 방법을 보여 줍니다.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>동일한 암호를 사용할 수 있는 최대 시간을 지정합니다. 이 시간이 지나면 암호가 만료되므로 새 암호를 만들어야 합니다. 

이 매개 변수는 암호 정책의 maxPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;maxPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    MaxPasswordAge &quot;2&quot;
  시간 범위를 2일 전으로 설정합니다.
    MaxPasswordAge &quot;-2&quot;
  시간 범위를 4시간으로 설정합니다.
    MaxPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    MaxPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 (42일)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>암호를 변경하기 전에 경과해야 하는 최소 시간을 지정합니다.

이 매개 변수는 암호 정책의 minPasswordAge 속성을 설정합니다. 이 속성의 LDAP 표시 이름(ldapDisplayName)은 &quot;minPwdAge&quot;입니다.

시간 간격을 다음 형식으로 지정합니다.
   [-]D.H:M:S.F
    각 항목이 나타내는 의미는 다음과 같습니다.
      [-] = 음의 시간 간격 지정
      D = 일 수(0 ~ 10675199)
      H = 시간(0 ~ 23)
      M = 분(0 ~ 59)
      S = 초(0 ~ 59)
      F= 초의 소수점 아래 수(0 ~ 9999999)

참고: 시간 값은 -10675199:02:48:05.4775808과 10675199:02:48:05.4775807 사이에 있어야 합니다.

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  시간 범위를 2일로 설정합니다.
    -MinPasswordAge &quot;2&quot;
  시간 범위를 4시간으로 설정합니다.
    -MinPasswordAge &quot;4:00&quot;
  시간 범위를 5분으로 설정합니다.
    -MinPasswordAge &quot;0:5&quot;
  시간 범위를 45초로 설정합니다.
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 (1일)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>암호에 포함되어야 하는 최소 문자 수를 지정합니다.  이 매개 변수는 암호 정책의 MinPasswordLength 속성을 설정합니다. 

다음 예에서는 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>저장할 이전 암호 수를 지정합니다.  사용자는 저장된 암호 목록에 있는 암호를 다시 사용할 수 없습니다. 이 매개 변수는 암호 정책의 PasswordHistoryCount 속성을 설정합니다. 

다음 예에서는 이전 암호 10개를 저장하도록 이 매개 변수를 설정하는 방법을 보여 줍니다.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>디렉터리에서 해독 가능한 암호화를 사용하여 암호를 저장할지 여부를 지정합니다. 이 매개 변수는 암호 정책의 ReversibleEncryption 속성을 설정합니다. 이 매개 변수에는 다음과 같은 값을 사용할 수 있습니다.
  $false 또는 0
  $true 또는 1 


다음 예에서는 이 매개 변수를 true로 설정하는 방법을 보여 줍니다.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					도메인 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음 </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDefaultDomainPasswordPolicy -Identity fabrikam.com -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MaxPasswordAge 10.00:00:00</dev:code>
  			<dev:remarks>
  			        <maml:para>지정된 도메인의 기본 도메인 암호 정책을 설정합니다. 참고: MaxPwdAge를 0으로 설정하면 기본 도메인 암호 정책이 'never'(디렉터리에서 Int64.MinValue 또는 -9223372036854775808)로 변환됩니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser | Set-ADDefaultDomainPasswordPolicy -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>현재 로그온한 사용자 도메인의 기본 도메인 암호 정책을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145004</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDefaultDomainPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Uninstall-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>컴퓨터에 Active Directory 서비스 계정을 제거합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Uninstall</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Uninstall-ADServiceAccount cmdlet은 cmdlet이 실행되는 컴퓨터에서 Active Directory 서비스 계정을 제거합니다. 지정된 서비스 계정이 컴퓨터에 설치되어 있어야 합니다. 

Identity 매개 변수는 제거할 Active Directory 서비스 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 서비스 계정을 식별할 수 있습니다. 이 매개 변수를 $&lt;localServiceAccountObject&gt;와 같은 서비스 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 서비스 계정 개체를 전달할 수도 있습니다. 예를 들어 Get-ADServiceAccount를 사용하여 서비스 계정 개체를 가져온 다음 파이프라인을 통해 Uninstall-ADServiceAccount cmdlet으로 해당 개체를 전달할 수 있습니다.

ForceRemoveLocal 스위치 매개 변수를 사용하면 쓰기 가능한 DC의 액세스가 불가능한 경우에도 명령이 실패하지 않고 로컬 컴퓨터에서 계정을 제거할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에서 제거하는 경우 RODC(읽기 전용 도메인 컨트롤러)에 대한 액세스 권한만 있으면 이 작업이 필요합니다. 이 매개 변수를 전달하고 쓰기 가능한 DC에 대한 액세스 권한이 서버에 있으면 계정과 Active Directory 도메인 서비스의 컴퓨터 계정과의 연결도 해제됩니다. 이 매개 변수를 사용하는 경우 쓰기 가능한 DC에 대해 Remove-ADComputerServiceAccount cmdlet을 실행하여 컴퓨터와 관리 서비스 계정 간 연결을 확실히 해제하는 것이 좋습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Uninstall-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			  <maml:name>ForceRemoveLocal</maml:name>
			  <maml:description>
			    <maml:para>ForceRemoveLocal 스위치 매개 변수를 사용하면 쓰기 가능한 DC의 액세스가 불가능한 경우에도 명령이 실패하지 않고 로컬 컴퓨터에서 계정을 제거할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에서 제거하는 경우 RODC(읽기 전용 도메인 컨트롤러)에 대한 액세스 권한만 있으면 이 작업이 필요합니다. 이 매개 변수를 전달하고 쓰기 가능한 DC에 대한 액세스 권한이 서버에 있으면 계정과 Active Directory 도메인 서비스의 컴퓨터 계정과의 연결도 해제됩니다. 이 매개 변수를 사용하는 경우 쓰기 가능한 DC에 대해 Remove-ADComputerServiceAccount cmdlet을 실행하여 컴퓨터와 관리 서비스 계정 간 연결을 확실히 해제하는 것이 좋습니다.</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
		  <maml:name>ForceRemoveLocal</maml:name>
		  <maml:description>
		    <maml:para>ForceRemoveLocal 스위치 매개 변수를 사용하면 쓰기 가능한 DC의 액세스가 불가능한 경우에도 명령이 실패하지 않고 로컬 컴퓨터에서 계정을 제거할 수 있습니다. 관리 서비스 계정을 분할된 네트워크 또는 사이트(예: 경계 네트워크 또는 DMZ)에 위치한 서버에서 제거하는 경우 RODC(읽기 전용 도메인 컨트롤러)에 대한 액세스 권한만 있으면 이 작업이 필요합니다. 이 매개 변수를 전달하고 쓰기 가능한 DC에 대한 액세스 권한이 서버에 있으면 계정과 Active Directory 도메인 서비스의 컴퓨터 계정과의 연결도 해제됩니다. 이 매개 변수를 사용하는 경우 쓰기 가능한 DC에 대해 Remove-ADComputerServiceAccount cmdlet을 실행하여 컴퓨터와 관리 서비스 계정 간 연결을 확실히 해제하는 것이 좋습니다.</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: WebAccount$
  
cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

 이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 개체 인스턴스로 설정할 수도 있습니다. 

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;AccountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					서비스 계정 개체는 Identity 매개 변수가 받습니다.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 AD LDS에서는 작동하지 않습니다.
이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
				<maml:para>로컬 컴퓨터에서 관리 서비스 계정 SQL-SRV1을 제거합니다. 이 작업을 수행하려면 쓰기 가능한 DC에 대한 액세스 권한이 필요합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Uninstall-ADServiceAccount $a 
Remove-ADServiceAccount $a </dev:code>
  			<dev:remarks>
				<maml:para>로컬 컴퓨터에서 이름이 SQL-HR-svc-01인 관리 서비스 계정을 검색합니다.  이 계정을 제거한 다음 디렉터리에서 삭제합니다. 이 작업을 수행하려면 쓰기 가능한 DC에 대한 액세스 권한이 필요합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1 -ForceRemoveLocal
</dev:code>
			<dev:remarks>
				<maml:para>쓰기 가능한 DC에 대한 액세스가 불가능한 경우라도 로컬 컴퓨터에서 관리 서비스 계정인 SQL-SRV1을 제거합니다.</maml:para>
				<maml:para>쓰기 가능한 DC에 대해 Remove-ADComputerServiceAccount cmdlet을 실행하여 컴퓨터와 관리 서비스 계정 간 연결을 확실히 해제하는 것이 좋습니다.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145005</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unlock-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Active Directory 계정의 잠금을 해제합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unlock</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Unlock-ADAccount cmdlet은 잠겨 있는 계정에 대한 AD DS(Active Directory 도메인 서비스) 액세스를 복원합니다. 잘못된 암호를 입력한 횟수가 계정 암호 정책에서 허용하는 최대 횟수를 초과하는 경우 계정의 AD DS 액세스가 일시 중단되거나 잠깁니다.

Identity 매개 변수는 잠금을 해제할 Active Directory 계정을 지정합니다. DN(고유 이름), GUID, SID(보안 식별자) 또는 SAM(보안 계정 관리자) 계정 이름으로 계정을 식별할 수 있습니다. Identity 매개 변수를 $&lt;localADAccountObject&gt;와 같은 계정 개체 변수로 설정하거나 파이프라인을 통해 Identity 매개 변수로 개체를 전달할 수도 있습니다. 예를 들어 Search-ADAccount cmdlet을 사용하여 계정 개체를 가져온 다음 파이프라인을 통해 Unlock-ADAccount cmdlet으로 개체를 전달하여 계정의 잠금을 해제할 수 있습니다. 마찬가지로 Get-ADUser 및 Get-ADComputer를 사용하여 파이프라인을 통해 전달할 개체를 전달할 수 있습니다.

AD LDS 환경의 경우 다음에 해당하지 않으면 Partition 매개 변수를 지정해야 합니다.     - DN을 사용하여 개체를 식별하는 경우: 파티션이 DN에서 자동으로 생성됩니다.     - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우: 현재 경로가 파티션을 설정하는 데 사용됩니다.     - 기본 명명 컨텍스트 또는 파티션이 지정된 경우 
AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unlock-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>사용할 인증 방법을 지정합니다. 이 매개 변수에 사용할 수 있는 값:
  Negotiate 또는 0
  Basic 또는 1

기본 인증 방법은 Negotiate입니다.

Basic 인증 방법에는 SSL(Secure Sockets Layer) 연결이 필요합니다.

다음 예에서는 이 매개 변수를 Basic으로 설정하는 방법을 보여 줍니다.
  -AuthType Basic</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>이 작업을 수행하는 데 사용할 사용자 계정 자격 증명을 지정합니다. cmdlet이 Active Directory PowerShell 공급자 드라이브에서 실행되는 경우를 제외하면 기본 자격 증명은 현재 로그온한 사용자의 자격 증명입니다. cmdlet이 이러한 공급자 드라이브에서 실행되는 경우 해당 드라이브에 연결된 계정이 기본 계정이 됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

현재 자격 증명에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 Active Directory PowerShell은 종료 오류를 반환합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>다음 속성 값 중 하나를 제공하여 Active Directory 계정 개체를 지정합니다. 괄호 안의 식별자는 해당 특성의 LDAP 표시 이름입니다.

  고유 이름 
    예: CN=SaraDavis ,CN=Users,DC=corp,DC=contoso,DC=com
  GUID(objectGUID) 
    예: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  보안 식별자(objectSid) 
    예: S-1-5-21-3165297888-301567370-576410423-1103
  SAM 계정 이름(sAMAccountName) 
    예: saradavis

cmdlet은 개체를 찾기 위해 기본 명명 컨텍스트 또는 파티션을 검색합니다. 둘 이상의 개체가 있으면 cmdlet에서는 종료되지 않은 오류를 반환합니다. 

이 매개 변수는 파이프라인을 통해 이 개체를 가져올 수도 있고 이 매개 변수를 계정 개체 인스턴스로 설정할 수도 있습니다. 

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

다음 예에서는 이 매개 변수를 고유 이름으로 설정하는 방법을 보여 줍니다.
  -Identity &quot;CN=saradavis,CN=Users,DC=corp,DC=contoso,DC=com&quot;

다음 예에서는 이 매개 변수를 &quot;accountInstance&quot;라는 이름의 계정 개체 인스턴스로 설정하는 방법을 보여 줍니다.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Active Directory 파티션의 고유 이름을 지정합니다. 고유 이름은 현재 디렉터리 서버의 명명 컨텍스트 중 하나여야 합니다. cmdlet은 Identity 매개 변수에 정의된 개체를 찾기 위해 이 파티션을 검색합니다. 
다음 두 예에서는 이 매개 변수에 값을 지정하는 방법을 보여 줍니다.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
대개 값이 지정되지 않은 경우 Partition 매개 변수에 대해 기본값이 사용됩니다.  기본값을 결정하는 규칙은 다음과 같습니다.  먼저 나열된 규칙이 먼저 평가되고 기본값을 결정할 수 있게 되면 더 이상 규칙이 평가되지 않습니다.

AD DS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다.  - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition의 기본값은 대상 도메인의 명명 컨텍스트 또는 기본 파티션으로 설정됩니다.

AD LDS 환경에서는 다음과 같은 경우에 Partition의 기본값이 설정됩니다. 
 - Identity 매개 변수가 고유 이름으로 설정된 경우 Partition의 기본값은 이 고유 이름에서 자동으로 생성됩니다. 
  - Active Directory 공급자 드라이브에서 cmdlet을 실행하는 경우 Partition의 기본값은 드라이브의 현재 경로에서 자동으로 생성됩니다.
  - 대상 AD LDS 인스턴스에 기본 명명 컨텍스트가 있는 경우 Partition의 기본값은 이 기본 명명 컨텍스트로 설정됩니다.  AD LDS 환경에 대한 기본 명명 컨텍스트를 지정하려면 해당 AD LDS 인스턴스에 대한 Active Directory DSA(디렉터리 서비스 에이전트) 개체(nTDSDSA)의 msDS-defaultNamingContext 속성을 설정합니다.
  - 앞에서 적용되는 사례가 없는 경우 Partition 매개 변수는 기본값을 사용하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>새 개체 또는 수정된 개체를 반환합니다. 기본적으로(즉, -PassThru가 지정되지 않은 경우) 이 cmdlet에서는 출력을 생성하지 않습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>해당 도메인 이름 또는 디렉터리 서버에 대해 다음 값 중 하나를 제공하여 연결할 Active Directory 도메인 서비스 인스턴스를 지정합니다. 서비스는  Active Directory Lightweight 도메인 서비스, Active Directory 도메인 서비스 또는 Active Directory Snapshot 인스턴스 중 하나일 수 있습니다.
도메인 이름 값:
  정규화된 도메인 이름
    예: corp.contoso.com
  NetBIOS 이름
    예: CORP

디렉터리 서버 값:
  정규화된 디렉터리 서버 이름
    예: corp-DC12.corp.contoso.com
  NetBIOS 이름
    예: corp-DC12
  정규화된 디렉터리 서버 이름 및 포트
    예: corp-DC12.corp.contoso.com:3268

Server 매개 변수의 기본값은 다음 방법을 나열된 순서대로 적용하여 결정됩니다.
  -파이프라인을 통해 전달된 개체에서 Server 값 사용
  -Active Directory PowerShell 공급자 드라이브에서 실행되는 경우 이 드라이브와 연결된 서버 정보 사용
  -Powershell을 실행하는 컴퓨터의 도메인 사용 

다음 예에서는 정규화된 도메인 이름을 매개 변수 값으로 지정하는 방법을 보여 줍니다.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>명령을 실행하기 전에 확인 메시지를 표시합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>명령을 실제로 실행하지 않고도 명령이 실행될 경우 발생할 수 있는 현상을 설명합니다.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>없음 또는 Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					계정 개체는 Identity 매개 변수가 받습니다.

다음과 같은 파생 유형도 허용됩니다.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Active Directory 스냅숏에서는 작동하지 않습니다.
이 cmdlet은 읽기 전용 도메인 컨트롤러에서는 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>SamAccountName이 KimAb인 계정의 잠금을 해제합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;인 계정의 잠금을 해제합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145006</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<ProviderHelp>
<!-- v  0.0.0.0  -->


<Name>
	ActiveDirectory
</Name>

<Drives>
	<Para>기본 드라이브는 AD:라는 이름을 사용하여 탑재됩니다.</Para>
</Drives>
<Synopsis>
	Windows PowerShell용 Active Directory 공급자는 AD DS(Active Directory 디렉터리 서비스), AD LDS(Active Directory Lightweight Directory Services) 및 Windows PowerShell 내에서 LDAP 서버로 노출된 스냅숏 볼륨에 저장된 데이터에 액세스하기 위한 것입니다.
</Synopsis>

<DetailedDescription>
	<para>Active Directory 공급자는 파일 시스템을 탐색하는 것과 유사하게 Active Directory 트리를 통해 명령줄 탐색을 수행하는 명령 집합을 구현합니다. 이 공급자는 dir, ls(get-childitem) 및 cd, mkdir(set-location, new-item)과 같은 표준 명령을 구현합니다. 또한 PowerShell 드라이브를 통해 지정된 Active Directory 인스턴스에 대한 연결도 유지 관리합니다. 관리자는 Active Directory 공급자를 사용하여 여러 Active Directory 인스턴스에 동시에 연결할 수 있습니다. 예를 들어 여러 스냅숏, AD LDS 인스턴스 또는 도메인의 여러 도메인 컨트롤러에 동시에 연결할 수 있습니다. 이 경우 관리자는 이러한 인스턴스를 PowerShell 드라이브로 취급하여 모든 해당 인스턴스에서 만들기, 읽기, 업데이트, 삭제 등의 표준 작업을 수행할 수 있습니다.  

이러한 Active Directory 공급자 cmdlet은 Windows 핵심 PowerShell cmdlet보다 우선합니다. Active Directory 공급자 cmdlet은 다음과 같습니다. 

· Get-PSProvider
· New-PSDrive
· Get-PSDrive
· Remove-PSDrive
· Get-ChildItem
· Get-Item
· New-Item
· Remove-Item
· Move-Item
· Rename-Item
· Get-ItemProperty
· Set-ItemProperty
· Clear-ItemProperty
· Get-ACL
· Set-ACL

참고: 
Active Directory 공급자 드라이브 아래에서 Active Directory 모듈 cmdlet을 사용할 수도 있습니다.

실제로 Active Directory 모듈 cmdlet은 이러한 범용 cmdlet보다 유용합니다. 자세한 내용은 about_ActiveDirectory를 참조하십시오.</para>
</DetailedDescription>

<Capabilities>
	<para></para>
</Capabilities>
<Filters>
	<para>LDAP 필터는 Active Directory 공급자 cmdlet이 지원하는 유일한 필터 형식입니다.</para>
</Filters>
<Notes>
	타사 디렉터리 서비스에 대한 지원은 ActiveDirectory 공급자의 목표가 아닙니다.

-Filter 매개 변수는 루트 DSE 아래에서 실행되는 경우 작동하지 않습니다.

Get-ChildItem을 제외한 모든 Active Directory 공급자 cmdlet은 단일 개체에 대해 작동합니다. 여러 개체에 대해 작동하려면 먼저 -Filter를 사용하여 Get-ChildItem을 호출한 다음 적절한 cmdlet(예: set-Acl)으로 파이프해야 합니다.
</Notes>
<Tasks>
	<Task>
  		<Title>
			드라이브 관리
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>contoso.com 도메인의 도메인 컨트롤러에 연결되어 있고 도메인 rootDSE가 루트인 새 드라이브를 만듭니다.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 2 --------------------------
				</Title> 
				<Introduction>
					<para>contoso.com에 연결되어 있고 도메인 NC가 루트인 새 드라이브를 만듭니다.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;DC=contoso,DC=com&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 3 --------------------------
				</Title> 
				<Introduction>
					<para>contosoAD 드라이브를 제거합니다.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Remove-PSDrive contosoAD
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 4 --------------------------
				</Title> 
				<Introduction>
					<para>시스템에 탑재된 모든 드라이브를 표시합니다.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Get-PSDrive
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			탐색
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>현재 위치를 설정합니다.</para>
				</Introduction> 
	  			<Code>
					PS C:\set-location AD:
				</Code>
				<Remarks>
					<para>Active Directory 공급자는 파일 시스템과 매우 비슷한 계층적 탐색 시스템을 통해 Active Directory 데이터베이스를 표시합니다. 

예를 들어 다음 명령을 사용하여 디렉터리를 탐색할 수 있습니다.
cd
dir
remove

'.' 및 '..'과 같은 기타 명령줄 인터페이스 패러다임은 예상대로 작동합니다.</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			개체 읽기
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>samAccountName이 ContosoUser1인 사용자의 모든 특성을 가져옵니다.</para>
				</Introduction> 
	  			<Code>
					PS AD:\&gt;Get-ChildItem -filter &quot;(sAMAccountName=ContosoUser1)&quot; -properties * -recurse
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			개체 업데이트
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>사용자의 otherTelephone(다중값 특성)을 설정합니다.</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Set-ItemProperty -Path &quot;AD:\CN= ContosoUser1,CN=Users,DC=Contoso,DC=com&quot; -Name otherTelephone -value &quot;111-111-1111&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			보안 설명자 관리 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>ACL을 가져옵니다.</para>
				</Introduction> 
	  			<Code>
					$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 2 --------------------------
				</Title> 
				<Introduction>
					<para>사용자를 가져옵니다.</para>
				</Introduction> 
	  			<Code>
					$user = get-aduser adpsuser1
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 3 --------------------------
				</Title> 
				<Introduction>
					<para>쓰기 속성에 대한 ACE를 만듭니다.</para>
				</Introduction> 
	  			<Code>
					$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 4 --------------------------
				</Title> 
				<Introduction>
					<para>ACE를 ACL에 추가합니다.</para>
				</Introduction> 
	  			<Code>
					$acl.AddAccessRule($ace)
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- 예제 5 --------------------------
				</Title> 
				<Introduction>
					<para>ACL을 설정합니다.</para>
				</Introduction> 
	  			<Code>
					Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
				</Code>
				<Remarks>
					<para>사용자의 보안 설명자를 수정하여 새 ACE를 추가합니다.</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			보안 설명자 관리 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- 예제 1 --------------------------
				</Title> 
				<Introduction>
					<para>사용자의 보안 설명자를 가져옵니다.</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Get-ACL -Path &quot;AD:\CN=ContosoUser1,CN=Users,DC=Contoso,DC= com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
</Tasks>
<DynamicParameters>
</DynamicParameters>
<RelatedLinks>
    <navigationLink>
        <linkText>about_providers</linkText>
        <uri/>
    </navigationLink>
</RelatedLinks>



<CmdletHelpPaths>
<CmdletHelpPath ID="0">\n
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체에서 속성의 값을 지웁니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Clear-ItemProperty cmdlet은 속성 값을 삭제하지만 속성 자체는 삭제하지 않습니다. 이 cmdlet을 사용하여 Active Directory 개체 속성 값에서 데이터를 삭제할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>제거할 속성의 이름을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Simple
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Simple - 바인딩 프로세스가 사용자 이름 및 암호를 일반 텍스트로 보냅니다.
        (SSL 암호화가 설정된 경우만 사용하는 것이 좋음)
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Simple
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Simple - 바인딩 프로세스가 사용자 이름 및 암호를 일반 텍스트로 보냅니다.
        (SSL 암호화가 설정된 경우만 사용하는 것이 좋음)
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>제거할 속성의 이름을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>없음</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					없음
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; description</dev:code>
  			<dev:remarks>
  			        <maml:para>DistinguishedName이 &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot;인 Active Directory 개체의 description 속성을 지웁니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty -Path &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; -Name otherTelephone</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com' 개체의 다중값 속성 otherTelephone에서 값을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152477</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Item
		</command:name>
		<maml:description>
			<maml:para>지정된 위치에 있는 항목을 가져옵니다. 이 cmdlet을 사용하면 Active Directory 저장소에 대한 Base 검색을 수행할 수 있습니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-Item cmdlet은 지정된 위치에 있는 항목을 가져옵니다. 와일드카드 문자(*)를 사용하여 항목의 모든 내용을 요청하지 않는 한 해당 위치에 있는 항목의 내용은 가져오지 않습니다.
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>하나 이상의 위치에 대한 경로를 지정합니다. 와일드카드를 사용할 수 있습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>특정 항목을 생략하도록 지정합니다. 이 매개 변수의 값은 path 매개 변수를 한정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>숫자 페이지 크기를 지정합니다. 기본값은 256입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>각 항목(Active Directory 개체)에 대해 검색할 쉼표로 구분된 속성 목록을 지정합니다.  * 와일드카드를 사용하면 모든 속성을 검색할 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>검색을 통해 반환할 최대 항목 수를 지정합니다. 
기본값은 제한이 없음을 의미하는 0(영)입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>특정 항목을 생략하도록 지정합니다. 이 매개 변수의 값은 path 매개 변수를 한정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>숫자 페이지 크기를 지정합니다. 기본값은 256입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>하나 이상의 위치에 대한 경로를 지정합니다. 와일드카드를 사용할 수 있습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>각 항목(Active Directory 개체)에 대해 검색할 쉼표로 구분된 속성 목록을 지정합니다.  * 와일드카드를 사용하면 모든 속성을 검색할 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>검색을 통해 반환할 최대 항목 수를 지정합니다. 
기본값은 제한이 없음을 의미하는 0(영)입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					하나 이상의 ADObject 개체를 반환합니다. ADObject에는 저장소에 있는 개체의 Name, DistinguishedName, ObjectClass 및 ObjectGUID가 포함되어 있습니다. 또한 요청된 속성 이름과 값이 들어 있는 속성 모음도 포함되어 있습니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item .</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::DC=fabrikam,DC=com 
PSParentPath      : 
PSChildName       : DC=fabrikam,DC=com 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : d66301e9-b1da-41ef-866c-12bde9b4a0a8 
distinguishedName : DC=fabrikam,DC=com 
name              : fabrikam 
objectClass       : domainDNS </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 위치의 기본 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties samAccountName</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath                : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName           : CN=User1 
PSDrive               : AD 
PSProvider            : ActiveDirectory 
PSIsContainer         : True 
sAMAccountName        : user1 
lastLogon             : 0 
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0 
distinguishedName : CN=User1,DC=fabrikam,DC=com 
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'AD:\CN=User1,DC=fabrikam,DC=com' 개체의 samAccountName 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties * </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath                : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName           : CN=User1 
PSDrive               : AD 
PSProvider            : ActiveDirectory 
PSIsContainer         : True 
codePage              : 0
cn                    : user1 
otherHomePhone        : {111-1111}
logonCount            : 0
description           : blah 
sAMAccountName        : user1 
lastLogon             : 0 
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0 
distinguishedName : CN=User1,DC=fabrikam,DC=com 
dSCorePropagationData : {12/31/1600 4:00:00 PM} 
pwdLastSet            : 0
badPasswordTime       : 0
uSNChanged            : 14933
whenChanged           : 3/17/2009 12:31:52 PM 
userAccountControl    : 546
instanceType          : 4
objectSid             : S-1-5-21-1743280271-992198667-3042434588-1102 
lastLogoff            : 0
sAMAccountType        : 805306368
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
primaryGroupID        : 513
uSNCreated            : 14930
countryCode           : 0
nTSecurityDescriptor  : System.DirectoryServices.ActiveDirectorySecurity 
accountExpires        : 9223372036854775807
whenCreated           : 3/17/2009 12:31:25 PM 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'AD:\CN=User1,DC=fabrikam,DC=com' 개체의 모든 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152475</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ChildItem
		</command:name>
		<maml:description>
			<maml:para>Active Directory 저장소에 대한 One Level 및 Subtree 범위의 검색을 제공하여 지정된 하나 이상의 위치에서 항목 및 하위 항목을 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ChildItem</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ChildItem cmdlet은 지정된 위치에 있는 항목을 가져옵니다. 항목이 컨테이너인 경우 컨테이너 내에 있는 항목(하위 항목이라고 함)을 가져옵니다. -Recurse 매개 변수를 사용하여 모든 하위 컨테이너의 항목을 모두 가져올 수 있습니다. 

지정된 경로가 ROOTDSE 위치이면 지정된 포트에서 서버가 호스팅하는 모든 파티션의 목록이 반환됩니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ChildItem</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>하나 이상의 위치에 대한 경로를 지정합니다. 와일드카드는 사용할 수 없습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>검색용 LDAP 필터를 지정합니다. 지정된 경로가 ROOTDSE 항목이면 필터가 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 

사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>지정된 항목을 생략합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>경로의 형식 유형을 지정합니다. 사용할 수 있는 값: X500(예: CN=Users,DC=fabricam,DC=com) 또는 Canonical(예: fabricam.com/Users)입니다.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>지정된 항목만 검색합니다. 이 매개 변수의 값은 Path 매개 변수를 한정합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>대상 위치에서 항목 이름만 검색합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>숫자 페이지 크기를 지정합니다. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>각 항목(Active Directory 개체)에 대해 검색할 쉼표로 구분된 속성 목록을 지정합니다.  * 와일드카드를 사용하면 모든 속성을 검색할 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>지정된 위치와 해당 위치의 모든 하위 항목에서 항목을 가져옵니다. 사용할 수 있는 값: True 또는 False

참고: 이를 사용하여 Subtree 검색을 호출할 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>검색을 통해 반환할 최대 항목 수를 지정합니다. 
기본값은 제한이 없음을 의미하는 0(영)입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 

사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>지정된 항목을 생략합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>검색용 LDAP 필터를 지정합니다. 지정된 경로가 ROOTDSE 항목이면 필터가 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>경로의 형식 유형을 지정합니다. 사용할 수 있는 값: X500(예: CN=Users,DC=fabricam,DC=com) 또는 Canonical(예: fabricam.com/Users)입니다.</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>지정된 항목만 검색합니다. 이 매개 변수의 값은 Path 매개 변수를 한정합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>대상 위치에서 항목 이름만 검색합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>숫자 페이지 크기를 지정합니다. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>하나 이상의 위치에 대한 경로를 지정합니다. 와일드카드는 사용할 수 없습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>각 항목(Active Directory 개체)에 대해 검색할 쉼표로 구분된 속성 목록을 지정합니다.  * 와일드카드를 사용하면 모든 속성을 검색할 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>지정된 위치와 해당 위치의 모든 하위 항목에서 항목을 가져옵니다. 사용할 수 있는 값: True 또는 False

참고: 이를 사용하여 Subtree 검색을 호출할 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>검색을 통해 반환할 최대 항목 수를 지정합니다. 
기본값은 제한이 없음을 의미하는 0(영)입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\OU=TestOU,DC=fabrikam,DC=com' 컨테이너의 모든 개체를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>컨테이너의 모든 사용자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; -Recurse
</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\OU=TestOU,DC=fabrikam,DC=com' 경로 아래의 모든 사용자를 재귀적으로 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152471</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>지정된 Active Directory 개체의 속성을 검색합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ItemProperty cmdlet은 지정된 Active Directory 개체의 속성을 가져옵니다. Get-ItemProperty를 사용하여 Active Directory 개체 속성 및 값을 볼 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체의 경로를 지정합니다. 와일드카드는 사용할 수 없습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>검색할 하나 또는 여러 속성의 이름을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>검색할 하나 또는 여러 속성의 이름을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체의 경로를 지정합니다. 와일드카드는 사용할 수 없습니다. 기본 위치는 현재 디렉터리입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					요청된 속성의 이름과 값이 포함된 PSObject를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive        : AD 
PSProvider     : ActiveDirectory 
samaccountname : User1 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'AD:\CN=User1,DC=fabrikam,DC=com' 개체에서 samAccountName 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname, objectSid </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive        : AD 
PSProvider     : ActiveDirectory 
samaccountname : User1 
objectSid      : S-1-5-21-1743280271-992198667-3042434588-1102</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>'AD:\CN=User1,DC=fabrikam,DC=com' 개체에서 samaccountname 및 objectSid 속성을 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152479</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Acl
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체의 보안 설명자를 가져옵니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ACL cmdlet은 Active Directory 개체의 보안 설명자를 나타내는 개체를 가져옵니다. 보안 설명자에는 Active Directory 개체의 ACL(액세스 제어 목록)이 포함되어 있습니다. ACL은 Active Directory 개체에 액세스해야 하는 사용자와 사용자 그룹의 사용 권한을 지정합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Acl</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>SACL(시스템 액세스 제어 목록)에서 보안 설명자의 감사 데이터를 가져옵니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Audit</maml:name>
			<maml:description>
				<maml:para>SACL(시스템 액세스 제어 목록)에서 보안 설명자의 감사 데이터를 가져옵니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ActiveDirectorySecurity(System.Security.AccessControl.DirectoryObjectSecurity에서 상속함)</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					이 cmdlet의 실행에서 지정된 반환된 개체의 보안 설명자를 나타내는 ActiveDirectorySecurity 개체를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>ADPSUser1 사용자의 보안 설명자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Path                       Owner                      Access
----                       -----                      ------
ActiveDirectory::CN=Use... FABRIKAM\Domain Admins   NT AUTHORITY\SELF Allo...</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>User1 사용자의 보안 설명자를 가져옵니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152469</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-Item
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체를 한 위치(컨테이너)에서 다른 위치로 이동합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Move-Item cmdlet은 Active Directory 개체를 속성, 내용 및 하위 항목과 함께 한 위치(컨테이너)에서 다른 위치(컨테이너)로 이동합니다. 이동하기 전과 후의 위치는 같은 공급자에서 지원되어야 합니다. Active Directory 개체를 이동하면 해당 개체는 원래 위치에서 삭제되고 새 위치에 추가됩니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 항목의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>항목을 이동할 대상 위치의 경로를 지정합니다. 이는 Active Directory 컨테이너여야 합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CrossDomain</maml:name>
				<maml:description>
					<maml:para>도메인 간 이동을 지정합니다. 대상 DC의 DNS 이름을 제공해야 합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CrossDomain</maml:name>
			<maml:description>
				<maml:para>도메인 간 이동을 지정합니다. 대상 DC의 DNS 이름을 제공해야 합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>항목을 이동할 대상 위치의 경로를 지정합니다. 이는 Active Directory 컨테이너여야 합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 항목의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>cmdlet 출력은 PassThru 플래그로 제어됩니다.  </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					-PassThru가 지정되지 않은 경우 없습니다.
–PassThru가 지정된 경우 이동된 개체를 나타내는 ADObject가 파이프라인에 기록됩니다.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>사용자 개체를 한 조직 구성 단위에서 다른 조직 구성 단위로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=Users,DC=ADPS,DC=Fabrikam,DC=com&quot; -Destination &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>컨테이너 개체를 연결된 모든 하위 항목과 함께 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; &quot;AD:\OU=TestOU,DC=child,DC=fabrikam,DC=com&quot; -CrossDomain dc1.child.fabrikam.com

</dev:code>
  			<dev:remarks>
  			        <maml:para>CrossDomain 이동을 사용하여 개체를 다른 도메인으로 이동합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152476</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-Item
		</command:name>
		<maml:description>
			<maml:para>새 Active Directory 개체를 만듭니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-Item cmdlet은 새 Active Directory 개체를 만듭니다. 또한 새 개체의 값을 설정할 수 있습니다. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 AD 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>새 AD 개체의 이름을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 

사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>새 항목의 AD 개체 클래스(예: group, user, organizationalUnit 등)를 지정합니다.

ItemType 매개 변수를 'Directory'로 설정하면 cmdlet이 새 OrganizationalUnit을 만듭니다.

PowerShell 공급자 cmdlet mkdir은 ItemType 매개 변수를 'Directory'로 설정한 상태에서 New-Item cmdlet을 호출하므로 mkdir(별칭: md) cmdlet은 ActiveDirectory 공급자에 사용될 경우 새 OrganizationalUnit을 만듭니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>새 항목의 값을 지정합니다. 새 개체 특성 및 값은 결합형 배열로 지정됩니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>새 AD 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>새 AD 개체의 이름을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 

사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>새 항목의 AD 개체 클래스(예: group, user, organizationalUnit 등)를 지정합니다.

ItemType 매개 변수를 'Directory'로 설정하면 cmdlet이 새 OrganizationalUnit을 만듭니다.

PowerShell 공급자 cmdlet mkdir은 ItemType 매개 변수를 'Directory'로 설정한 상태에서 New-Item cmdlet을 호출하므로 mkdir(별칭: md) cmdlet은 ActiveDirectory 공급자에 사용될 경우 새 OrganizationalUnit을 만듭니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>새 항목의 값을 지정합니다. 새 개체 특성 및 값은 결합형 배열로 지정됩니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 

사용할 수 있는 값: Negotiate 또는 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ItemType</maml:name>
			<maml:description>
				<maml:para>새 항목의 AD 개체 클래스(예: group, user, organizationalUnit 등)를 지정합니다.

ItemType 매개 변수를 'Directory'로 설정하면 cmdlet이 새 OrganizationalUnit을 만듭니다.

PowerShell 공급자 cmdlet mkdir은 ItemType 매개 변수를 'Directory'로 설정한 상태에서 New-Item cmdlet을 호출하므로 mkdir(별칭: md) cmdlet은 ActiveDirectory 공급자에 사용될 경우 새 OrganizationalUnit을 만듭니다.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>새 AD 개체의 이름을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>새 AD 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>새 항목의 값을 지정합니다. 새 개체 특성 및 값은 결합형 배열로 지정됩니다.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>-PassThru가 지정된 경우 ADObject입니다.</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					디렉터리에서 새로 만든 개체를 나타내는 ADObject를 반환합니다.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Name &quot;OU=TestOU3&quot; -Itemtype organizationalUnit </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::OU=TestOU3,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName       : OU=TestOU3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 786ee969-88b7-43ba-80d2-acc3d624b06e 
distinguishedName : OU=TestOU3,DC=fabrikam,DC=com 
name              : TestOU3 
objectClass       : organizationalUnit </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>현재 위치에 새 조직 구성 단위를 만듭니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Path &quot;CN=Users,DC=fabrikam,DC=com&quot; -Name &quot;CN=User3&quot; -ItemType user -Value @{samAccountName='user3';description='test user'} </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::CN=User3,CN=Users,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::CN=Users,DC=fabrikam,DC=com 
PSChildName       : CN=User3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 617e9745-21b2-44f5-9a91-e2d1831059eb 
objectClass       : user 
distinguishedName : CN=User3,CN=Users,DC=fabrikam,DC=com 
name              : User3 
sAMAccountName    : user3 
description       : test user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>지정된 컨테이너에 새 사용자를 만들고 만드는 동안 사용자의 samAccountName 및 description 속성을 설정합니다. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152472</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-PSDrive
		</command:name>
		<maml:description>
			<maml:para>새 Windows PowerShell용 Active Directory 드라이브를 만듭니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>PSDrive</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>New-PsDrive cmdlet은 Active Directory 저장소에 대한 연결을 나타내는 새 Windows PowerShell용 Active Directory 드라이브를 만듭니다.

연관된 데이터 저장소의 데이터에 액세스하기 위해 만든 PsDrive를 매핑된 드라이브처럼 사용할 수 있습니다. 위치를 드라이브로 변경하고(set-location, cd 또는 chdir) 드라이브 내용에 액세스할 수 있습니다(get-item, get-childitem, dir).
    
그러나 Active Directory PsDrive는 Windows PowerShell에서만 인식할 수 있고, Windows 탐색기, WMI, COM, 또는 .NET을 사용하거나 Net Use와 같은 도구를 사용하여 액세스할 수는 없습니다.
    
PsDrive는 현재 Windows PowerShell 콘솔에서만 존재합니다. 드라이브를 영구적으로 만들려면 드라이브를 추가한 콘솔을 내보내거나 New-PsDrive 명령을 Windows PowerShell 프로필에 저장합니다.

New-PsDrive로 만든 드라이브를 삭제하려면 Remove-PsDrive를 사용합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-PSDrive</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>PSProvider</maml:name>
				<maml:description>
					<maml:para>이 유형의 드라이브를 지원하는 Windows PowerShell 공급자(&quot;PsProvider&quot;)를 지정합니다.

예를 들어 PsDrive가 네트워크 공유나 파일 시스템 디렉터리에 연결되어 있으면 PsProvider는 &quot;FileSystem&quot;입니다. PsDrive가 레지스트리 키에 연결되어 있으면 PsProvider는 &quot;Registry&quot;입니다.

Windows PowerShell 콘솔에서 PsProviders 목록을 보려면 &quot;get-psprovider&quot;를 입력하십시오.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Root</maml:name>
				<maml:description>
					<maml:para>추가할 드라이브에 대한 공급자 내부 루트 또는 경로를 지정합니다. X500 형식의 경우 DN을 사용하고 정식 형식의 경우 canonicalName을 사용합니다.
빈 문자열을 지정하면 연결이 RootDSE로 전송됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>만들 드라이브에 대한 간단한 설명을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>공급자 드라이브의 경로 유형을 지정합니다.  가능한 값은 X500 또는 Canonical입니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>드라이브 설치 범위를 식별하는 데 사용되는 인덱스를 지정합니다.

참고: 이 매개 변수는 무시됩니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>만들 드라이브에 대한 간단한 설명을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>공급자 드라이브의 경로 유형을 지정합니다.  가능한 값은 X500 또는 Canonical입니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>GC 포트를 사용하여 글로벌 카탈로그에 대한 연결을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>PSProvider</maml:name>
			<maml:description>
				<maml:para>이 유형의 드라이브를 지원하는 Windows PowerShell 공급자(&quot;PsProvider&quot;)를 지정합니다.

예를 들어 PsDrive가 네트워크 공유나 파일 시스템 디렉터리에 연결되어 있으면 PsProvider는 &quot;FileSystem&quot;입니다. PsDrive가 레지스트리 키에 연결되어 있으면 PsProvider는 &quot;Registry&quot;입니다.

Windows PowerShell 콘솔에서 PsProviders 목록을 보려면 &quot;get-psprovider&quot;를 입력하십시오.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Root</maml:name>
			<maml:description>
				<maml:para>추가할 드라이브에 대한 공급자 내부 루트 또는 경로를 지정합니다. X500 형식의 경우 DN을 사용하고 정식 형식의 경우 canonicalName을 사용합니다.
빈 문자열을 지정하면 연결이 RootDSE로 전송됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>드라이브 설치 범위를 식별하는 데 사용되는 인덱스를 지정합니다.

참고: 이 매개 변수는 무시됩니다.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>-PassThru가 지정된 경우 PSDrive입니다.</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					ADDriveInfo 개체를 반환합니다. ADDriveInfo는 PSDriveInfo에서 파생되며 다음과 같은 추가 속성을 포함합니다.

    public class ADDriveInfo : PSDriveInfo
    {
        public string Server {get; set;}
        public ADPathFormat FormatType {get; set;}
        public ADAuthType AuthType {get; set;}
        public bool GlobalCatalog {get; set;} 
        public bool SecureSocketLayer {get; set;}
        public bool Encryption {get; set;}
        public bool Signing {get; set;}
    }
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Active Directory 모듈을 가져올 때 도메인에 가입된 컴퓨터에 대해 새 PSDrive가 만들어집니다. 기본 드라이브는 기본 LDAP 서버의 rootDSE에 탑재됩니다. 기본 드라이브 이름이 &quot;AD&quot;가 됩니다.
이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.

                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;DC=fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Name           Used (GB)     Free (GB) Provider      Root 
----           ---------     --------- --------      ---- 
AD1                                    ActiveDire... DC=fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>설명</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>기본 서버의 기본 명명 컨텍스트에 드라이브를 탑재합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADGC -PSProvider ActiveDirectory -Root &quot;&quot; -server fabrikam.com:3268</dev:code>
  			<dev:remarks>
  			        <maml:para>글로벌 카탈로그의 rootDSE에 드라이브를 탑재합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADLDS -PsProvider ActiveDirectory -Root &quot;DC=AppNC,DC=com&quot; -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>AD LDS 인스턴스에 드라이브를 탑재합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;fabrikam.com/&quot; -format canonical</dev:code>
  			<dev:remarks>
  			        <maml:para>정식 형식을 사용하여 기본 서버의 기본 명명 컨텍스트에 드라이브를 탑재합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152480</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-Item
		</command:name>
		<maml:description>
			<maml:para>지정된 Active Directory 개체를 삭제합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Remove-Item cmdlet은 지정된 Active Directory 개체를 삭제합니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>지정된 항목을 생략합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>지정된 개체만 검색합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>지정된 위치와 해당 위치의 모든 하위 항목에서 항목이 삭제되도록 합니다. 이 매개 변수를 사용하면 Tree 삭제 작업이 가능해집니다.  
사용할 수 있는 값: True 또는 False</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>지정된 항목을 생략합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>형식 유형을 지정합니다. 사용할 수 있는 값: X500 또는 Canonical</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>지정된 개체만 검색합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>지정된 위치와 해당 위치의 모든 하위 항목에서 항목이 삭제되도록 합니다. 이 매개 변수를 사용하면 Tree 삭제 작업이 가능해집니다.  
사용할 수 있는 값: True 또는 False</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					없음
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\CN=User1,OU=TestOU,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>한 항목을 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Recurse</dev:code>
  			<dev:remarks>
  			        <maml:para>컨테이너와 해당 컨테이너 아래의 모든 개체를 제거합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152474</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-Item
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체의 이름을 바꿉니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Rename-Item cmdlet은 지정된 Active Directory 개체의 이름을 변경합니다. 이 cmdlet은 이름을 바꿀 개체의 내용에는 영향을 주지 않습니다.

이름은 상대 고유 이름이어야 합니다.  Rename-Item을 사용하여 항목을 이동할 수 없습니다. Active Directory 개체를 이동하고 이름을 바꾸려면 Move-Item cmdlet을 사용합니다.
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-Item</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Active Directory 개체의 새 이름을 지정합니다. 이름은 RDN(상대 고유 이름)이어야 합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 사용할 수 있는 값: Negotiate 및 Basic

        Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.

        Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 사용할 수 있는 값: Negotiate 및 Basic

        Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.

        Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>Active Directory 개체의 새 이름을 지정합니다. 이름은 RDN(상대 고유 이름)이어야 합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>cmdlet 출력은 PassThru 플래그로 제어됩니다.  </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					-PassThru가 지정되지 않은 경우 없습니다.
-PassThru가 지정된 경우 이름이 바뀐 개체를 나타내는 ADObject가 파이프라인에 기록됩니다.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-Item &quot;AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com&quot; &quot;CN=User4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com'에 있는 사용자 개체의 이름을 'CN=User4'로 바꿉니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152473</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>Active Directory 개체의 속성 값을 설정합니다. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-ItemProperty cmdlet은 Active Directory 개체의 속성 값을 설정합니다. 이 cmdlet을 사용하여 Active Directory 개체 속성 값을 업데이트(추가, 대체, 삭제)할 수 있습니다.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>값을 바꿀 Active Directory 개체 특성 이름의 목록을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>바꿀 Active Directory 개체 속성의 값을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddPropertyValue</maml:name>
				<maml:description>
					<maml:para>속성 값을 추가할 결합형 배열로 지정합니다. 이는 다중값 속성에 사용됩니다. 자세한 내용은 about_associative_array 도움말을 참조하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemovePropertyValue</maml:name>
				<maml:description>
					<maml:para>속성 값을 삭제할 결합형 배열로 지정합니다. 이는 다중값 속성에 사용됩니다. 자세한 내용은 about_associative_array 도움말을 참조하십시오.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddPropertyValue</maml:name>
			<maml:description>
				<maml:para>속성 값을 추가할 결합형 배열로 지정합니다. 이는 다중값 속성에 사용됩니다. 자세한 내용은 about_associative_array 도움말을 참조하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>서버에 연결하는 데 사용할 인증 유형을 지정합니다. 
사용할 수 있는 값: Negotiate 및 Basic
  Negotiate - 기본 SPNEGO 보안 공급자가 사용됩니다.
  Basic - SSL(Secure Sockets Layer) 연결을 통해 단순 바인딩을 수행합니다.
</maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 보안 컨텍스트의 자격 증명을 지정합니다. 이 보안 컨텍스트에 작업을 수행할 수 있는 디렉터리 수준 권한이 없는 경우 디렉터리에서 오류가 반환됩니다. 드라이브와 연결된 자격 증명 정보가 기본값으로 사용됩니다.

이 매개 변수를 지정하려면 &quot;User1&quot; 또는 &quot;Domain01\User01&quot;과 같은 사용자 이름을 입력하거나 PSCredential 개체를 지정할 수 있습니다. 이 매개 변수에 대한 사용자 이름을 지정하면 cmdlet은 암호를 묻는 메시지를 표시합니다. 

스크립트를 사용하거나 Get-Credential cmdlet을 사용하여 PSCredential 개체를 만들 수도 있습니다. 그런 다음 Credential 매개 변수를 PSCredential 개체로 설정할 수 있습니다. 다음 예에서는 자격 증명을 만드는 방법을 보여 줍니다.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

다음에서는 Credential 매개 변수를 이 자격 증명으로 설정하는 방법을 보여 줍니다.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>이 매개 변수에 허용되는 값의 목록은 다음과 같습니다.</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			<dev:type>
				<maml:name>psobject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>값을 바꿀 Active Directory 개체 특성 이름의 목록을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemovePropertyValue</maml:name>
			<maml:description>
				<maml:para>속성 값을 삭제할 결합형 배열로 지정합니다. 이는 다중값 속성에 사용됩니다. 자세한 내용은 about_associative_array 도움말을 참조하십시오.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>연결할 Active Directory(DS 또는 LDS)의 특정 인스턴스를 지정합니다. 매개 변수 입력 값은 도메인 이름, 포리스트 이름 또는 호스트 이름:포트일 수 있습니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>바꿀 Active Directory 개체 속성의 값을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>cmdlet 출력은 PassThru 플래그로 제어됩니다.  </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					-PassThru가 지정되지 않은 경우 없습니다.
-PassThru가 지정된 경우 수정될 속성의 이름 및 값이 포함된 PSObject가 파이프라인에 기록됩니다.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -value ('111-111-1111','222-222-2222')</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com' 개체의 다중값 속성 otherTelephone 값을 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -Value @('333-333-3333')</dev:code>
  			<dev:remarks>
  			        <maml:para>'AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com' 개체의 다중값 속성 otherTelephone에 새 값을 추가합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152478</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-Acl
		</command:name>
		<maml:description>
			<maml:para>지정된 Active Directory 개체의 보안 설명자를 변경합니다.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Set-Acl cmdlet은 지정된 Active Directory 개체의 보안 설명자를 제공한 보안 설명자의 값과 일치하도록 변경합니다.

Set-ACL을 사용하려면 Path 매개 변수를 사용하여 보안 설명자를 변경할 리소스를 식별하고 AclObject 매개 변수를 사용하여 적용할 값이 있는 보안 설명자를 제공합니다. Set-ACL은 AclObject 매개 변수 값을 모델로 사용하고 리소스의 보안 설명자 값을 AclObject 매개 변수의 값과 일치하도록 변경합니다. Set-ACL은 Path로 식별된 개체의 보안 설명자를 AclObject에 의해 지정된 값으로 설정합니다.


</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Acl</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>AclObject</maml:name>
				<maml:description>
					<maml:para>원하는 속성 값이 있는 ACL을 지정합니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>AclObject</maml:name>
			<maml:description>
				<maml:para>원하는 속성 값이 있는 ACL을 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			<dev:type>
				<maml:name>ObjectSecurity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>이 매개 변수는 Active Directory 공급자에서 무시됩니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>작업을 수행할 개체의 경로를 지정합니다.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>cmdlet 출력은 PassThru 플래그로 제어됩니다.  </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					-PassThru가 지정되지 않은 경우 없습니다.
–PassThru가 지정된 경우 수정된 보안 설명자를 나타내는 ActiveDirectorySecurity 개체가 반환됩니다.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          이 cmdlet은 Server 매개 변수를 사용하여 스냅숏을 대상으로 하는 경우 작동하지 않습니다.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- 예제 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ACL &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;  | Set-Acl &quot;AD:\CN=ADPSUser2,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>한 사용자 개체에서 Get-ACL cmdlet의 파이프된 결과를 사용하여 다른 사용자 개체의 보안 설명자를 설정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- 예제 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># Get the ACL
$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
# Get the user
$user = Get-ADUser &quot;CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
# Create ACE for write property
$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
# Add ACE to ACL
$acl.AddAccessRule($ace)
# Set the ACL
Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
</dev:code>
  			<dev:remarks>
  			        <maml:para>새 ACE를 추가하여 사용자의 보안 설명자를 수정합니다.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152470</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

</CmdletHelpPath>
</CmdletHelpPaths>
</ProviderHelp>
</helpItems>
