THEMA
    Active Directory-Filter

KURZBESCHREIBUNG
    Beschreibt die Syntax und das Verhalten des Suchfilters, der vom
    Active Directory-Modul für Windows PowerShell unterstützt wird.
    

DETAILBESCHREIBUNG
    Die meisten get-AD*-Cmdlets des Active Directory-Moduls suchen mit
    dem Filter-Parameter nach Objekten. Durch die Implementierung
    des Filter-Parameters wurde die Funktion des LDAP-Filters ersetzt. Zudem 
    werden nun PowerShell-Variablen, eine Vielzahlvon Datentypen, eine 
    verbesserte Fehlerprüfung sowie ein erweitertes Active Directory-Format 
    der PowerShell Expression Language unterstützt.

    Weitere Informationen zur Syntax der Windows PowerShell Expression
    Language finden Sie unter "about_filter".

    Hinweis: Das PowerShell-Thema about_filter verweist auf weitere
    hilfreiche Expression Language-Themen.


  Unterstützung der LDAP-Filtersyntax
    Die LDAP-Filtersyntax wird über den LDAPFilter-Parameter
    unterstützt. Beispiele zum LDAP-Filter finden Sie zusammen mit den 
    Beispielen zu Filtern des neuen Active Directory-Moduls im Abschnitt 
    "Beispiele für Filter" in diesem Thema.

  Suchumfang und -tiefe
    Der Umfang und die Tiefe der filtergesteuerten Suche können mit
    zwei Cmdlet-Parametern des Active Directory-Moduls geändert werden: 
    SearchBase und SearchScope.

    Wenn der Searchbase-Parameter im Kontext des Active Directory
    -Anbieters nicht angegeben ist, wird SearchBase standardmäßig
    auf den aktuellen Pfad festgelegt. Bei einer Ausführung
    außerhalb des Active Directory-Anbieters wird SearchBase
    standardmäßig auf den DefaultNamingContext des
    Servers festgelegt.

    Der SearchScope-Parameter ist standardmäßig auf den Wert "Subtree"
    vom Enumerationstyp "ADSearchScope" festgelegt.

    Weitere Informationen finden Sie in den Beschreibungen des 
    SearchBase-Parameters und des SearchScope-Parameters für ein beliebiges 
    Get-AD*-Cmdlet.


  Verhalten in Bezug auf Suchergebnisse
    Das Verhalten des Active Directory-Moduls in Bezug auf die
    Rückgabe von Suchergebnissen wird durch zwei Cmdlet-Parameter
    geändert: ResultPageSize und ResultSetSize.

    Mit ResultSetSize wird die maximale Anzahl zurückgegebener Objekte
    angegeben.

    Mit ResultPageSize wird die maximale Anzahl der Objekte für jede
    zurückgegebene Seite angegeben.

    Weitere Informationen finden Sie in den Beschreibungen des 
    ResultPageSize-Parameters und des ResultSetSize-Parameters für ein 
    beliebiges get-AD*-Cmdlet.


  Timeoutverhalten
    In den folgenden Anweisungen werden Timeoutbedingungen für das
    Active Directory-Modul sowie mögliche Aktionen bei deren
    Auftreten beschrieben.

    Das Standardtimeout des Active Directory-Moduls für alle Vorgänge
    beträgt 2 Minuten.

    Für Suchvorgänge verwendet das Active Directory-Modul eine 
    Seitennavigation mit einem Timeout von zwei Minuten pro Seitensuchvorgang.

    Hinweis: Da eine Suche möglicherweise Anforderungen von mehreren
    Serverseiten umfasst, kann die Gesamtdauer der Suche zwei Minuten 
    überschreiten.

    Mit einem TimeoutException-Fehler wird angegeben, dass ein Timeout
    aufgetreten ist.

    Wenn bei einem Suchvorgang eine TimeoutException-Fehler auftritt,
    können Sie mit dem ResultPageSize-Parameter eine kleinere
    Seitengröße festlegen.

    Wenn anschließend weiterhin ein TimeoutException-Fehler auftritt,
    empfiehlt es sich, den Filter entsprechend den Anweisungen im
    Abschnitt "Optimieren von Filtern" dieses Themas zu optimieren.
    

  Optimieren von Filtern
    Befolgen Sie die unten stehenden Richtlinien, um das Verhalten von
    Suchfiltern zu verbessern.

    Vermeiden Sie die Verwendung des Recursive-Parameters, da dies
    während des Suchvorgangs zu einer höheren Ressourcenauslastung
    führt.

    Vermeiden Sie die Verwendung von bitweisen AND-Operatoren und
    bitweisen OR-Operatoren. Weitere Informationen finden Sie unter
    "Unterstützte Operatoren" weiter unten in diesem Thema.

    Vermeiden Sie die Verwendung des logischen NOT-Operators.

    Untergliedern Sie die Suche in mehrere Abfragen mit eingeschränkten 
    Bedingungen.

    Hinweis: Eine vollständige Beschreibung der Syntax und der
    Verwendung von Filtern finden Sie im Abschnitt "Filtersyntax"
    des vorliegenden Themas.


  Beispiele für Filter
    Im folgenden Abschnitt finden Sie eine Vielzahl von Beispielen zur
    Verwendung von Filtern in häufig verwendeten Abfragen.

    -------------------------- BEISPIEL 1 --------------------------

    Abrufen aller Einträge:

        LDAP-Filterentsprechung
        (objectClass=*)

        Get-ADObject -Filter 'ObjectClass -like "*"'



    -------------------------- Beispiel 2 --------------------------


    Abrufen von Einträgen, die im allgemeinen Namen (CN) an beliebiger
    Stelle die Zeichenfolge "alex" enthalten:

        LDAP-Filterentsprechung
        (cn=*alex*)

        Get-ADObject -Filter 'CN -like "*alex*"'




    -------------------------- Beispiel 3 --------------------------


    Abrufen von Einträgen mit mehr als fünf falschen Kennworteingaben:

        LDAP-Filterentsprechung
        (badpwdcount>=5)

        Get-ADUser -Filter 'badpwdcount -ge 5'




    -------------------------- Beispiel 4 --------------------------


    Abrufen aller Benutzer mit einem E-Mail-Attribut:

        LDAP-Filterentsprechung
        (&(objectClass=user)(email=*))

        Get-ADUser -filter 'email -like "*"'

        -oder-

        Get-ADObject -filter 'email -like "*" -and ObjectClass -eq
        "user"'



    -------------------------- Beispiel 5 --------------------------


    Abrufen aller Benutzereinträge mit einem E-Mail-Attribut und einem
    Nachnamen, der gleich "scholl" ist:

        LDAP-Filterentsprechung
        (&(sn=scholl)(objectClass=user)(email=*))

        Get-ADUser -Filter 'Email -like "*" -and SurName -eq "scholl"'

        -oder-

        Get-ADUser -Filter 'Email -like "*" -and sn -eq "scholl"'



    -------------------------- Beispiel 6 --------------------------


    Abrufen aller Benutzereinträge mit einem allgemeinen Namen, der
    mit "arno" beginnt, und von Benutzern mit dem allgemeinen Namen
    "sven" oder "marianne":

        LDAP-Filterentsprechung
        (&(objectClass=user) | (cn=arno*)(cn=sven)(cn=marianne))

        Get-ADUser -Filter 'CN -like "arno*" -or CN -eq "sven" -or
        CN -eq "marianne"'

    Mit dem zweiten PowerShell-Skript im Beispiel werden eine
    komplexere Logik sowie die Steuerung der Rangfolge durch
    Einschließen in Klammern veranschaulicht.

        Get-ADObject -Filter 'objectClass -eq "user" -and
         (CN -like "arno*" -or CN -eq "sven" -or CN -eq "marianne")'



    -------------------------- Beispiel 7 --------------------------


    Abrufen aller Einträge ohne E-Mail-Attribut:

        LDAP-Filterentsprechung
        (!(email=*))

        Get-ADUser -Filter '-not Email -like "*"'

        -oder-

        Get-ADUser -Filter 'Email -notlike "*"'



    -------------------------- Beispiel 8 --------------------------


    Abrufen aller Benutzer, die sich seit dem 1. Januar 2007 nicht
    mehr angemeldet haben:

        LDAP-Filterentsprechung
        (&(lastlogon<=X)(objectClass=user))
        //wobei X die Anzahl der 100-Nanosekundenabschnitte seit dem
        1. Januar 1601 ist

        $date = new-object System.DateTime -ArgumentList @(2007,1,1,0,0,0)
        Get-ADUser -Filter '-not LastLogon -le $date'



    -------------------------- Beispiel 9 --------------------------


    Abrufen aller Benutzer, die sich innerhalb der letzten fünf Tage
    angemeldet haben:

        LDAP-Filterentsprechung
        (&(lastLogon>=128812906535515110)
          (objectClass=user)(!(objectClass=computer)))

        $date = (get-date) - (new-timespan -days 5)
        Get-ADUser -Filter 'lastLogon -gt $date'



    -------------------------- Beispiel 10 -------------------------


    Mit dem folgenden Beispiel für eine Abfragezeichenfolge wird nach
    Gruppenobjekten gesucht, für die das ADS_GROUP_TYPE_SECURIT
    Y_ENABLED-Flag festgelegt ist. Beachten Sie, dass der
    Dezimalwert von ADS_GROUP_TYPE_SECURITY_ENABLED (0x80000000 =
    2147483648) als Vergleichswert verwendet wird.

        LDAP-Filterentsprechung
        (&(objectCategory=group)(groupType:1.2.840.113556.1.4.803:=2147483648))

        Get-ADGroup -filter 'groupType -band 0x80000000'


    -------------------------- Beispiel 11 -------------------------

    LDAP_MATCHING_RULE_IN_CHAIN ist ein Übereinstimmungsregel-Objektbezeichner
    (OID), der eine Methode zum Suchen aller Vorgänger eines Objekts 
    bereitstellt. Viele Anwendungen, die Active Directory und AD LDS verwenden,
    basieren normalerweise auf hierarchischen Daten, die entsprechend den
    Beziehungen zwischen übergeordneten und untergeordneten Elementen geordnet
    sind. Früher wurde die Gruppenmitgliedschaft in Anwendungen anhand der 
    transitiven Gruppenerweiterung bestimmt. Dabei wurde jedoch übermäßig viel
    Bandbreite verwendet. Anwendungen mussten mehrere Roundtrips ausführen, um
    zu ermitteln, ob ein Objekt beim Durchlaufen eines Links bis zum Ende 
    "innerhalb der Kette" liegt.

    Bei einer solchen Abfrage soll beispielsweise überprüft werden, ob
    der Benutzer "user1" Mitglied der Gruppe "group1" ist.

    HINWEIS: "user1" ist möglicherweise kein direktes Mitglied der
    Gruppe "group1". Er kann auch Mitglied einer anderen Gruppe
    sein, bei der es sich um ein Mitglied von "group1" handelt.

    Sie legen die Basis auf den Benutzer-DN (cn=user1, cn=users, dc=x)
    sowie den Bereich auf die Basis fest und geben die folgende
    Abfrage an:

        LDAP-Filterentsprechung
        (memberof:1.2.840.113556.1.4.1941:=(cn=Group1,OU=groupsOU,DC=x)))

        Get-ADUser -Filter 'memberOf -RecursiveMatch "CN=Administrators,
        CN=Builtin,DC=Fabrikam,DC=com"'
        -SearchBase "CN=Administrator,CN=Users,DC=Fabrikam,DC=com"

    ---------------------------------------------------------------

  Filtersyntax
    In den folgenden Syntaxbeschreibungen wird mithilfe der Backus-Naur-Form 
    die Verwendung der PowerShell Expression Language für den Filter-Parameter
    veranschaulicht.

        <filter>  ::= "{" <FilterComponentList> "}"

        <FilterComponentList> ::= <FilterComponent> |
          <FilterComponent> <JoinOperator> <FilterComponent> |
          <NotOperator>  <FilterComponent>

        <FilterComponent> ::= <attr> <FilterOperator> <value> |
          "(" <FilterComponent> ")"

        <FilterOperator> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt"  | "-gt" |
          "-approx" | "-bor" | "-band" | "-recursivematch" | "-like" |
          "-notlike"

        <JoinOperator> ::= "-and" | "-or"

        <NotOperator> ::= "-not"

        <attr> ::= <PropertyName> | <LDAPDisplayName des Attributs>

        <value>::= < Dieser Wert wird mit den Objektdaten für das
        <ATTR>-Attribut verglichen, wobei der angegebene
        Filteroperator verwendet wird.

    Eine Liste unterstützter Eigenschaftennamen und der zugehörigen
    Typen finden Sie unter "get-help about_ActiveDirectory_ObjectModel".


  Unterstützte Operatoren
    In der folgenden Tabelle werden häufig verwendete Suchfilteroperatoren 
    aufgelistet.
    

                                                    
    Operator         Beschreibung                    LDAP-Entsprechung
    --------------- ------------------------------ ---------------------
    
    -eq              Gleich. Suchvorgänge mit        =
                     Platzhaltern werden nicht 
                     unterstützt.            
    -ne              Ungleich. Suchvorgänge mit      !x = y
                     Platzhaltern werden nicht 
                     unterstützt.         
    -approx          Ungefähr gleich.                ~=
    -le              Lexikografisch kleiner als      <=
                     oder gleich.     
    -lt              Lexikografisch kleiner als.     !x >= y
    -ge              Lexikografisch größer als       >=
                     oder gleich.       
    -gt              Lexikografisch größer als.      !x <= y

    -and             AND                             &
    -or              OR                              |
    -not             NOT                             !
    -bor             Bitweises OR                    :1.2.840.113556.1.4.804:=
    
    -band            Bitweises AND                   :1.2.840.113556.1.4.803:=
    -recursivematch  Verwenden Sie                   :1.2.840.113556.1.4.1941:=   
                     LDAP_MATCHING_RULE_IN_CHAIN
                     (Hinweis: Diese Steuerung kann 
                     erst ab Windows 2008 verwendet
                     werden.) 
    -like            Wie -eq, Platzhaltervergleiche  =
                     werden jedoch unterstützt. 
                     Einziges unterstütztes 
                     Platzhalterzeichen: *    
    -notlike         Entspricht nicht. Unterstützt   !x = y
                     Platzhaltervergleiche.         
    

    Hinweis: Andere PowerShell-Platzhalter als "*" (z. B. "?") werden
    von der -Filter-Parametersyntax nicht unterstützt.


  Operatorrangfolge
    In der folgenden Auflistung wird die Rangfolge der Operatoren für
    Filter von der höchsten zur niedrigsten Priorität angegeben.

    Höchste Priorität:    -eq | -ge | -le | -approx | -band | -bor |
                            -recursivematch | -ne | -like
                          -not
                          -and
    Niedrigste Priorität: -or

  Sonderzeichen
    Sonderzeichen in AD Filter-STRING-Daten, d. h. in doppelte 
    Anführungszeichen (" ") oder einfache Anführungszeichen (' ') 
    eingeschlossene Daten, müssen mit der folgenden Escapesequenz angegeben 
    werden:

    ASCII-Zeichen     Escapesequenzersatz
    ------------------- ------------------------------------------------
    
    "                   `"  (Diese Escapesequenz ist nur erforderlich,
                            wenn STRING-Daten in doppelte Anführungszeichen 
                            eingeschlossen werden.)
    '                   ''  (Diese Escapesequenz ist nur erforderlich,
                            wenn STRING-Daten in einfache Anführungszeichen 
                            eingeschlossen werden.)
    NUL                 \00 (Dies ist eine LDAP-Standardescapesequenz.)
    \                   \5c (Dies ist eine LDAP-Standardescapesequenz.)


  LDAP-Sonderzeichen
    ADFilter konvertiert automatisch alle nachstehenden, in STRING-Daten 
    erkannten Zeichen (d. h. in " " oder ' ' eingeschlossene Daten) in die 
    entsprechende LDAP-Escapesequenz. Endbenutzern müssen diese 
    LDAP-Escapesequenzen nicht bekannt sein.

    ASCII-Zeichen       Escapesequenzersatz
    ------------------- ------------------------------------------------
    
    *                    \2a  (Das Zeichen * wird nur in Vergleichen
                              mit -eq und -ne konvertiert; für 
                              Platzhaltervergleiche sollten die Operatoren 
                              -like und -notlike verwendet werden.)
    (                    \28
    )                    \29
    /                    \2f


  Weitere Hilfethemen zum Active Directory-Modul
    Weitere Informationen zum Optimieren von Filtern finden Sie im
    Thema "Creating More Efficient Microsoft Active Directory-Enabled 
    Applications" in der MSDN Library.

    Weitere Informationen zu Objekten des Active Directory-Moduls und
    ihren zugehörigen Attributen finden Sie unter 
    "about_ActiveDirectory_ObjectModel".
    
    Weitere Informationen zur Syntax der Windows PowerShell Expression
    Language finden Sie unter "about_filter".

    Hinweis: Das PowerShell-Thema about_filter verweist auf weitere
    hilfreiche Expression Language-Themen.


SIEHE AUCH
    about_ActiveDirectory
    about_ActiveDirectory_ObjectModel
    about_filter

