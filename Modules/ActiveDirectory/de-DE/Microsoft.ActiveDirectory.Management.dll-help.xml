<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Fügt einer Active Directory-Gruppe mindestens ein Mitglied hinzu.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Add-ADGroupMember&quot; fügt einer Active Directory-Gruppe mindestens einen Benutzer, eine Gruppe, ein Dienstkonto oder einen Computer als neues Mitglied hinzu.
 
Der Identity-Parameter gibt die Active Directory-Gruppe an, in die die neuen Mitglieder eingefügt werden. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch eine Gruppenobjektvariable angeben, z. B. $&lt;localGroupObject&gt;, oder ein Gruppenobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADGroup&quot; verwenden, um ein Gruppenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Add-ADGroupMember&quot; übergeben. 

Der Members-Parameter gibt die neuen Mitglieder an, die einer Gruppe hinzugefügt werden sollen. Sie können ein neues Mitglied durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den SAM-Kontonamen identifizieren. Sie können auch Benutzer-, Computer- und Gruppenobjektvariablen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als ein neues Mitglied angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können keine Benutzer-, Computer- oder Gruppenobjekte über die Pipeline an dieses Cmdlet übergeben. Um einer Gruppe Benutzer-, Computer- oder Gruppenobjekte über die Pipeline hinzuzufügen, verwenden Sie das Cmdlet &quot;Add-ADPrincipalGroupMembership&quot;.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>Gibt eine Reihe von Benutzer-, Gruppen- und Computerobjekten in einer durch Trennzeichen getrennten Liste an, die einer Gruppe hinzugefügt werden sollen. Zum Identifizieren der einzelnen Objekte verwenden Sie einen der folgenden Eigenschaftswerte. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter angegeben wird.

In diesem Beispiel werden ein hinzuzufügender Benutzer und eine hinzuzufügende Gruppe festgelegt, indem die Eigenschaft für den definierten Namen und den SAM-Kontonamen angegeben wird.
  -Members &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;sarahettichberichte&quot;

In diesem Beispiel werden ein Benutzer- und ein Gruppenobjekt angegeben, die in der aktuellen Windows PowerShell-Sitzung als Eingabe für den Parameter definiert sind. 

  -Members $userObject, $groupObject

Die für diesen Parameter angegebenen Objekte werden als Microsoft.ActiveDirectory.Management.ADPrincipal-Objekte verarbeitet. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup

Sie können keine Objekte über die Pipeline an diesen Parameter übergeben. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>Gibt eine Reihe von Benutzer-, Gruppen- und Computerobjekten in einer durch Trennzeichen getrennten Liste an, die einer Gruppe hinzugefügt werden sollen. Zum Identifizieren der einzelnen Objekte verwenden Sie einen der folgenden Eigenschaftswerte. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter angegeben wird.

In diesem Beispiel werden ein hinzuzufügender Benutzer und eine hinzuzufügende Gruppe festgelegt, indem die Eigenschaft für den definierten Namen und den SAM-Kontonamen angegeben wird.
  -Members &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;sarahettichberichte&quot;

In diesem Beispiel werden ein Benutzer- und ein Gruppenobjekt angegeben, die in der aktuellen Windows PowerShell-Sitzung als Eingabe für den Parameter definiert sind. 

  -Members $userObject, $groupObject

Die für diesen Parameter angegebenen Objekte werden als Microsoft.ActiveDirectory.Management.ADPrincipal-Objekte verarbeitet. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup

Sie können keine Objekte über die Pipeline an diesen Parameter übergeben. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Gruppenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember SvcAccPSOGroup SQL01,SQL02
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt die Benutzerkonten mit den SamAccountNames &quot;SQL01&quot; und &quot;SQL02&quot; der Gruppe &quot;SvcAccPSOGroup&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADGroupMember</dev:code>
  			<dev:remarks>
 				<maml:para>Cmdlet &quot;Add-ADGroupMember&quot; an Befehlspipelineposition 1
Geben Sie Werte für die folgenden Parameter an:
Identity: RodcAdmins
Members[0]: ChristianHess
Members[1]: DavidProbst
Members[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Veranschaulicht das Standardverhalten für dieses Cmdlet (keine Parameter angegeben). Fügt der Gruppe &quot;RodcAdmins&quot; Benutzerkonten mit den SamAccountNames &quot;ChristianHess&quot; und &quot;DavidProbst&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Server localhost:60000 -SearchBase &quot;OU=AccountDeptOU,DC=AppNC&quot; -filter { name -like &quot;AccountLeads&quot; } | Add-ADGroupMember -Members &quot;CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft eine Gruppe von der Organisationseinheit &quot;OU=AccountDeptOU,DC=AppNC&quot; in der AD LDS-Instanz &quot;localhost:60000&quot; mit dem Namen &quot;AccountLeads&quot; ab und übergibt diese über die Pipeline an Add-ADGroupMember. Hierdurch wird das Benutzerkonto mit dem DistinguishedName &quot;CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC&quot; hinzugefügt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144933</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>Fügt mindestens einer Active Directory-Gruppe ein Mitglied hinzu.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Add-ADPrincipalGroupMembership&quot; fügt mindestens einer Active Directory-Gruppe einen Benutzer, eine Gruppe, ein Dienstkonto oder einen Computer als neues Mitglied hinzu.

Der Identity-Parameter gibt den neuen Benutzer, Computer oder die neue Gruppe an, der bzw. die hinzugefügt werden soll. Sie können den Benutzer, die Gruppe oder den Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den SAM-Kontonamen identifizieren. Sie können auch eine Benutzer-, Gruppen- oder Computerobjektvariable angeben, z. B. $&lt;localGroupObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADGroup&quot; verwenden, um ein Gruppenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Add-ADPrincipalGroupMembership&quot; übergeben. Auf ähnliche Weise können Sie &quot;Get-ADUser&quot; oder &quot;Get-ADComputer&quot; zum Abrufen von Benutzer- und Computerobjekten verwenden, die über die Pipeline übergeben werden sollen.

Dieses Cmdlet sammelt alle über die Pipeline übergebenen Benutzer-, Computer- und Gruppenobjekte und fügt diese Objekte der angegebenen Gruppe dann mit einem Active Directory-Vorgang hinzu.

Der MemberOf-Parameter gibt die Gruppen an, in die das neue Mitglied aufgenommen wird. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch eine Gruppenobjektvariable angeben, z. B. $&lt;localGroupObject&gt;. Um mehr als eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können keine Gruppenobjekte über die Pipeline an den MemberOf-Parameter übergeben. Um einer Gruppe ein Gruppenmitglied hinzuzufügen, das über die Pipeline übergeben wird, verwenden Sie das Cmdlet &quot;Add-ADGroupMember&quot;.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Gruppen an, denen ein Benutzer, ein Computer oder eine Gruppe als Mitglied hinzugefügt werden soll. Sie können eine Gruppe durch Bereitstellen eines der folgenden Werte identifizieren. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Wenn Sie mehr als eine Gruppe angeben, trennen Sie diese in der Liste durch Kommas.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, indem Sie Werte für den SAM-Kontonamen verwenden.
  -MemberOf &quot;SaraHettichGruppe&quot;, &quot;ChristianHessGruppe&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Gruppen an, denen ein Benutzer, ein Computer oder eine Gruppe als Mitglied hinzugefügt werden soll. Sie können eine Gruppe durch Bereitstellen eines der folgenden Werte identifizieren. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Wenn Sie mehr als eine Gruppe angeben, trennen Sie diese in der Liste durch Kommas.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, indem Sie Werte für den SAM-Kontonamen verwenden.
  -MemberOf &quot;SaraHettichGruppe&quot;, &quot;ChristianHessGruppe&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Ein Prinzipalobjekt (Microsoft.ActiveDirectory.Management.ADPrincipal), das einen Benutzer, Computer oder eine Gruppe darstellt. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein Prinzipalobjekt zurück, das das geänderte Benutzer-, Computer- oder Gruppenobjekt darstellt, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership -Identity SQLAdmin1 -MemberOf DlgtdAdminsPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt der Gruppe &quot;DlgtdAdminsPSOGroup&quot; den Benutzer mit dem SamAccountName &quot;SQLAdmin1&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount*&quot;' | Add-ADPrincipalGroupMembership -MemberOf SvcAccPSOGroup
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Benutzer mit &quot;SvcAccount&quot; im Namen ab und fügt sie der Gruppe &quot;SvcAccPSOGroup&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADPrincipalGroupMembership</dev:code>
  			<dev:remarks>
 				<maml:para>Cmdlet &quot;Add-ADPrincipalGroupMembership&quot; an Befehlspipelineposition 1
Geben Sie Werte für die folgenden Parameter an:
Identity: DavidProbst
MemberOf[0]: RodcAdmins
MemberOf[1]: Allowed RODC Password Replication Group
MemberOf[2]:</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Veranschaulicht das Standardverhalten für dieses Cmdlet (keine Parameter angegeben).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser  -Server localhost:60000 -SearchBase &quot;DC=AppNC&quot; -filter { Title -eq &quot;Account Lead&quot; -and Office -eq &quot;Branch1&quot; } | Add-ADPrincipalGroupMembership -MemberOf &quot;CN=AccountLeads,OU=AccountDeptOU,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt alle Mitarbeiter in &quot;Branch1&quot; in der AD LDS-Instanz-&quot;localhost:60000&quot;, deren Titel &quot;Account Lead&quot; lautet, der Gruppe mit dem DistinguishedName &quot;CN=AccountLeads,OU=AccountDeptOU,DC=AppNC&quot; hinzu.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144934</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>Wendet eine abgestimmte Kennwortrichtlinie auf mindestens einen Benutzer und mindestens eine Gruppe an.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Add-ADFineGrainedPasswordPolicySubject&quot; wendet eine abgestimmte Kennwortrichtlinie auf mindestens eine globale Sicherheitsgruppen und auf mindestens einen Benutzer an. 

Der Identity-Parameter gibt die anzuwendende abgestimmte Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen, GUID bzw. Namen identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable für eine abgestimmte Kennwortrichtlinie festlegen, z. B. $&lt;localPasswordPolicyObject&gt;, oder Sie übergeben ein Objekt für eine abgestimmte Kennwortrichtlinie über die Pipeline an den Identity-Parameter. Beispielsweise können Sie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ein Objekt für eine abgestimmte Kennwortrichtlinie abrufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Add-ADFineGrainedPasswordPolicySubject&quot; übergeben. 

Der Subjects-Parameter gibt die Benutzer und globalen Sicherheitsgruppen an. Sie können einen Benutzer oder eine globale Sicherheitsgruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch Objektvariablen für Benutzer und globale Sicherheitsgruppen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als einen Benutzer oder eine Gruppe angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Um Objekte für Benutzer und globale Sicherheitsgruppen über die Pipeline an den Subjects-Parameter zu übergeben, verwenden Sie das Cmdlet &quot;Get-ADUser&quot; oder das Cmdlet &quot;Get-ADGroup&quot;. Auf diese Weise können Sie die Benutzer- oder Gruppenobjekte abrufen und dann über die Pipeline an das Cmdlet &quot;Add-ADFineGrainedPasswordPolicySubject&quot; übergeben. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>Gibt mindestens einen Benutzer oder mindestens eine Gruppe an. Um mehr als einen Benutzer oder eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können einen Benutzer oder eine Gruppe durch einen der folgenden Eigenschaftswerte identifizieren.
  Definierter Name (DN)
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mithilfe eines definierten Namens und SAM-Kontonamen auf eine Liste von Benutzern und Gruppen festgelegt wird.
  -Subjects &quot;CN=SaraHettich, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;sarahettichberichte&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>Gibt mindestens einen Benutzer oder mindestens eine Gruppe an. Um mehr als einen Benutzer oder eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können einen Benutzer oder eine Gruppe durch einen der folgenden Eigenschaftswerte identifizieren.
  Definierter Name (DN)
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mithilfe eines definierten Namens und SAM-Kontonamen auf eine Liste von Benutzern und Gruppen festgelegt wird.
  -Subjects &quot;CN=SaraHettich, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;sarahettichberichte&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy, Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen. Vom Subjects-Parameter wird mindestens ein Prinzipalobjekt empfangen, das Objekte für Benutzer und Sicherheitsgruppen darstellt. Abgeleitete Prinzipaltypen, z. B. die folgenden Typen, werden ebenfalls vom Subjects-Parameter akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Objekt für die abgestimmte Kennwortrichtlinie zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DomainUsersPSO -Subjects 'Domain Users'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Wendet die abgestimmte Kennwortrichtlinie mit dem Namen &quot;DomainUsersPSO&quot; auf die globale Sicherheitsgruppe &quot;Domain Users&quot; an.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>Wendet die abgestimmte Kennwortrichtlinie mit dem Namen &quot;DlgtdAdminsPSO&quot; auf zwei Benutzer mit den &quot;SAMAccountNames&quot; &quot;BobKe&quot; und &quot;KimAb&quot; an.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects DlgtdAdminGroup</dev:code>
  			<dev:remarks>
  			        <maml:para>Wendet die abgestimmte Kennwortrichtlinie mit dem Namen &quot;DlgtdAdminsPSO&quot; auf die Gruppe &quot;DlgtdAdminGroup&quot; an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup -Filter {lastname -eq &quot;John&quot;} | Add-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>Wendet die abgestimmte Kennwortrichtlinie mit dem Namen &quot;DlgtdAdminsPSO&quot; auf alle Benutzer an, deren Nachname &quot;John&quot; lautet.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144935</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>Fügt der Zulassungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für schreibgeschützte Domänencontroller Benutzer, Computer und Gruppen hinzu.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Durch das Cmdlet &quot;Add-ADDomainControllerPasswordReplicationPolicy&quot; wird der Zulassungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für schreibgeschützte Domänencontroller (RODC) mindestens ein Benutzer, Computer bzw. mindestens eine Gruppe hinzugefügt. 

Der Identity-Parameter gibt den RODC an, der Zulassungs- und Verweigerungslisten verwendet, um die Kennwortreplikationsrichtlinie anzuwenden. Sie können einen Domänencontroller durch die GUID, IPV4Address, globale IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: Name des Serverobjekts, das den Domänencontroller darstellt, definierter Name (DN) des NTDS-Einstellungsobjekts des Serverobjekts, GUID des NTDS-Einstellungsobjekts des Serverobjekts unter der Konfigurationspartition oder DN des Computerobjekts, das den Domänencontroller darstellt. Sie können auch den Identity-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerobject&gt;, oder ein Domänencontrollerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomainController&quot; verwenden, um ein Domänencontrollerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Add-ADDomainControllerPasswordReplicationPolicy&quot; übergeben. Sie müssen einen schreibgeschützten Domänencontroller angeben. Wenn Sie einen beschreibbaren Domänencontroller für diesen Parameter angeben, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der AllowedList-Parameter gibt die Benutzer, Computer und Gruppen an, die der Zulassungsliste hinzugefügt werden sollen. Auf ähnliche Weise gibt der DeniedList-Parameter die Benutzer, Computer und Gruppen an, die der Verweigerungsliste hinzugefügt werden sollen. Sie müssen den AllowedList-Parameter und/oder den DeniedList-Parameter angeben. Sie können einen Benutzer, Computer oder eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch Benutzer-, Computer- oder Gruppenvariablen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als ein Element angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Wenn ein angegebener Benutzer, Computer bzw. eine angegebene Gruppe nicht auf der Zulassungs- oder Verweigerungsliste aufgeführt ist, gibt das Cmdlet keinen Fehler zurück.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die der Liste der Konten hinzugefügt werden sollen, die ihre Kennwörter in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
      Beispiel: sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -AllowedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Add-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die der Liste der Konten hinzugefügt werden sollen, die ihre Kennwörter nicht in diesen schreibgeschützten Domänencontroller (RODC) replizieren dürfen. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel: sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -DeniedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die der Liste der Konten hinzugefügt werden sollen, die ihre Kennwörter in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
      Beispiel: sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -AllowedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die der Liste der Konten hinzugefügt werden sollen, die ihre Kennwörter nicht in diesen schreibgeschützten Domänencontroller (RODC) replizieren dürfen. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel: sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -DeniedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für einen schreibgeschützten Domänencontroller (RODC) empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine.</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt Benutzerkonten der Zulassungsliste auf einem bestimmten RODC mit den angegebenen SamAccountNames hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt Benutzerkonten der Zulassungsliste auf einem bestimmten RODC mit den angegebenen SamAccountNames hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144936</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Add-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Fügt einem Active Directory-Computer mindestens ein Dienstkonto hinzu.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Add</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Add-ADComputerServiceAccount&quot; fügt einem Active Directory-Computer mindestens ein Computerdienstkonto hinzu. 

Der Computer-Parameter gibt den Active Directory-Computer an, der die neuen Dienstkonten hostet. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Computer-Parameter auch auf eine Computerobjektvariable festlegen, z. B. $&lt;localComputerobject&gt;, oder ein Computerobjekt über die Pipeline an den Computer-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADComputer&quot; verwenden, um ein Computerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Add-ADComputerServiceAccount&quot; übergeben. 

Der ServiceAccount-Parameter gibt die hinzuzufügenden Dienstkonten an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch Dienstkonto-Objektvariablen angeben, z. B. $&lt;localServiceAccountObject&gt;. Wenn Sie mehr als ein Konto angeben, verwenden Sie eine durch Trennzeichen getrennte Liste.

Hinweis: Das Hinzufügen eines Dienstkontos ist ein anderer Vorgang als das lokale Installieren des Dienstkontos.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Add-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>Gibt mindestens ein Active Directory-Dienstkonto an. Sie können ein Dienstkonto mit einem der folgenden Eigenschaftswerte identifizieren: 
  Definierter Name 
    Beispiel: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
   SAM-Kontoname (sAMAccountName) 
    Beispiel: serviceadmin

Im folgenden Beispiel wird gezeigt, wie ein Dienstkonto für diesen Parameter mit dem SAM-Kontonamen angegeben wird.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>Gibt mindestens ein Active Directory-Dienstkonto an. Sie können ein Dienstkonto mit einem der folgenden Eigenschaftswerte identifizieren: 
  Definierter Name 
    Beispiel: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
   SAM-Kontoname (sAMAccountName) 
    Beispiel: serviceadmin

Im folgenden Beispiel wird gezeigt, wie ein Dienstkonto für diesen Parameter mit dem SAM-Kontonamen angegeben wird.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Computer-Parameter wird ein Computerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Computerobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt das Dienstkonto &quot;SvcAcct1&quot; dem Computerkonto &quot;ComputerAcct1&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Add-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt die beiden Dienstkonten &quot;SvcAcct1&quot; und &quot;SvcAcct2&quot; dem Computerkonto &quot;ComputerAcct1&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144937</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Reset-ADServiceAccountPassword
		</command:name>
		<maml:description>
			<maml:para>Setzt das Kennwort für das Dienstkonto eines Computers zurück.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Reset</command:verb>
		<command:noun>ADServiceAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Reset-ADServiceAccountPassword&quot; wird das Dienstkontokennwort für den lokalen Computer zurückgesetzt. Dieses Cmdlet muss auf dem Computer ausgeführt werden, auf dem das Dienstkonto installiert ist.
 
Der Identity-Parameter gibt das Active Directory-Dienstkonto an, dessen Kennwort zurückgesetzt wird. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable eines Dienstkontos festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder ein Dienstkontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADServiceAccount&quot; verwenden, um ein Dienstkontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Reset- ADServiceAccountPassword&quot; übergeben.

Hinweis: Wenn Sie das Kennwort für einen Computer zurücksetzen, setzen Sie gleichzeitig auch alle Dienstkontokennwörter für diesen Computer zurück.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Apply-ADServiceAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Reset-ADServiceAccountPassword ServiceAccount1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Setzt das Kennwort für das Dienstkonto &quot;ServiceAccount1&quot; zurück. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144938</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>Löscht das Ablaufdatum für ein Active Directory-Konto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Clear-ADAccountExpiration&quot; löscht das Ablaufdatum für einen Active Directory-Benutzer oder ein Active Directory-Computerkonto. Wenn Sie das Ablaufdatum für ein Konto löschen, läuft das Konto nicht ab.

Der Identity-Parameter gibt den Benutzer oder das Computerkonto an, der bzw. das geändert werden soll. Sie können einen Benutzer oder eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch den Identity-Parameter auf eine Benutzer- oder Computerobjektvariable festlegen, z. B. $&lt;localUserObject&gt;, oder ein Benutzer- bzw. Computerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot; oder &quot;Search-ADAccount&quot; verwenden, um ein Objekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Clear-ADAccountExpiration&quot; übergeben. 

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Ein Kontoobjekt (Microsoft.ActiveDirectory.Management.ADAccount) wird vom Identity-Parameter empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity JeffPrice
</dev:code>
  			<dev:remarks>
  			        <maml:para>Löscht das Kontoablaufdatum für den Benutzer mit dem SamAccountName &quot;JeffPrice&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ADAccountExpiration -Identity &quot;CN=JeffPrice,DC=AppNC&quot; -server &quot;FABRIKAM-SVR1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Löscht das Kontoablaufdatum für den Benutzer mit DistinguishedName &quot;CN=JeffPrice,DC=AppNC&quot; auf der AD LDS-Instanz &quot;FABRIKAM-SVR1:60000&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144939</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Deaktiviert ein Active Directory-Konto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Disable-ADAccount&quot; deaktiviert einen Active Directory-Benutzer oder -Computer bzw. ein Active Directory-Dienstkonto.
 
Der Identity-Parameter gibt den Active Directory-Benutzer bzw. das Active Directory-Computerdienstkonto oder sonstige Dienstkonto an, der oder das deaktiviert werden soll. Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Benutzerkontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Disable-Account&quot; übergeben. Auf ähnliche Weise können Sie Kontoobjekte mithilfe von &quot;Get-ADComputer&quot; und &quot;Search-ADAccount&quot; abrufen.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das Konto mit dem SamAccountName &quot;KimAB&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das Konto mit dem DistinguishedName &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Disable-ADAccount
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert alle Konten bei der Organisationseinheit &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144940</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Disable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>Deaktiviert ein optionales Active Directory-Feature.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Disable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>&quot;Disable-ADOptionalFeature&quot; deaktiviert ein optionales Active Directory-Feature, das einem bestimmten Domänen- oder Gesamtstrukturmodus zugeordnet ist.

Der Identity-Parameter gibt das optionale Active Directory-Feature an, das Sie deaktivieren möchten. Sie können ein optionales Feature durch den definierten Namen (DN), die Feature-GUID oder Objekt-GUID identifizieren. Sie können auch den Parameter auf die Objektvariable eines optionalen Features festlegen, z. B. $&lt;localOptionalFeatureObject&gt;, oder ein Objekt für ein optionales Feature über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADOptionalFeature&quot; verwenden, um ein Objekt für ein optionales Feature abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Disable-ADOptionalFeature&quot; übergeben.

Der Scope-Parameter gibt den Bereich an, in dem das optionale Feature deaktiviert wird. Mögliche Werte für diesen Parameter sind Domain und Forest. 

Der Target-Parameter gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature deaktiviert wird. Sie können die Domäne oder Gesamtstruktur durch den vollqualifizierten Domänennamen (FQDN), den NetBIOS-Namen oder den definierten Namen (DN) des Domänennamenskontexts identifizieren. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Disable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich an, in dem das Feature aktiviert oder deaktiviert wird. Mögliche Werte für diesen Parameter lauten: 
  Domain oder 0
  Forest oder 1

Das folgende Beispiel zeigt, wie dieser Parameter festgelegt wird, um optionale Features innerhalb des Bereichs der Gesamtstruktur zu aktivieren oder zu deaktivieren.
  -Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>Gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature geändert werden soll. Sie können die Zieldomäne oder -gesamtstruktur durch Bereitstellen eines der folgenden Werte identifizieren:  
  Vollqualifizierter Domänenname der Gesamtstruktur oder Domäne 
    Beispiel: corp.Fabrikam.com
  NetBIOS-Name der Gesamtstruktur oder Domäne
    Beispiel: corp
  Definierter Name des Domänennamenskontexts
    Beispiel: DC=corp, DC=Fabrikam, DC=com

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen Domänennamenskontext festgelegt wird.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich an, in dem das Feature aktiviert oder deaktiviert wird. Mögliche Werte für diesen Parameter lauten: 
  Domain oder 0
  Forest oder 1

Das folgende Beispiel zeigt, wie dieser Parameter festgelegt wird, um optionale Features innerhalb des Bereichs der Gesamtstruktur zu aktivieren oder zu deaktivieren.
  -Scope Forest</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>Gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature geändert werden soll. Sie können die Zieldomäne oder -gesamtstruktur durch Bereitstellen eines der folgenden Werte identifizieren:  
  Vollqualifizierter Domänenname der Gesamtstruktur oder Domäne 
    Beispiel: corp.Fabrikam.com
  NetBIOS-Name der Gesamtstruktur oder Domäne
    Beispiel: corp
  Definierter Name des Domänennamenskontexts
    Beispiel: DC=corp, DC=Fabrikam, DC=com

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen Domänennamenskontext festgelegt wird.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für ein optionales Feature empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'fabrikam' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das optionale Feature (Name &quot;Feature 1&quot;) für die Gesamtstruktur (NetBIOS-Name &quot;fabrikam&quot;). Dieser Vorgang sollte für den DC ausgeführt werden, der die FSMO-Benennungsmasterrolle enthält.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature -Identity 'CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das optionale Feature (dn &quot;CN=Feature 1,CN=Optional Features,CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=fabrikam,DC=com&quot;) für die Gesamtstruktur (FQDN-Name &quot;fabrikam.com&quot;). Dieser Vorgang sollte für den DC ausgeführt werden, der die FSMO-Benennungsmasterrolle enthält.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionaFeature -Identity '54ec6e43-75a8-445b-aa7b-346a1e096659' -Scope Domain -Target 'DC=fabrikam,DC=com' -Server DC1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das optionale Feature (Feature-GUID &quot;54ec6e43-75a8-445b-aa7b-346a1e096659&quot;) für die Domäne (dn &quot;DC=ntdev,DC=fabrikam,DC=com&quot;). Dieser Vorgang sollte für den DC ausgeführt werden, der die FSMO-Benennungsmasterrolle enthält.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Disable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert das optionale Feature (Name &quot;Feature 1&quot;) für die AD LDS-Instanz (dn &quot;CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}&quot;). Dieser Vorgang sollte für die AD LDS-Instanz ausgeführt werden, die die FSMO-Benennungsmasterrolle enthält.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144941</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Aktiviert ein Active Directory-Konto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Enable-ADAccount&quot; aktiviert einen Active Directory-Benutzer oder -Computer bzw. ein Active Directory-Dienstkonto.
 
Der Identity-Parameter gibt den Active Directory-Benutzer oder -Computer bzw. das Active Directory-Dienstkonto an, der oder das aktiviert werden soll. Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Enable-ADAccount&quot; übergeben. Auf ähnliche Weise können Sie Kontoobjekte mithilfe von &quot;Get-ADComputer&quot; und &quot;Search-ADAccount&quot; abrufen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>Aktiviert das Konto mit dem SamAccountName &quot;KimAB&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Aktiviert das Konto mit dem DistinguishedName &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; | Enable-ADAccount
</dev:code>
  			<dev:remarks>
  			        <maml:para>Deaktiviert alle Konten bei der Organisationseinheit &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144942</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountAuthorizationGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Enable-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>Aktiviert ein optionales Active Directory-Feature.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Enable</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>&quot;Enable-ADOptionalFeature&quot; aktiviert ein optionales Active Directory-Feature, das einem bestimmten Domänen- oder Gesamtstrukturmodus zugeordnet ist. Optionale Active Directory-Features, die von einem angegebenen Domänen- oder Gesamtstrukturmodus abhängig sind, müssen nach dem Festlegen des Domänenmodus oder Gesamtstrukturmodus explizit aktiviert werden.

Der Identity-Parameter gibt das optionale Active Directory-Feature an, das Sie aktivieren möchten. Sie können ein optionales Feature durch den definierten Namen (DN), die Feature-GUID oder Objekt-GUID identifizieren. Sie können auch den Parameter auf die Objektvariable eines optionalen Features festlegen, z. B. $&lt;localOptionalFeatureObject&gt;, oder ein Objekt für ein optionales Feature über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADOptionalFeature&quot; verwenden, um ein Objekt für ein optionales Feature abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Enable-ADOptionalFeature&quot; übergeben.

Der Scope-Parameter gibt den Bereich an, in dem das optionale Feature aktiviert wird. Mögliche Werte für diesen Parameter sind Domain und Forest. 

Der Target-Parameter gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature aktiviert wird. Sie können die Domäne oder Gesamtstruktur durch den vollqualifizierten Domänennamen (FQDN), den NetBIOS-Namen oder den definierten Namen (DN) des Domänennamenskontexts identifizieren. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Enable-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich an, in dem das Feature aktiviert oder deaktiviert wird. Mögliche Werte für diesen Parameter lauten: 
  Domain oder 0
  Forest oder 1

Das folgende Beispiel zeigt, wie dieser Parameter festgelegt wird, um optionale Features innerhalb des Bereichs der Gesamtstruktur zu aktivieren oder zu deaktivieren.
  -Scope Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Unknown</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">ForestOrConfigurationSet</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Domain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>Gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature geändert werden soll. Sie können die Zieldomäne oder -gesamtstruktur durch Bereitstellen eines der folgenden Werte identifizieren:  
  Vollqualifizierter Domänenname der Gesamtstruktur oder Domäne 
    Beispiel: corp.Fabrikam.com
  NetBIOS-Name der Gesamtstruktur oder Domäne
    Beispiel: corp
  Definierter Name des Domänennamenskontexts
    Beispiel: DC=corp, DC=Fabrikam, DC=com

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen Domänennamenskontext festgelegt wird.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich an, in dem das Feature aktiviert oder deaktiviert wird. Mögliche Werte für diesen Parameter lauten: 
  Domain oder 0
  Forest oder 1

Das folgende Beispiel zeigt, wie dieser Parameter festgelegt wird, um optionale Features innerhalb des Bereichs der Gesamtstruktur zu aktivieren oder zu deaktivieren.
  -Scope Forest</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeatureScope</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeatureScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Unknown</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>ForestOrConfigurationSet</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>Target</maml:name>
			<maml:description>
				<maml:para>Gibt die Domäne oder Gesamtstruktur an, in der das optionale Feature geändert werden soll. Sie können die Zieldomäne oder -gesamtstruktur durch Bereitstellen eines der folgenden Werte identifizieren:  
  Vollqualifizierter Domänenname der Gesamtstruktur oder Domäne 
    Beispiel: corp.Fabrikam.com
  NetBIOS-Name der Gesamtstruktur oder Domäne
    Beispiel: corp
  Definierter Name des Domänennamenskontexts
    Beispiel: DC=corp, DC=Fabrikam, DC=com

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen Domänennamenskontext festgelegt wird.
  -Target &quot;DC=corp,DC=Fabrikam,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADEntity</command:parameterValue>
			<dev:type>
				<maml:name>ADEntity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für ein optionales Feature empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.

Recycle Bin Feature: Sobald der Active Directory-Papierkorb aktiviert wird, werden alle Objekte, die vor dem Aktivieren des Active Directory-Papierkorbs gelöscht wurden (Tombstone-Objekte), wiederverwendete Objekte. Sie werden nicht mehr im Container &quot;Deleted Objects&quot; angezeigt und können nicht über den Active Directory-Papierkorb wiederhergestellt werden.  Die einzige Möglichkeit zum Wiederherstellen dieser Objekte stellt eine autorisierende Wiederherstellung aus einer AD DS-Sicherung dar, die vor dem Aktivieren des Active Directory-Papierkorbs erstellt wurde.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Recycle Bin Feature' -Scope ForestOrConfigurationSet -Target 'fabrikam.com' -server dc1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Aktiviert das optionale Feature &quot;Recycle Bin Feature&quot; für die Gesamtstruktur &quot;fabrikam.com&quot;.  Dieser Vorgang muss auf dem Domänencontroller ausgeführt werden, der die FSMO-Benennungsmasterrolle enthält.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Enable-ADOptionalFeature 'Feature 1' -Scope ForestOrConfigurationSet -Target 'CN=Configuration,CN={0241853A-6BBF-48AA-8AE0-9C35D0C91B7B}' -server lds.fabrikam.com:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>Aktiviert das optionale Feature &quot;Recycle Bin Feature&quot; für die AD LDS-Instanz &quot;lds.fabrikam.com&quot;.  Dieser Vorgang muss auf der AD LDS-Instanz ausgeführt werden, die die FSMO-Benennungsmasterrolle enthält.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code> Set-ADObject -Identity &quot;CN=Partitions,CN=Configuration,CN={4F971828-5BE4-4E94-B532-58F2BFB6A3A5}&quot; -replace @{&quot;msDS-Behavior-Version&quot;=4}</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den ForestMode (Gesamtstruktur-Funktionsebene) auf einer AD LDS-Instanz auf &quot;Windows2008R2Forest&quot; fest. ForestMode muss &quot;Windows2008R2Forest&quot; oder höher lauten, um das Recycle Bin Feature für AD LDS zu aktivieren.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144943</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADObject
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens ein Active Directory-Objekt ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADObject&quot; ruft ein Active Directory-Objekt ab oder führt eine Suche aus, um mehrere Objekte abzurufen. 

Der Identity-Parameter gibt das abzurufende Active Directory-Objekt an. Sie können das abzurufende Objekt durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Parameter auf eine Active Directory-Objektvariable festlegen, z. B. $&lt;localADObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. 

Um mehr als ein Objekt zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.  

Dieses Cmdlet ruft einen Standardsatz von Active Directory-Objekteigenschaften ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Computerobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com 
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADObject

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Active Directory-Objekt zurück. 

Das Cmdlet &quot;Get-ADObject&quot; gibt einen Standardsatz von ADObject-Eigenschaftswerten zurück. Um zusätzliche ADObject-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter des Cmdlets. 

Die folgenden Beispiele veranschaulichen, wie die Eigenschaften für ein ADObject-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;object&gt; durch eine Active Directory-Objekt-ID. 

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADObject-Objekts abzurufen, verwenden Sie folgenden Befehl:
     Get-ADObject &lt;object&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADObject-Objekts abzurufen, verwenden Sie folgenden Befehl:
     Get-ADObject &lt;object&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -LDAPFilter &quot;(objectClass=site)&quot; -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties CanonicalName | FT Name,CanonicalName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name CanonicalName
---- -------------
HQ   FABRIKAM.COM/Configuration/Sites/HQ
BO1  FABRIKAM.COM/Configuration/Sites/BO1
BO2  FABRIKAM.COM/Configuration/Sites/BO2
BO3  FABRIKAM.COM/Configuration/Sites/BO3
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Zeigt mithilfe der LDAP-Filtersyntax eine Liste von Sites für Fabrikam an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'ObjectClass -eq &quot;site&quot;' -SearchBase 'CN=Configuration,DC=Fabrikam,DC=Com' -Properties siteObjectBL | foreach {$_.siteObjectBL}
</dev:code>
  			<dev:remarks>
 				<maml:para>CN=192.167.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.166.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.165.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.164.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.163.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.162.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.161.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.160.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.159.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.158.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
CN=192.157.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Siteobjekte aus dem Konfigurationsnamenskontext ab und durchläuft dann die Liste, wobei &quot;siteObjectBL&quot; ausgegeben wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02); Get-ADObject -Filter 'whenChanged -gt $changeDate' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Objekte ab, einschließlich der gelöschten Objekte, deren whenChanged-Attribut größer als das angegebene Datum ist. Beachten Sie, dass sowohl gelöschte als auch nicht gelöschte (und nicht wiederverwendete) Objekte, die dem Filter entsprechen, zurückgegeben werden. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID        : 98118958-91c7-437d-8ada-ba0b66db823b
Deleted           : True
DistinguishedName : CN=Andreas Hauser\0ADEL:98118958-91c7-437d-8ada-ba0b66db823b,CN=Deleted Objects,DC=FABRIKAM,DC=COM
Name              : Andreas Hauser
                    DEL:98118958-91c7-437d-8ada-ba0b66db823b
ObjectClass           : user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle gelöschten Objekte ab, deren whenChanged-Attribut größer als das angegebene Datum ist. Durch die Klausel &quot;name -ne &quot;Deleted Objects&quot;&quot; wird sichergestellt, dass der Container &quot;Deleted Objects&quot; nicht zurückgegeben wird. Hiermit werden nur Objekte zurückgegeben, die wiederhergestellt werden können.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$changeDate = New-Object DateTime(2008, 11, 18, 1, 40, 02)
Get-ADObject -Filter 'whenChanged -gt $changeDate -and isDeleted -eq $true -and isRecycled -ne $true -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID        : 12d53e7f-aaf7-4790-b41a-da19044504db
Deleted           : True
DistinguishedName : CN=Craig Dewar\0ADEL:12d53e7f-aaf7-4790-b41a-da19044504db,CN=Deleted Objects,DC=Fabrikam,DC=com
Name              : Craig Dewar
                    DEL:12d53e7f-aaf7-4790-b41a-da19044504db
ObjectClass           : user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle gelöschten Objekte ab, deren whenChanged-Attribut größer als das angegebene Datum ist UND die zum Zeitpunkt des Löschens untergeordnete Elemente der angegebenen Organisationseinheit waren. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Identity &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>ObjectGUID                    DistinguishedName             Name                          ObjectClass
----------                    -----------------             ----                          -----------
62b2e185-9322-4980-9c93-cf... DC=AppNC                      AppNC                         domainDNS
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Informationen des domainDNS-Objekts einer LDS-Instanz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144944</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADRootDSE
		</command:name>
		<maml:description>
			<maml:para>Ruft den Stamm einer Verzeichnisserver-Informationsstruktur ab. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADRootDSE</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADRootDSE&quot; ruft das konzeptionelle Objekt ab, das den Stamm der Verzeichnisinformationsstruktur eines Verzeichnisservers darstellt. Diese Struktur stellt Informationen über die Konfiguration und die Funktionen des Verzeichnisservers bereit, z. B. den definierten Namen des Konfigurationscontainers, die aktuelle Uhrzeit auf dem Verzeichnisserver und die Funktionsebenen des Verzeichnisservers und der Domäne.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADRootDSE</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADRootDSE</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Dieses Cmdlet gibt ein ADRootDSE-Objekt aus, das die Datenstruktur für den angegebenen Verzeichnisserver darstellt.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE
</dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 18.03.2009 11:12:55 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-DC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-DC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-DC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft rooDSE vom Standarddomänencontroller ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server Fabrikam-RODC1 -Properties supportedExtension 
</dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,DC=Fabrikam,DC=com 
currentTime                   : 18.03.2009 11:12:55 
defaultNamingContext          : DC=Fabrikam,DC=com 
dnsHostName                   : FABRIKAM-RODC1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
domainFunctionality           : Windows2003Domain 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 23015 
isGlobalCatalogReady          : {TRUE} 
isSynchronized                : {TRUE} 
ldapServiceName               : Fabrikam.com:FABRIKAM-RODC1$@FABRIKAM.COM 
namingContexts                : {DC=Fabrikam,DC=com, CN=Configuration,DC=Fabrikam,DC=com, CN=Schema,CN=Configuration,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com...} 
rootDomainNamingContext       : DC=Fabrikam,DC=com 
schemaNamingContext           : CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
serverName                    : CN=FABRIKAM-RODC1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,DC=Fabrikam,DC=com 
supportedCapabilities         : {1.2.840.113556.1.4.800 (LDAP_CAP_ACTIVE_DIRECTORY_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedExtension            : {1.3.6.1.4.1.1466.20037, 1.3.6.1.4.1.1466.101.119.1, 1.2.840.113556.1.4.1781, 1.3.6.1.4.1.4203.1.11.3} {1.3.6.1.4.1.1466.20037, 1.3.6.1.4.1.1466.101.119.1, 1.2.840.113556.1.4.1781, 1.3.6.1.4.1.4203.1.11.3} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die rootDSE-Informationen ab, einschließlich der supportedExtension-Eigenschaft für den Server &quot;Fabrikam-RODC1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADRootDSE -Server &quot;FABRIKAM-ADLDS1.Fabrikam.com:60000&quot; -Credential &quot;FABRIKAM\User1&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>configurationNamingContext    : CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
currentTime                   : 18.03.2009 11:40:19 
dnsHostName                   : FABRIKAM-ADLDS1.Fabrikam.com 
domainControllerFunctionality : Windows2008R2 
dsServiceName                 : CN=NTDS Settings,CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,C 
                                N=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
forestFunctionality           : Windows2003Forest 
highestCommittedUSN           : 13967
isSynchronized                : {TRUE} 
namingContexts                : {CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA}, DC=AppNC} 
schemaNamingContext           : CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
serverName                    : CN=FABRIKAM-ADLDS1$instance1,CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
subschemaSubentry             : CN=Aggregate,CN=Schema,CN=Configuration,CN={9131D98B-E210-480F-A95D-24F9396898CA} 
supportedCapabilities         : {1.2.840.113556.1.4.1851 (LDAP_CAP_ACTIVE_DIRECTORY_ADAM_OID), 1.2.840.113556.1.4.1670 (LDAP_CAP_ACTIVE_DIRECTORY_V51_OID), 1.2.840.113556.1.4.1791 (LDAP_CAP_ACTIVE_DIRECTORY_LDAP_INTEG_OID), 1.2.840.113556.1.4.1935 (LDAP_CAP_ACTIVE_DIRECTORY_V61_OID)...} 
supportedControl              : {1.2.840.113556.1.4.319 (LDAP_PAGED_RESULT_OID_STRING), 1.2.840.113556.1.4.801 (LDAP_SERVER_SD_FLAGS_OID), 1.2.840.113556.1.4.473 (LDAP_SERVER_SORT_OID), 1.2.840.113556.1.4.528 (LDAP_SERVER_NOTIFICATION_OID)...} 
supportedLDAPPolicies         : {MaxPoolThreads, MaxDatagramRecv, MaxReceiveBuffer, InitRecvTimeout...} 
supportedLDAPVersion          : {3, 2} 
supportedSASLMechanisms       : {GSSAPI, GSS-SPNEGO, EXTERNAL, DIGEST-MD5} </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die rootDSE-Informationen von FABRIKAM-ADLDS1 mithilfe der Anmeldeinformationen für &quot;FABRIKAM\user1&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144945</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUser
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens einen Active Directory-Benutzer ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADUser&quot; ruft ein Benutzerobjekt ab oder führt eine Suche aus, um mehrere Benutzerobjekte abzurufen.

Der Identity-Parameter gibt den abzurufenden Active Directory-Benutzer an. Sie können einen Benutzer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID), den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) oder den Namen identifizieren. Sie können auch den Parameter auf eine Benutzerobjektvariable festlegen, z. B. $&lt;localUserObject&gt;, oder ein Benutzerobjekt über die Pipeline an den Identity-Parameter übergeben.

Um mehr als einen Benutzer zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Benutzerobjekteigenschaften ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Benutzerobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Benutzerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Benutzerobjekt zurück.

Dieses Cmdlet gibt einen Standardsatz von ADUser-Eigenschaftswerten zurück. Um zusätzliche ADUser-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADUser-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADUser &lt;user&gt;| Get-Member

Um eine Liste der am häufigsten verwendeten Eigenschaften eines ADUser-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADUser&lt;user&gt; -Properties Extended | Get-Member

Um eine Liste aller Eigenschaften eines ADUser-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADUser&lt;user&gt; -Properties * | Get-Member
        </maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter * -SearchBase &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Benutzer unter dem Container &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*SvcAccount&quot;' | FT Name,SamAccountName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name             SamAccountName
----             --------------
SQL01 SvcAccount SQL01
SQL02 SvcAccount SQL02
IIS01 SvcAccount IIS01
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Benutzer ab, deren Name mit &quot;SvcAccount&quot; endet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser GlenJohn -Properties * 
</dev:code>
  			<dev:remarks>
 				<maml:para>Surname           : John
Name              : Glen John
UserPrincipalName :
GivenName         : Glen
Enabled               : False
SamAccountName    : GlenJohn
ObjectClass           : user

SID               : S-1-5-21-2889043008-4136710315-2444824263-3544
ObjectGUID        : e1418d64-096c-4cb0-b903-ebb66562d99d
DistinguishedName : CN=Glen John,OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Eigenschaften des Benutzers mit dem samAccountName &quot;GlenJohn&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter {Name -eq &quot;GlenJohn&quot;} -SearchBase &quot;DC=AppNC&quot; -Properties mail -Server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft den Benutzer mit dem Namen &quot;GlenJohn&quot;' auf der AD LDS-Instanz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144946</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens einen Active Directory-Computer ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADComputer&quot; ruft einen Computer ab oder führt eine Suche aus, um mehrere Computer abzurufen.

Der Identity-Parameter gibt den abzurufenden Active Directory-Computer an. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Parameter auch auf eine Computerobjektvariable festlegen, z. B. $&lt;localComputerObject&gt;, oder ein Computerobjekt über die Pipeline an den Identity-Parameter übergeben.

Um mehr als einen Computer zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Computerobjekteigenschaften ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Computerobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Computerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Computerobjekt zurück. 

Das Cmdlet &quot;Get-ADComputer&quot; gibt einen Standardsatz von ADComputer-Eigenschaftswerten zurück. Um zusätzliche ADComputer-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter dieses Cmdlets. 

Die folgenden Beispiele veranschaulichen, wie die Eigenschaften für ein ADComputer-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;computer&gt; durch eine Computer-ID, z. B. den SAM-Kontonamen des lokalen Computers.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADComputer-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADComputer &lt;computer&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADComputer-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADComputer &lt;computer&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS mit dem Standardschema verwendet werden.  Standardmäßig verfügt das AD LDS-Schema nicht über eine Computerklasse, wenn das Schema jedoch erweitert wird, um diese einzuschließen, kann dieses Cmdlet mit LDS verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer &quot;Fabrikam-SRV1&quot; -Properties *</dev:code>
  			<dev:remarks>
 				<maml:para>AccountExpirationDate              :
accountExpires                     : 9223372036854775807 
AccountLockoutTime                 :
AccountNotDelegated                : False
AllowReversiblePasswordEncryption  : False
BadLogonCount                      :
CannotChangePassword               : False
CanonicalName                      : Fabrikam.com/Computers/fabrikam-srv1
Certificates                       : {} 
CN                                 : fabrikam-srv1
codePage                           : 0 
countryCode                        : 0
Created                            : 16.03.2009 16:15:00
createTimeStamp                    : 16.03.2009 16:15:00
Deleted                            :
Description                        :
DisplayName                        :
DistinguishedName                  : CN=fabrikam-srv1,CN=Computers,DC=Fabrikam,
                                     DC=com
DNSHostName                        :
DoesNotRequirePreAuth              : False
dSCorePropagationData              : {16.03.2009 16:21:51, 31.12.1600 16:00:01
                                     }
Enabled           : True
HomedirRequired                    : False
HomePage                           :
instanceType                       : 0
IPv4Address                        :
IPv6Address                        :
isCriticalSystemObject             : False
isDeleted                          :
LastBadPasswordAttempt:
LastKnownParent                    :
LastLogonDate                      :
localPolicyFlags                   : 0
Location                           : NA/HQ/Building A
LockedOut             : False
ManagedBy                          : CN=SQL Administrator 01,OU=UserAccounts,OU                                     
=Managed,DC=Fabrikam,DC=com
MemberOf                           : {}
MNSLogonAccount                    : False
Modified                           : 16.03.2009 16:23:01
modifyTimeStamp                    : 16.03.2009 16:23:01
msDS-User-Account-Control-Computed : 0
Name                               : fabrikam-srv1
nTSecurityDescriptor               : System.DirectoryServices.ActiveDirectorySe
                                     curity
ObjectCategory                     : CN=Computer,CN=Schema,CN=Configuration,DC=
                                     Fabrikam,DC=com
ObjectClass       : computer
ObjectGUID                         : 828306a3-8ccd-410e-9537-e6616662c0b0
objectSid      : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
OperatingSystem                    :
OperatingSystemHotfix              :
OperatingSystemServicePack         :
OperatingSystemVersion             :
PasswordExpired       : False
PasswordLastSet                    :
PasswordNeverExpires               : False
PasswordNotRequired                : False
PrimaryGroup                       : CN=Domain Computers,CN=Users,DC=Fabrikam,D
                                     C=com
primaryGroupID                     : 515
ProtectedFromAccidentalDeletion          : False
pwdLastSet                         : 0
SamAccountName                     : fabrikam-srv1$
sAMAccountType                     : 805306369
sDRightsEffective                  : 0
ServiceAccount                     : {}
servicePrincipalName               : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
                                     alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
ServicePrincipalNames              : {MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:an
                                     alyze, MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM
                                     :1456}
SID               : S-1-5-21-41432690-3719764436-1984117282-11
                                     30
SIDHistory                         : {}
TrustedForDelegation               : False
TrustedToAuthForDelegation         : False
UseDESKeyOnly                      : False
userAccountControl                 : 4096
userCertificate                    : {}
UserPrincipalName                  :
uSNChanged                         : 36024
uSNCreated                         : 35966
whenChanged                        : 16.03.2009 16:23:01
whenCreated                        : 16.03.2009 16:15:00</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft einen bestimmten Computer ab und zeigt alle Eigenschaften an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Name -like &quot;Fabrikam*&quot;' -Properties IPv4Address | FT Name,DNSHostName,IPv4Address -A</dev:code>
  			<dev:remarks>
 				<maml:para>name          dnshostname                ipv4address
----          -----------                -----------
FABRIKAM-SRV1 FABRIKAM-SRV1.Fabrikam.com 10.194.99.181
FABRIKAM-SRV2 FABRIKAM-SRV2.Fabrikam.com 10.194.100.37
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Computer ab, deren Name mit einer bestimmten Zeichenfolge beginnt, und zeigt den Namen, DNS-Hostnamen und die IPv4-Adresse an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$d = [DateTime]::Today.AddDays(-90); Get-ADComputer -Filter 'PasswordLastSet -ge $d' -Properties PasswordLastSet | FT Name,PasswordLastSet</dev:code>
  			<dev:remarks>
 				<maml:para>Name                                                        PasswordLastSet
----                                                        ---------------
FABRIKAM-SRV4                                               12.03.2009 18:40:37
FABRIKAM-SRV5                                               12.03.2009 19:05:45
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Computer ab, deren Kennwort in den letzten 90 Tagen geändert wurde.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -LDAPFilter &quot;(name=*laptop*)&quot; -SearchBase &quot;CN=Computers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>name
----
sarahett-laptop
davidpr-laptop
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Computerkonten am Speicherort &quot;CN=Computers,DC=Fabrikam,DC=com&quot; ab, die als Laptops aufgeführt sind (mit einem LDAPFilter).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Computerkonten ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144947</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens eine Active Directory-Gruppe ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADGroup&quot; ruft eine Gruppe ab oder führt eine Suche aus, um mehrere Gruppen aus Active Directory abzurufen. 

Der Identity-Parameter gibt die abzurufende Active Directory-Gruppe an. Sie können eine Gruppe durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) oder den kanonischen Namen identifizieren. Sie können auch eine Gruppenobjektvariable angeben, z. B. $&lt;localGroupObject&gt;. 

Um mehr als eine Gruppe zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Gruppenobjekteigenschaften ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Gruppenobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen. 
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Gruppenobjekt zurück.

Das Cmdlet &quot;Get-ADGroup&quot; gibt einen Standardsatz von ADGroup-Eigenschaftswerten zurück. Um zusätzliche ADGroup-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Die folgenden Beispiele veranschaulichen, wie die Eigenschaften für ein ADGroup-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;group&gt; durch eine Gruppen-ID, z. B. &quot;Administratoren&quot;.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADGroup-Objekts abzurufen, verwenden Sie folgenden Befehl:
      Get-ADGroup &lt;group&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADGroup-Objekts abzurufen, verwenden Sie folgenden Befehl:
     Get-ADGroup &lt;group&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup administrators
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gruppe mit dem SamAccountName &quot;Administrators&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Identity S-1-5-32-544 -Properties member
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
member            : {CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com, CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com, CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com, C 
                    N=Administrator,CN=Users,DC=Fabrikam,DC=com} 
Name              : Administrators 
ObjectClass       : group 
ObjectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gruppe mit der SID &quot;S-1-5-32-544&quot; ab, einschließlich des zusätzlichen Eigenschaftenelements.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -Filter 'GroupCategory -eq &quot;Security&quot; -and GroupScope -ne &quot;DomainLocal&quot;'</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Gruppen mit der GroupCategory &quot;Security&quot; ab, deren GroupScope jedoch nicht &quot;DomainLocal&quot; lautet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup 

cmdlet Get-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Filter: * </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppen in der Standarddomäne ab, die das Cmdlet-Standardverhalten verwenden.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AlphaGroup,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AlphaGroup 
ObjectClass       : group 
ObjectGUID        : 6498c9fb-7c62-48fe-9972-1461f7f3dec2 
SID               : S-1-510474493-936115905-2475435479-1276657127-1006239422-938965137 

DistinguishedName : CN=BranchOffice1,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : BranchOffice1 
ObjectClass       : group 
ObjectGUID        : 0b7504c5-482b-4a73-88f5-8a76960e4568 
SID               : S-1-510474493-936115905-2534227223-1194883713-3669005192-3746664089 

DistinguishedName : CN=AccountLeads,OU=AccountDeptOU,DC=AppNC 
GroupCategory     : Distribution 
GroupScope        : DomainLocal 
Name              : AccountLeads 
ObjectClass       : group 
ObjectGUID        : b20c032b-2de9-401a-b48c-341854a37254 
SID               : S-1-510474493-936115905-2813670187-1179675302-2001457839-270172950 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle DomainLocal-Gruppen aus der AppNC-Partition der AD LDS-Instanz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144948</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens eine abgestimmte Active Directory-Kennwortrichtlinie ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ruft eine abgestimmte Kennwortrichtlinie ab oder führt eine Suche aus, um mehrere abgestimmte Kennwortrichtlinien abzurufen.

Der Identity-Parameter gibt die abzurufende abgestimmte Active Directory-Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen (DN), GUID bzw. Namen identifizieren. Sie können den Parameter auch auf eine Objektvariable für eine abgestimmte Kennwortrichtlinie festlegen, z. B. $&lt;localFineGrainedPasswordPolicyObject&gt;, oder Sie übergeben ein Objekt für eine abgestimmte Kennwortrichtlinie über die Pipeline an den Identity-Parameter.

Um mehrere abgestimmte Kennwortrichtlinien zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Objekteigenschaften für abgestimmte Kennwortrichtlinien ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für FineGrainedPasswordPolicy-Objekte finden Sie in der Beschreibung des Properties-Parameters.  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird eine abgestimmte Kennwortrichtlinie empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Objekt für eine abgestimmte Kennwortrichtlinie zurück.

Dieses Cmdlet gibt einen Standardsatz von ADFineGrainedPasswordPolicy-Eigenschaftswerten zurück. Um zusätzliche ADFineGrainedPasswordPolicy-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Die folgenden Beispiele zeigen, wie die Eigenschaften für ein ADFineGrainedPasswordPolicy-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;fine grained password policy&gt; durch eine ID für eine abgestimmte Kennwortrichtlinie, z. B. den Namen der lokalen abgestimmten Kennwortrichtlinie.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADFineGrainedPasswordPolicy-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADFineGrainedPasswordPolicy &lt;fine grained password policy&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADFineGrainedPasswordPolicy-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADFineGrainedPasswordPolicy&lt;fine grained password policy&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*&quot;} | ft Name, Precedence,MaxPasswordAge,MinPasswordLength -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           Precedence MaxPasswordAge MinPasswordLength
----           ---------- -------------- -----------------
DomainUsersPSO        500 60.00:00:00                    8
SvcAccPSO             100 30.00:00:00                   20
AdminsPSO             200 15.00:00:00                   10
DlgtdAdminsPSO        300 20.00:00:00                   10
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy AdminsPSO
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        : AdminsPSO
ComplexityEnabled           : True
LockoutThreshold            : 0
ReversibleEncryptionEnabled : True
LockoutDuration             : 00:30:00
LockoutObservationWindow    : 00:30:00
MinPasswordLength           : 10
Precedence                  : 200
ObjectGUID                  : ba1061f0-c947-4018-a399-6ad8897d26e3
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 15.00:00:00
AppliesTo                   : {}
DistinguishedName           : CN=AdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Abrufen der abgestimmten Kennwortrichtlinie mit dem Namen &quot;AdminsPSO&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy 'CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -Properties *
</dev:code>
  			<dev:remarks>
 				<maml:para>msDS-LockoutDuration                     : -18000000000
msDS-PasswordSettingsPrecedence          : 300
ObjectCategory                           : CN=ms-DS-Password-Settings,CN=Schema,CN=Configuration,DC=FABRIKAM,DC=COM
DistinguishedName                        : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
ExpireOn                                 :
msDS-MinimumPasswordAge                  : -864000000000
dSCorePropagationData : {31.12.1600 16:00:00}
msDS-LockoutThreshold                    : 0
Description                              : The Delegated Administrators Password Policy
LockoutThreshold                         : 0
instanceType                             : 4
msDS-PasswordComplexityEnabled           : True
MaxPasswordAge                           : 20.00:00:00
whenCreated                              : 8/15/2008 12:47:43 AM
Name                                     : DlgtdAdminsPSO
ObjectClass                              : msDS-PasswordSettings
ReversibleEncryptionEnabled              : True
msDS-PasswordReversibleEncryptionEnabled : True
Dynamic                                  : False
LockoutDuration                          : 00:30:00
msDS-PSOAppliesTo                        : {CN=Karin Zimprich,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=Rainer Witte,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
DisplayName                              : Delegated Administrators PSO
uSNCreated                               : 16395
Modified                                 : 8/20/2008 12:21:15 AM
MinPasswordAge                           : 1.00:00:00
ProtectedFromAccidentalDeletion          : False
Created                                  : 8/15/2008 12:47:43 AM
sDRightsEffective                        : 15
ComplexityEnabled                        : True
PasswordHistoryCount                     : 24
msDS-MaximumPasswordAge                  : -17280000000000
MinPasswordLength                        : 10
Precedence                               : 300
ObjectGUID                               : 75cf8c7a-9c93-4e81-b611-851803372cb2
msDS-MinimumPasswordLength               : 10
Deleted                                  :
Orphaned                                 : False
CN                                       : DlgtdAdminsPSO
LastKnownParent                          :
CanonicalName                            : FABRIKAM.COM/System/Password Settings Container/DlgtdAdminsPSO
modifyTimeStamp                          : 8/20/2008 12:21:15 AM
msDS-LockoutObservationWindow            : -18000000000
LockoutObservationWindow                 : 00:30:00
whenChanged                              : 8/20/2008 12:21:15 AM
createTimeStamp                          : 8/15/2008 12:47:43 AM
msDS-PasswordHistoryLength               : 24
nTSecurityDescriptor                     : System.DirectoryServices.ActiveDirectorySecurity
AppliesTo                                : {CN=JeffPrice,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM, CN=GlenJohn,OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM}
uSNChanged                               : 72719
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Eigenschaften für die abgestimmte Kennwortrichtlinie mit dem DistinguishedName &quot;CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {name -like &quot;*admin*&quot;}</dev:code>
  			<dev:remarks>
 				<maml:para>AppliesTo                   : {CN=GlenJohn,CN=Users,DC=Fabrikam,DC=com, CN=JeffPrice,CN=Users,DC=Fabrikam,DC=com, CN=Administrator,CN=Users,DC=Fabrikam,DC=com} 
ComplexityEnabled           : True 
DistinguishedName           : CN=DlgtdAdminsPSO,CN=Password Settings Container,CN=System,DC=Fabrikam,DC=com 
LockoutDuration             : 00:30:00
LockoutObservationWindow    : 00:30:00
LockoutThreshold            : 0 
MaxPasswordAge              : 42.00:00:00
MinPasswordAge              : 1.00:00:00
MinPasswordLength           : 7 
Name                        : DlgtdAdminsPSO 
ObjectClass                 : msDS-PasswordSettings 
ObjectGUID                  : b7de4e6e-c291-4ce6-bb47-6bf8f807df53 
PasswordHistoryCount        : 24
Precedence                  : 100
ReversibleEncryptionEnabled : True </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Objekte für abgestimmte Kennwortrichtlinien ab, deren Name mit &quot;admin&quot; beginnt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144949</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomain
		</command:name>
		<maml:description>
			<maml:para> Ruft eine Active Directory-Domäne ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADDomain&quot; ruft die von den Parametern angegebene Active Directory-Domäne ab. Sie können die Domäne angeben, indem Sie den Identity-Parameter oder den Current-Parameter festlegen.  

Der Identity-Parameter gibt die abzurufende Active Directory-Domäne an. Sie können das abzurufende Domänenobjekt durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den DNS-Domänennamen oder NetBIOS-Namen identifizieren. Sie können den Parameter auch auf eine Domänenobjektvariable, z. B. $&lt;localDomainObject&gt;, festlegen oder ein Domänenobjekt über die Pipeline an den Identity-Parameter übergeben. 

Um die Domäne des lokalen Computers oder gegenwärtige angemeldeten Benutzer (CLU) abzurufen, legen Sie den Current-Parameter auf &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; fest.  Wenn Sie den Current-Parameter festgelegt haben, müssen Sie den Identity-Parameter nicht festlegen. 

Wenn der Current-Parameter auf &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt wird, verwendet das Cmdlet den Server-Parameter und den Credential-Parameter gemäß den folgenden Regeln.

– Wenn sowohl der Server-Parameter als auch der Credential-Parameter nicht angegeben wird:
  – Die Domäne wird auf die Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt, und ein Server befindet sich in dieser Domäne. Die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers werden zum Abrufen der Domäne verwendet.

– Wenn der Server-Parameter angegeben und der Credential-Parameter nicht angegeben wird:
  – Die Domäne wird auf die Domäne des angegebenen Servers festgelegt und das Cmdlet überprüft, ob sich der Server in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet. Die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers werden dann zum Abrufen der Domäne verwendet. Ein Fehler wird zurückgegeben, wenn sich der Server nicht in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet.

– Wenn der Server-Parameter nicht angegeben und der Credential-Parameter angegeben wird:
  – Die Domäne wird auf die Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt, und ein Server befindet sich in dieser Domäne. Dann werden die vom Credential-Parameter angegebenen Anmeldeinformationen verwendet, um die Domäne abzurufen. 
Wenn der Server-Parameter und der Credential-Parameter angegeben werden:
Die Domäne wird auf die Domäne des angegebenen Servers festgelegt und das Cmdlet überprüft, ob sich der Server in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet. Dann werden die vom Credential-Parameter angegebenen Anmeldeinformationen verwendet, um die Domäne abzurufen. Ein Fehler wird zurückgegeben, wenn sich der Server nicht in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond, DC=corp, DC=contoso, DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond, DC=corp, DC=contoso, DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Domänenobjekt zurück. 

Das Cmdlet gibt alle Eigenschaften der Domäne zurück. Um alle Eigenschaften für ein ADDomain-Objekt anzuzeigen, verwenden Sie den folgenden Befehl und ersetzen &lt;domain&gt; durch eine Domänencontroller-ID, z. B. einen DNS-Hostnamen.
  Get-ADDomain &lt;domain&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Domäneninformationen für die Domäne &quot;fabrikam.com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LocalComputer
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Domäneninformationen von der aktuellen lokalen Computerdomäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Domäneninformationen für die Domäne des gerade angemeldeten Benutzers ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain</dev:code>
  			<dev:remarks>
 				<maml:para>AllowedDNSSuffixes                 : {}
ChildDomains                       : {}
ComputersContainer                 : CN=Computers,DC=Fabrikam,DC=com
DeletedObjectsContainer            : CN=Deleted Objects,DC=Fabrikam,DC=com
DistinguishedName                  : DC=Fabrikam,DC=com
DNSRoot                            : Fabrikam.com
DomainControllersContainer         : OU=Domain Controllers,DC=Fabrikam,DC=com
DomainMode                         : Windows2003Domain
DomainSID                          : S-1-5-21-41432690-3719764436-1984117282
ForeignSecurityPrincipalsContainer : CN=ForeignSecurityPrincipals,DC=Fabrikam,DC=com
Forest                             : Fabrikam.com
InfrastructureMaster               : Fabrikam-DC1.Fabrikam.com
LastLogonReplicationInterval       :
LinkedGroupPolicyObjects           : {CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=Policies,CN=System,DC=Fabrikam,DC=com}
LostAndFoundContainer              : CN=LostAndFound,DC=Fabrikam,DC=com
ManagedBy                          :
Name                               : Fabrikam
NetBIOSName                        : FABRIKAM
ObjectClass                        : domainDNS
ObjectGUID                         : b63b4f44-58b9-49cf-8911-b36e8575d5eb
ParentDomain                       :
PDCEmulator                        : Fabrikam-DC1.Fabrikam.com
QuotasContainer                    : CN=NTDS Quotas,DC=Fabrikam,DC=com
ReadOnlyReplicaDirectoryServers    : {CSD2722780.Fabrikam.com}
ReplicaDirectoryServers            : {Fabrikam-DC1.Fabrikam.com}
RIDMaster                          : Fabrikam-DC1.Fabrikam.com
SubordinateReferences              : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com, CN=Co
                                     nfiguration,DC=Fabrikam,DC=com}
SystemsContainer                   : CN=System,DC=Fabrikam,DC=com
UsersContainer                     : CN=Users,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Domäneninformationen für die Domäne des gerade angemeldeten Benutzers ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144950</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADDomainMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADForest
		</command:name>
		<maml:description>
			<maml:para>Ruft eine Active Directory-Gesamtstruktur ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADForest&quot; ruft die von den Parametern angegebene Active Directory-Gesamtstruktur ab. Sie können die Gesamtstruktur angeben, indem Sie den Identity-Parameter oder den Current-Parameter festlegen.

Der Identity-Parameter gibt die abzurufende Active Directory-Gesamtstruktur an. Sie können eine Gesamtstruktur durch ihren vollqualifizierten Domänennamen (FQDN), den DNS-Hostnamen oder NetBIOS-Namen identifizieren. Sie können den Parameter auch auf eine Gesamtstruktur-Objektvariable festlegen, z. B. $&lt;localForestObject&gt;, oder ein Gesamtstrukturobjekt über die Pipeline an den Identity-Parameter übergeben.

Um die Gesamtstruktur des lokalen Computer oder gegenwärtige angemeldeten Benutzer (CLU) abzurufen, legen Sie den Current-Parameter auf &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; fest.  Wenn Sie den Current-Parameter festgelegt haben, müssen Sie den Identity-Parameter nicht festlegen. 

Wenn der Current-Parameter auf &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt wird, verwendet das Cmdlet den Wert des Server-Parameters und Credential-Parameters, um die Domäne und die Anmeldeinformationen zu bestimmen, mit denen die Domäne der Gesamtstruktur gemäß den folgenden Regeln identifiziert werden soll.

– Wenn sowohl der Server-Parameter als auch der Credential-Parameter nicht angegeben wird:
  – Die Domäne wird auf die Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt, und ein Server befindet sich in dieser Domäne. Die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers werden zum Abrufen der Domäne verwendet.

– Wenn der Server-Parameter angegeben und der Credential-Parameter nicht angegeben wird:
  – Die Domäne wird auf die Domäne des angegebenen Servers festgelegt und das Cmdlet überprüft, ob sich der Server in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet. Die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers werden dann zum Abrufen der Domäne verwendet. Ein Fehler wird zurückgegeben, wenn sich der Server nicht in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet.

– Wenn der Server-Parameter nicht angegeben und der Credential-Parameter angegeben wird:
  – Die Domäne wird auf die Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; festgelegt, und ein Server befindet sich in dieser Domäne. Dann werden die vom Credential-Parameter angegebenen Anmeldeinformationen verwendet, um die Domäne abzurufen. 
Wenn der Server-Parameter und der Credential-Parameter angegeben werden:
Die Domäne wird auf die Domäne des angegebenen Servers festgelegt und das Cmdlet überprüft, ob sich der Server in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet. Dann werden die vom Credential-Parameter angegebenen Anmeldeinformationen verwendet, um die Domäne abzurufen. Ein Fehler wird zurückgegeben, wenn sich der Server nicht in der Domäne von &quot;LocalComputer&quot; oder &quot;LoggedOnUser&quot; befindet.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentForestType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentForestType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gesamtstrukturobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Gesamtstrukturobjekt zurück. 

Dieses Cmdlet gibt alle Eigenschaften der Gesamtstruktur zurück. Um alle Eigenschaften für ein ADForest-Objekt anzuzeigen, verwenden Sie den folgenden Befehl, und ersetzen Sie &lt;forest&gt; durch eine Gesamtstruktur-ID, z. B. einen DNS-Hostnamen.
  Get-ADForest &lt;forest&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest Fabrikam.com
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Gesamtstrukturinformationen aus der Gesamtstruktur &quot;Fabrikam.com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LocalComputer
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gesamtstrukturinformationen für die Gesamtstruktur des aktuellen lokalen Computers ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest -Current LoggedOnUser
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gesamtstrukturinformationen für die Gesamtstruktur des gerade angemeldeten Benutzers ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest</dev:code>
  			<dev:remarks>
 				<maml:para>ApplicationPartitions  : {DC=ForestDnsZones,DC=Fabrikam,DC=com, DC=DomainDnsZones,DC=Fabrikam,DC=com} 
CrossForestReferences  : {CN=northwind,CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com} 
DomainNamingMaster     : Fabrikam-DC1.Fabrikam.com 
Domains                : {Fabrikam.com} 
ForestMode             : Windows2003Forest 
GlobalCatalogs         : {Fabrikam-DC1.Fabrikam.com, CSD2722780.Fabrikam.com} 
Name                   : Fabrikam.com 
PartitionsContainer    : CN=Partitions,CN=Configuration,DC=Fabrikam,DC=com 
RootDomain             : Fabrikam.com 
SchemaMaster           : Fabrikam-DC1.Fabrikam.com 
Sites                  : {Default-First-Site-Name, UnitedKingdomHQ, BO3, RODC-Site-Name} 
SPNSuffixes            : {}
UPNSuffixes            : {}</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gesamtstrukturinformationen für die Gesamtstruktur des gerade angemeldeten Benutzers ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144951</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainController
		</command:name>
		<maml:description>
			<maml:para>Ruft auf der Grundlage auffindbarer Dienstkriterien, Suchparameter oder angegebener Domänencontroller-ID, z. B. den NetBIOS-Namen, mindestens einen Active Directory-Domänencontroller ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainController</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADDomainController&quot; ruft die von den Parametern angegebenen Domänencontroller ab. Sie können Domänencontroller abrufen, indem Sie die Parameter &quot;Identity&quot;, &quot;Filter&quot; oder &quot;Discover&quot; festlegen.

Der Identity-Parameter gibt den abzurufenden Domänencontroller an. Sie können einen Domänencontroller durch die GUID, IPV4Address, globale IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: Name des Serverobjekts, das den Domänencontroller darstellt, definierter Name (DN) des NTDS-Einstellungsobjekts des Serverobjekts, GUID des NTDS-Einstellungsobjekts des Serverobjekts unter der Konfigurationspartition oder DN des Computerobjekts, das den Domänencontroller darstellt.  Sie können auch den Identity-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerObject&gt;, oder ein Domänencontrollerobjekt über die Pipeline an den Identity-Parameter übergeben.

Um mehrere Domänencontroller zu suchen und abzurufen, verwenden Sie den Filter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Sie können keine LDAP-Abfragezeichenfolge mit diesem Cmdlet verwenden.

Um mit dem Ermittlungsmechanismus von DCLocator einen Domänencontroller abzurufen, verwenden Sie den Discover-Parameter. Sie können Suchkriterien bereitstellen, indem Sie Parameter, z. B. &quot;Service&quot;, &quot;SiteName&quot;, &quot;DomainName&quot;, &quot;NextClosestSite&quot;, &quot;AvoidSelf&quot; und &quot;ForceDiscover&quot;, festlegen. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Discover</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass ein auffindbarer Domänencontroller, der die von den Cmdlet-Parametern angegebenen Bedingungen erfüllt, zurückgegeben wird.
Um mit dem Ermittlungsmechanismus von DCLocator einen Domänencontroller abzurufen, verwenden Sie den Discover-Parameter. Zusammen mit diesem Parameter können Sie Suchkriterien bereitstellen, indem Sie Parameter, z. B. &quot;Service&quot;, &quot;SiteName&quot;, &quot;DomainName&quot;, &quot;NextClosestSite&quot;, &quot;AvoidSelf&quot; und &quot;ForceDiscover&quot;, festlegen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Discover

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit aktivierten Webdiensten in einer bestimmten Site mit dem Namen &quot;RODC-Site&quot; abgerufen wird.
  Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AvoidSelf</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass der aktuelle Computer nicht als Domänencontroller zurückgegeben werden soll. Wenn der aktuelle Computer kein Domänencontroller ist, wird dieser Parameter ignoriert. Sie können diesen Parameter angeben, wenn Sie den Namen eines anderen Domänencontrollers in der Domäne abrufen möchten.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
 -AvoidSelf</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DomainName</maml:name>
				<maml:description>
					<maml:para>Gibt die zu durchsuchende Domäne an. Das Cmdlet sucht in dieser Domäne einen auffindbaren Domänencontroller. Gibt die Domäne durch Verwendung des NetBIOS-Namens oder vollqualifizierten Domänennamens (FQDN) der Domäne an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den FQDN einer Domäne festgelegt wird.
  -DomainName &quot;contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ForceDiscover</maml:name>
				<maml:description>
					<maml:para>Erzwingt, dass das Cmdlet alle zwischengespeicherten Domänencontrollerinformationen löscht und eine neue Erkennung ausführt.  Wenn dieser Parameter nicht angegeben wird, kann das Cmdlet zwischengespeicherte Informationen über einen Domänencontroller zurückgeben. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ForceDiscover</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinimumDirectoryServiceVersion</maml:name>
				<maml:description>
					<maml:para>Gibt das früheste Betriebssystem an, unter dem der Domänencontroller ausgeführt werden kann, damit er vom Cmdlet zurückgegeben wird, wenn ein DC mit dem -Discover-Schalter abgerufen wird. Mögliche Werte sind:
  Windows2000 oder 1
  Windows2008 oder 2

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinimumDirectoryServiceVersion Windows2000 

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit Windows 2008 oder höher abgerufen wird:
  Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NextClosestSite</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass ein Domänencontroller von der nächstgelegenen Site zurückgegeben wird, wenn in der Site, die den Client enthält, kein Domänencontroller gefunden wird. Die nächstgelegene Site ist die Site mit den niedrigsten Standortverknüpfungskosten in Bezug auf die aktuelle Site. Kosten zwischen Sites basieren auf Faktoren wie Bandbreite und physischer Nähe. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -NextClosestSite</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Service</maml:name>
				<maml:description>
					<maml:para>Gibt die Typen der abzurufenden Domänencontroller an. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Typen angeben. Mögliche Werte für diesen Parameter lauten: 
  PrimaryDC oder 1
  GlobalCatalog oder 2
  KDC oder 3
  TimeService oder 4
  ReliableTimeService oder 5
  ADWS oder 6

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Service GlobalCatalog, KDC 

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit aktivierten Webdiensten abgerufen wird:
  Get-ADDomainController -Discover -Services ADWS</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SiteName</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen einer Site an, die auf der Suche nach dem Domänencontroller durchsucht werden soll. Wenn dieser Parameter nicht festgelegt wird, sucht das Cmdlet Domänencontroller in der Site des Clients. Der Name der Site wird von der Name-Eigenschaft des Siteobjekts definiert.

Im folgenden Beispiel wird gezeigt, wie mit diesem Parameter eine Site angegeben wird.
  -SiteName &quot;redmond&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Writable</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainController</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AvoidSelf</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass der aktuelle Computer nicht als Domänencontroller zurückgegeben werden soll. Wenn der aktuelle Computer kein Domänencontroller ist, wird dieser Parameter ignoriert. Sie können diesen Parameter angeben, wenn Sie den Namen eines anderen Domänencontrollers in der Domäne abrufen möchten.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
 -AvoidSelf</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Discover</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass ein auffindbarer Domänencontroller, der die von den Cmdlet-Parametern angegebenen Bedingungen erfüllt, zurückgegeben wird.
Um mit dem Ermittlungsmechanismus von DCLocator einen Domänencontroller abzurufen, verwenden Sie den Discover-Parameter. Zusammen mit diesem Parameter können Sie Suchkriterien bereitstellen, indem Sie Parameter, z. B. &quot;Service&quot;, &quot;SiteName&quot;, &quot;DomainName&quot;, &quot;NextClosestSite&quot;, &quot;AvoidSelf&quot; und &quot;ForceDiscover&quot;, festlegen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Discover

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit aktivierten Webdiensten in einer bestimmten Site mit dem Namen &quot;RODC-Site&quot; abgerufen wird.
  Get-ADDomainController -Discover -Services ADWS -SiteName RODC-Site</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DomainName</maml:name>
			<maml:description>
				<maml:para>Gibt die zu durchsuchende Domäne an. Das Cmdlet sucht in dieser Domäne einen auffindbaren Domänencontroller. Gibt die Domäne durch Verwendung des NetBIOS-Namens oder vollqualifizierten Domänennamens (FQDN) der Domäne an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den FQDN einer Domäne festgelegt wird.
  -DomainName &quot;contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Name der Domäne, der dieser Computer angehört.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ForceDiscover</maml:name>
			<maml:description>
				<maml:para>Erzwingt, dass das Cmdlet alle zwischengespeicherten Domänencontrollerinformationen löscht und eine neue Erkennung ausführt.  Wenn dieser Parameter nicht angegeben wird, kann das Cmdlet zwischengespeicherte Informationen über einen Domänencontroller zurückgeben. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ForceDiscover</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinimumDirectoryServiceVersion</maml:name>
			<maml:description>
				<maml:para>Gibt das früheste Betriebssystem an, unter dem der Domänencontroller ausgeführt werden kann, damit er vom Cmdlet zurückgegeben wird, wenn ein DC mit dem -Discover-Schalter abgerufen wird. Mögliche Werte sind:
  Windows2000 oder 1
  Windows2008 oder 2

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinimumDirectoryServiceVersion Windows2000 

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit Windows 2008 oder höher abgerufen wird:
  Get-ADDomainController -Discover -MinimumDirectoryServiceVersion Windows2008</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADMinimumDirectoryServiceVersion</command:parameterValue>
			<dev:type>
				<maml:name>ADMinimumDirectoryServiceVersion</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NextClosestSite</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass ein Domänencontroller von der nächstgelegenen Site zurückgegeben wird, wenn in der Site, die den Client enthält, kein Domänencontroller gefunden wird. Die nächstgelegene Site ist die Site mit den niedrigsten Standortverknüpfungskosten in Bezug auf die aktuelle Site. Kosten zwischen Sites basieren auf Faktoren wie Bandbreite und physischer Nähe. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -NextClosestSite</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Service</maml:name>
			<maml:description>
				<maml:para>Gibt die Typen der abzurufenden Domänencontroller an. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Typen angeben. Mögliche Werte für diesen Parameter lauten: 
  PrimaryDC oder 1
  GlobalCatalog oder 2
  KDC oder 3
  TimeService oder 4
  ReliableTimeService oder 5
  ADWS oder 6

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Service GlobalCatalog, KDC 

Im folgenden Beispiel wird gezeigt, wie ein Live-DC mit aktivierten Webdiensten abgerufen wird:
  Get-ADDomainController -Discover -Services ADWS</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADDiscoverableService[]</command:parameterValue>
			<dev:type>
				<maml:name>ADDiscoverableService[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SiteName</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen einer Site an, die auf der Suche nach dem Domänencontroller durchsucht werden soll. Wenn dieser Parameter nicht festgelegt wird, sucht das Cmdlet Domänencontroller in der Site des Clients. Der Name der Site wird von der Name-Eigenschaft des Siteobjekts definiert.

Im folgenden Beispiel wird gezeigt, wie mit diesem Parameter eine Site angegeben wird.
  -SiteName &quot;redmond&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Name der Site, in der sich der Client befindet.</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Writable</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänencontrollerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Domänencontrollerobjekt zurück.

Wenn Sie einen Domänencontroller mithilfe des Discover-Parameters abrufen, gibt das Cmdlet einen Standardsatz von Eigenschaftswerten für jeden Domänencontroller zurück.
Wenn Sie einen Domänencontroller mithilfe des Identity-Parameters oder Filter-Parameters abrufen, gibt dieses Cmdlet alle Eigenschaften des Domänencontrollers zurück. 
Um alle Eigenschaften für ein ADDomainController-Objekt anzuzeigen, verwenden Sie den folgenden Befehl und ersetzen &lt;domaincontroller&gt; durch eine Domänencontroller-ID, z. B. einen DNS-Hostnamen.
  Get-ADDomainController &lt;domaincontroller&gt;| Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Die Name-Eigenschaft und die HostName-Eigenschaft der vom Cmdlet zurückgegebenen ADDomainController-Objekte werden nach der folgenden Regel festgelegt:
– Wenn der Discover-Parameter verwendet wird, ist &quot;HostName&quot; der vollqualifizierte Domänenname des Domänencontrollers, und &quot;Name&quot; ist der NetBIOS-Name des Domänencontrollers. Mit dem Discover-Parameter führt das Cmdlet einen zweiten DCLocator-Aufruf aus, um die Name-Eigenschaft aufzufüllen. Diese Eigenschaft wird nicht auf den NetBIOS-Namen des Domänencontrollers festgelegt, wenn der WINS-Dienst nicht verfügbar ist.
– Wenn der Identity-Parameter oder der Filter-Parameter verwendet wird, ist &quot;HostName&quot; das DNSHostName-Attribut des Domänencontrollerobjekts, und &quot;Name&quot; ist das Namensattribut (RDN) des Domänencontrollerobjekts. Mit dem Identity-Parameter oder dem Filter-Parameter wird die HostName-Eigenschaft nicht festgelegt, wenn das DNSHostName-Attribut des Domänencontrollerobjekts NULL ist.

Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen verfügbaren DC in einer bestimmten Site mit Discovery ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Site &quot;Default-First-Site-Name&quot; -ForceDiscover</dev:code>
  			<dev:remarks>
  			        <maml:para>Erzwingt die Erkennung/Suche eines verfügbaren DC in einer bestimmten Site.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service &quot;GlobalCatalog&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen globalen Katalog in der aktuellen Gesamtstruktur mit Discovery ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Service 2</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen globalen Katalog in der aktuellen Gesamtstruktur mit Discovery ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen verfügbaren DC in der aktuellen Domäne mit Discovery ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen verfügbaren DC in einer bestimmten Domäne mit Discovery ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Discover -Domain &quot;corp.contoso.com&quot; -Service &quot;PrimaryDC&quot;,&quot;TimeService&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft den PDC mit Discovery ab und stellt sicher, dass er als Zeitserver bekanntgemacht wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen Domänencontroller mit seinem NetBIOS-Namen ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController &quot;PDC-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen Domänencontroller mit seinem NetBIOS-Namen ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;TK5-CORP-DC-10.fabrikam.com&quot; -Server &quot;fabrikam.com&quot; -Credential &quot;corp\administrator&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen Domänencontroller mit dem DNS-Hostnamen in einer (mit dem Server-Parameter) angegebenen Domäne ab und gibt Administratoranmeldeinformationen an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Identity &quot;168.54.62.57&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft einen Domänencontroller mithilfe seiner IP-Adresse ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 12 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter  { isGlobalCatalog -eq $true -and Site -eq &quot;Default-First-Site-Name&quot; }</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle globalen Kataloge in einer angegebenen Site ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 13 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Server &quot;research.fabrikam.com&quot; -Filter { isGlobalCatalog -eq $true -and isReadOnly -eq $true }</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle ROGCs in der untergeordneten Domäne ab, mit der der Client verbunden ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 14 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft den Domänencontroller in der aktuellen Sitzung des Benutzers ab. Dies ist der im Kontext eines AD-Anbieters als Standardserver verwendete Domänencontroller. Wenn Sie dieses Cmdlet auf diese Weise verwenden, können Sie erkennen, welcher Server standardmäßig verwendet wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144952</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens eine Active Directory-Organisationseinheit ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADOrganizational&quot; ruft ein Organisationseinheitsobjekt ab oder führt eine Suche aus, um mehrere Organisationseinheiten abzurufen.

Der Identity-Parameter gibt die abzurufende Active Directory-Organisationseinheit an. Sie können eine Organisationseinheit durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Parameter auf eine Variable für ein Organisationseinheitsobjekt festlegen, z. B. $&lt;localOrganizationalunitObject&gt;, oder ein Organisationseinheitsobjekt über die Pipeline an den Identity-Parameter übergeben.

Um mehrere Organisationseinheiten zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Eigenschaften für Organisationseinheitsobjekte ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Computerobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt die Identität eines Active Directory-Organisationseinheitsobjekts an. Der Parameter nimmt die folgenden Identitätsformate an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut, das die Identität enthält.

  Definierter Name 
    Beispiel: OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Instanz eines Organisationseinheitsobjekts mit dem Namen &quot;OUinstance&quot; festgelegt wird.
  -Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt die Identität eines Active Directory-Organisationseinheitsobjekts an. Der Parameter nimmt die folgenden Identitätsformate an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut, das die Identität enthält.

  Definierter Name 
    Beispiel: OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Instanz eines Organisationseinheitsobjekts mit dem Namen &quot;OUinstance&quot; festgelegt wird.
  -Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Organisationseinheitsobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Organisationseinheitsobjekt zurück. 

Dieses Cmdlet gibt einen Standardsatz von ADOrganizational unit-Eigenschaftswerten zurück. Um zusätzliche ADOrganizational unit-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Die folgenden Beispiele zeigen, wie die Eigenschaften für ein ADOrganizational unit-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;organizational unit&gt; durch eine ID für eine Organisationseinheit, z. B. den definierten Namen (DN) einer Organisationseinheit.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADOrganizational unit-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADOrganizational unit &lt;organizational unit&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADOrganizational unit-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADOrganizational unit &lt;organizational unit&gt; -Properties * | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Filter 'Name -like &quot;*&quot;' | FT Name, DistinguishedName -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                 DistinguishedName
----                 -----------------
Domain Controllers   OU=Domain Controllers,DC=FABRIKAM,DC=COM
UserAccounts         OU=UserAccounts,DC=FABRIKAM,DC=COM
Sales                OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Marketing            OU=Marketing,OU=UserAccounts,DC=FABRIKAM,DC=COM
Production           OU=Production,OU=UserAccounts,DC=FABRIKAM,DC=COM
HumanResources       OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM
NorthAmerica         OU=NorthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
SouthAmerica         OU=SouthAmerica,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Europe               OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
AsiaPacific          OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM
Finance              OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM
Corporate            OU=Corporate,OU=UserAccounts,DC=FABRIKAM,DC=COM
ApplicationServers   OU=ApplicationServers,DC=FABRIKAM,DC=COM
Groups               OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
PasswordPolicyGroups OU=PasswordPolicyGroups,OU=Groups,OU=Managed,DC=FABRIKAM,DC=COM
Managed              OU=Managed,DC=FABRIKAM,DC=COM
ServiceAccounts      OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Organisationseinheiten in der Domäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -Identity 'OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' | ft Name,Country,PostalCode,City,StreetAddress,State -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name        Country PostalCode City     StreetAddress    State
----        ------- ---------- ----     -------------    -----
AsiaPacific AU      4171       Balmoral 45 Martens Place QLD
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Organisationseinheit mit dem DistinguishedName &quot;OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOrganizationalUnit -LDAPFilter '(name=*)' -SearchBase 'OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM' -SearchScope OneLevel | ft Name,Country,PostalCode,City,StreetAddress,State
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                    Country                 PostalCode             City                   StreetAddress          State
----                    -------                 ----------             ----                   -------------          -----
AsiaPacific             AU                      4171                   Balmoral               45 Martens Place       QLD
Europe                  UK                      NG34 0NI               QUARRINGTON            22 Station Rd
NorthAmerica            US                      02142                  Cambridge              1634 Randolph Street   MA
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft Organisationseinheiten unter der Organisationseinheit &quot;sales&quot; mit einem LDAP-Filter ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144953</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizational unit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Ruft die Mitglieder einer Active Directory-Gruppe ab. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADGroupMember&quot; ruft die Mitglieder einer Active Directory-Gruppe ab. Mitglieder können Benutzer, Gruppen und Computer sein. 

Der Identity-Parameter gibt die abzurufende Active Directory-Gruppe an. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können die Gruppe auch angeben, indem Sie ein Gruppenobjekt über die Pipeline übergeben. Sie können z. B. das Cmdlet &quot;Get-ADGroup&quot; verwenden, um ein Gruppenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADGroupMember&quot; übergeben.

Wenn der Recursive-Parameter angegeben wird, ruft das Cmdlet alle Mitglieder in der Hierarchie der Gruppe ab, die keine untergeordneten Objekte enthalten. Wenn die Gruppe &quot;SaraHettichBerichte&quot; z. B. den Benutzer &quot;AnneWeiler&quot; und die Gruppe &quot;ChristianHessBerichte&quot; und &quot;ChristianHessBerichte&quot; den Benutzer &quot;OliverKiel&quot; enthalten, dann gibt das Cmdlet &quot;AnneWeiler&quot; und &quot;OliverKiel&quot; zurück.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet alle Mitglieder in der Hierarchie einer Gruppe abruft, die keine untergeordneten Objekte enthalten. Im folgenden Beispiel wird eine Hierarchie für die Gruppe &quot;SaraHettichBerichte&quot; veranschaulicht.
+SaraHettichBerichte [group]
  -AnneWeiler [user]
  -DanielDurrerLaptop [computer]
  +ChristianHessBerichte [group]
    -OliverKiel [user]
    -KarstenSchopp [user]
    +ChristianHessComputer [group]
      -OliverComputer [computer]
  
Wenn Sie &quot;SaraHettichBerichte&quot; als Gruppe und den Recursive-Parameter angeben, werden die folgenden Mitglieder und untergeordneten Mitglieder zurückgegeben.
  AnneWeiler
  DanielDurrerLaptop
  OliverKiel
  KarstenSchopp
  OliverComputer

Wenn die angegebene Gruppe über keine Mitglieder verfügt, wird nichts zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet alle Mitglieder in der Hierarchie einer Gruppe abruft, die keine untergeordneten Objekte enthalten. Im folgenden Beispiel wird eine Hierarchie für die Gruppe &quot;SaraHettichBerichte&quot; veranschaulicht.
+SaraHettichBerichte [group]
  -AnneWeiler [user]
  -DanielDurrerLaptop [computer]
  +ChristianHessBerichte [group]
    -OliverKiel [user]
    -KarstenSchopp [user]
    +ChristianHessComputer [group]
      -OliverComputer [computer]
  
Wenn Sie &quot;SaraHettichBerichte&quot; als Gruppe und den Recursive-Parameter angeben, werden die folgenden Mitglieder und untergeordneten Mitglieder zurückgegeben.
  AnneWeiler
  DanielDurrerLaptop
  OliverKiel
  KarstenSchopp
  OliverComputer

Wenn die angegebene Gruppe über keine Mitglieder verfügt, wird nichts zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Prinzipalobjekt zurück, das Benutzer, Computer oder Gruppen darstellt, die Mitglieder der angegebenen Gruppe sind.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember
cmdlet Get-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: Administrators </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Mitglieder der Administratorgruppen mit dem Standardverhalten ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 -filter {GroupScope -eq &quot;DomainLocal&quot;} -SearchBase &quot;DC=AppNC&quot; | get-adgroupmember -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC 
name              : SanjayPatel 
objectClass       : user 
objectGUID        : d671de28-6e40-42a7-b32c-63d336de296d 
SamAccountName    : 
SID               : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Gruppenmitglieder aller lokalen Gruppen der Domäne in der AD LDS-Instanz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember -Identity administrators </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=LabAdmin,CN=Users,DC=Fabrikam,DC=com 
name              : LabAdmin 
objectClass       : user 
objectGUID        : ab7c269d-aec5-4fcc-aebe-6cd1a2e6cd53 
SamAccountName    : LabAdmin 
SID               : S-1-5-21-41432690-3719764436-1984117282-1000 

distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppenelemente der Administratorgruppe ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroupmember &quot;Enterprise Admins&quot; -recursive </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Administrator,CN=Users,DC=Fabrikam,DC=com 
name              : Administrator 
objectClass       : user 
objectGUID        : 994f46e6-c62c-483f-a6cf-124197b6a959 
SamAccountName    : Administrator 
SID               : S-1-5-21-41432690-3719764436-1984117282-500 

distinguishedName : CN=Sagiv Hadaya,CN=Users,DC=Fabrikam,DC=com 
name              : Sagiv Hadaya 
objectClass       : user 
objectGUID        : 64706230-f179-4fe4-b8c9-f0d334e66ab1 
SamAccountName    : SHadaya 
SID               : S-1-5-21-41432690-3719764436-1984117282-1158 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Mitglieder der Gruppe &quot;Enterprise Admins&quot; ab, einschließlich der Mitglieder aller untergeordneten Gruppen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144954</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>Ruft die Active Directory-Gruppen ab, die einen angegebenen Benutzer, Computer, eine angegebene Gruppe oder ein angegebenes Dienstkonto enthalten.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADPrincipalGroupMembership&quot; ruft die Active Directory-Gruppen ab, die einen angegebenen Benutzer, Computer bzw. eine angegebene Gruppe oder ein angegebenes Dienstkonto als Mitglied enthalten. Zum Ausführen der Gruppensuche benötigt dieses Cmdlet einen globalen Katalog. Wenn die Gesamtstruktur, in der der Benutzer, Computer oder die Gruppe enthalten ist, keinen globalen Katalog aufweist, gibt das Cmdlet einen Fehler ohne Abbruch zurück. Wenn Sie nach lokalen Gruppen in einer anderen Domäne suchen möchten, geben Sie den alternativen Server in der anderen Domäne mithilfe des ResourceContextServer-Parameters an. 

Der Identity-Parameter gibt das Benutzer-, Computer- oder Gruppenobjekt an, für das Sie die Gruppenmitgliedschaft bestimmen möchten. Sie können einen Benutzer, einen Computer oder ein Gruppenobjekt durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den SAM-Kontonamen identifizieren. Sie können auch eine Benutzer-, Gruppen- oder Computerobjektvariable angeben, z. B. $&lt;localGroupObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADGroup&quot; verwenden, um ein Gruppenobjekt abzurufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADPrincipalGroupMembership&quot; übergeben. Auf ähnliche Weise können Sie &quot;Get-ADUser&quot; oder &quot;Get-ADComputer&quot; zum Abrufen von Benutzer- und Computerobjekten verwenden, die über die Pipeline übergeben werden sollen.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextPartition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen der Partition einer zu suchenden AD- oder AD LDS-Instanz an. Verwenden Sie diesen Parameter mit dem ResourceContextServer-Parameter, um eine vom angegebenen Server gehostete Partition anzugeben. Wenn der ResourceContextPartition-Parameter nicht angegeben wird, wird die Standardpartition des ResourceContextServer-Parameters durchsucht. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResourceContextServer</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet eine Liste von Gruppen zurückgibt, in denen der Benutzer Mitglied ist und die sich in der angegebenen Domäne befinden. Suchen Sie mithilfe des Parameters nach Gruppen in einer Domäne, die nicht die Domäne mit dem Konto des Benutzers ist. Um eine andere Partition als die Standardpartition in dieser Domäne zu durchsuchen, geben Sie zusätzlich den ResourceContextPartition-Parameter an.


Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextPartition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen der Partition einer zu suchenden AD- oder AD LDS-Instanz an. Verwenden Sie diesen Parameter mit dem ResourceContextServer-Parameter, um eine vom angegebenen Server gehostete Partition anzugeben. Wenn der ResourceContextPartition-Parameter nicht angegeben wird, wird die Standardpartition des ResourceContextServer-Parameters durchsucht. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResourceContextPartition &quot;cn=employees,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResourceContextServer</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet eine Liste von Gruppen zurückgibt, in denen der Benutzer Mitglied ist und die sich in der angegebenen Domäne befinden. Suchen Sie mithilfe des Parameters nach Gruppen in einer Domäne, die nicht die Domäne mit dem Konto des Benutzers ist. Um eine andere Partition als die Standardpartition in dieser Domäne zu durchsuchen, geben Sie zusätzlich den ResourceContextPartition-Parameter an.


Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ResourceContextServer &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Prinzipalobjekt empfangen, das einen Benutzer, Computer oder eine Gruppe darstellt. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt Gruppenobjekte zurück, die über den angegebenen Benutzer, Computer bzw. die angegebene Gruppe oder das angegebene Dienstkonto als Mitglied verfügen.

Das Cmdlet &quot;Get-ADPrincipalGroupMembership&quot; gibt einen Standardsatz von ADGroup-Eigenschaftswerten zurück. Wenn Sie zusätzliche ADGroup-Eigenschaften abrufen möchten, übergeben Sie die von diesem Cmdlet erzeugten ADGroups-Objekte über die Pipeline an Get-ADGroup.  Geben Sie die zusätzlichen erforderlichen Eigenschaften für die Gruppenobjekte an, indem Sie den -Properties-Parameter an Get-ADGroup übergeben.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership
cmdlet Get-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
(Type !? for Help.) 
Identity: administrator </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppen, in denen das Administratorkonto Mitglied ist, mit dem Cmdlet-Standardverhalten ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -server localhost:60000 -identity &quot;CN=GlenJohns,DC=AppNC&quot; -partition &quot;DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Gruppen, in denen der Benutzer &quot;CN=GlenJohns,DC=AppNC&quot; Mitglied ist, von einer AD LDS-Instaz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppen ab, in denen der Administrator Mitglied ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adprincipalgroupmembership -Identity Administrator -ResourceContextServer ChildDomain.Fabrikam.Com -ResourceContextPartition &quot;DC=Fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Users 
objectClass       : group 
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902 
SamAccountName    : Domain Users 
SID               : S-1-5-21-41432690-3719764436-1984117282-513 

distinguishedName : CN=Group Policy Creator Owners,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Group Policy Creator Owners 
objectClass       : group 
objectGUID        : a58f7bf2-fd20-4bbd-96f0-ee10fa1613c7 
SamAccountName    : Group Policy Creator Owners 
SID               : S-1-5-21-41432690-3719764436-1984117282-520 

distinguishedName : CN=Enterprise Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Enterprise Admins 
objectClass       : group 
objectGUID        : 0215b0a5-aea1-40da-b598-720efe930ddf 
SamAccountName    : Enterprise Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-519 

distinguishedName : CN=Schema Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Universal 
name              : Schema Admins 
objectClass       : group 
objectGUID        : 8d62890f-385e-4cfa-9b2a-c72576097583 
SamAccountName    : Schema Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-518 

distinguishedName : CN=Domain Admins,CN=Users,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : Global 
name              : Domain Admins 
objectClass       : group 
objectGUID        : 5ccc6037-c2c9-42be-8e92-c8f98afd0011 
SamAccountName    : Domain Admins 
SID               : S-1-5-21-41432690-3719764436-1984117282-512 

distinguishedName : CN=Administrators,CN=Builtin,DC=Fabrikam,DC=com 
GroupCategory     : Security 
GroupScope        : DomainLocal 
name              : Administrators 
objectClass       : group 
objectGUID        : 02ce3874-dd86-41ba-bddc-013f34019978 
SamAccountName    : Administrators 
SID               : S-1-5-32-544 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppen, in denen das Administratorkonto in der lokalen Domäne Mitglied ist, in der Ressourcendomäne &quot;ChildDomain.Fabrikam.Com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144955</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>Ruft die Benutzer und die Gruppen ab, auf die eine abgestimmte Kennwortrichtlinie angewendet wird.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADFineGrainedPasswordPolicySubject&quot; ruft Benutzer und Gruppen ab, die einer abgestimmten Kennwortrichtlinie unterliegen.

Der Identity-Parameter gibt die abgestimmte Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen, GUID bzw. Namen identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable einer abgestimmten Kennwortrichtlinie festlegen, z. B. $&lt;localPasswordPolicyObject&gt;, oder Sie übergeben ein Objekt für eine abgestimmte Kennwortrichtlinie über die Pipeline an den Identity-Parameter. Beispielsweise können Sie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ein Objekt für eine abgestimmte Kennwortrichtlinie abrufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADFineGrainedPasswordPolicySubject&quot; übergeben. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt Prinzipalobjekte zurück, die die Benutzer und die Gruppen darstellen, auf die die abgestimmte Kennwortrichtlinie angewendet wird. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject -Identity DomainUsersPSO | FT Name,ObjectClass,DistinguishedName -AutoSize
</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass DistinguishedName
----         ----------- -----------------
Domain Users group       CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft den Gegenstand einer abgestimmten Kennwortrichtlinie für die Kennwortrichtlinie &quot;DomainUsersPSO&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144956</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>Ruft die Mitglieder der Zulassungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für einen schreibgeschützten Domänencontroller ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicy ruft die Benutzer, Computer, Dienstkonten und Gruppen ab, die Mitglieder der Anwendungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für einen schreibgeschützten Domänencontroller (RODC) sind. Um die Mitglieder der Anwendungsliste abzurufen, geben Sie den AppliedList-Parameter an. Um die Mitglieder der Verweigerungsliste abzurufen, geben Sie den DeniedList-Parameter an.

Der Identity-Parameter gibt den RODC an, der Zulassungs- und Verweigerungslisten verwendet, um die Kennwortreplikationsrichtlinie anzuwenden. Sie können einen Domänencontroller durch GUID, IPV4Address, IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: Name des Serverobjekts, das den Domänencontroller darstellt, definierter Name (DN) des NTDS-Einstellungsobjekts des Serverobjekts, GUID des NTDS-Einstellungsobjekts des Serverobjekts unter der Konfigurationspartition oder DN des Computerobjekts, das den Domänencontroller darstellt. 

Sie können auch den Identity-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerobject&gt;, oder ein Domänencontrollerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomainController&quot; verwenden, um ein Domänencontrollerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADDomainControllerPasswordReplicationPolicy&quot; übergeben. 

Wenn Sie einen beschreibbaren Domänencontroller für dieses Cmdlet angeben, gibt das Cmdlet einen Fehler ohne Abbruch zurück.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Allowed</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet die Benutzer, Computer und Gruppen aus der Zulassungsliste des Domänencontrollers zurückgeben soll. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -AllowedList </maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Denied</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet die Benutzer, Computer und Gruppen aus der Verweigerungsliste des Domänencontrollers zurückgeben soll. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -DeniedList </maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Allowed</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet die Benutzer, Computer und Gruppen aus der Zulassungsliste des Domänencontrollers zurückgeben soll. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -AllowedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Denied</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet die Benutzer, Computer und Gruppen aus der Verweigerungsliste des Domänencontrollers zurückgeben soll. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -DeniedList </maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänencontrollerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Objekt zurück, das die Benutzer, Computer, Dienstkonten und Gruppen darstellt, die Mitglieder der Anwendungs- oder Verweigerungsliste der Kennwortreplikationsrichtlinie des Domänencontrollers sind. Welche Liste zurückgegeben wird, hängt von den angegebenen Parametern ab.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -Allowed | ft Name,ObjectClass</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die zulässigen Konten aus der Kennwortreplikationsrichtlinie für einen schreibgeschützten Domänencontroller (RODC) ab und zeigt jeweils den Namen und die Objektklasse an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicy -Allowed </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=Allowed RODC Password Replication Group,CN=Users,DC=Fabrikam,DC=com 
Name              : Allowed RODC Password Replication Group 
ObjectClass       : group 
ObjectGUID        : 239b0470-7f49-472d-8fcb-4911e90b2c5e 
SamAccountName    : Allowed RODC Password Replication Group 
SID               : S-1-5-21-41432690-3719764436-1984117282-571</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Zulassungslisten für die Kennwortreplikationsrichtlinie von allen RODCs in der Domäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144957</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDomainControllerPasswordReplicationPolicyUsage
		</command:name>
		<maml:description>
			<maml:para>Ruft die Active Directory-Konten ab, die von einem schreibgeschützten Domänencontroller authentifiziert werden oder die in der offengelegten Liste des Domänencontrollers aufgeführt werden.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicyUsage</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Get-ADDomainControllerPasswordReplicationPolicyUsage ruft die Benutzer- oder Computerkonten ab, die von einem schreibgeschützten Domänencontroller (RODC) authentifiziert werden oder deren Kennwörter auf diesem RODC gespeichert sind. Die Liste der auf einem RODC gespeicherten Konten wird als offengelegte Liste bezeichnet. 

Verwenden Sie den AuthenticatedAccounts-Parameter, um Konten abzurufen, die vom RODC authentifiziert werden. Verwenden Sie den RevealedAccounts-Parameter, um die Konten abzurufen, deren Kennwörter auf dem RODC gespeichert sind.

Der Identity-Parameter gibt den RODC an. Sie können einen Domänencontroller durch die GUID, IPV4Address, globale IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: Name des Serverobjekts, das den Domänencontroller darstellt, definierter Name (DN) des NTDS-Einstellungsobjekts des Serverobjekts, GUID des NTDS-Einstellungsobjekts des Serverobjekts unter der Konfigurationspartition oder DN des Computerobjekts, das den Domänencontroller darstellt. Sie können auch den Identity-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerobject&gt;, oder ein Domänencontrollerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomainController&quot; verwenden, um ein Domänencontrollerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADDomainControllerPasswordReplicationPolicyUsage&quot; übergeben. Wenn Sie einen beschreibbaren Domänencontroller für dieses Cmdlet angeben, gibt das Cmdlet einen Fehler ohne Abbruch zurück.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDomainControllerPasswordReplicationPolicyUsage</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthenticatedAccounts</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die von einem schreibgeschützten Domänencontroller authentifiziert wurden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -AuthenticatedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RevealedAccounts</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, deren Kennwörter auf dem schreibgeschützten Domänencontroller gespeichert sind.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -RevealedAccounts</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthenticatedAccounts</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die von einem schreibgeschützten Domänencontroller authentifiziert wurden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -AuthenticatedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RevealedAccounts</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, deren Kennwörter auf dem schreibgeschützten Domänencontroller gespeichert sind.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -RevealedAccounts</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänencontrollerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt eines oder mehrere Kontoobjekte zurück, die die Benutzer, Computer und Dienstkonten darstellen, die von dem angegebenen schreibgeschützten Domänencontroller (RODC) authentifiziert werden oder deren Kennwörter auf dem RODC gespeichert sind.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -AuthenticatedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die authentifizierten Konten für einen bestimmten RODC ab und zeigt jeweils den Namen und die Objektklasse an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainControllerPasswordReplicationPolicyUsage -Identity &quot;FABRIKAM-RODC1&quot; -RevealedAccounts | ft Name,ObjectClass -A</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die offengelegten Konten für einen bestimmten RODC ab und zeigt jeweils den Namen und die Objektklasse an.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Get-ADDomainControllerPasswordReplicationPolicyUsage </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=krbtgt_35512,CN=Users,DC=Fabrikam,DC=com 
Enabled           : False 
Name              : krbtgt_35512 
ObjectClass       : user 
ObjectGUID        : 8c7268f9-add3-409c-968b-de029e517211 
SamAccountName    : krbtgt_35512 
SID               : S-1-5-21-41432690-3719764436-1984117282-1106 
UserPrincipalName : 

DistinguishedName : CN=CSD2722780,OU=Domain Controllers,DC=Fabrikam,DC=com 
Enabled           : True 
Name              : CSD2722780 
ObjectClass       : computer 
ObjectGUID        : 63a5e005-e01f-4fc9-ae71-9d9367f808bc 
SamAccountName    : CSD2722780$ 
SID               : S-1-5-21-41432690-3719764436-1984117282-1105 
UserPrincipalName : </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Liste der auf allen RODCs in der Domäne zwischengespeicherten Konten ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145018</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountResultantPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>Ruft die resultierende Kennwortreplikationsrichtlinie für ein Active Directory-Konto ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountResultantPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>&quot;Get-ADAccountResultantPasswordReplicationPolicy&quot; ruft die resultierende Kennwortreplikationsrichtlinie für einen Benutzer, Computer oder Dienstkonto auf dem angegebenen schreibgeschützten Domänencontroller ab.

Die Richtlinie nimmt einen der folgenden Werte an:
      Allow oder 1
      DenyExplicit oder 0
      DenyImplicit oder 2
      Unknown oder -1

Der Identity-Parameter gibt das Konto an. Sie können ein Benutzer-, Computer- oder Dienstkontoobjekt durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch den Identity-Parameter auf eine Kontoobjektvariable festlegen, z. B. $&lt;localAccountobject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot;, &quot;Get-ADServiceAccount&quot; oder &quot;Search-ADAccount&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADAccountResultantPasswordReplicationPolicy&quot; übergeben.

Der DomainController-Parameter gibt den schreibgeschützten Domänencontroller an. Sie können einen Domänencontroller durch die IPV4Address, globale IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: definierter Name (DN) des NTDS-Einstellungsobjekts oder Serverobjekts, GUID des NTDS-Einstellungsobjekts oder Serverobjekts unter der Konfigurationspartition oder DN, SamAccountName, GUID, SID des Computerobjekts, das den Domänencontroller darstellt. Sie können auch den DomainController-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerObject&gt;.  
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountResultantPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>DomainController</maml:name>
				<maml:description>
					<maml:para>Gibt einen schreibgeschützten Domänencontroller (RODC) an. Das Cmdlet gibt die Kennwortreplikationsrichtlinie des Kontos für diesen RODC zurück. Sie können den Domänencontroller durch Bereitstellen eines der folgenden Werte identifizieren. 
  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name (DN) des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name (DN) des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name (DN) des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den DNS-Hostnamen eines Domänencontrollers festgelegt wird.
   -DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>DomainController</maml:name>
			<maml:description>
				<maml:para>Gibt einen schreibgeschützten Domänencontroller (RODC) an. Das Cmdlet gibt die Kennwortreplikationsrichtlinie des Kontos für diesen RODC zurück. Sie können den Domänencontroller durch Bereitstellen eines der folgenden Werte identifizieren. 
  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name (DN) des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name (DN) des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name (DN) des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC-12, OU=Domain Controllers, DC=corp, DC=contoso, DC=com

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den DNS-Hostnamen eines Domänencontrollers festgelegt wird.
   -DomainController &quot;corp-DC01.corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADResultantPasswordReplicationPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt einen ADResultantPasswordReplicationPolicy-Enumerationswert zurück, der die resultierende Kennwortreplikationsrichtlinie für ein Konto auf dem angegebenen Domänencontroller darstellt.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BradSu &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die resultierende Kennwortreplikationsrichtlinie in der Domäne für ein angegebenes Benutzerkonto ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy BobKe -DomainController &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die resultierende Kennwortreplikationsrichtlinie auf einem bestimmten Domänencontroller für ein angegebenes Benutzerkonto ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountResultantPasswordReplicationPolicy &quot;CN=Jordao Moreno,OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; &quot;FABRIKAM-RODC1&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die resultierende Kennwortreplikationsrichtlinie auf einem bestimmten Domänencontroller für den angegebenen DN eines Benutzerkontos ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144958</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADUserResultantPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Ruft die resultierende Kennwortrichtlinie für einen Benutzer ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADUserResultantPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>&quot;Get-ADAccountResultantPasswordPolicy&quot; ruft das resultierende Kennwortrichtlinienobjekt (RSoP) für einen Benutzer ab. Das RSoP wird vom Active Directory-Attribut mit dem Namen &quot;msDS-ResultantPSO&quot; definiert.

Ein Benutzer kann über mehrere ihm zugeordnete Kennwortrichtlinienobjekte (PSOs) verfügen, aber nur ein PSO ist das RSoP. Ein PSO ist einem Benutzer zugeordnet, wenn das PSO direkt für den Benutzer gilt, oder wenn das PSO für eine Active Directory-Gruppe gilt, in der der Benutzer enthalten ist. Wenn einem Benutzer oder einer Gruppe mehrere PSO-Richtlinien zugeordnet sind, wird das anzuwendende PSO durch den RSoP-Wert definiert. 

Die resultierende Kennwortrichtlinie oder das RSoP für einen Benutzer wird durch die folgende Prozedur bestimmt.
  – Wenn einem Benutzer nur ein PSO zugeordnet ist, ist dieses PSO das RSoP.
  – Wenn einem Benutzer mehrere PSOs zugeordnet sind, entspricht das direkt für den Benutzer geltende PSO dem RSoP.  
  – Wenn mehrere PSOs direkt für den Benutzer gelten, ist das PSO mit dem niedrigsten msDS-PasswordSettingsPrecedence-Attributwert das RSoP, und dieses Ereignis wird im Active Directory-Ereignisprotokoll als Warnung protokolliert. Der niedrigste Attributwert stellt die höchste PSO-Rangfolge dar. Wenn die msDS-PasswordSettingsPrecedence-Werte von zwei PSOs z. B. 100 und 200 sind, ist das PSO mit dem Attributwert 100 das RSoP.
  – Wenn es keine PSOs gibt, die direkt für den Benutzer gelten, werden die PSOs der globalen Sicherheitsgruppen verglichen, die den Benutzer als Mitglied haben. Das PSO mit dem niedrigsten msDS-PasswordSettingsPrecedence-Wert ist das RSoP.

Der Identity-Parameter gibt den abzurufenden Active Directory-Benutzer an. Sie können einen Benutzer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Parameter auf eine Benutzerobjektvariable festlegen, z. B. $&lt;localUserObject&gt;, oder ein Benutzerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Benutzerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADUserResultantPasswordPolicy&quot; übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADUserResultantPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com  
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Benutzerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein abgestimmtes Kennwortrichtlinienobjekt zurück, das die resultierende Kennwortrichtlinie für den Benutzer darstellt.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUserResultantPasswordPolicy BobKe
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        : DomainUsersPSO
ComplexityEnabled           : True
LockoutThreshold            : 10
ReversibleEncryptionEnabled : False
LockoutDuration             : 12:00:00
LockoutObservationWindow    : 00:15:00
MinPasswordLength           : 8
Precedence                  : 500
ObjectGUID                  : f8d2653c-9b3b-499e-b272-4c7f4268df4c
ObjectClass                 : msDS-PasswordSettings
PasswordHistoryCount        : 24
MinPasswordAge              : 1.00:00:00
MaxPasswordAge              : 60.00:00:00
AppliesTo                   : {CN=Domain Users,CN=Users,DC=FABRIKAM,DC=COM}
DistinguishedName           : CN=DomainUsersPSO,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die resultierende Kennwortrichtlinie für den Benutzer mit dem samAccountName &quot;BobKe&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144959</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens ein Active Directory-Dienstkonto ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADServiceAccount&quot; ruft ein Dienstkonto ab oder führt eine Suche aus, um mehrere Dienstkonten abzurufen.

Der Identity-Parameter gibt das abzurufende Active Directory-Dienstkonto an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Parameter auf die Objektvariable eines Dienstkontos festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder ein Dienstkontoobjekt über die Pipeline an den Identity-Parameter übergeben.

Um mehrere Dienstkonten zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden.

Dieses Cmdlet ruft einen Standardsatz von Objekteigenschaften für ein Dienstkonto ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Dienstkontoobjekte finden Sie in der Beschreibung des Properties-Parameters. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com 
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Dienstkontoobjekt zurück. 

Dieses Cmdlet gibt einen Standardsatz von ADServiceAccount-Eigenschaftswerten zurück. Um zusätzliche ADServiceAccount-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Die folgenden Beispiele zeigen, wie die Eigenschaften für ein ADServiceAccount-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;Dienstkonto&gt; durch eine Dienstkonto-ID, z. B. den Namen eines Dienstkontos.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADServiceAccount-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADService account &lt;Dienstkonto&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADServiceAccount-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADServiceAccount &lt;Dienstkonto&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity service1 </dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft das Dienstkonto mit dem samAccountName &quot;service1&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Identity S-1-5-21-159507390-2980359153-3438059098-29770 </dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com 
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft das Dienstkonto mit der SID &quot;S-1-5-21-159507390-2980359153-3438059098-29770&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {HostComputers -eq &quot;CN=SQL-Server-1, DC=contoso,DC=com&quot; }</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True 
Name              : service1 
UserPrincipalName     : 
SamAccountName    : service1$ 
ObjectClass       : msDS-ManagedServiceAccount 
SID               : S-1-5-21-159507390-2980359153-3438059098-29770 
ObjectGUID        : eaa435ee-6ebc-44dd-b4b6-dc1bb5bcd23a 
HostComputers     : {CN=SQL-Server-1, DC=contoso,DC=com} 
DistinguishedName : CN=service1,CN=Managed Service Accounts,DC=contoso,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Sucht die auf dem Computer &quot;CN=SQL-Server-1,DC=contoso,DC=com&quot; installierten Dienstkonten.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144960</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Ruft die von einem Computer gehosteten Dienstkonten ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADComputerServiceAccount&quot; ruft alle Dienstkonten ab, die vom angegebenen Computer gehostet werden.

Der Computer-Parameter gibt den Active Directory-Computer an, der die Dienstkonten hostet. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Computer-Parameter auch auf eine Computerobjektvariable festlegen, z. B. $&lt;localComputerobject&gt;, oder ein Computerobjekt über die Pipeline an den Computer-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADComputer&quot; verwenden, um ein Computerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADComputerServiceAccount&quot; übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Computer-Parameter wird ein Computerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Objekt zurück, das die vom angegebenen Computer gehosteten Dienstkonten darstellt. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputerServiceAccount -Identity ComputerAcct1
</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled           : True
Name              : SvcAcct1
UserPrincipalName     :
SamAccountName    : SvcAcct1$
ObjectClass       : msDS-ManagedServiceAccount
SID               : S-1-5-21-159507390-2980359153-3438059098-1104
ObjectGUID        : 8d759d66-ef68-4360-aff6-ec3bb3425ac1
HostComputers     : {CN=ComputerAcct1,CN=Computers,DC=contoso,DC=com}
DistinguishedName : CN=SvcAcct1,CN=Managed Service Accounts,DC=contoso,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die auf dem Computerkonto &quot;ComputerAcct1&quot; gehosteten Dienstkonten ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144961</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Ruft die Standardkennwortrichtlinie für eine Active Directory-Domäne ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADDefaultDomainPasswordPolicy&quot; ruft die Standardkennwortrichtlinie für eine Domäne ab.

Der Identity-Parameter gibt die Active Directory-Domäne an. Sie können eine Domäne durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den DNS-Domänennamen oder NETBIOS-Namen identifizieren. Sie können den Parameter auch auf eine Domänenobjektvariable, z. B. $&lt;localDomainObject&gt;, festlegen oder ein Domänenobjekt über die Pipeline an den Identity-Parameter übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Current</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">LocalComputer</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">LoggedOnUser</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond, DC=corp, DC=contoso, DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Current</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Domäne des lokalen Computers oder des gegenwärtig angemeldeten Benutzers (CLU) zurückgegeben werden soll. Mögliche Werte für diesen Parameter lauten:
  LocalComputer oder 0
  LoggedOnUser oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die Domäne des gegenwärtig angemeldeten Benutzers zurückgegeben wird.
  -Current LoggedOnUser</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADCurrentDomainType</command:parameterValue>
			<dev:type>
				<maml:name>ADCurrentDomainType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>LocalComputer</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>LoggedOnUser</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond, DC=corp, DC=contoso, DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das standardmäßige Kennwortrichtlinienobjekt für die angegebene Domäne zurück.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Standardkennwortrichtlinie für Domänen für die zurzeit angemeldete Benutzerdomäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LocalComputer</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Standardkennwortrichtlinie für Domänen vom aktuellen lokalen Computer ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Identity fabrikam.com</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Standardkennwortrichtlinie für Domänen von einer angegebenen Domäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>(Get-ADForest -Current LoggedOnUser).Domains | %{ Get-ADDefaultDomainPasswordPolicy -Identity $_ }</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Standard-Kennwortrichtlinienobjekte für Domänen aus allen Domänen in der Gesamtstruktur ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Standardkennwortrichtlinie für Domänen für die zurzeit angemeldete Benutzerdomäne ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144962</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADAccountAuthorizationGroup
		</command:name>
		<maml:description>
			<maml:para>Ruft die Tokengruppeninformationen für Konten ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADAccountAuthorizationGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADAuthorizationGroup&quot; ruft die Sicherheitsgruppen aus dem angegebenen Benutzer-, Computer- oder Dienstkontotoken ab. Zum Ausführen der Gruppensuche benötigt dieses Cmdlet einen globalen Katalog. Wenn die Gesamtstruktur, in der das Konto enthalten ist, keinen globalen Katalog aufweist, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Der Identity-Parameter gibt den Benutzer, Computer oder das Dienstkonto an. Sie können ein Benutzer-, Computer- oder Dienstkontoobjekt durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID), den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) oder den Benutzerprinzipalnamen identifizieren. Sie können auch den Identity-Parameter auf eine Kontoobjektvariable festlegen, z. B. $&lt;localAccountobject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot;, &quot;Get-ADServiceAccount&quot; oder &quot;Search-ADAccount&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Get-ADAccountAuthorizationGroup&quot; übergeben. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADAccountAuthorizationGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen, das den Benutzer, Computer oder das Dienstkonto darstellt. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt Gruppenobjekte zurück, die die Sicherheitsgruppen für das Konto darstellen. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup GlenJohn</dev:code>
  			<dev:remarks>
 				<maml:para>
GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Everyone
name              : Everyone
objectClass       :
SID               : S-1-1-0
distinguishedName :

GroupScope        : DomainLocal
objectGUID        : 00000000-0000-0000-0000-000000000000
GroupCategory     : Security
SamAccountName    : Authenticated Users
name              : Authenticated Users
objectClass       :
SID               : S-1-5-11
distinguishedName :

GroupScope        : Global
objectGUID        : 86c0f0d5-8b4d-4f35-a867-85a006b92902
GroupCategory     : Security
SamAccountName    : Domain Users
name              : Domain Users
objectClass       : group
SID               : S-1-5-21-41432690-3719764436-1984117282-513
distinguishedName : CN=Domain Users,CN=Users,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : 869fb7ad-8cf2-4dd0-ac0f-4bd3bf324669
GroupCategory     : Security
SamAccountName    : Pre-Windows 2000 Compatible Access
name              : Pre-Windows 2000 Compatible Access
objectClass       : group
SID               : S-1-5-32-554
distinguishedName : CN=Pre-Windows 2000 Compatible Access,CN=Builtin,DC=Fabrikam,DC=com

GroupScope        : DomainLocal
objectGUID        : c1e397c5-1e44-4270-94d1-88d6c4b78ee6
GroupCategory     : Security
SamAccountName    : Users
name              : Users
objectClass       : group
SID               : S-1-5-32-545
distinguishedName : CN=Users,CN=Builtin,DC=Fabrikam,DC=com</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Sicherheitsgruppen für das angegebene Konto mit dem SamAccountName &quot;GlenJohn&quot; zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADAccountAuthorizationGroup &quot;cn=GlenJohn,dc=AppNC&quot; -Server &lt;Server&gt;:50000</dev:code>
  			<dev:remarks>
 				<maml:para>distinguishedName : CN=AdminGroup,DC=AppNC
GroupCategory     : Security
GroupScope        : Global
name              : AdminGroup
objectClass       : group
objectGUID        : 4d72873f-fe09-4834-9ada-a905636d10df
SamAccountName    :
SID               : S-1-510474493-936115905-4021890855-1253703389-3958791574-3542197427</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Sicherheitsgruppen für das angegebene Konto mit dem DistinguishedName &quot;cn=GlenJohn,dc=AppNC&quot; in der AD LDS-Instanz &quot;&lt;Server&gt;:50000&quot; zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144963</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ADOptionalFeature
		</command:name>
		<maml:description>
			<maml:para>Ruft mindestens ein optionales Active Directory-Feature ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ADOptionalFeature</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ADOptionalFeature&quot; ruft ein optionales Feature ab oder führt eine Suche aus, um mehrere optionale Features von Active Directory abzurufen. 

Der Identity-Parameter gibt das optionale Active Directory-Feature an, das Sie abrufen möchten. Sie können ein optionales Feature durch den definierten Namen (DN), die Feature-GUID oder Objekt-GUID identifizieren. Sie können auch den Parameter auf die Objektvariable eines optionalen Features festlegen, z. B. $&lt;localOptionalFeatureObject&gt;, oder ein Objekt für ein optionales Feature über die Pipeline an den Identity-Parameter übergeben.

Um mehr als ein optionales Feature zu suchen und abzurufen, verwenden Sie den Filter-Parameter oder den LDAPFilter-Parameter. Der Filter-Parameter schreibt Abfragezeichenfolgen für Active Directory mithilfe der PowerShell Expression Language. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. Weitere Informationen über die Filter-Parametersyntax finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. Wenn LDAP-Abfragezeichenfolgen vorhanden sind, können Sie den LDAPFilter-Parameter verwenden. 

Dieses Cmdlet ruft einen Standardsatz von Objekteigenschaften für optionale Features ab. Um zusätzliche Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. Weitere Informationen zum Bestimmen der Eigenschaften für Computerobjekte finden Sie in der Beschreibung des Properties-Parameters.  </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-ADOptionalFeature</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LDAPFilter</maml:name>
				<maml:description>
					<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt eine Abfragezeichenfolge an, die Active Directory-Objekte abruft. Diese Zeichenfolge verwendet die PowerShell Expression Language-Syntax. Die PowerShell Expression Language-Syntax bietet umfangreiche Unterstützung für die Typkonvertierung von Werttypen, die vom Filter-Parameter empfangen werden. In der Syntax wird eine Darstellung mit korrekter Reihenfolge verwendet. Dies bedeutet, dass sich der Operator zwischen dem Operanden und dem Wert befindet. Weitere Informationen zum Filter-Parameter finden Sie unter &quot;about_ActiveDirectory_Filter&quot;. 

Syntax: 
In der folgenden Syntax wird mithilfe der Backus-Naur-Form die Verwendung der PowerShell Expression Language für diesen Parameter veranschaulicht.

&lt;filter&gt;  ::= &quot;{&quot; &lt;FilterComponentList&gt; &quot;}&quot;

&lt;FilterComponentList&gt; ::= &lt;FilterComponent&gt; | &lt;FilterComponent&gt; &lt;JoinOperator&gt; &lt;FilterComponent&gt; | &lt;NotOperator&gt;  &lt;FilterComponent&gt;

&lt;FilterComponent&gt; ::= &lt;attr&gt; &lt;FilterOperator&gt; &lt;value&gt; | &quot;(&quot; &lt;FilterComponent&gt; &quot;)&quot;

&lt;FilterOperator&gt; ::= &quot;-eq&quot; | &quot;-le&quot; | &quot;-ge&quot; | &quot;-ne&quot; | &quot;-lt&quot; | &quot;-gt&quot;| &quot;-approx&quot; | &quot;-bor&quot; | &quot;-band&quot; | &quot;-recursivematch&quot; | &quot;-like&quot; | &quot;-notlike&quot;

&lt;JoinOperator&gt; ::= &quot;-and&quot; | &quot;-or&quot;

&lt;NotOperator&gt; ::= &quot;-not&quot;

&lt;attr&gt; ::= &lt;PropertyName&gt; | &lt;LDAPDisplayName des Attributs&gt;

&lt;value&gt;:: = &lt;Vergleicht diesen Wert mithilfe des angegebenen &lt;FilterOperator&gt; mit einem &lt;attr&gt;&gt;

Eine Liste unterstützter Typen für &lt;value&gt; finden Sie unter &quot;about_ActiveDirectory_ObjectModel&quot;.

Beispiele: 
In den folgenden Beispielen wird gezeigt, wie diese Syntax mit Active Directory-Cmdlets verwendet wird.

Wenn Sie alle Objekte mit dem vom Cmdlet angegebenen Typ abrufen möchten, verwenden Sie das Sternchen als Platzhalter:
Alle Benutzerobjekte:
Get-ADUser -Filter * 
  -oder-
Alle Computerobjekte:
Get-ADComputer -Filter *

Um alle Benutzerobjekte abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle:
Get-ADUser -Filter {EmailAddress -like &quot;*&quot;} 
Get-ADUser -Filter {mail -like &quot;*&quot;} 
  -oder-
Get-ADObject -Filter {(mail -like &quot;*&quot;) -and (ObjectClass -eq &quot;user&quot;)}

Hinweis: Andere PowerShell-Platzhalter als &quot;*&quot;, z. B. &quot;?&quot;, werden von der Filter-Syntax nicht unterstützt.

Um alle Benutzerobjekte mit dem Nachnamen &quot;Hess&quot; abzurufen, die über ein E-Mail-Attribut verfügen, verwenden Sie einen der folgenden Befehle: 
Get-ADUser -filter {(EmailAddress -like &quot;*&quot;) -and (Surname  -eq &quot;Hess&quot;)} 
  -oder-
Get-ADUser -filter {(mail -eq &quot;*&quot;) -and (sn -eq &quot;Hess&quot;)} 

Um alle Benutzerobjekte abzurufen, die sich seit dem 1. Januar 2007 nicht angemeldet haben, verwenden Sie die folgenden Befehle:
$logonDate = New-Object System.DateTime(2007, 1, 1)
Get-ADUser  -filter { lastLogon -le $logonDate  } 

Um alle Gruppen mit der Gruppenkategorie &quot;Security&quot; und dem Gruppenbereich &quot;Global&quot; abzurufen, verwenden Sie einen der folgenden Befehle:
Get-ADGroup  -filter {GroupCategory  -eq &quot;Security&quot;  -and GroupScope -eq &quot;Global&quot;}
  -oder-
Get-ADGroup -filter {GroupType -band 0x80000000}

Hinweis: Verwenden Sie für Abfragen mit LDAP-Abfragezeichenfolgen den LDAPFilter-Parameter.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Objekt für ein optionales Active Directory-Feature an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  Feature-GUID (featureGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Objekt-GUID (objectGUID) 
    Beispiel: 482ab21c-823e-401e-879a-ac7383d64eb9

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für ein optionales Feature festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für ein optionales Feature mit dem Namen &quot;optionalFeatureInstance&quot; festgelegt wird.
  -Identity $optionalFeatureInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOptionalFeature</command:parameterValue>
			<dev:type>
				<maml:name>ADOptionalFeature</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LDAPFilter</maml:name>
			<maml:description>
				<maml:para>Gibt eine LDAP-Abfragezeichenfolge an, die zum Filtern von Active Directory-Objekten verwendet wird. Sie können diesen Parameter verwenden, um vorhandene LDAP-Abfragen und auszuführen. Die Filterparametersyntax unterstützt die gleichen Funktionen wie die LDAP-Syntax. Weitere Informationen finden Sie in der Beschreibung des Filter-Parameters und unter &quot;about_ActiveDirectory_Filter&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass alle Objekte in der vom SearchBase-Parameter angegebenen Organisationseinheit gesucht werden, deren Name mit &quot;sara&quot; beginnt.

 -LDAPFilter &quot;(name=sara*)&quot;  -SearchScope Subtree -SearchBase &quot;DC=NA,DC=fabrikam,DC=com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt die Eigenschaften des Ausgabeobjekts an, die vom Server abgerufen werden sollen. Verwenden Sie diesen Parameter zum Abrufen von Eigenschaften, die nicht im Standardsatz enthalten sind.

Geben Sie Eigenschaften für diesen Parameter als durch Trennzeichen getrennte Liste von Namen an. Um alle Attribute anzuzeigen, die für das Objekt festgelegt sind, geben Sie &quot;*&quot; (Sternchen) an.

Um eine einzelne erweiterte Eigenschaft anzugeben, verwenden Sie den Namen der Eigenschaft. Für Eigenschaften, die keine Standardeigenschaften oder erweiterten Eigenschaften sind, müssen Sie den LDAP-Anzeigenamen des Attributs angeben. 

Um Eigenschaften abzurufen und für ein Objekt anzuzeigen, können Sie das dem Objekt zugeordnete Cmdlet &quot;Get-*&quot; verwenden und die Ausgabe an das Cmdlet &quot;Get-Member&quot; übergeben. In den folgenden Beispielen wird anhand der Administratorengruppe als Beispielgruppenobjekt gezeigt, wie Eigenschaften für eine Gruppe abgerufen werden.

  Get-ADGroup -Identity Administrators | Get-Member

Um die Liste aller Eigenschaften für ein ADGroup-Objekt abzurufen und anzuzeigen, verwenden Sie den folgenden Befehl:
  Get-ADGroup -Identity Administrators -Properties *| Get-Member

In den folgenden Beispielen wird gezeigt, wie mit dem Properties-Parameter einzelne Eigenschaften sowie der Standardsatz, der erweiterte Satz oder der vollständige Satz von Eigenschaften abgerufen werden. 

Um die erweiterten Eigenschaften &quot;OfficePhone&quot; und &quot;Organization&quot; sowie die Standardeigenschaften eines ADUser-Objekts mit dem Namen &quot;SaraHettich&quot; abzurufen, verwenden Sie den folgenden Befehl:
  GetADUser -Identity SaraHettich  -Properties OfficePhone,Organization

Um die Eigenschaften mit den LDAP-Anzeigenamen &quot;otherTelephone&quot; und &quot;otherMobile&quot; zusätzlich zu den Standardeigenschaften für diesen Benutzer abzurufen, verwenden Sie den folgenden Befehl:
   GetADUser -Identity SaraHettich  -Properties otherTelephone, otherMobile |Get-Member </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.Int32]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.Int32]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com 
NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für ein optionales Feature empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADOptionalFeature</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Objekt für optionale Features zurück. 

Dieses Cmdlet gibt einen Standardsatz von ADOptionalFeature-Eigenschaftswerten zurück. Um zusätzliche ADOptionalFeature-Eigenschaften abzurufen, verwenden Sie den Properties-Parameter. 

Die folgenden Beispiele veranschaulichen, wie die Eigenschaften für ein ADOptionalFeature-Objekt angezeigt werden. Um diese Beispiele auszuführen, ersetzen Sie &lt;optional feature&gt; durch die ID eines optionalen Features, z. B. den definierten Namen des optionalen Features.

Um eine Liste mit dem standardmäßigen Eigenschaftensatz eines ADOptionalFeature-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADOptionalFeature &lt;optional feature&gt;| Get-Member

Um eine Liste aller Eigenschaften eines ADOptionalFeature-Objekts abzurufen, verwenden Sie folgenden Befehl:
   Get-ADOptionalFeature &lt;optional feature&gt; -Properties ALL | Get-Member
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature -Filter *</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft eine Liste aller verfügbaren optionalen Features in der aktuellen Gesamtstruktur ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature'</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft das optionale Feature &quot;Recycle Bin Feature&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 766ddcd8-acd0-445e-f3b9-a7f9b6744f2a</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft das optionale Feature mit dem Feature-GUID &quot;766ddcd8-acd0-445e-f3b9-a7f9b6744f2a&quot;ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADOptionalFeature 'Recycle Bin Feature' -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft das optionale Feature &quot;Recycle Bin Feature&quot; in einer AD LDS-Instanz ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144964</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADOptionalFeature</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Install-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Installiert ein Active Directory-Dienstkonto auf einem Computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Install</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Install-ADServiceAccount&quot; installiert ein vorhandenes Active Directory-Dienstkonto auf dem Computer, auf dem das Cmdlet ausgeführt wird. Dieses Cmdlet überprüft, ob der Computer zum Hosten des Dienstkontos geeignet ist. Das Cmdlet nimmt auch die erforderlichen Änderungen lokal vor, damit das Dienstkontokennwort regelmäßig vom Computer zurückgesetzt werden kann, ohne dass eine Benutzeraktion erforderlich ist.

Der Identity-Parameter gibt das zu installierende Active Directory-Dienstkonto an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Parameter auf die Objektvariable eines Dienstkontos festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder ein Dienstkontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. Get-ADServiceAccount verwenden, um ein Dienstkontoobjekt abzurufen, und dann das Objekt über die Pipeline an &quot;Install-ADServiceAccount&quot; übergeben.

Mit dem AccountPassword-Parameter können Sie ein SecureString-Objekt übergeben, das das Kennwort des verwalteten Dienstkontos enthält. Alternativ können Sie mit dem PromptForPassword-Parameter zur Eingabe des Kennworts für das verwaltete Dienstkonto aufgefordert werden. Das angegebene Kennwort sollte mit dem eingegebenen Kennwort des verwalteten Dienstkontos übereinstimmen. Das Kennwort muss übergeben werden, wenn Sie ein verwaltetes Dienstkonto auf einem Server installieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC), jedoch ohne Zugriff auf beschreibbare Domänencontroller befindet. In diesem Fall sollten Sie das verwaltete Dienstkonto erstellen, es mit dem entsprechenden Computerkonto verknüpfen und ein bekanntes Kennwort zuweisen, das beim Installieren des verwalteten Dienstkontos auf dem Server der RODC-Site übergeben werden muss. Wenn Sie sowohl den AccountPassword-Parameter als auch den PromptForPassword-Parameter übergeben, hat der AccountPassword-Parameter Vorrang.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Install-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>AccountPassword</maml:name>
			  <maml:description>
			    <maml:para>Mit dem AccountPassword-Parameter können Sie einen SecureString-Werttyp übergeben, das das Kennwort eines von Ihnen bereitgestellten verwalteten Dienstkontos enthält. Dies ist erforderlich, wenn Sie ein verwaltetes Dienstkonto auf einem Server installieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC), jedoch ohne Zugriff auf beschreibbare Domänencontroller befindet. In diesem Fall sollten Sie das verwaltete Dienstkonto erstellen, es mit dem entsprechenden Computerkonto verknüpfen und ein bekanntes Kennwort zuweisen, das beim Installieren des verwalteten Dienstkontos auf dem Server der RODC-Site übergeben werden muss. Wenn Sie sowohl den AccountPassword-Parameter als auch den PromptForPassword-Parameter übergeben, hat der AccountPassword-Parameter Vorrang.</maml:para>
			  </maml:description>
			  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			  <maml:name>PromptForPassword</maml:name>
			  <maml:description>
			    <maml:para>Mit dem PromptForPassword-Parameter können Sie das Kennwort eines von Ihnen bereitgestellten verwalteten Dienstkontos eingeben. Dies ist erforderlich, wenn Sie ein verwaltetes Dienstkonto auf einem Server installieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC), jedoch ohne Zugriff auf beschreibbare Domänencontroller befindet. In diesem Fall sollten Sie das verwaltete Dienstkonto erstellen, es mit dem entsprechenden Computerkonto verknüpfen und ein bekanntes Kennwort zuweisen, das beim Installieren des verwalteten Dienstkontos auf dem Server der RODC-Site übergeben werden muss. Wenn Sie sowohl den AccountPassword-Parameter als auch den PromptForPassword-Parameter übergeben, hat der AccountPassword-Parameter Vorrang.</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>AccountPassword</maml:name>
		  <maml:description>
		    <maml:para>Mit dem AccountPassword-Parameter können Sie einen SecureString-Werttyp übergeben, das das Kennwort eines von Ihnen bereitgestellten verwalteten Dienstkontos enthält. Dies ist erforderlich, wenn Sie ein verwaltetes Dienstkonto auf einem Server installieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC), jedoch ohne Zugriff auf beschreibbare Domänencontroller befindet. In diesem Fall sollten Sie das verwaltete Dienstkonto erstellen, es mit dem entsprechenden Computerkonto verknüpfen und ein bekanntes Kennwort zuweisen, das beim Installieren des verwalteten Dienstkontos auf dem Server der RODC-Site übergeben werden muss. Wenn Sie sowohl den AccountPassword-Parameter als auch den PromptForPassword-Parameter übergeben, hat der AccountPassword-Parameter Vorrang.</maml:para>
		  </maml:description>
		  <command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
		  <maml:name>PromptForPassword</maml:name>
		  <maml:description>
		    <maml:para>Mit dem PromptForPassword-Parameter können Sie das Kennwort eines von Ihnen bereitgestellten verwalteten Dienstkontos eingeben. Dies ist erforderlich, wenn Sie ein verwaltetes Dienstkonto auf einem Server installieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC), jedoch ohne Zugriff auf beschreibbare Domänencontroller befindet. In diesem Fall sollten Sie das verwaltete Dienstkonto erstellen, es mit dem entsprechenden Computerkonto verknüpfen und ein bekanntes Kennwort zuweisen, das beim Installieren des verwalteten Dienstkontos auf dem Server der RODC-Site übergeben werden muss. Wenn Sie sowohl den AccountPassword-Parameter als auch den PromptForPassword-Parameter übergeben, hat der AccountPassword-Parameter Vorrang.</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' 
</dev:code>
  			<dev:remarks>
 				<maml:para>Installiert ein verwaltetes Dienstkonto mit dem Namen &quot;SQL-HR-svc-01&quot; auf dem lokalen Computer.</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Install-ADServiceAccount $a </dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft ein verwaltetes Dienstkonto mit dem Namen &quot;SQL-HR-svc-01&quot; aus dem Standardverzeichnis ab und installiert es auf dem lokalen Computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -AccountPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
			<dev:remarks>
				<maml:para>Installiert nach der Überprüfung des Kennworts ein verwaltetes Dienstkonto mit dem Namen &quot;SQL-HR-svc-01&quot; auf dem lokalen Computer.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Install-ADServiceAccount -Identity 'SQL-HR-svc-01' -PromptForPassword
</dev:code>
			<dev:remarks>
				<maml:para>Geben Sie das aktuelle Kennwort für &quot;SQL-HR-svc-01&quot; ein. Kennwort:******
</maml:para>
				<maml:para>Installiert (nach der Überprüfung des eingegebenen Kennworts) ein verwaltetes Dienstkonto mit dem Namen &quot;SQL-HR-svc-01&quot; auf dem lokalen Computer.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144965</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Reset-ADServiceAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADObject
		</command:name>
		<maml:description>
			<maml:para>Verschiebt ein Active Directory-Objekt oder einen Container mit Active Directory-Objekten in einen anderen Container oder eine andere Domäne. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Move-ADObject&quot; verschiebt ein Objekt oder einen Container mit Objekten von einem Container in einen anderen oder von einer Domäne in eine andere. 

Der Identity-Parameter gibt das Active Directory-Objekt oder den Active Directory-Container an, das bzw. der verschoben werden soll. Sie können ein Objekt oder einen Container durch den definierten Namen (DN) oder den GUID identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localObject&gt;, oder über die Pipeline ein Kontoobjekt an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADObject&quot; verwenden, um ein Objekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Move-ADObject&quot; übergeben. Sie können auch eines der Cmdlets &quot;Get-ADGroup&quot;, &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot;, &quot;Get-ADServiceAccount&quot;, &quot;Get-ADOrganizationalUnit&quot; und &quot;Get-ADFineGrainedPasswordPolicy&quot; verwenden, um ein Objekt abzurufen, das Sie über die Pipeline an dieses Cmdlet übergeben können.

Der TargetPath-Parameter muss angegeben werden. Dieser Parameter identifiziert den neuen Speicherort für das Objekt oder den Container. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Speicherort für das Objekt an. Bei diesem Speicherort muss es sich um den Pfad zu einem Container oder einer Organisationseinheit handeln.

Im folgenden Beispiel wird gezeigt, wie mithilfe des definierten Namens ein Zielpfad angegeben wird.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetServer</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Active Directory-Instanz an, indem der folgende Wert für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. 

Hinweis: Für das domänenübergreifende Verschieben ist ein FQDN-Servername erforderlich.

Werte für Domänennamen:
  Vollqualifizierter Domänenname (FQDN)
    Beispiele: contoso.com

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: server01.europe.contoso.com
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: server01.europe.contoso.com:3268

Im folgenden Beispiel wird gezeigt, wie mithilfe des vollqualifizierten Namens des Verzeichnisservers ein Zielserver angegeben wird.
  -TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Speicherort für das Objekt an. Bei diesem Speicherort muss es sich um den Pfad zu einem Container oder einer Organisationseinheit handeln.

Im folgenden Beispiel wird gezeigt, wie mithilfe des definierten Namens ein Zielpfad angegeben wird.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetServer</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Active Directory-Instanz an, indem der folgende Wert für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. 

Hinweis: Für das domänenübergreifende Verschieben ist ein FQDN-Servername erforderlich.

Werte für Domänennamen:
  Vollqualifizierter Domänenname (FQDN)
    Beispiele: contoso.com

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: server01.europe.contoso.com
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: server01.europe.contoso.com:3268

Im folgenden Beispiel wird gezeigt, wie mithilfe des vollqualifizierten Namens des Verzeichnisservers ein Zielserver angegeben wird.
  -TargetServer &quot;server01.europe.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.AObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;OU=ManagedGroups,DC=Fabrikam,DC=Com&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt die Organisationseinheit &quot;ManagedGroups&quot; an einen neuen Speicherort. Die Organisationseinheit &quot;ManagedGroups&quot; darf NICHT vor versehentlichem Löschen geschützt sein, damit sie erfolgreich verschoben werden kann.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;OU=Managed,DC=Fabrikam,DC=Com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt das durch den angegebenen GUID identifizierte Objekt zum neuen Speicherort.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject &quot;8d0bcc44-c826-4dd8-af5c-2c69960fbd47&quot; -TargetPath &quot;1c2ea8a8-c2b7-4a87-8190-0e8a166aee16&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Objekt an einen neuen Speicherort. Sowohl das Objekt als auch der Zielpfad werden mit GUIDs angegeben.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com&quot; -TargetPath &quot;OU=Accounting,DC=Europe,DC=Fabrikam,DC=com&quot; -TargetServer &quot;server01.europe.fabrikam.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Objekt mit dem DistinguishedName &quot;CN=Peter Bankov,OU=Accounting,DC=Fabrikam,DC=com&quot; in eine andere Domäne.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADObject -Identity &quot;CN=AccountLeads,DC=AppNC&quot; -TargetPath &quot;OU=AccountDeptOU,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Objekt an einen neuen Speicherort in einer LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144966</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServer
		</command:name>
		<maml:description>
			<maml:para>Verschiebt einen Verzeichnisserver in Active Directory an einen neuen Standort. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Move-ADDirectoryServer&quot; verschiebt einen Verzeichnisserver in Active Directory an einen neuen Standort innerhalb derselben Domäne.

Der Identity-Parameter gibt den zu verschiebenden Verzeichnisserver an. Sie können einen der folgenden Werte verwenden, um ein Verzeichnisserverobjekt anzugeben:
  Name des Serverobjekts (name) 
  Definierter Name (DN) des NTDS-Einstellungsobjekts.
  Definierter Name (DN) des Serverobjekts, das den Verzeichnisserver darstellt.
  GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.

Sie können auch den Identity-Parameter auf die Objektvariable eines Verzeichnisservers festlegen, z. B. $&lt;localDirectoryServerObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomainController&quot; verwenden, um ein Verzeichnisserverobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Move-ADDirectoryServer&quot; übergeben.

Der Site-Parameter gibt den neuen Standort für den Verzeichnisserver an. Sie können einen Standort durch den definierten Namen (DN) oder den GUID identifizieren.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Serverobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Name des Serverobjekts (name) 
  Bei AD LDS-Instanzen lautet die Syntax für Namen &lt;computer-name&gt;$&lt;instance-name&gt;.
    Beispiel: asia-w7-vm4$instance1
    Hinweis: Wenn Sie diesen Wert in Windows PowerShell eingeben, müssen Sie das Graviszeichen (`) als Escapezeichen für das Dollarzeichen ($) verwenden. Daher würden Sie im vorherigen Beispiel Folgendes eingeben: asia-w7-vm4`$instance1
  Verwenden Sie für andere Active Directory-Instanzen den Wert der name-Eigenschaft.
    Beispiel: corp-DC01

Definierter Name des NTDS-Einstellungsobjekts.
  Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

Definierter Name des Serverobjekts, das den Verzeichnisserver darstellt.
  Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20

GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
  Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Verzeichnisserver-Objektinstanz mit dem Namen &quot;directoryServerInstance&quot; festgelegt wird.
  -Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Site</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Standort für den Verzeichnisserver an. Sie können den Standort durch einen der folgenden Eigenschaftswerte identifizieren: Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name (DN)
    Beispiel: CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID (ObjectGUID)
   Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Name (name)
    Beispiel: NA-CAN-QBC 

Das folgende Beispiel zeigt, wie dieser Parameter verwendet wird, um mithilfe des Standortnamens ein Standortobjekt anzugeben.
  -Site  &quot;NA-CAN-QBC&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Serverobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Name des Serverobjekts (name) 
  Bei AD LDS-Instanzen lautet die Syntax für Namen &lt;computer-name&gt;$&lt;instance-name&gt;.
    Beispiel: asia-w7-vm4$instance1
    Hinweis: Wenn Sie diesen Wert in Windows PowerShell eingeben, müssen Sie das Graviszeichen (`) als Escapezeichen für das Dollarzeichen ($) verwenden. Daher würden Sie im vorherigen Beispiel Folgendes eingeben: asia-w7-vm4`$instance1
  Verwenden Sie für andere Active Directory-Instanzen den Wert der name-Eigenschaft.
    Beispiel: corp-DC01

Definierter Name des NTDS-Einstellungsobjekts.
  Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

Definierter Name des Serverobjekts, das den Verzeichnisserver darstellt.
  Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20

GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
  Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Verzeichnisserver-Objektinstanz mit dem Namen &quot;directoryServerInstance&quot; festgelegt wird.
  -Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Site</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Standort für den Verzeichnisserver an. Sie können den Standort durch einen der folgenden Eigenschaftswerte identifizieren: Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name (DN)
    Beispiel: CN= NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID (ObjectGUID)
   Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Name (name)
    Beispiel: NA-CAN-QBC 

Das folgende Beispiel zeigt, wie dieser Parameter verwendet wird, um mithilfe des Standortnamens ein Standortobjekt anzugeben.
  -Site  &quot;NA-CAN-QBC&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSite</command:parameterValue>
			<dev:type>
				<maml:name>ADSite</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Verzeichnisserverobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServer -Identity &quot;FABRIKAM-DC2&quot; -Site &quot;Branch-Office-Site&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt den Domänencontroller &quot;FABRIKAM-DC2&quot; in die Site &quot;Branch-Office-Site&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomainController -Filter {IsReadOnly -eq $true} | Move-ADDirectoryServer -site &quot;RODC-Site-Name&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt alle schreibgeschützten Domänencontroller in die Site &quot;RODC-Site-Name&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144967</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServerOperationMasterRole</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-ADDirectoryServerOperationMasterRole
		</command:name>
		<maml:description>
			<maml:para>Verschiebt Betriebsmasterrollen auf einen Active Directory-Verzeichnisserver. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>ADDirectoryServerOperationMasterRole</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Move-ADDirectoryServerOperationMasterRole&quot; verschiebt mindestens eine Betriebsmasterrolle auf einen Verzeichnisserver. Sie können Betriebsmasterrollen auf einen Verzeichnisserver in einer anderen Domäne verschieben, wenn die Anmeldeinformationen in beiden Domänen übereinstimmen. 

Der Identity-Parameter gibt den Verzeichnisserver an, der die Rollen empfängt. Sie können einen der folgenden Werte verwenden, um ein Verzeichnisserverobjekt anzugeben:
  Name des Serverobjekts (name) 
  Definierter Name (DN) des NTDS-Einstellungsobjekts.
  Definierter Name (DN) des Serverobjekts, das den Verzeichnisserver darstellt.
  GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.

Bei AD LDS-Instanzen lautet die Syntax für den Serverobjektnamen &lt;computer-name&gt;$&lt;instance-name&gt;. Nachfolgend ein Beispiel für die Syntax: 
  asia-w7-vm4$instance1
Wenn Sie diesen Wert in Windows PowerShell eingeben, müssen Sie das Graviszeichen (`) als Escapezeichen für das Dollarzeichen ($) verwenden. Daher würden Sie in diesem Beispiel Folgendes eingeben: 
  asia-w7-vm4`$instance1

Sie können auch den Parameter auf die Objektvariable eines Verzeichnisservers festlegen, z. B. $&lt;localDirectoryServerObject&gt;.

Der OperationMasterRole-Parameter gibt die zu verschiebenden Betriebsmasterrollen an. Betriebsrollen umfassen PDCEmulator, RIDMaster, InfrastructureMaster, SchemaMaster und DomainNamingMaster. Um mehr als eine Rolle anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-ADDirectoryServerOperationMasterRole</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Serverobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Name des Serverobjekts (name) 
  Bei AD LDS-Instanzen lautet die Syntax für Namen &lt;computer-name&gt;$&lt;instance-name&gt;.
    Beispiel: asia-w7-vm4$instance1
    Hinweis: Wenn Sie diesen Wert in Windows PowerShell eingeben, müssen Sie das Graviszeichen (`) als Escapezeichen für das Dollarzeichen ($) verwenden. Daher würden Sie im vorherigen Beispiel Folgendes eingeben: asia-w7-vm4`$instance1
  Verwenden Sie für andere Active Directory-Instanzen den Wert der name-Eigenschaft.
    Beispiel: corp-DC01

Definierter Name des NTDS-Einstellungsobjekts.
  Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

Definierter Name des Serverobjekts, das den Verzeichnisserver darstellt.
  Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20

GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
  Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Verzeichnisserver-Objektinstanz mit dem Namen &quot;directoryServerInstance&quot; festgelegt wird.
  -Identity   $directoryServerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>OperationMasterRole</maml:name>
				<maml:description>
					<maml:para>Gibt mindestens eine Betriebsmasterrolle an, die auf den angegebenen Verzeichnisserver in Active Directory-Domänendienste verschoben werden soll. Mögliche Werte für diesen Parameter lauten: 
  PDCEmulator oder 0
  RIDMaster oder 1
  InfrastructureMaster oder 2
  SchemaMaster oder 3
  DomainNamingMaster oder 4

Um mehrere Betriebsmasterrollen anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, um die Rolle SchemaMaster und die Rolle DomainNamingMaster zu verschieben.
   -OperationMasterRole SchemaMaster, 4</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Serverobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Name des Serverobjekts (name) 
  Bei AD LDS-Instanzen lautet die Syntax für Namen &lt;computer-name&gt;$&lt;instance-name&gt;.
    Beispiel: asia-w7-vm4$instance1
    Hinweis: Wenn Sie diesen Wert in Windows PowerShell eingeben, müssen Sie das Graviszeichen (`) als Escapezeichen für das Dollarzeichen ($) verwenden. Daher würden Sie im vorherigen Beispiel Folgendes eingeben: asia-w7-vm4`$instance1
  Verwenden Sie für andere Active Directory-Instanzen den Wert der name-Eigenschaft.
    Beispiel: corp-DC01

Definierter Name des NTDS-Einstellungsobjekts.
  Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-BC,CN=Sites,CN=Configuration,DC=corp,DC=contoso

Definierter Name des Serverobjekts, das den Verzeichnisserver darstellt.
  Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com

GUID (objectGUID) des Serverobjekts unter der Konfigurationspartition.
  Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20

GUID (objectGUID) des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
  Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Verzeichnisserver-Objektinstanz mit dem Namen &quot;directoryServerInstance&quot; festgelegt wird.
  -Identity   $directoryServerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDirectoryServer</command:parameterValue>
			<dev:type>
				<maml:name>ADDirectoryServer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>OperationMasterRole</maml:name>
			<maml:description>
				<maml:para>Gibt mindestens eine Betriebsmasterrolle an, die auf den angegebenen Verzeichnisserver in Active Directory-Domänendienste verschoben werden soll. Mögliche Werte für diesen Parameter lauten: 
  PDCEmulator oder 0
  RIDMaster oder 1
  InfrastructureMaster oder 2
  SchemaMaster oder 3
  DomainNamingMaster oder 4

Um mehrere Betriebsmasterrollen anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, um die Rolle SchemaMaster und die Rolle DomainNamingMaster zu verschieben.
   -OperationMasterRole SchemaMaster, 4</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADOperationMasterRole[]</command:parameterValue>
			<dev:type>
				<maml:name>ADOperationMasterRole[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Siehe Hinweise</dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Verzeichnisserverobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDirectoryServer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Verzeichnisserverobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole &quot;FABRIKAM-DC1&quot; PDCEmulator</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt die PDCEmulator-Rolle zum Domänencontroller &quot;FABRIKAM-DC1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole -Identity &quot;FABRIKAM-DC2&quot; -OperationMasterRole PDCEmulator,SchemaMaster</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt die PDCEmulator-Rolle und die SchemaMaster-Rolle zum Domänencontroller &quot;FABRIKAM-DC2&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-ADDirectoryServerOperationMasterRole Fabrikam-DC`$instance1 -OperationMasterRole schemaMaster -server Fabrikam-DC:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt den Schemamaster-FSMO-Besitzer in die AD LDS-Instanz &quot;instance1&quot; auf dem Server &quot;Fabrikam-DC&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144968</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADDirectoryServer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADObject
		</command:name>
		<maml:description>
			<maml:para>Erstellt ein Active Directory-Objekt. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADObject&quot; erstellt ein neues Active Directory-Objekt, z. B. eine neue Organisationseinheit oder ein neues Benutzerkonto. Sie können dieses Cmdlet verwenden, um beliebige Active Directory-Objekttypen zu erstellen. Viele Objekteigenschaften werden definiert, indem Cmdlet-Parameter festgelegt werden. Eigenschaften, die nicht von Cmdlet-Parametern festgelegt werden, können mit dem OtherAttributes-Parameter festgelegt werden. 
Sie müssen den Name-Parameter und den Type-Parameter festlegen, um ein neues Active Directory-Objekt zu erstellen. Der Name-Parameter gibt den Namen des neuen Objekts an. Der Type-Parameter gibt den LDAP-Anzeigenamen der Active Directory-Schemaklasse an, die den Typ des zu erstellenden Objekts darstellt. Typwerte sind beispielsweise Computer, Gruppen, Organisationseinheiten und Benutzer.
Der Path-Parameter gibt den Container an, in dem das Objekt erstellt wird. Wenn Sie den Path-Parameter nicht angeben, erstellt das Cmdlet ein Objekt im Standardnamenskontextcontainer für Active Directory-Objekte in der Domäne.

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.
Methode 1: Verwenden Sie das Cmdlet &quot;New-ADObject&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.
Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Active Directory-Objekt, oder rufen Sie eine Kopie eines vorhandenen Active Directory-Objekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. Informationen dazu, wie Active Directory-Cmdlets den Instance-Parameter einsetzen, finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.
Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;Add-ADObject&quot;, um mehrere Active Directory-Objekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADObject&quot;, um die Active Directory-Objekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Gibt den Typ des zu erstellenden Objekts an. Legen Sie den Type-Parameter auf den LDAP-Anzeigenamen der Active Directory-Schemaklasse fest, die den Typ des zu erstellenden Objekts darstellt. Typwerte sind beispielsweise Benutzer, Computer und Gruppen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Erstellen eines neuen Active Directory-Gruppenobjekts verwendet wird.
  -Type &quot;group&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Active Directory-Objekts an, die als Vorlage für ein neues Active Directory-Objekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Active Directory-Objekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Active Directory-Objekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um ein neues Active Directory-Objekt zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Active Directory-Objekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Active Directory-Objekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADObject&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADObject&quot; bereit, um ein neues Active Directory-Objekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $objectInstance = Get-ADObject -Identity saraHettichDesktop 
  New-ADObject -name &quot;ElkeStanglDesktop&quot;  -Instance $ObjectInstance -Type &quot;Computer&quot;

Methode 2: Erstellen Sie ein neues ADObject, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADObject&quot;, um das neue Active Directory-Objekt zu erstellen. 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Elke Stangl Neuer Computer&quot; New-ADObject -Name ElkeStanglDesktop  -Instance $ObjectInstance -Type computer

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Active Directory-Objekts an, die als Vorlage für ein neues Active Directory-Objekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Active Directory-Objekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Active Directory-Objekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um ein neues Active Directory-Objekt zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Active Directory-Objekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Active Directory-Objekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADObject&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADObject&quot; bereit, um ein neues Active Directory-Objekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $objectInstance = Get-ADObject -Identity saraHettichDesktop 
  New-ADObject -name &quot;ElkeStanglDesktop&quot;  -Instance $ObjectInstance -Type &quot;Computer&quot;

Methode 2: Erstellen Sie ein neues ADObject, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADObject&quot;, um das neue Active Directory-Objekt zu erstellen. 

$objectInstance = new-object Microsoft.ActiveDirectory.Management.ADObject $objectInstance.Description = &quot;Elke Stangl Neuer Computer&quot; New-ADObject -Name ElkeStanglDesktop  -Instance $ObjectInstance -Type computer

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Gibt den Typ des zu erstellenden Objekts an. Legen Sie den Type-Parameter auf den LDAP-Anzeigenamen der Active Directory-Schemaklasse fest, die den Typ des zu erstellenden Objekts darstellt. Typwerte sind beispielsweise Benutzer, Computer und Gruppen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Erstellen eines neuen Active Directory-Gruppenobjekts verwendet wird.
  -Type &quot;group&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Active Directory-Objekt empfangen, das eine Vorlage für das neue Objekt darstellt.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  -Microsoft.ActiveDirectory.Management.ADPartition
  -Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  -Microsoft.ActiveDirectory.Management.ADGroup
  -Microsoft.ActiveDirectory.Management.ADUser
  -Microsoft.ActiveDirectory.Management.ADComputer
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Active Directory-Objekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -Name '192.168.1.0/26' -Type subnet -Description '192.168.1.0/255.255.255.192' -OtherAttributes @{location=&quot;Building A&quot;;siteObject=&quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;} -Path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt in der Site &quot;HQ&quot; ein Subnetzobjekt mit den beschriebenen Attributen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$subnetTemplate = get-adobject -Identity &quot;CN=192.168.1.0/26,CN=Subnets,CN=Sites,CN=Configuration,DC=Fabrikam,DC=com&quot; -properties description,location; new-adobject -instance $subnetTemplate -name &quot;192.168.1.0/28&quot; -type subnet -path &quot;CN=Subnets,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Subnetzobjekt und verwendet ein anderes Subnetzobjekt als Vorlage.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADObject -name SaraDavisContact -type contact -ProtectedFromAccidentalDeletion $true -OtherAttributes @{'msDS-SourceObjectDN'=&quot;CN=FabrikamContacts,DC=CONTOSO,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Kontaktobjekt, legt die msDS-SourceObjectDN-Eigenschaft fest und schützt das Objekt vor versehentlichem Löschen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>new-adobject -name Apps -type container -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Containerobjekt mit dem Namen &quot;Apps&quot; in einer LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144969</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADUser
		</command:name>
		<maml:description>
			<maml:para>Erstellt einen neuen Active Directory-Benutzer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADUser&quot; erstellt einen neuen Active Directory-Benutzer. Sie können häufig verwendete Eigenschaftswerte für Benutzer mit den Cmdlet-Parametern festlegen. 

Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit dem OtherAttributes-Parameter festgelegt werden.  Wenn Sie diesen Parameter verwenden, achten Sie darauf, den Attributnamen wie im folgenden Beispiel in einfache Anführungszeichen einzuschließen.

New-ADUser -SamAccountName &quot;glenjohn&quot;  -GivenName &quot;Glen&quot; -Surname &quot;John&quot; -DisplayName &quot;Glen John&quot; -Path 'CN=Users,DC=fabrikam,DC=local' -OtherAttributes @{'msDS-PhoneticDisplayName'=&quot;GlenJohn&quot;}

Sie müssen den SAMAccountName-Parameter angeben, um einen Benutzer zu erstellen. 

Sie können das Cmdlet &quot;New-ADUser&quot; verwenden, um unterschiedliche Typen von Benutzerkonten zu erstellen, z. B. iNetOrgPerson-Konten. Legen Sie dazu in AD DS den Type-Parameter auf den LDAP-Anzeigenamen für den zu erstellenden Kontotyp fest. Dieser Typ kann einer beliebigen Klasse im Active Directory-Schema entsprechen, die eine Unterklasse von &quot;user&quot; darstellt und über die Objektkategorie &quot;person&quot; verfügt.

Der Path-Parameter gibt den Container oder die Organisationseinheit für den neuen Benutzer an. Wenn Sie den Path-Parameter nicht angeben, erstellt das Cmdlet ein Benutzerobjekt im Standardcontainer für Benutzerobjekte in der Domäne.

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.

Methode 1: Verwenden Sie das Cmdlet &quot;New-ADUser&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.

Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Benutzerobjekt, oder rufen Sie eine Kopie eines vorhandenen Benutzerobjekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 

Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;New-ADUser&quot;, um mehrere Active Directory-Benutzerobjekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADUser&quot;, um die Benutzerobjekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.2006 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird kein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert. 
Kein Kennwort angegeben: Es wird kein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert. 
Benutzerkennwort angegeben: Es wird ein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert.   
Hinweise: 
Benutzerkonten werden standardmäßig ohne Kennwort erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Benutzerkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten weiter sicher sind, werden Benutzerkonten nur aktiviert, wenn ein gültiges Kennwort festgelegt oder PasswordNotRequired auf &quot;true&quot; festgelegt wird.  
Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Im folgenden Beispiel wird eine Methode zum Festlegen dieses Parameters veranschaulicht. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>Gibt das Unternehmen des Benutzers an. Dieser Parameter legt die Company-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;company&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>Gibt die Abteilung des Benutzers an. Dieser Parameter legt die Department-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;department&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>Gibt den Geschäftsbereich des Benutzers an. Dieser Parameter legt die Division-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;division&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die E-Mail-Adresse des Benutzers an. Dieser Parameter legt die EmailAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mail&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmailAddress &quot;sarahettich@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>Gibt die Mitarbeiter-ID des Benutzers an. Dieser Parameter legt die EmployeeID-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeID&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>Gibt die Mitarbeiternummer des Benutzers an. Dieser Parameter legt die EmployeeNumber-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeNumber&quot;. 

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>Gibt die Faxnummer des Benutzers an. Dieser Parameter legt die Fax-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;facsimileTelephoneNumber&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>Gibt den Vornamen des Benutzers an. Dieser Parameter legt die GivenName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;givenName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>Gibt das Stammverzeichnis eines Benutzers an. Dieser Parameter legt die HomeDirectory-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDirectory&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDirectory &quot;\\users\saraHettichHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>Gibt ein Laufwerk an, das dem von der HomeDirectory-Eigenschaft definierten UNC-Pfad zugeordnet ist. Der Laufwerkbuchstabe wird als &quot;&lt;Laufwerkbuchstabe&gt;:&quot; angeben, wobei &lt;Laufwerkbuchstabe&gt; den Buchstaben für das zuzuordnende Laufwerk angibt. &lt;Laufwerkbuchstabe&gt; muss ein einziger Großbuchstabe sein, und der Doppelpunkt ist erforderlich. Dieser Parameter legt die HomeDrive-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDrive&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die private Telefonnummer des Benutzers an. Dieser Parameter legt die HomePhone-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;homePhone&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>Gibt die Initialen an, die zum Namen des Benutzers gehören. Mit diesem Wert kann der Anfangsbuchstabe des zweiten Vornamens des Benutzers angegeben werden. Dieser Parameter legt die Initials-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;initials&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Benutzerobjekts an, das als Vorlage für ein neues Benutzerobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Benutzerobjekts als Vorlage verwenden, oder Sie können ein neues Benutzerobjekt für die Verwendung als Vorlage erstellen.  Sie können ein neues Benutzerobjekt mithilfe der Windows PowerShell-Befehlszeile erstellen oder mit einem Skript. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Benutzerobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Benutzerobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Benutzerobjekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADUser&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADUser&quot; bereit, um ein neues Benutzerobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $userInstance = Get-ADUser -Identity &quot;saraHettich&quot; 
  New-ADUser -SAMAccountName &quot;ElkeStangl&quot;  -Instance $userInstance -DisplayName &quot;ElkeStangl&quot;

Methode 2: Erstellen Sie ein neues ADUser-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADUser&quot;, um das neue Active Directory-Benutzerobjekt zu erstellen. 

  $userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
  $userInstance.DisplayName = &quot;Elke Stangl&quot;
  New-ADUser -SAMAccountName &quot;ElkeStangl&quot;  -Instance $userInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>Gibt die Computer an, auf die der Benutzer zugreifen kann. Erstellen Sie eine durch Trennzeichen getrennte Liste, um mehrere Computer anzugeben. Ein Computer kann durch den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) oder den DNS-Hostnamen des Computers identifiziert werden. Der SAM-Kontoname ist mit dem NetBIOS-Namen des Computers identisch.

Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;userWorkStations&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mit dem SAMAccountName-Wert (NetBIOS-Name) und dem DNSHostName-Wert festgelegt wird.
  -LogonWorkstations &quot;saraHettichDesktop,saraHettichLapTop,projectA.corp.contoso.com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>Gibt den Manager des Benutzers an. Dieser Parameter legt die Manager-Eigenschaft eines Benutzers fest. Dieser Parameter wird festgelegt, indem einer der folgenden Eigenschaftswerte bereitgestellt wird.  Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;manager&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Manager sarahettich </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die Mobiltelefonnummer des Benutzers an. Dieser Parameter legt die MobilePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mobile&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>Gibt die Büroanschrift oder den Geschäftssitz des Benutzers an. Dieser Parameter legt die Office-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;office&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Office &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die dienstliche Telefonnummer des Benutzers an. Dieser Parameter legt die OfficePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;telephoneNumber&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OfficePhone &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>Gibt die Organisation des Benutzers an. Dieser Parameter legt die Organization-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;o&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>Gibt zusätzlich zum Vornamen und Nachnamen eines Benutzers einen weiteren Namen an, z. B. den zweiten Vornamen des Benutzers. Dieser Parameter legt die OtherName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;middleName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OtherName &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Für ein neues Konto ist kein Kennwort erforderlich. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontoobjekts fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>Gibt die Postfachnummer des Benutzers an. Dieser Parameter legt die POBox-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postOfficeBox&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zum Profil des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ProfilePath-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;profilePath&quot;.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter auf einen lokalen Pfad und auf einen UNC-Pfad festgelegt wird.    -ProfilePath &quot;E:\users\profiles\saraHettich&quot;
   -ProfilePath &quot;\\users\profiles\saraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zum Anmeldeskript des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ScriptPath-Eigenschaft des Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;scriptPath&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -ScriptPath &quot;\\logonScripts\sarahettichLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für die Anmeldung eine Smartcard erforderlich ist. Dieser Parameter legt die SmartCardLoginRequired-Eigenschaft für einen Benutzer fest. Dieser Parameter legt auch das ADS_UF_SMARTCARD_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für die Anmeldung beim Konto eine Smartcard erforderlich ist.
  -SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die Anschrift des Benutzers an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;streetAddress&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>Gibt den Nachnamen oder Zunamen des Benutzers an. Dieser Parameter legt die Surname-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;sn&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Surname &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>Gibt den Titel des Benutzers an. Dieser Parameter legt die Title-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;title&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Title &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Gibt den Typ des zu erstellenden Objekts an. Legen Sie den Type-Parameter auf den LDAP-Anzeigenamen der Active Directory-Schemaklasse fest, die den Typ des zu erstellenden Objekts darstellt. Der ausgewählte Typ muss eine Unterklasse der Benutzerschemaklasse sein.  Wenn dieser Parameter nicht angegeben wird, wird standardmäßig &quot;User&quot; verwendet.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Erstellen eines neuen InetOrgPerson-Active Directory-Objekts verwendet wird.
  -Type &quot;InetOrgPerson&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird kein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert. 
Kein Kennwort angegeben: Es wird kein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert. 
Benutzerkennwort angegeben: Es wird ein Kennwort festgelegt, und das Konto wird deaktiviert, es sei denn, die Aktivierung wird angefordert.   
Hinweise: 
Benutzerkonten werden standardmäßig ohne Kennwort erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Benutzerkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten weiter sicher sind, werden Benutzerkonten nur aktiviert, wenn ein gültiges Kennwort festgelegt oder PasswordNotRequired auf &quot;true&quot; festgelegt wird.  
Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Im folgenden Beispiel wird eine Methode zum Festlegen dieses Parameters veranschaulicht. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>Gibt das Unternehmen des Benutzers an. Dieser Parameter legt die Company-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;company&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>Gibt die Abteilung des Benutzers an. Dieser Parameter legt die Department-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;department&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>Gibt den Geschäftsbereich des Benutzers an. Dieser Parameter legt die Division-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;division&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die E-Mail-Adresse des Benutzers an. Dieser Parameter legt die EmailAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mail&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmailAddress &quot;sarahettich@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>Gibt die Mitarbeiter-ID des Benutzers an. Dieser Parameter legt die EmployeeID-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeID&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>Gibt die Mitarbeiternummer des Benutzers an. Dieser Parameter legt die EmployeeNumber-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeNumber&quot;. 

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>Gibt die Faxnummer des Benutzers an. Dieser Parameter legt die Fax-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;facsimileTelephoneNumber&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>Gibt den Vornamen des Benutzers an. Dieser Parameter legt die GivenName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;givenName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>Gibt das Stammverzeichnis eines Benutzers an. Dieser Parameter legt die HomeDirectory-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDirectory&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDirectory &quot;\\users\saraHettichHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>Gibt ein Laufwerk an, das dem von der HomeDirectory-Eigenschaft definierten UNC-Pfad zugeordnet ist. Der Laufwerkbuchstabe wird als &quot;&lt;Laufwerkbuchstabe&gt;:&quot; angeben, wobei &lt;Laufwerkbuchstabe&gt; den Buchstaben für das zuzuordnende Laufwerk angibt. &lt;Laufwerkbuchstabe&gt; muss ein einziger Großbuchstabe sein, und der Doppelpunkt ist erforderlich. Dieser Parameter legt die HomeDrive-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDrive&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die private Telefonnummer des Benutzers an. Dieser Parameter legt die HomePhone-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;homePhone&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>Gibt die Initialen an, die zum Namen des Benutzers gehören. Mit diesem Wert kann der Anfangsbuchstabe des zweiten Vornamens des Benutzers angegeben werden. Dieser Parameter legt die Initials-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;initials&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Benutzerobjekts an, das als Vorlage für ein neues Benutzerobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Benutzerobjekts als Vorlage verwenden, oder Sie können ein neues Benutzerobjekt für die Verwendung als Vorlage erstellen.  Sie können ein neues Benutzerobjekt mithilfe der Windows PowerShell-Befehlszeile erstellen oder mit einem Skript. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Benutzerobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Benutzerobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Benutzerobjekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADUser&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADUser&quot; bereit, um ein neues Benutzerobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $userInstance = Get-ADUser -Identity &quot;saraHettich&quot; 
  New-ADUser -SAMAccountName &quot;ElkeStangl&quot;  -Instance $userInstance -DisplayName &quot;ElkeStangl&quot;

Methode 2: Erstellen Sie ein neues ADUser-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADUser&quot;, um das neue Active Directory-Benutzerobjekt zu erstellen. 

  $userInstance = new-object Microsoft.ActiveDirectory.Management.ADUser
  $userInstance.DisplayName = &quot;Elke Stangl&quot;
  New-ADUser -SAMAccountName &quot;ElkeStangl&quot;  -Instance $userInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>Gibt die Computer an, auf die der Benutzer zugreifen kann. Erstellen Sie eine durch Trennzeichen getrennte Liste, um mehrere Computer anzugeben. Ein Computer kann durch den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) oder den DNS-Hostnamen des Computers identifiziert werden. Der SAM-Kontoname ist mit dem NetBIOS-Namen des Computers identisch.

Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;userWorkStations&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mit dem SAMAccountName-Wert (NetBIOS-Name) und dem DNSHostName-Wert festgelegt wird.
  -LogonWorkstations &quot;saraHettichDesktop,saraHettichLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>Gibt den Manager des Benutzers an. Dieser Parameter legt die Manager-Eigenschaft eines Benutzers fest. Dieser Parameter wird festgelegt, indem einer der folgenden Eigenschaftswerte bereitgestellt wird.  Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;manager&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Manager sarahettich </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die Mobiltelefonnummer des Benutzers an. Dieser Parameter legt die MobilePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mobile&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>Gibt die Büroanschrift oder den Geschäftssitz des Benutzers an. Dieser Parameter legt die Office-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;office&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Office &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die dienstliche Telefonnummer des Benutzers an. Dieser Parameter legt die OfficePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;telephoneNumber&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OfficePhone &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>Gibt die Organisation des Benutzers an. Dieser Parameter legt die Organization-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;o&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>Gibt zusätzlich zum Vornamen und Nachnamen eines Benutzers einen weiteren Namen an, z. B. den zweiten Vornamen des Benutzers. Dieser Parameter legt die OtherName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;middleName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OtherName &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Für ein neues Konto ist kein Kennwort erforderlich. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontoobjekts fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>Gibt die Postfachnummer des Benutzers an. Dieser Parameter legt die POBox-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postOfficeBox&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zum Profil des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ProfilePath-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;profilePath&quot;.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter auf einen lokalen Pfad und auf einen UNC-Pfad festgelegt wird.    -ProfilePath &quot;E:\users\profiles\saraHettich&quot;
   -ProfilePath &quot;\\users\profiles\saraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zum Anmeldeskript des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ScriptPath-Eigenschaft des Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;scriptPath&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -ScriptPath &quot;\\logonScripts\sarahettichLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für die Anmeldung eine Smartcard erforderlich ist. Dieser Parameter legt die SmartCardLoginRequired-Eigenschaft für einen Benutzer fest. Dieser Parameter legt auch das ADS_UF_SMARTCARD_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für die Anmeldung beim Konto eine Smartcard erforderlich ist.
  -SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die Anschrift des Benutzers an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;streetAddress&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>Gibt den Nachnamen oder Zunamen des Benutzers an. Dieser Parameter legt die Surname-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;sn&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Surname &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>Gibt den Titel des Benutzers an. Dieser Parameter legt die Title-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;title&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Title &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Gibt den Typ des zu erstellenden Objekts an. Legen Sie den Type-Parameter auf den LDAP-Anzeigenamen der Active Directory-Schemaklasse fest, die den Typ des zu erstellenden Objekts darstellt. Der ausgewählte Typ muss eine Unterklasse der Benutzerschemaklasse sein.  Wenn dieser Parameter nicht angegeben wird, wird standardmäßig &quot;User&quot; verwendet.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Erstellen eines neuen InetOrgPerson-Active Directory-Objekts verwendet wird.
  -Type &quot;InetOrgPerson&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>user</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Benutzerobjekt empfangen, das eine Vorlage für das neue Benutzerobjekt darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Benutzerobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Certificate (new-object System.Security.Cryptography.X509Certificates.X509Certificate -ArgumentList &quot;export.cer&quot;) </dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt einen neuen Benutzer mit dem Namen &quot;GlenJohn&quot; mit einem aus der Datei &quot;export.cer&quot; importierten Zertifikat.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -OtherAttributes @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt einen neuen Benutzer mit dem Namen &quot;GlenJohn&quot; und legt die Title-Eigenschaft und die Mail-Eigenschaft für das neue Objekt fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADUser GlenJohn -Type iNetOrgPerson -Path &quot;DC=AppNC&quot; -server lds.Fabrikam.com:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue inetOrgPerson mit dem Namen &quot;GlenJohn&quot; auf einer AD LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144970</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Erstellt einen neuen Active Directory-Computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADComputer&quot; erstellt ein neues Active Directory-Computerobjekt. Durch dieses Cmdlet wird ein Computer keiner Domäne hinzugefügt. Sie können häufig verwendete Eigenschaftswerte für Computer mit den Cmdlet-Parametern festlegen. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit dem OtherAttributes-Parameter geändert werden. 

Sie können dieses Cmdlet verwenden, um ein Computerkonto bereitzustellen, bevor der Computer der Domäne hinzugefügt wird. Diese vorab erstellten Computerobjekte können mit Domänenbeitritten im Offline- oder nicht gesicherten Modus bzw. RODC-Domänenbeitritten verwendet werden.
Der Path-Parameter gibt den Container oder die Organisationseinheit für den neuen Computer an. Wenn Sie den Path-Parameter nicht angeben, erstellt das Cmdlet ein Computerkonto im Standardcontainer für Computerobjekte in der Domäne. 

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.
Methode 1: Verwenden Sie das Cmdlet &quot;New-ADComputer&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.
Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Computerobjekt, oder rufen Sie eine Kopie eines vorhandenen Computerobjekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 
Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;Add-ADComputer&quot;, um mehrere Active Directory-Computerobjekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADComputer&quot;, um die Computerobjekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.
 Kein Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.

Benutzerkennwort angegeben: Das Kennwort wird festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert, außer wenn das bereitgestellte Kennwort nicht den Kennwortrichtlinien entspricht oder aus anderen Gründen nicht festgelegt wurde. In diesem Fall wird das Konto deaktiviert.

Hinweise: Computerkonten werden standardmäßig mit einem zufälligen Kennwort mit 240 Zeichen erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Computerkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten sicher bleiben, werden Computerkonten nie aktiviert, es sei denn, es wird ein gültiges Kennwort festgelegt (nach dem Zufallsprinzip generiert oder vom Benutzer bereitgestellt), oder PasswordNotRequired wird auf &quot;true&quot; festgelegt. 
Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Das neue ADComputer-Objekt wird immer deaktiviert oder verfügt über ein vom Benutzer angefordertes oder nach dem Zufallsprinzip generiertes Kennwort. Es gibt keine Möglichkeit, ein aktiviertes Computerkontoobjekt mit einem Kennwort zu erstellen, das gegen Domänenkennwortrichtlinien verstößt, z. B. mit einem leeren Kennwort.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>Gibt den vollqualifizierten Domänennamen (FQDN) des Computers an. Dieser Parameter legt die DNSHostName-Eigenschaft für ein Computerobjekt fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;dNSHostName&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen FQDN festgelegt wird.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Computerobjekts an, das als Vorlage für ein neues Computerobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Computerobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Computerobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Computerobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Computerobjekt als Vorlage für ein neues Objekt. Verwenden Sie Get-ADcomputer zum Abrufen einer Instanz eines vorhandenen Computerobjekts. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADcomputer&quot; bereit, um ein neues Computerobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $computerInstance = Get-ADcomputer -Identity ElkeStanglDesktop 
  New-ADcomputer -Name &quot;saraHettichDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;vorläufigesKennwort242&quot; 
-samAccountName &quot;saraHettichDesktop&quot;

Methode 2: Erstellen Sie ein neues ADcomputer-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADcomputer&quot;, um das neue Active Directory-Computerobjekt zu erstellen. 

  $computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
  New-ADcomputer -Name &quot;saraHettichDesktop&quot;  -Instance $computerInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Gibt den Standort des Computers an, z. B. die Zimmernummer eines Büros. Dieser Parameter legt die Location-Eigenschaft eines Computers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;location&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Location &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>Gibt einen Betriebssystemnamen an. Dieser Parameter legt die OperatingSystem-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystem&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>Gibt einen Betriebssystem-Hotfixnamen an. Dieser Parameter legt die operatingSystemHotfix-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;operatingSystemHotfix&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Service Pack für ein Betriebssystem an. Dieser Parameter legt die OperatingSystemServicePack-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemServicePack&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>Gibt eine Betriebssystemversion an. Dieser Parameter legt die OperatingSystemVersion-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemVersion&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn die angegebene SAMAccountName-Zeichenfolge nicht mit &quot;$&quot; endet, wird dies bei Bedarf angefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.
 Kein Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.

Benutzerkennwort angegeben: Das Kennwort wird festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert, außer wenn das bereitgestellte Kennwort nicht den Kennwortrichtlinien entspricht oder aus anderen Gründen nicht festgelegt wurde. In diesem Fall wird das Konto deaktiviert.

Hinweise: Computerkonten werden standardmäßig mit einem zufälligen Kennwort mit 240 Zeichen erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Computerkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten sicher bleiben, werden Computerkonten nie aktiviert, es sei denn, es wird ein gültiges Kennwort festgelegt (nach dem Zufallsprinzip generiert oder vom Benutzer bereitgestellt), oder PasswordNotRequired wird auf &quot;true&quot; festgelegt. 
Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Das neue ADComputer-Objekt wird immer deaktiviert oder verfügt über ein vom Benutzer angefordertes oder nach dem Zufallsprinzip generiertes Kennwort. Es gibt keine Möglichkeit, ein aktiviertes Computerkontoobjekt mit einem Kennwort zu erstellen, das gegen Domänenkennwortrichtlinien verstößt, z. B. mit einem leeren Kennwort.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">X509Certificate[]</command:parameterValue>
			<dev:type>
				<maml:name>X509Certificate[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>Gibt den vollqualifizierten Domänennamen (FQDN) des Computers an. Dieser Parameter legt die DNSHostName-Eigenschaft für ein Computerobjekt fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;dNSHostName&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen FQDN festgelegt wird.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Computerobjekts an, das als Vorlage für ein neues Computerobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Computerobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Computerobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Computerobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Computerobjekt als Vorlage für ein neues Objekt. Verwenden Sie Get-ADcomputer zum Abrufen einer Instanz eines vorhandenen Computerobjekts. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADcomputer&quot; bereit, um ein neues Computerobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $computerInstance = Get-ADcomputer -Identity ElkeStanglDesktop 
  New-ADcomputer -Name &quot;saraHettichDesktop&quot;  -Instance $computerInstance -AccountPassword &quot;vorläufigesKennwort242&quot; 
-samAccountName &quot;saraHettichDesktop&quot;

Methode 2: Erstellen Sie ein neues ADcomputer-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADcomputer&quot;, um das neue Active Directory-Computerobjekt zu erstellen. 

  $computerInstance = new-object Microsoft.ActiveDirectory.Management.ADcomputer
  New-ADcomputer -Name &quot;saraHettichDesktop&quot;  -Instance $computerInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Gibt den Standort des Computers an, z. B. die Zimmernummer eines Büros. Dieser Parameter legt die Location-Eigenschaft eines Computers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;location&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Location &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>Gibt einen Betriebssystemnamen an. Dieser Parameter legt die OperatingSystem-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystem&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>Gibt einen Betriebssystem-Hotfixnamen an. Dieser Parameter legt die operatingSystemHotfix-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;operatingSystemHotfix&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Service Pack für ein Betriebssystem an. Dieser Parameter legt die OperatingSystemServicePack-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemServicePack&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>Gibt eine Betriebssystemversion an. Dieser Parameter legt die OperatingSystemVersion-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemVersion&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn die angegebene SAMAccountName-Zeichenfolge nicht mit &quot;$&quot; endet, wird dies bei Bedarf angefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Computerobjekt empfangen, das eine Vorlage für das neue Computerobjekt darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Computerobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV2&quot; -SamAccountName &quot;FABRIKAM-SRV2&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Computerkonto in der Organisationseinheit &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADComputer -Name &quot;FABRIKAM-SRV3&quot; -SamAccountName &quot;FABRIKAM-SRV3&quot; -Path &quot;OU=ApplicationServers,OU=ComputerAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot; -Enabled $true -Location &quot;Redmond,WA&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt unter einer bestimmten Organisationseinheit ein neues Computerkonto, das aktiviert ist und sich in &quot;Redmond, WA&quot; befindet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templateComp = get-adcomputer &quot;LabServer-00&quot; -properties &quot;Location&quot;,&quot;OperatingSystem&quot;,&quot;OperatingSystemHotfix&quot;,&quot;OperatingSystemServicePack&quot;,&quot;OperatingSystemVersion&quot;; New-ADComputer -Instance $templateComp -Name &quot;LabServer-01&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Computerkonto aus einem Vorlagenobjekt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144971</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Erstellt eine Active Directory-Gruppe. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADGroup&quot; erstellt ein neues Active Directory-Gruppenobjekt. Viele Objekteigenschaften werden definiert, indem Cmdlet-Parameter festgelegt werden. Eigenschaften, die nicht mit Cmdlet-Parametern festgelegt werden können, können mit dem OtherAttributes-Parameter festgelegt werden.

Der Name-Parameter und der GroupScope-Parameter geben den Namen und den Bereich der Gruppe an und sind zum Erstellen einer neuen Gruppe erforderlich. Sie können die neue Gruppe als Sicherheits- oder Verteilergruppe definieren, indem Sie den GroupType-Parameter festlegen. Der Path-Parameter gibt den Container oder die Organisationseinheit für die Gruppe an.

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.
Methode 1: Verwenden Sie das Cmdlet &quot;New-ADGroup&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.
Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Gruppenobjekt, oder rufen Sie eine Kopie eines vorhandenen Gruppenobjekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 
Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;New-ADGroup&quot;, um mehrere Active Directory-Gruppenobjekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADGroup&quot;, um die Gruppenobjekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Gruppenbereich der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  DomainLocal oder 0
  Global oder 1
  Universal oder 2

Dieser Parameter legt die GroupScope-Eigenschaft eines Gruppenobjekts auf den angegebenen Wert fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;groupType&quot;.

Im folgenden Beispiel werden zwei Möglichkeiten veranschaulicht, diesen Parameter auf &quot;DomainLocal&quot; festzulegen.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>Gibt die Kategorie der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  Distribution oder 0  
  Security oder 1 
 
Dieser Parameter legt die GroupCategory-Eigenschaft der Gruppe fest. Dieser Parameterwert legt in Kombination mit anderen Gruppenwerten das LDAP-Anzeigenamenattribut (ldapDisplayName) mit dem Namen &quot;groupType&quot; fest.

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass eine Gruppe eine Sicherheitsgruppe darstellt.
  -GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Gruppenobjekts an, das als Vorlage für ein neues Gruppenobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Gruppenobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Gruppenobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Gruppenobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Gruppenobjekt als Vorlage für ein neues Objekt. Rufen Sie mit dem Cmdlet &quot;Get-ADGroup&quot; ein Gruppenobjekt ab, und übergeben Sie dieses Objekt dann an den Instance-Parameter des Cmdlet &quot;New-ADGroup&quot;, um ein neues Gruppenobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $groupInstance = Get-ADGroup -Identity &quot;AnneWeilerBerichte&quot; 
  New-ADGroup -Name &quot;Sara Hettich Berichte&quot;  -Instance $groupInstance GroupType DomainLocal

Methode 2: Erstellen Sie ein neues ADGroup-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADGroup&quot;, um das neue Gruppenobjekt zu erstellen. 

  $groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
  $groupTemplateGroupType = DomainLocal
  New-ADGroup -Name &quot;Sara Hettich Berichte&quot; -Instance $groupInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>Gibt die Kategorie der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  Distribution oder 0  
  Security oder 1 
 
Dieser Parameter legt die GroupCategory-Eigenschaft der Gruppe fest. Dieser Parameterwert legt in Kombination mit anderen Gruppenwerten das LDAP-Anzeigenamenattribut (ldapDisplayName) mit dem Namen &quot;groupType&quot; fest.

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass eine Gruppe eine Sicherheitsgruppe darstellt.
  -GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Security</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Gruppenbereich der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  DomainLocal oder 0
  Global oder 1
  Universal oder 2

Dieser Parameter legt die GroupScope-Eigenschaft eines Gruppenobjekts auf den angegebenen Wert fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;groupType&quot;.

Im folgenden Beispiel werden zwei Möglichkeiten veranschaulicht, diesen Parameter auf &quot;DomainLocal&quot; festzulegen.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Gruppenobjekts an, das als Vorlage für ein neues Gruppenobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Gruppenobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Gruppenobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Gruppenobjektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Gruppenobjekt als Vorlage für ein neues Objekt. Rufen Sie mit dem Cmdlet &quot;Get-ADGroup&quot; ein Gruppenobjekt ab, und übergeben Sie dieses Objekt dann an den Instance-Parameter des Cmdlet &quot;New-ADGroup&quot;, um ein neues Gruppenobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $groupInstance = Get-ADGroup -Identity &quot;AnneWeilerBerichte&quot; 
  New-ADGroup -Name &quot;Sara Hettich Berichte&quot;  -Instance $groupInstance GroupType DomainLocal

Methode 2: Erstellen Sie ein neues ADGroup-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADGroup&quot;, um das neue Gruppenobjekt zu erstellen. 

  $groupTemplate = New-Object Microsoft.ActiveDirectory.Management.ADGroup
  $groupTemplateGroupType = DomainLocal
  New-ADGroup -Name &quot;Sara Hettich Berichte&quot; -Instance $groupInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Gruppenobjekt empfangen, das eine Vorlage für das neue Gruppenobjekt darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Gruppenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Name &quot;RODC Admins&quot; -SamAccountName RODCAdmins -GroupCategory Security -GroupScope Global -DisplayName &quot;RODC Administrators&quot; -Path &quot;CN=Users,DC=Fabrikam,DC=Com&quot; -Description &quot;Members of this group are RODC Administrators&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue Gruppe mit dem Namen &quot;RODC Admins&quot; im Container &quot;CN=Users,DC=Fabrikam,DC=Com&quot; und legt die Eigenschaften GroupCategory, DisplayName, GroupScope und Description für das neue Objekt fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup 

cmdlet New-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
GroupScope: Universal 
Name: FabrikamBranch1 </dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue Gruppe mit dem Cmdlet-Standardverhalten.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroup FabrikamBranch1 -Properties Description | New-ADGroup  -Name Branch1Employees  -SamAccountName Branch1Employees -GroupCategory Distribution -PassThru 
</dev:code>
  			<dev:remarks>
 				<maml:para>GroupScope        : Universal 
Name              : Branch1Employees 
GroupCategory     : Distribution 
SamAccountName    : Branch1Employees 
ObjectClass       : group 
ObjectGUID        : 8eebce44-5df7-4bed-a98b-b987a702103e 
SID               : S-1-5-21-41432690-3719764436-1984117282-1117 
DistinguishedName : CN=Branch1Employees,CN=Users,DC=Fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Erstellt eine neue Gruppe mit den Eigenschaftswerten aus einer aktuellen Gruppe.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADGroup -Server localhost:60000 -Path &quot;OU=AccountDeptOU,DC=AppNC&quot; -Name AccountLeads -GroupScope DomainLocal  -GroupCategory Distribution </dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue Gruppe mit dem Namen &quot;AccountLeads&quot; auf einer AD LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144972</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Import-CSV</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Erstellt eine neue abgestimmte Active Directory-Kennwortrichtlinie.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot; erstellt eine neue abgestimmte Active Directory-Kennwortrichtlinie. Sie können häufig verwendete Eigenschaftswerte für abgestimmte Kennwortrichtlinien mithilfe der Cmdlet-Parameter festlegen. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit dem OtherAttributes-Parameter festgelegt werden. 

Sie müssen den Name-Parameter und den Precedence-Parameter festlegen, um eine neue abgestimmte Kennwortrichtlinie zu erstellen. 

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.
Methode 1: Verwenden Sie das Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.

Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Objekt für eine abgestimmte Kennwortrichtlinie, oder rufen Sie eine Kopie eines vorhandenen Objekts für eine abgestimmte Kennwortrichtlinie ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 

Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot;, um mehrere Objekte für abgestimmte Active Directory-Kennwortrichtlinien zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot;, um Objekte für abgestimmte Kennwortrichtlinien zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>Gibt einen Wert an, der die Rangfolge einer abgestimmten Kennwortrichtlinie gegenüber allen abgestimmten Kennwortrichtlinien definiert. Dieser Parameter legt die Precedence-Eigenschaft für eine abgestimmte Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-PasswordSettingsPrecedence&quot;.

Dieser Wert bestimmt, welche Kennwortrichtlinie zu verwenden ist, wenn für einen Benutzer oder eine Gruppe mehrere Kennwortrichtlinien gelten. Bei einem Konflikt hat die Kennwortrichtlinie höhere Priorität, deren Precedence-Eigenschaft den kleineren Wert aufweist. Wenn &quot;PasswordPolicy1&quot; z. B. den Precedence-Eigenschaftswert 200 und &quot;PasswordPolicy2&quot; den Precedence-Eigenschaftswert 100 aufweist, wird &quot;PasswordPolicy2&quot; verwendet. 

In der Regel werden Rangfolgenwerte für Kennwortrichtlinien als Vielfache von 10 oder 100 zugewiesen, sodass später leichter Richtlinien hinzugefügt werden können. Wenn Sie z. B. die ursprünglichen Rangfolgenwerte für Ihre Richtlinien auf 100 und 200 festgelegt haben, können Sie später eine weitere Richtlinie hinzufügen, die den Rangfolgenwert 150 aufweist. 

Wenn der angegebene Precedence-Parameter bereits einem anderen Kennwortrichtlinienobjekt zugewiesen ist, wird vom Cmdlet ein Fehler mit Abbruch zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Objekts für eine abgestimmte Kennwortrichtlinie an, das als Vorlage für ein neues Objekt für eine abgestimmte Kennwortrichtlinie verwendet werden soll.

Sie können eine Instanz eines vorhandenen Objekts für eine abgestimmte Kennwortrichtlinie als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Objekt für eine abgestimmte Kennwortrichtlinie erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um ein neues Objekt für eine abgestimmte Kennwortrichtlinie zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Objekt für eine abgestimmte Kennwortrichtlinie als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Objekts für eine abgestimmte Kennwortrichtlinie abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADFineGrainedPasswordPolicy&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot; bereit, um ein neues Objekt für eine abgestimmte Kennwortrichtlinie zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

Methode 2: Erstellen Sie ein neues ADFineGrainedPasswordPolicy-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot;, um das neue Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie zu erstellen. 

  $fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  $fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Objekts für eine abgestimmte Kennwortrichtlinie an, das als Vorlage für ein neues Objekt für eine abgestimmte Kennwortrichtlinie verwendet werden soll.

Sie können eine Instanz eines vorhandenen Objekts für eine abgestimmte Kennwortrichtlinie als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Objekt für eine abgestimmte Kennwortrichtlinie erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um ein neues Objekt für eine abgestimmte Kennwortrichtlinie zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Objekt für eine abgestimmte Kennwortrichtlinie als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Objekts für eine abgestimmte Kennwortrichtlinie abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADFineGrainedPasswordPolicy&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot; bereit, um ein neues Objekt für eine abgestimmte Kennwortrichtlinie zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicy90 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance -Precedence 600 -MaxPasswordAge &quot;180&quot; 
 

Methode 2: Erstellen Sie ein neues ADFineGrainedPasswordPolicy-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADFineGrainedPasswordPolicy&quot;, um das neue Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie zu erstellen. 

  $fineGrainedPasswordPolicyInstance = new-object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  $fineGrainedPasswordPolicyInstance.MaxPasswordAge = &quot;180&quot; 
  New-ADFineGrainedPasswordPolicy -Name &quot;PasswordPolicy180&quot;  -Instance $fineGrainedPasswordPolicyInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 (30 Minuten)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 (30 Minutes)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 (42 Tage)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 (1 Tag)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>Gibt einen Wert an, der die Rangfolge einer abgestimmten Kennwortrichtlinie gegenüber allen abgestimmten Kennwortrichtlinien definiert. Dieser Parameter legt die Precedence-Eigenschaft für eine abgestimmte Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-PasswordSettingsPrecedence&quot;.

Dieser Wert bestimmt, welche Kennwortrichtlinie zu verwenden ist, wenn für einen Benutzer oder eine Gruppe mehrere Kennwortrichtlinien gelten. Bei einem Konflikt hat die Kennwortrichtlinie höhere Priorität, deren Precedence-Eigenschaft den kleineren Wert aufweist. Wenn &quot;PasswordPolicy1&quot; z. B. den Precedence-Eigenschaftswert 200 und &quot;PasswordPolicy2&quot; den Precedence-Eigenschaftswert 100 aufweist, wird &quot;PasswordPolicy2&quot; verwendet. 

In der Regel werden Rangfolgenwerte für Kennwortrichtlinien als Vielfache von 10 oder 100 zugewiesen, sodass später leichter Richtlinien hinzugefügt werden können. Wenn Sie z. B. die ursprünglichen Rangfolgenwerte für Ihre Richtlinien auf 100 und 200 festgelegt haben, können Sie später eine weitere Richtlinie hinzufügen, die den Rangfolgenwert 150 aufweist. 

Wenn der angegebene Precedence-Parameter bereits einem anderen Kennwortrichtlinienobjekt zugewiesen ist, wird vom Cmdlet ein Fehler mit Abbruch zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen, das eine Vorlage für das neue Objekt für eine abgestimmte Kennwortrichtlinie darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Objekt für die abgestimmte Kennwortrichtlinie zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADFineGrainedPasswordPolicy -Name &quot;DomainUsersPSO&quot; -Precedence 500 -ComplexityEnabled $true -Description &quot;The Domain Users Password Policy&quot; -DisplayName &quot;Domain Users PSO&quot; -LockoutDuration &quot;0.12:00:00&quot; -LockoutObservationWindow &quot;0.00:15:00&quot; -LockoutThreshold 10
</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt das neue Objekt für eine abgestimmte Kennwortrichtlinie &quot;DomainUsersPSO&quot; und legt die Eigenschaften Precedence, ComplexityEnabled, Description, DisplayName, LockoutDuration, LockoutObservationWindw und LockoutThreshold für das Objekt fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$templatePSO = New-Object Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
$templatePSO.ComplexityEnabled = $true
$templatePSO.LockoutDuration = [TimeSpan]::Parse(&quot;0.12:00:00&quot;)
$templatePSO.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$templatePSO.LockoutThreshold = 10
$templatePSO.MinPasswordAge = [TimeSpan]::Parse(&quot;0.00:10:00&quot;)
$templatePSO.PasswordHistoryCount = 24
$templatePSO.ReversibleEncryptionEnabled = $false

New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;SvcAccPSO&quot; -Precedence 100 -Description &quot;The Service Accounts Password Policy&quot; -DisplayName &quot;Service Accounts PSO&quot; -MaxPasswordAge &quot;30.00:00:00&quot; -MinPasswordLength 20
New-ADFineGrainedPasswordPolicy -Instance $templatePSO -Name &quot;AdminsPSO&quot; -Precedence 200 -Description &quot;The Domain Administrators Password Policy&quot; -DisplayName &quot;Domain Administrators PSO&quot; -MaxPasswordAge &quot;15.00:00:00&quot; -MinPasswordLength 10</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt zwei neue Objekte für abgestimmte Kennwortrichtlinien mithilfe eines Vorlagenobjekts.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144973</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Erstellt eine neue Active Directory-Organisationseinheit.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADOrganizationalUnit&quot; erstellt eine neue Active Directory-Organisationseinheit. Sie können häufig verwendete Eigenschaftswerte für Organisationseinheiten mit den Cmdlet-Parametern festlegen. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit dem OtherAttributes-Parameter festgelegt werden. 

Sie müssen den Name-Parameter festlegen, um eine neue Organisationseinheit zu erstellen. Wenn Sie den Path-Parameter nicht angeben, erstellt das Cmdlet eine Organisationseinheit unter dem NC-Stamm für die Domäne.
Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.
Methode 1: Verwenden Sie das Cmdlet &quot;New-ADOrganizationalUnit&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.
Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Organisationseinheitsobjekt, oder rufen Sie eine Kopie eines vorhandenen Organisationseinheitsobjekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 
Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;New-ADOrganizationalUnit&quot;, um mehrere Active Directory-Organisationseinheitsobjekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADOrganizationalUnit&quot;, um die Organisationseinheitsobjekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Organisationseinheitsobjekts an, das als Vorlage für ein neues Organisationseinheitsobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Organisationseinheitsobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Organisationseinheitsobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Vorlagen für Organisationseinheitsobjekte zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Organisationseinheitsobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Organisationseinheitsobjekts abzurufen, verwenden Sie Get-ADOrganizationalUnit. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADOrganizationalUnit&quot; bereit, um ein neues Organisationseinheitsobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

Methode 2: Erstellen Sie ein neues ADOrganizationalUnit-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADOrganizationalUnit&quot;, um das neue Active Directory-Organisationseinheitsobjekt zu erstellen. 

  $OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  $OrganizationalUnitInstance.Country = Australia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die Anschrift der Organisationseinheit an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;street&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Organisationseinheitsobjekts an, das als Vorlage für ein neues Organisationseinheitsobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Organisationseinheitsobjekts als Vorlage verwenden, oder Sie können mit der Windows PowerShell-Befehlszeile oder mit einem Skript ein neues Organisationseinheitsobjekt erstellen. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Vorlagen für Organisationseinheitsobjekte zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Organisationseinheitsobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Organisationseinheitsobjekts abzurufen, verwenden Sie Get-ADOrganizationalUnit. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADOrganizationalUnit&quot; bereit, um ein neues Organisationseinheitsobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $organizationalUnitInstance = Get-ADOrganizationalUnit -Identity accountingAsia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance -Country Australia

Methode 2: Erstellen Sie ein neues ADOrganizationalUnit-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADOrganizationalUnit&quot;, um das neue Active Directory-Organisationseinheitsobjekt zu erstellen. 

  $OrganizationalUnitInstance = new-object Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  $OrganizationalUnitInstance.Country = Australia
  New-ADOrganizationalUnit -Name accountingAustralia  -Instance $OrganizationalUnitInstance

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis: Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die Anschrift der Organisationseinheit an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;street&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Organisationseinheitsobjekt empfangen, das eine Vorlage für das neue Organisationseinheitsobjekt darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Organisationseinheitsobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue OrganizationalUnit mit dem Namen &quot;UserAccounts&quot;, die vor versehentlichem Löschen geschützt wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue OrganizationalUnit mit dem Namen &quot;UserAccounts&quot;, die nicht vor Löschen geschützt wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -Name UserAccounts -Path &quot;DC=FABRIKAM,DC=COM&quot; -OtherAttributes @{seeAlso=&quot;CN=HumanResourceManagers,OU=Groups,OU=Managed,DC=Fabrikam,DC=com&quot;;managedBy=&quot;CN=TomC,DC=FABRIKAM,DC=COM&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt die OrganizationalUnit mit dem Namen &quot;UserAccounts&quot;, die vor versehentlichem Löschen geschützt wird, indem die seeAlso-Eigenschaft und die managedBy-Eigenschaft auf die angegebenen Werte festgelegt werden.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$ouTemplate = Get-ADOrganizationalUnit &quot;OU=UserAccounts,DC=Fabrikam,DC=com&quot; -properties seeAlso,managedBy; New-ADOrganizationalUnit -name TomCReports -instance $ouTemplate</dev:code>
  			<dev:remarks>
  			        <maml:para>Verwendet die Daten aus der OrganizationalUnit &quot;OU=UserAccounts,DC=Fabrikam,DC=com&quot; als Vorlage für eine andere neue OrganizationalUnit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADOrganizationalUnit -name &quot;Managed&quot; -path &quot;DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue OrganizationalUnit mit dem Namen &quot;Managed&quot; in einer LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144974</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Erstellt ein neues Active Directory-Dienstkonto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-ADServiceAccount&quot; erstellt ein neues Active Directory-Dienstkonto. Sie können häufig verwendete Eigenschaftswerte für Dienstkonten mit den Cmdlet-Parametern festlegen. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit dem OtherAttributes-Parameter festgelegt werden. 

Der Path-Parameter gibt den Container oder die Organisationseinheit für das neue Dienstkontoobjekt an. Wenn Sie den Path-Parameter nicht angeben, erstellt das Cmdlet ein Objekt im Standardcontainer für Dienstkontoobjekte in der Domäne.

Mit den folgenden Methoden werden verschiedene Möglichkeiten zum Erstellen eines Objekts mit diesem Cmdlet erläutert.

Methode 1: Verwenden Sie das Cmdlet &quot;New-ADServiceAccount&quot;, geben Sie die erforderlichen Parameter an, und legen Sie mit den Cmdlet-Parametern alle zusätzlichen Eigenschaftswerte fest.

Methode 2: Erstellen Sie das neue Objekt mithilfe einer Vorlage. Erstellen Sie hierzu ein neues Dienstkontoobjekt, oder rufen Sie eine Kopie eines vorhandenen Dienstkontoobjekts ab, und legen Sie den Instance-Parameter auf dieses Objekt fest. Das für den Instance-Parameter bereitgestellte Objekt wird als Vorlage für das neue Objekt verwendet. Sie können Eigenschaftswerte der Vorlage überschreiben, indem Sie Cmdlet-Parameter festlegen. Beispiele und weitere Informationen finden Sie in der Beschreibung des Instance-Parameters für dieses Cmdlet. 

Methode 3: Verwenden Sie das Cmdlet &quot;Import-CSV&quot; mit dem Cmdlet &quot;New-ADServiceAccount&quot;, um mehrere Active Directory-Dienstkontoobjekte zu erstellen. Verwenden Sie hierfür das Cmdlet &quot;Import-CSV&quot;, um die benutzerdefinierten Objekte aus einer CSV-Datei (Comma-Separated Value) zu erstellen, die eine Liste von Objekteigenschaften enthält. Übergeben Sie dann diese Objekte über die Pipeline an das Cmdlet &quot;New-ADServiceAccount&quot;, um die Dienstkontoobjekte zu erstellen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AccountPassword</maml:name>
				<maml:description>
					<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.
 Kein Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.

Benutzerkennwort angegeben: Das Kennwort wird festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert, außer wenn das bereitgestellte Kennwort nicht den Kennwortrichtlinien entspricht oder aus anderen Gründen nicht festgelegt wurde. In diesem Fall wird das Konto deaktiviert.

Hinweise: Dienstkonten werden standardmäßig mit einem zufälligen Kennwort mit 240 Zeichen erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Dienstkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten sicher bleiben, werden Dienstkonten nie aktiviert, es sei denn, es wird ein gültiges Kennwort festgelegt (nach dem Zufallsprinzip generiert oder vom Benutzer bereitgestellt), oder PasswordNotRequired wird auf &quot;true&quot; festgelegt.

Das neue ADServiceAccount-Objekt wird immer deaktiviert oder verfügt über ein vom Benutzer angefordertes oder nach dem Zufallsprinzip generiertes Kennwort. Es gibt keine Möglichkeit, ein aktiviertes Dienstkontoobjekt mit einem Kennwort zu erstellen, das gegen Domänenkennwortrichtlinien verstößt, z. B. mit einem leeren Kennwort.
 Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine Instanz eines Dienstkontoobjekts an, das als Vorlage für ein neues Dienstkontoobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Dienstkontoobjekts als Vorlage verwenden, oder Sie können ein neues Dienstkontoobjekt zur Verwendung als Vorlage erstellen.  Sie können ein neues Dienstkonto mithilfe der Windows PowerShell-Befehlszeile erstellen oder ein Skript verwenden. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Dienstkonto-Objektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Dienstkontoobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Dienstkontoobjekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADServiceAccount&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADServiceAccount&quot; bereit, um ein neues Dienstkontoobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $serviceaccountInstance = Get-ADServiceAccount -Identity  
  New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

Methode 2: Erstellen Sie ein neues ADServiceAccount-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADServiceAccount&quot;, um das neue Active Directory-Dienstkontoobjekt zu erstellen. 

  $serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
  $serviceaccountInstance. Description &quot;Service Account 2&quot;

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherAttributes</maml:name>
				<maml:description>
					<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis:  Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn die angegebene SAMAccountName-Zeichenfolge nicht mit &quot;$&quot; endet, wird dies bei Bedarf angefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AccountPassword</maml:name>
			<maml:description>
				<maml:para>Gibt einen neuen Kennwortwert für ein Konto an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Die folgenden Bedingungen gelten abhängig davon, wie der Kennwortparameter verwendet wird:

$null-Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.
 Kein Kennwort angegeben: Es wird ein zufälliges Kennwort festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert.

Benutzerkennwort angegeben: Das Kennwort wird festgelegt, und das Konto wird aktiviert, es sei denn, die Deaktivierung wird angefordert, außer wenn das bereitgestellte Kennwort nicht den Kennwortrichtlinien entspricht oder aus anderen Gründen nicht festgelegt wurde. In diesem Fall wird das Konto deaktiviert.

Hinweise: Dienstkonten werden standardmäßig mit einem zufälligen Kennwort mit 240 Zeichen erstellt. Wenn Sie ein Kennwort angeben, wird versucht dieses Kennwort festzulegen, dabei kann es jedoch aufgrund von Kennwortrichtlinieneinschränkungen zu Fehlern kommen. Das Dienstkonto wird dennoch erstellt, und Sie können das Kennwort mithilfe von Set-ADAccountPassword für dieses Konto festlegen. Um sicherzustellen, dass Konten sicher bleiben, werden Dienstkonten nie aktiviert, es sei denn, es wird ein gültiges Kennwort festgelegt (nach dem Zufallsprinzip generiert oder vom Benutzer bereitgestellt), oder PasswordNotRequired wird auf &quot;true&quot; festgelegt.

Das neue ADServiceAccount-Objekt wird immer deaktiviert oder verfügt über ein vom Benutzer angefordertes oder nach dem Zufallsprinzip generiertes Kennwort. Es gibt keine Möglichkeit, ein aktiviertes Dienstkontoobjekt mit einem Kennwort zu erstellen, das gegen Domänenkennwortrichtlinien verstößt, z. B. mit einem leeren Kennwort.
 Das Konto wird erstellt, wenn bei dem Kennwort aus irgendeinem Grund ein Fehler auftritt.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl werden Sie aufgefordert, ein Kennwort einzugeben.
  -AccountPassword (Read-Host -AsSecureString &quot;AccountPassword&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine Instanz eines Dienstkontoobjekts an, das als Vorlage für ein neues Dienstkontoobjekt verwendet werden soll.

Sie können eine Instanz eines vorhandenen Dienstkontoobjekts als Vorlage verwenden, oder Sie können ein neues Dienstkontoobjekt zur Verwendung als Vorlage erstellen.  Sie können ein neues Dienstkonto mithilfe der Windows PowerShell-Befehlszeile erstellen oder ein Skript verwenden. In den folgenden Beispielen wird gezeigt, wie diese beiden Methoden verwendet werden, um Dienstkonto-Objektvorlagen zu erstellen.

Methode 1: Verwenden Sie ein vorhandenes Dienstkontoobjekt als Vorlage für ein neues Objekt. Um eine Instanz eines vorhandenen Dienstkontoobjekts abzurufen, verwenden Sie ein Cmdlet wie &quot;Get-ADServiceAccount&quot;. Stellen Sie dann dieses Objekt für den Instance-Parameter des Cmdlet &quot;New-ADServiceAccount&quot; bereit, um ein neues Dienstkontoobjekt zu erstellen. Sie können Eigenschaftswerte des neuen Objekts überschreiben, indem Sie die entsprechenden Parameter festlegen. 

  $serviceaccountInstance = Get-ADServiceAccount -Identity  
  New-ADServiceAccount -Name &quot;ServiceAdmin_2&quot; -Instance $serviceaccountInstance   -Description &quot;Service Account 2&quot;

Methode 2: Erstellen Sie ein neues ADServiceAccount-Objekt, und legen Sie die Eigenschaftswerte über die Windows PowerShell-Befehlszeilenschnittstelle fest. Übergeben Sie dann dieses Objekt an den Instance-Parameter des Cmdlet &quot;New-ADServiceAccount&quot;, um das neue Active Directory-Dienstkontoobjekt zu erstellen. 

  $serviceaccountInstance = new-object Microsoft.ActiveDirectory.Management.ADServiceAccount
  $serviceaccountInstance. Description &quot;Service Account 2&quot;

Hinweis: Angegebene Attribute werden nicht überprüft. Wenn daher versucht wird, Attribute festzulegen, die nicht vorhanden sind oder nicht festgelegt werden können, wird ein Fehler ausgelöst.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -Name &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherAttributes</maml:name>
			<maml:description>
				<maml:para>Gibt Objektattributwerte für Attribute an, die nicht von Cmdlet-Parametern dargestellt werden. Sie können einen oder mehrere Parameter gleichzeitig mit diesem Parameter festlegen. Wenn ein Attribut mehrere Werte akzeptiert, können Sie mehrere Werte zuweisen. Um ein Attribut zu identifizieren, geben Sie den im Active Directory-Schema definierten LDAP-Anzeigenamen (ldapDisplayName) an.

Syntax:
So geben Sie einen einzelnen Wert für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value}
So geben Sie mehrere Werte für ein Attribut an
   -OtherAttributes @{'AttributeLDAPDisplayName'=value1,value2,...}

Sie können Werte für mehrere Attribute angeben, indem Sie die Attribute durch Semikolon trennen.  Die folgende Syntax veranschaulicht das Festlegen von Werten für mehrere Attribute.
   -OtherAttributes @{'Attribute1LDAPDisplayName'=value; 'Attribute2LDAPDisplayName'=value1,value2;...}

In den folgenden Beispielen wird die Verwendung dieses Parameters gezeigt.

Um den Wert eines benutzerdefinierten Attributs mit dem Namen &quot;favColors&quot; festzulegen, das einen Satz von Unicode-Zeichenfolgen akzeptiert, verwenden Sie die folgende Syntax: 
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;}

Verwenden Sie die folgende Syntax, um gleichzeitig Werte für &quot;favColors&quot; und &quot;dateOfBirth&quot; festzulegen.
   -OtherAttributes @{'favColors'=&quot;pink&quot;,&quot;purple&quot;; 'dateOfBirth'=&quot; 01.01.1960&quot;} </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den X.500-Pfad der Organisationseinheit oder des Containers an, in der bzw. dem das neue Objekt erstellt wird.  

In vielen Fällen wird ein Standardwert für den Path-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Path&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Path&quot; festgelegt:
  – Wenn das Cmdlet über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt wird, wird der Parameter auf den aktuellen Pfad des Anbieterlaufwerks festgelegt.
  – Wenn das Cmdlet über einen Standardpfad verfügt, wird dieser verwendet.  Beispiel: In New-ADUser wird für den Path-Parameter der Container &quot;Users&quot; als Standardwert verwendet.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Path&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Path-Parameter keinen Standardwert an.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Organisationseinheit festgelegt wird.

  -Path &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot;

Hinweis:  Die Active Directory-Anbieter-Cmdlets, z. B. &quot;New-Item&quot;, &quot;Remove-Item&quot;, &quot;Remove-ItemProperty&quot;, &quot;Rename-Item&quot; und &quot;Set-ItemProperty&quot;, enthalten ebenfalls die Path-Eigenschaft. Für die Anbieter-Cmdlets gibt der Path-Parameter jedoch den Pfad des tatsächlichen Objekts und nicht wie bei Active Directory-Cmdlets den Pfad des Containers an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn die angegebene SAMAccountName-Zeichenfolge nicht mit &quot;$&quot; endet, wird dies bei Bedarf angefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Instance-Parameter wird ein Dienstkontoobjekt empfangen, das eine Vorlage für das neue Dienstkontoobjekt darstellt.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das neue Dienstkontoobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -Enabled $true</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues aktiviertes Dienstkonto in AD DS, indem nur der Name des neuen Kontos angegeben wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-ADServiceAccount service1 -ServicePrincipalNames &quot;MSSQLSVC/Machine3.corp.contoso.com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt ein neues Dienstkonto mit dem Namen &quot;Service1&quot; und registriert den SerivcePrincipalName für das Dienstkonto.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144975</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADObject
		</command:name>
		<maml:description>
			<maml:para>Entfernt ein Active Directory-Objekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADObject&quot; entfernt ein Active Directory-Objekt. Sie können dieses Cmdlet verwenden, um beliebige Active Directory-Objekttypen zu entfernen.

Der Identity-Parameter gibt das zu entfernende Active Directory-Objekt an. Sie können ein Objekt durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Identity-Parameter auf eine Active Directory-Objektvariable festlegen, z. B. $&lt;localObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADObject&quot; verwenden, um ein Objekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADObject&quot; übergeben. 

Wenn das Objekt, das Sie zum Entfernen angegeben haben, über untergeordnete Objekte verfügt, müssen Sie den Recursive-Parameter angeben. 

In AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, außer in folgenden Fällen:     – Identifizieren von Objekten mithilfe eines DNs: Die Partition wird automatisch aus dem DN generiert.     – Ausführen von Cmdlets von einem Active Directory-Anbieterlaufwerk: Zum Festlegen der Partition wird der aktuelle Pfad verwendet.     – Es wird ein Standardnamenskontext oder eine Partition angegeben. 
Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeDeletedObjects</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet das Objekt und alle darin enthaltenen untergeordneten Elemente entfernen soll. 
  
Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive

Hinweis: Wenn dieser Parameter angegeben wird, werden alle untergeordneten Objekte entfernt, auch wenn mit ProtectedFromAccidentalDeletion markierte Objekte vorhanden sind.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeDeletedObjects</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass gelöschte Objekte und die deaktivierten Vorwärts- und Rückwärtslinks abgerufen werden sollen. Wenn dieser Parameter angegeben wird, verwendet das Cmdlet die folgenden LDAP-Steuerungen: 
  Anzeigen gelöschter Objekte (1.2.840.113556.1.4.417)
  Anzeigen deaktivierter Links (1.2.840.113556.1.4.2065)

Hinweis: Wenn dieser Parameter nicht angegeben ist, gibt das Cmdlet keine gelöschten Objekte zurück bzw. verarbeitet diese.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet das Objekt und alle darin enthaltenen untergeordneten Elemente entfernen soll. 
  
Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive

Hinweis: Wenn dieser Parameter angegeben wird, werden alle untergeordneten Objekte entfernt, auch wenn mit ProtectedFromAccidentalDeletion markierte Objekte vorhanden sind.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet funktioniert nicht bei einer Verbindung mit einem Port für einen globalen Katalog.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject 'CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung
Möchten Sie diese Aktion wirklich ausführen?
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM&quot;.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): J
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt das vom DistinguishedName &quot;CN=AmyAl-LPTOP,CN=Computers,DC=FABRIKAM,DC=COM&quot; angegebene Objekt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung
Möchten Sie diese Aktion wirklich ausführen?
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): J
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Löscht den Container mit dem DistinguishedName &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; einschließlich der untergeordneten Objekte. Hinweis: Alle untergeordneten Elemente des Containers, einschließlich der vor versehentlichem Löschen geschützten Elemente, werden ebenfalls gelöscht.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject &quot;65511e76-ea80-45e1-bc93-08a78d8c4853&quot; -Confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt das Objekt mit dem objectGUID &quot;65511e76-ea80-45e1-bc93-08a78d8c4853&quot;, ohne die Eingabeaufforderung für die Bestätigung anzuzeigen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADObject -Identity &quot;CN=InternalApps,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung
Möchten Sie diese Aktion wirklich ausführen?
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=InternalApps,DC=AppNC&quot;.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): J
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt das Objekt mit dem DistinguishedName &quot;CN=InternalApps,DC=AppNC&quot; aus einer LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'isDeleted -eq $true -and isRecycled -ne $true -and name -ne &quot;Deleted Objects&quot; -and lastKnownParent -eq &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;' -IncludeDeletedObjects | Remove-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>Verwendet alle Objekte im Papierkorb wieder, der sich im Container &quot;OU=Accounting,DC=Fabrikam,DC=com&quot; befunden haben.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144976</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADUser
		</command:name>
		<maml:description>
			<maml:para>Entfernt einen Active Directory-Benutzer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADUser&quot; entfernt einen Active Directory-Benutzer.

Der Identity-Parameter gibt den zu entfernenden Active Directory-Benutzer an. Sie können einen Benutzer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Benutzerobjektvariable festlegen, z. B. $&lt;localUserObject&gt;, oder ein Benutzerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Benutzerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADUser&quot; übergeben. 

Wenn ADUser durch den DN identifiziert wird, wird der Partition-Parameter automatisch bestimmt.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Benutzerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity GlenJohn
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt den Benutzer mit dem samAccountName &quot;GlenJohn&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | where {$_.ObjectClass -eq 'user'} | Remove-ADUser
</dev:code>
  			<dev:remarks>
  			        <maml:para>Sucht nach allen Benutzern, deren Konten deaktiviert sind, und entfernt diese.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADUser -Identity &quot;CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt den Benutzer mit dem DistinguishedName &quot;CN=Glen John,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser &quot;cn=glenjohn,dc=appnc&quot; -Server Lds.Fabrikam.com:50000 | Remove-ADUser</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft den Benutzer mit dem DistinguishedName &quot;cn=glenjohn,dc=appnc&quot; aus der AD LDS-Instanz ab und entfernt diesen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144977</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Entfernt einen Active Directory-Computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADComputer&quot; entfernt einen Active Directory-Computer.

Der Identity-Parameter gibt den zu entfernenden Active Directory-Computer an. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Identity-Parameter auch auf eine Computerobjektvariable festlegen, z. B. $&lt;localComputerObject&gt;, oder ein Computerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADComputer&quot; verwenden, um ein Computerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADComputer&quot; übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Computerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputer -Identity &quot;FABRIKAM-SRV4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt einen bestimmten Computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung
Möchten Sie diese Aktion wirklich ausführen?
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=LabServer-01,CN=Computers,DC=Fabrikam,DC=com&quot;.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): A
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt alle Computer an einem bestimmten Speicherort.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADComputer -Filter 'Location -eq &quot;NA/HQ/Building A&quot;' | Remove-ADComputer -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt alle Computer aus einem angegebenen Speicherort und deaktiviert die Bestätigungsaufforderung.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144978</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Entfernt eine Active Directory-Gruppe.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADGroup&quot; entfernt ein Active Directory-Gruppenobjekt. Mit diesem Cmdlet können Sie Sicherheits- und Verteilungsgruppen entfernen.

Der Identity-Parameter gibt die zu entfernende Active Directory-Gruppe an. Sie können eine Gruppe durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) oder den kanonischen Namen identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot; Get-ADGroup&quot; verwenden, um ein Gruppenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADGroup&quot; übergeben.

Wenn ADGroup durch den DN identifiziert wird, wird der Partition-Parameter automatisch bestimmt.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup SanjaysReports </dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=SanjayReports,DC=Fabrikam,DC=com&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt die Gruppe mit dem samAccountName &quot;SanjaysReports&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'Name -like &quot;Sanjay*&quot;' | remove-adgroup </dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=SanjaysReports,DC=Fabrikam,DC=com&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Gruppen ab, deren Name mit &quot;Sanjay&quot; beginnt, und entfernt diese. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroup 
cmdlet Remove-ADGroup at command pipeline position 1 
Supply values for the following parameters: 
Identity: SanjaysTeam</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;CN=SanjaysTeam,DC=Fabrikam,DC=com&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt die Gruppe mit dem samAccountName &quot;SanjaysTeam&quot; mit dem Cmdlet-Standardverhalten.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144979</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Entfernt eine abgestimmte ActiveDirectory-Kennwortrichtlinie.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADFineGrainedPasswordPolicy&quot; entfernt eine abgestimmte ActiveDirectory-Kennwortrichtlinie.

Der Identity-Parameter gibt die zu entfernende abgestimmte Active Directory-Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen oder GUID identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable einer abgestimmten Kennwortrichtlinie festlegen, z. B. $&lt;localFineGrainedPasswordPolicyObject&gt;, oder Sie übergeben ein Objekt für eine abgestimmte Kennwortrichtlinie über die Pipeline an den Identity-Parameter. Beispielsweise können Sie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ein Objekt für eine abgestimmte Kennwortrichtlinie abrufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADFineGrainedPasswordPolicy&quot; übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy MyPolicy
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt das Objekt für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;MyPolicy&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicy -Identity 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt das Objekt für eine abgestimmte Kennwortrichtlinie mit dem DistinguishedName &quot;CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicy -Filter {Name -like &quot;*user*&quot;} | Remove-ADFineGrainedPasswordPolicy</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt alle Objekte für eine abgestimmte Kennwortrichtlinie, deren Name &quot;user&quot; enthält.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144980</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Entfernt eine Active Directory-Organisationseinheit.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADOrganizationalUnit&quot; entfernt eine Active Directory-Organisationseinheit.

Der Identity-Parameter gibt die zu entfernende Organisationseinheit an. Sie können eine Organisationseinheit durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Parameter auf die Objektvariable einer Organisationseinheit, z. B. $&lt;localOrganizationUnitObject&gt;, festlegen oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; können Sie z. B. das Objekt abrufen und es anschließend über die Pipeline an das Cmdlet &quot;Remove-ADOrganizationalUnit&quot; übergeben. 

Wenn das Objekt, das Sie zum Entfernen angegeben haben, über untergeordnete Objekte verfügt, müssen Sie den Recursive-Parameter angeben. 

Wenn die ProtectedFromAccidentalDeletion-Eigenschaft des Organisationseinheitsobjekts auf &quot;true&quot; festgelegt ist, gibt das Cmdlet einen Fehler mit Abbruch zurück. 

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt die Identität eines Active Directory-Organisationseinheitsobjekts an. Der Parameter nimmt die folgenden Identitätsformate an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut, das die Identität enthält.

  Definierter Name 
    Beispiel:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Instanz eines Organisationseinheitsobjekts mit dem Namen &quot;OUinstance&quot; festgelegt wird.
  -Identity   $OUInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recursive</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet die Organisationseinheit und alle darin enthaltenen untergeordneten Elemente entfernt. Sie müssen den Parameter angeben, um eine Organisationseinheit zu entfernen, die nicht leer ist.

Hinweis: Wenn dieser Parameter angegeben wird, werden alle untergeordneten Objekte unter einer Organisationseinheit entfernt, die mit ProtectedFromAccidentalDeletion markiert wurden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt die Identität eines Active Directory-Organisationseinheitsobjekts an. Der Parameter nimmt die folgenden Identitätsformate an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut, das die Identität enthält.

  Definierter Name 
    Beispiel:  OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Instanz eines Organisationseinheitsobjekts mit dem Namen &quot;OUinstance&quot; festgelegt wird.
  -Identity   $OUInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recursive</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet die Organisationseinheit und alle darin enthaltenen untergeordneten Elemente entfernt. Sie müssen den Parameter angeben, um eine Organisationseinheit zu entfernen, die nicht leer ist.

Hinweis: Wenn dieser Parameter angegeben wird, werden alle untergeordneten Objekte unter einer Organisationseinheit entfernt, die mit ProtectedFromAccidentalDeletion markiert wurden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -Recursive</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Organisationseinheitsobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot; -Recursive
</dev:code>
  			<dev:remarks>
 				<maml:para>Möchten Sie das Element und alle untergeordneten Elemente wirklich entfernen?
Für das Ziel &quot;OU=Accounting,DC=Fabrikam,DC=com&quot; wird ein rekursiver Entfernungsvorgang ausgeführt.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe
(Der Standardwert ist &quot;J&quot;):a
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt eine OrganizationalUnit und alle untergeordneten Elemente.  Wenn die OrganizationalUnit vor Löschen geschützt ist, werden die OrganizationalUnit und ihre untergeordneten Elemente nicht gelöscht. Wenn die OrganizationalUnit nicht geschützt ist, jedoch geschützte untergeordnete Elemente vorhanden sind, werden sowohl die OrganizationalUnit als auch die untergeordneten Elemente gelöscht.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;1b228aa5-2c14-48b8-ad8a-2685dc22e055&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt eine OrganizationalUnit unter Verwendung von objectGUID als Identität und unterdrückt die Bestätigungsaufforderung.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Accounting,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung
Möchten Sie diese Aktion wirklich ausführen?
Ausführen des Vorgangs &quot;Remove&quot; für das Ziel &quot;OU=Accounting,DC=Fabrikam,DC=com&quot;.
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe
(Der Standardwert ist &quot;J&quot;):a
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt die OrganizationalUnit &quot;Accounting&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -server &quot;FABRIKAM-SRV1:60000&quot; -confirm:$false</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt eine OrganizationalUnit aus einer LDS-Instanz.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144981</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADGroupMember
		</command:name>
		<maml:description>
			<maml:para>Entfernt mindestens ein Mitglied aus einer Active Directory-Gruppe.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADGroupMember</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADGroupMember&quot; entfernt mindestens einen Benutzer, eine Gruppe, ein Dienstkonto oder einen Computer aus einer Active Directory-Gruppe. 

Der Identity-Parameter gibt die Active Directory-Gruppe an, in der die zu entfernenden Mitglieder enthalten sind. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch eine Gruppenobjektvariable angeben, z. B. $&lt;localGroupObject&gt;, oder ein Gruppenobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot; Get-ADGroup&quot; verwenden, um eine Gruppenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADGroupMember&quot; übergeben.

Der Members-Parameter gibt die Benutzer, Computer und Gruppen an, die aus der vom Identity-Parameter angegebenen Gruppe entfernt werden sollen. Sie können einen Benutzer, Computer oder eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch Benutzer-, Computer- und Gruppenobjektvariablen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als ein neues Mitglied angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können keine Benutzer-, Computer- oder Gruppenobjekte über die Pipeline an dieses Cmdlet übergeben. Um Benutzer-, Computer- oder Gruppenobjekte über die Pipeline aus einer Gruppe zu entfernen, verwenden Sie das Cmdlet &quot;Remove-ADPrincipalGroupMembership&quot;.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADGroupMember</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Members</maml:name>
				<maml:description>
					<maml:para>Gibt eine Reihe von Benutzern, Gruppen und Computern an, die aus einer Gruppe entfernt werden sollen. Sie können Benutzer, Gruppen und Computer identifizieren, indem Sie einen der folgenden Werte angeben. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
   Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter angegeben wird.

In diesem Beispiel werden ein Benutzer und eine Gruppe angegeben, die entfernt werden sollen, indem die Eigenschaftswerte für den definierten Namen und den SAM-Kontonamen angegeben werden.
  -Members &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;sarahettichberichte&quot;

In diesem Beispiel werden ein Benutzer- und ein Gruppenobjekt angegeben, die in der aktuellen Windows PowerShell-Sitzung als Eingabe für den Parameter definiert sind.  

  -Members $userObject, $groupObject

Die für diesen Parameter angegebenen Objekte werden als Microsoft.ActiveDirectory.Management.ADPrincipal-Objekte verarbeitet. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup 

Sie können keine Objekte über die Pipeline an diesen Parameter übergeben.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Members</maml:name>
			<maml:description>
				<maml:para>Gibt eine Reihe von Benutzern, Gruppen und Computern an, die aus einer Gruppe entfernt werden sollen. Sie können Benutzer, Gruppen und Computer identifizieren, indem Sie einen der folgenden Werte angeben. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
   Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter angegeben wird.

In diesem Beispiel werden ein Benutzer und eine Gruppe angegeben, die entfernt werden sollen, indem die Eigenschaftswerte für den definierten Namen und den SAM-Kontonamen angegeben werden.
  -Members &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;, &quot;sarahettichberichte&quot;

In diesem Beispiel werden ein Benutzer- und ein Gruppenobjekt angegeben, die in der aktuellen Windows PowerShell-Sitzung als Eingabe für den Parameter definiert sind.  

  -Members $userObject, $groupObject

Die für diesen Parameter angegebenen Objekte werden als Microsoft.ActiveDirectory.Management.ADPrincipal-Objekte verarbeitet. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup 

Sie können keine Objekte über die Pipeline an diesen Parameter übergeben.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Gruppenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember -Identity &quot;DocumentReaders&quot; -Member &quot;WilsonPais&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Set&quot; für das Ziel &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt den Benutzer mit samAccountName &quot;WilsonPais&quot; aus der Gruppe &quot;DocumentReaders&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember &quot;DocumentReaders&quot; &quot;administrator&quot;,&quot;Wilson Pais&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt die Benutzer mit den samAccountNames &quot;Administrator&quot; und &quot;WilsonPais&quot; aus der Gruppe &quot;DocumentReaders&quot;. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>remove-adgroupmember
cmdlet Remove-ADGroupMember at command pipeline position 1 
Supply values for the following parameters: 
Identity: DocumentReaders 
Members[0]: Wilson Pais 
Members[1]: </dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Set&quot; für das Ziel &quot;CN=DocumentReaders,CN=Users,DC=Fabrikam,DC=com&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt den Benutzer &quot;WilsonPais&quot; aus der Gruppe &quot;DocumentReaders&quot; mit dem Standardverhalten. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -server localhost:60000 &quot;CN=AccessControl,DC=AppNC&quot; | remove-adgroupmember -member &quot;CN=GlenJohns,DC=AppNC&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Bestätigung 
Möchten Sie diese Aktion wirklich ausführen? 
Ausführen des Vorgangs &quot;Set&quot; für das Ziel &quot;CN=AccessControl,DC=AppNC&quot;. 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt den Benutzer mit dem DistinguishedName &quot;CN=GlenJohns,DC=AppNC&quot; aus der Gruppe &quot;AccessControl&quot; auf einer AD LDS-Instanz mithilfe der Pipeline.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144982</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADPrincipalGroupMembership
		</command:name>
		<maml:description>
			<maml:para>Entfernt ein Mitglied aus mindestens einer Active Directory-Gruppe. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADPrincipalGroupMembership</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADPrincipalGroupMembership&quot; entfernt einen Benutzer, eine Gruppe, einen Computer, ein Dienstkonto oder ein beliebiges anderes Kontoobjekt aus einer oder mehreren Active Directory-Gruppen. 

Der Identity-Parameter gibt den Benutzer, die Gruppe oder den Computer an, die entfernt werden sollen. Sie können den Benutzer, die Gruppe oder den Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den SAM-Kontonamen identifizieren. Sie können auch eine Benutzer-, Gruppen- oder Computerobjektvariable angeben, z. B. $&lt;localGroupObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Benutzerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADPrincipalGroupMembership&quot; übergeben. Auf ähnliche Weise können Sie Get-ADGroup oder Get-ADComputer zum Abrufen von Gruppen-, Dienstkonto- und Computerobjekten verwenden, die über die Pipeline übergeben werden sollen.

Dieses Cmdlet sammelt alle über die Pipeline übergebenen Benutzer-, Computer-, Dienstkonto- und Gruppenobjekte und entfernt diese Objekte dann mit einem Active Directory-Vorgang aus der angegebenen Gruppe.

Der MemberOf-Parameter gibt die Gruppen an, aus denen das Mitglied entfernt werden soll. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch eine Gruppenobjektvariable angeben, z. B. $&lt;localGroupObject&gt;. Um mehr als eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können keine Gruppenobjekte über die Pipeline an den MemberOf-Parameter übergeben. Um ein Mitglied aus Gruppen zu entfernen, die über die Pipeline übergeben werden, verwenden Sie das Cmdlet &quot;Remove-ADGroupMember&quot;.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADPrincipalGroupMembership</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>MemberOf</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Gruppen an, denen ein Benutzer, ein Computer oder eine Gruppe als Mitglied hinzugefügt werden soll. Sie können eine Gruppe durch Bereitstellen eines der folgenden Werte identifizieren. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Wenn Sie mehr als eine Gruppe angeben, trennen Sie diese in der Liste durch Kommas.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, indem Sie Werte für den SAM-Kontonamen verwenden.
  -MemberOf &quot;SaraHettichGruppe&quot;, &quot;ChristianHessGruppe&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Prinzipalobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  – Microsoft.ActiveDirectory.Management.ADGroup
  – Microsoft.ActiveDirectory.Management.ADUser
  – Microsoft.ActiveDirectory.Management.ADComputer
  – Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Prinzipalobjektinstanz mit dem Namen &quot;principalInstance&quot; festgelegt wird.
  -Identity $principalInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>MemberOf</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Gruppen an, denen ein Benutzer, ein Computer oder eine Gruppe als Mitglied hinzugefügt werden soll. Sie können eine Gruppe durch Bereitstellen eines der folgenden Werte identifizieren. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,CN=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Wenn Sie mehr als eine Gruppe angeben, trennen Sie diese in der Liste durch Kommas.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird, indem Sie Werte für den SAM-Kontonamen verwenden.
  -MemberOf &quot;SaraHettichGruppe&quot;, &quot;ChristianHessGruppe&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADGroup[]</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Prinzipalobjekt empfangen, das einen Benutzer, Computer oder eine Gruppe darstellt. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls von diesem Parameter empfangen.
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADGroup
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADPrincipal</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein Prinzipalobjekt zurück, das das geänderte Benutzer-, Computer- oder Gruppenobjekt darstellt, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert. 
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership -Identity &quot;Wilson Pais&quot; -MemberOf &quot;Administrators&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Entfernt Elemente aus der Gruppe. 
Möchten Sie alle angegebenen Mitglieder aus den angegebenen Gruppen entfernen? 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): J</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt den Benutzer &quot;Wilson Pais&quot; aus der Administratorgruppe. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADPrincipalGroupMembership 
cmdlet Remove-ADPrincipalGroupMembership at command pipeline position 1 
Supply values for the following parameters: 
Identity: Kim Abercrombie 
MemberOf[0]: Administrators 
MemberOf[1]: AccessControl 
MemberOf[2]: </dev:code>
  			<dev:remarks>
 				<maml:para>Entfernt Elemente aus der Gruppe. 
Möchten Sie alle angegebenen Mitglieder aus den angegebenen Gruppen entfernen? 
[J] Ja  [A] Ja, alle  [N] Nein  [K] Nein, keine  [H] Anhalten  [?] Hilfe (Standard ist &quot;J): J</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Entfernt den Benutzer &quot;Kim Abercrombie&quot; aus den Gruppen &quot;Administrators&quot; und &quot;AccessControl&quot; mit dem Standardverhalten.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-aduser -server localhost:60000 -Identity &quot;CN=GlenJohns,DC=AppNC&quot; | remove-adprincipalgroupmembership -memberof &quot;CN=AccessControl,DC=AppNC&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft den Benutzer mit dem DistinguishedName &quot;CN=GlenJohns,DC=AppNC&quot; ab und entfernt ihn aus der Gruppe mit dem DistinguishedName &quot;CN=AccessControl,DC=AppNC&quot; mithilfe der Pipeline.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144983</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADFineGrainedPasswordPolicySubject
		</command:name>
		<maml:description>
			<maml:para>Entfernt mindestens einen Benutzer aus einer abgestimmten Kennwortrichtlinie.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADFineGrainedPasswordPolicySubject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADFineGrainedPasswordPolicySubject&quot; entfernt mindestens eine globale Sicherheitsgruppe und mindestens einen Benutzer aus einer abgestimmten Kennwortrichtlinie.

Der Identity-Parameter gibt die abgestimmte Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen oder GUID identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable einer abgestimmten Kennwortrichtlinie festlegen, z. B. $&lt;localFineGrainedPasswordPolicyObject&gt;, oder Sie übergeben ein Objekt für eine abgestimmte Kennwortrichtlinie über die Pipeline an den Identity-Parameter. Beispielsweise können Sie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ein Objekt für eine abgestimmte Kennwortrichtlinie abrufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADFineGrainedPasswordPolicySubject&quot; übergeben. 

Der Subjects-Parameter gibt die Benutzer und Gruppen an, die aus der Kennwortrichtlinie entfernt werden sollen. Sie können einen Benutzer oder eine Gruppe durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) oder den kanonischen Namen identifizieren. Sie können auch Benutzer- oder Gruppenobjektvariablen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als einen Benutzer oder eine Gruppe angeben, verwenden Sie eine durch Trennzeichen getrennte Liste.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADFineGrainedPasswordPolicySubject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>Subjects</maml:name>
				<maml:description>
					<maml:para>Gibt mindestens einen Benutzer oder mindestens eine Gruppe an. Um mehr als einen Benutzer oder eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können einen Benutzer oder eine Gruppe durch einen der folgenden Eigenschaftswerte identifizieren.
  Definierter Name (DN)
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mithilfe eines definierten Namens und SAM-Kontonamen auf eine Liste von Benutzern und Gruppen festgelegt wird.
  -Subjects &quot;CN=SaraHettich, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;sarahettichberichte&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>Subjects</maml:name>
			<maml:description>
				<maml:para>Gibt mindestens einen Benutzer oder mindestens eine Gruppe an. Um mehr als einen Benutzer oder eine Gruppe anzugeben, verwenden Sie eine durch Trennzeichen getrennte Liste. Sie können einen Benutzer oder eine Gruppe durch einen der folgenden Eigenschaftswerte identifizieren.
  Definierter Name (DN)
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

Sie können Objekte auch direkt für diesen Parameter bereitstellen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mithilfe eines definierten Namens und SAM-Kontonamen auf eine Liste von Benutzern und Gruppen festgelegt wird.
  -Subjects &quot;CN=SaraHettich, CN=Users,DC=corp,DC=contoso,DC=com&quot;,&quot;donhall&quot;,&quot;sarahettichberichte&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein Objekt zurück, das das geänderte Objekt für die abgestimmte Kennwortrichtlinie darstellt, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO -Subjects BobKe,KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt die abgestimmte Kennwortrichtlinie mit dem Namen &quot;DlgtdAdminsPSO&quot; von den Benutzern mit den SAMAccountNames &quot;BobKe&quot; und &quot;KimAb&quot;.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADFineGrainedPasswordPolicySubject  DlgtdAdminsPSO | where {$_.Name -like &quot;*Price&quot;} | Remove-ADFineGrainedPasswordPolicySubject DlgtdAdminsPSO</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt alle Elemente, deren Name mit &quot;Price&quot; endet, aus der Namensliste, auf die die abgestimmte Kennwortrichtlinie &quot;DlgtdAdminsPSO&quot; angewendet wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145019</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicySubject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADDomainControllerPasswordReplicationPolicy
		</command:name>
		<maml:description>
			<maml:para>Entfernt Benutzer, Computer und Gruppen aus der Zulassungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für schreibgeschützte Domänencontroller.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADDomainControllerPasswordReplicationPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Durch das Cmdlet &quot;Remove-ADDomainControllerPasswordReplicationPolicy&quot; wird mindestens ein Benutzer, Computer bzw. mindestens eine Gruppe aus der Zulassungs- oder Verweigerungsliste einer Kennwortreplikationsrichtlinie für schreibgeschützte Domänencontroller entfernt. 

Der Identity-Parameter gibt den RODC an, der Zulassungs- und Verweigerungslisten verwendet, um die Kennwortreplikationsrichtlinie anzuwenden. Sie können einen Domänencontroller durch die GUID, IPV4Address, globale IPV6Address oder den DNS-Hostnamen identifizieren. Sie können einen Domänencontroller auch durch folgende Angaben identifizieren: Name des Serverobjekts, das den Domänencontroller darstellt, definierter Name (DN) des NTDS-Einstellungsobjekts des Serverobjekts, GUID des NTDS-Einstellungsobjekts des Serverobjekts unter der Konfigurationspartition oder DN des Computerobjekts, das den Domänencontroller darstellt. Sie können auch den Identity-Parameter auf die Objektvariable eines Domänencontrollers festlegen, z. B. $&lt;localDomainControllerobject&gt;, oder ein Domänencontrollerobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomainController&quot; verwenden, um ein Domänencontrollerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADDomainControllerPasswordReplicationPolicy&quot; übergeben. Sie müssen einen schreibgeschützten Domänencontroller angeben. 

Der AllowedList-Parameter gibt die Benutzer, Computer und Gruppen an, die aus der Zulassungsliste entfernt werden sollen. Auf ähnliche Weise gibt der DeniedList-Parameter die Benutzer, Computer und Gruppen an, die aus der Verweigerungsliste entfernt werden sollen. Sie müssen den AllowedList-Parameter und/oder den DeniedList-Parameter angeben. Sie können einen Benutzer, Computer oder eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) identifizieren. Sie können auch Benutzer-, Computer- oder Gruppenvariablen angeben, z. B. $&lt;localUserObject&gt;. Wenn Sie mehr als ein Element angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedList</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die aus der Liste der Konten entfernt werden sollen, die ihre Kennwörter in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel:  sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -AllowedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-ADDomainControllerPasswordReplicationPolicy</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeniedList</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die aus der Liste der Konten entfernt werden sollen, die ihre Kennwörter nicht in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer-, Computer-, Gruppen- oder anderen Konten zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel:  sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -DeniedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedList</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die aus der Liste der Konten entfernt werden sollen, die ihre Kennwörter in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer, Computer oder Gruppen zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel:  CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel:  sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -AllowedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeniedList</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzer, Computer, Gruppen oder anderen Konten an, die aus der Liste der Konten entfernt werden sollen, die ihre Kennwörter nicht in diesen schreibgeschützten Domänencontroller (RODC) replizieren können. Sie können mithilfe einer durch Trennzeichen getrennten Liste mehrere Werte angeben. Um alle Benutzer-, Computer-, Gruppen- oder anderen Konten zu identifizieren, verwenden Sie einen der folgenden Eigenschaftswerte:
  Definierter Name 
      Beispiel: CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com
  GUID (objectGUID) 
      Beispiel:  599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
      Beispiel:  S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
      Beispiel:  sarahettich

Im folgenden Beispiel wird gezeigt, wie eine Gruppe und ein Benutzer mit einem SAM-Kontonamen und einem definierten Namen angegeben werden.
  -DeniedList &quot;SaraHettichGruppe&quot;, &quot;CN=SaraHettich,CN=employees,CN=Users,DC=contoso,DC=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADPrincipal[]</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Domänencontrollerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Wenn nicht anders angegeben, sind dies die Werte des Serverobjekts, das den Domänencontroller darstellt.

  GUID (objectGUID)
    Beispiel: 768c44de-f72d-66e0-8a88-0523ca495f20 
  IPV4Address
    Beispiel: 157.59.132.61
  IPV6Address (global) 
    Beispiel: 2001:4898:0:fff:200:5efe:157.59.132.61
  DNS-Hostname (dNSHostName)
    Beispiel: corp-DC01.corp.contoso.com
  Name des Serverobjekts
    Beispiel: corp-DC01$
  Definierter Name des NTDS-Einstellungsobjekts.
    Beispiel: CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso
  Definierter Name des Serverobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso,DC=com
  GUID des NTDS-Einstellungsobjekts unter der Konfigurationspartition.
    Beispiel: 68adaf21-e28d-6012-bca8-320d93450ab0
  GUID des Serverobjekts unter der Konfigurationspartition.
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20
  Definierter Name des Computerobjekts, das den Domänencontroller darstellt.
    Beispiel: CN=CORP-DC12,OU=Domain Controllers,DC=corp,DC=contoso,DC=com

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück.

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf den definierten Namen des NTDS-Einstellungsobjekts festgelegt wird.
  -Identity &quot;CN=NTDS Settings,CN=CORP-DC12,CN=Servers,CN=NA-CAN-QBC,CN=Sites,CN=Configuration,DC=corp,DC=contoso&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänencontrollerobjektinstanz mit dem Namen &quot;AD_DCInstance&quot; festgelegt wird.
  -Identity $AD_DCInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainController</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainController</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für einen schreibgeschützten Domänencontroller (RODC) empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomainController</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Objekt für den schreibgeschützten Domänencontroller zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -AllowedList &quot;JesperAaberg&quot;, &quot;AdrianaAdams&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt die Benutzer mit den samAccountNames &quot;JesperAaberg&quot; und &quot;AdrianaAdams&quot; aus der Zulassungsliste auf dem RODC &quot;FABRIKAM-RODC1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADDomainControllerPasswordReplicationPolicy -Identity &quot;FABRIKAM-RODC1&quot; -DeniedList &quot;MichaelAllen&quot;, &quot;ElizabethAndersen&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt die Benutzer mit den samAccountNames &quot;MichaelAllen&quot; und &quot;ElizabethAndersen&quot; aus der Verweigerungsliste auf dem RODC &quot;FABRIKAM-RODC1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144984</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomainController</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get- ADDomainControllerPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Entfernt ein Active Directory-Dienstkonto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADServiceAccount&quot; entfernt ein Active Directory-Dienstkonto. Dieses Cmdlet nimmt keine Änderungen an Computern vor, die das Dienstkonto verwenden. Nach diesem Vorgang wird das Dienstkonto nicht mehr auf dem Zielcomputer gehostet, ist jedoch weiterhin im Verzeichnis vorhanden.

Der Identity-Parameter gibt das zu entfernende Active Directory-Dienstkonto an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf die Objektvariable eines Dienstkontos festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder ein Dienstkontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADServiceAccount&quot; verwenden, um ein Dienstkontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADServiceAccount&quot; übergeben. 

Hinweis: Das Entfernen des Dienstkontos ist ein anderer Vorgang als das lokale Deinstallieren des Dienstkontos.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt das Dienstkonto mit dem Namen &quot;service1&quot;.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADServiceAccount -Filter {Name -like 'SQL*'} | Remove-ADServiceAccount </dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt alle Dienstkonten, deren Name mit &quot;SQL&quot; beginnt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144985</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-ADComputerServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Entfernt mindestens ein Dienstkonto von einem Computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>ADComputerServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; entfernt Dienstkonten von einem Active Directory-Computer.

Der Computer-Parameter gibt den Active Directory-Computer an, der die zu entfernenden Dienstkonten enthält. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Computer-Parameter auch auf eine Computerobjektvariable festlegen, z. B. $&lt;localComputerobject&gt;, oder ein Computerobjekt über die Pipeline an den Computer-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADComputer&quot; verwenden, um ein Computerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; übergeben. 

Der ServiceAccount-Parameter gibt die zu entfernenden Dienstkonten an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch Dienstkonto-Objektvariablen angeben, z. B. $&lt;localServiceAccountObject&gt;. Wenn Sie mehrere Dienstkonten angeben, verwenden Sie eine durch Trennzeichen getrennte Liste. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-ADComputerServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>ServiceAccount</maml:name>
				<maml:description>
					<maml:para>Gibt mindestens ein Active Directory-Dienstkonto an. Sie können ein Dienstkonto mit einem der folgenden Eigenschaftswerte identifizieren: 
  Definierter Name 
    Beispiel: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
   SAM-Kontoname (sAMAccountName) 
    Beispiel: serviceadmin

Im folgenden Beispiel wird gezeigt, wie ein Dienstkonto für diesen Parameter mit dem SAM-Kontonamen angegeben wird.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>ServiceAccount</maml:name>
			<maml:description>
				<maml:para>Gibt mindestens ein Active Directory-Dienstkonto an. Sie können ein Dienstkonto mit einem der folgenden Eigenschaftswerte identifizieren: 
  Definierter Name 
    Beispiel: CN=serviceadmin,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
   GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
   SAM-Kontoname (sAMAccountName) 
    Beispiel: serviceadmin

Im folgenden Beispiel wird gezeigt, wie ein Dienstkonto für diesen Parameter mit dem SAM-Kontonamen angegeben wird.
  -ServiceAccount &quot;serviceAdminEurope&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">ADServiceAccount[]</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Computer-Parameter wird ein Computerobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein Objekt zurück, das das geänderte Computerobjekt darstellt, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount -Computer ComputerAcct1 -serviceAccount SvcAcct1 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt das Dienstkonto &quot;SvcAcct1&quot; aus dem Computerkonto &quot;ComputerAcct1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-ADComputerServiceAccount  -Computer ComputerAcct1 -serviceAccount SvcAcct1,SvcAcct2</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt die Dienstkonten &quot;SvcAcct1&quot; und &quot;SvcAcct2&quot; aus dem Computerkonto &quot;ComputerAcct1&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144986</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-ADObject
		</command:name>
		<maml:description>
			<maml:para>Ändert den Namen eines Active Directory-Objekts. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Rename-ADObject&quot; benennt ein Active Directory-Objekt um. Dieses Cmdlet legt die Name-Eigenschaft eines Active Directory-Objekts fest, das über den LDAP-Anzeigenamen (ldapDisplayName) &quot;name&quot; verfügt. Um den angegebenen Namen, Nachnamen und sonstige Namen eines Benutzers zu ändern, verwenden Sie das Cmdlet &quot;Set-ADUser&quot;. Um den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager) eines Benutzers, Computers bzw. einer Gruppe zu ändern, verwenden Sie das Cmdlet &quot;Set-ADUser&quot;, &quot;Set-ADComputer&quot; oder &quot;Set-ADGroup&quot;.

Der Identity-Parameter gibt das umzubenennende Objekt an. Sie können ein Objekt oder einen Container durch den definierten Namen (DN) oder den GUID identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localObject&gt;, oder über die Pipeline ein Kontoobjekt an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADObject&quot; verwenden, um ein Objekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Rename-ADObject&quot; übergeben. Sie können auch eines der Cmdlets &quot;Get-ADGroup&quot;, &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot;, &quot;Get-ADServiceAccount&quot;, &quot;Get-ADOrganizationalUnit&quot; und &quot;Get-ADFineGrainedPasswordPolicy&quot; verwenden, um ein Objekt abzurufen, das Sie über die Pipeline an dieses Cmdlet übergeben können.

Der NewName-Parameter definiert den neuen Namen für das Objekt und muss angegeben werden. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -NewName &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -NewName &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy

				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;CN=HQ,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot; -NewName UnitedKingdomHQ</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt den Namen der vorhandenen Site &quot;HQ&quot; in den neuen Namen &quot;UnitedKingdomHQ&quot; um. Wenn der definierte Name im -Identity-Parameter angegeben wird, ist der -Partition-Parameter nicht erforderlich.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;AmsterdamHQ&quot; -Partition &quot;CN=Configuration,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt das Objekt mit dem objectGUID &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; in &quot;SiteNewName&quot; um. Hinweis: Der -Partition-Parameter ist erforderlich, da der Namenskontext des Siteobjekts nicht aus dem für den -Identity-Parameter angegebenen GUID ermittelt werden kann. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com&quot; -NewName Groups</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt das Objekt mit dem DistinguishedName &quot;OU=ManagedGroups,OU=Managed,DC=Fabrikam,DC=Com&quot; in &quot;Groups&quot; um.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject -Identity &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; -NewName &quot;DavidAhs&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt das Objekt mit dem objectGUID &quot;4777c8e8-cd29-4699-91e8-c507705a0966&quot; in &quot;DavidAhs&quot; um. Beachten Sie, dass der -Partition-Parameter nicht angegeben wird, da sich das Objekt im Standardnamenskontext der Domäne befindet.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-ADObject &quot;CN=Apps,DC=AppNC&quot; -NewName &quot;InternalApps&quot; -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt den Container &quot;CN=Apps,DC=AppNC&quot; in &quot;InternalApps&quot; in einer LDS-Instanz um.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144987</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Restore-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Restore-ADObject
		</command:name>
		<maml:description>
			<maml:para>Stellt ein Active Directory-Objekt wieder her.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Restore</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Restore-ADObject&quot; stellt ein gelöschtes Active Directory-Objekt wieder her. 

Der NewName-Parameter gibt den neuen Namen für das wiederhergestellte Objekt an. Wenn der NewName-Parameter nicht angegeben wird, wird der Wert des Active Directory-Attributs mit dem LDAP-Anzeigenamen &quot;msDS-lastKnownRDN&quot; verwendet. Der TargetPath-Parameter gibt den neuen Speicherort für das wiederhergestellte Objekt an. Wenn der TargetPath-Parameter nicht angegeben wird, wird der Wert des Active Directory-Attributs mit dem LDAP-Anzeigenamen &quot;lastKnownParent&quot; verwendet.

Der Identity-Parameter gibt das wiederherzustellende Active Directory-Objekt an. Sie können ein Objekt durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localObject&gt;, oder über die Pipeline ein Kontoobjekt an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADObject&quot; zum Abrufen eines gelöschten Objekts verwenden, indem Sie den IncludeDeletedObjects-Parameter angeben. Anschließend können Sie das Objekt über die Pipeline an das Cmdlet &quot;Restore-ADObject&quot; übergeben. 

Hinweis: Sie können die definierten Namen gelöschter Objekte mit dem Cmdlet &quot;Get-ADObject&quot; und durch Angeben des -IncludedeDeletedObjects-Parameters abrufen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restore-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -NewName &quot;SaraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TargetPath</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Speicherort für das Objekt an. Bei diesem Speicherort muss es sich um den Pfad zu einem Container oder einer Organisationseinheit handeln.

Im folgenden Beispiel wird gezeigt, wie mithilfe des definierten Namens ein Zielpfad angegeben wird.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthtype</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthtype</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Namen des Objekts an. Dieser Parameter legt die Name-Eigenschaft des Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;name&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Namenszeichenfolge festgelegt wird.
  -NewName &quot;SaraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TargetPath</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Speicherort für das Objekt an. Bei diesem Speicherort muss es sich um den Pfad zu einem Container oder einer Organisationseinheit handeln.

Im folgenden Beispiel wird gezeigt, wie mithilfe des definierten Namens ein Zielpfad angegeben wird.
  -TargetPath &quot;ou=sales,dc=corp,dc=contoso,dc=com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das wiederhergestellte Objekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;613dc90a-2afd-49fb-8bd8-eac48c6ab59f&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt das ADObject wieder her und legt das msDS-LastKnownRDN-Attribut des gelöschten Objekts auf  den -NewName-Parameter fest und legt &quot;lastKnownRDN&quot; auf den -TargetPath-Parameter fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject -Identity &quot;CN=Kim Abercrombie\0ADEL:613dc90a-2afd-49fb-8bd8-eac48c6ab59f,CN=Deleted Objects,DC=FABRIKAM,DC=COM&quot; -NewName &quot;Kim Abercrombie&quot; -TargetPath &quot;OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt das ADObject wieder her und legt das msDS-LastKnownRDN-Attribut des gelöschten Objekts auf  den -NewName-Parameter fest und legt &quot;lastKnownRDN&quot; auf den -TargetPath-Parameter fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'samaccountname -eq &quot;kimabercrombie&quot;' -IncludeDeletedObjects | Restore-ADObject</dev:code>
  			<dev:remarks>
  			        <maml:para>Sucht einen gelöschten Benutzer, dessen samaccountname &quot;kimabercrombie&quot; lautet, und stellt diesen wieder her.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Restore-ADObject  -Identity '6bb3bfe9-4355-48ee-b3b6-4fda6917d31d' -Server server1:50000 </dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt ein AD-LDS-Objekt mithilfe des ObjectGUID wieder her.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADObject -Filter 'msds-lastknownrdn -eq &quot;user1&quot;'  -Server server1:50000 -IncludeDeletedObjects -SearchBase &quot;o=app1,c=us&quot; | Restore-ADObject </dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt ein AD-LDS-Objekt mit msds-LastKnownRDN wieder her.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144988</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Search-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Ruft Active Directory-Benutzer-, -Computer- oder -Dienstkonten ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Search</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Search-ADAccount&quot; ruft mindestens ein Benutzer-, Computer- oder Dienstkonto ab, das die von den Parametern angegebenen Kriterien erfüllt. Die Suchkriterien schließen den Konto- und Kennwortstatus ein. Sie können z. B. nach allen abgelaufenen Konten suchen, indem Sie den AccountExpired-Parameter angeben. Entsprechend können Sie nach allen Konten mit einem abgelaufenen Kennwort suchen, indem Sie den PasswordExpired-Parameter angeben. Sie können die Suche mit dem UsersOnly-Parameter auf Benutzerkonten beschränken. Entsprechend können Sie mit dem ComputersOnly-Parameter angeben, dass das Cmdlet nur Computerkonten abruft.

Einige Suchparameter, z. B. &quot;AccountExpiring&quot; und &quot;AccountInactive&quot;, verwenden eine Standardzeit, die Sie durch Angeben des DateTime-Parameters oder des TimeSpan-Parameters ändern können. Der DateTime-Parameter gibt eine eindeutige Zeit an. Der TimeSpan-Parameter gibt einen Zeitraum ab der aktuellen Uhrzeit an. Um beispielsweise nach allen Konten zu suchen, die in 10 Tagen ablaufen, geben Sie den AccountExpiring-Parameter und den TimeSpan-Parameter an und legen den Wert von &quot;TimeSpan&quot; auf &quot;10.00:00:00&quot; fest. Um nach allen Konten zu suchen, die vor dem 31. Dezember 2012 ablaufen, legen Sie den DateTime-Parameter auf &quot;31.12.2012&quot; fest. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountDisabled</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die deaktiviert sind. Ein Konto wird deaktiviert, wenn die ADAccount Enabled-Eigenschaft auf &quot;false&quot; festgelegt wird. 

Im folgenden Beispiel wird gezeigt, wie dieser AccountDisabled-Parameter angegeben wird.
  -AccountDisabled</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpired</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die abgelaufen sind. Ein Konto ist abgelaufen, wenn die AccountExpirationDate-Eigenschaft von &quot;ADAccount&quot; auf eine Uhrzeit in der Vergangenheit festgelegt ist. Der LDAP-Anzeigename (ldapDisplayName) für die AccountExpirationDate-Eigenschaft lautet &quot;accountExpires&quot;.

Im folgenden Beispiel wird gezeigt, wie der AccountExpired-Parameter angegeben wird.
  -AccountExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpiring</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die in einem bestimmten Zeitraum oder nach einer angegebenen Uhrzeit ablaufen. Um einen Zeitraum anzugeben, verwenden Sie den AccountExpiring-Parameter mit dem TimeSpan-Parameter. Um eine bestimmte Uhrzeit anzugeben, verwenden Sie den AccountExpiring-Parameter mit dem DateTime-Parameter. 

Im folgenden Beispiel wird gezeigt, wie Sie eine Suche nach Konten angeben, die in den nächsten 10 Tagen ablaufen.
  -AccountExpiring -TimeSpan 10

Im folgenden Beispiel wird gezeigt, wie Sie eine Suche nach Konten angeben, die vor dem 18. Juni 2012 um 14:00 Uhr ablaufen.
  -AccountExpiring -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>Gibt einen genauen Zeitwert für Search-ADAccount-Parameter an, z. B. &quot;AccountExpiring&quot;, &quot;AccountInactive&quot; und &quot;PasswordExpiring&quot;.

Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von Mitternacht Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Wert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt.
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie der AccountExpiring-Parameter auf einen DateTime-Wert von 18. Juni 2012, 2:00:00, festgelegt wird.

  -AccountExpiring -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>Legt ein Zeitintervall fest. Dieser Parameter wird verwendet, um einen Zeitwert für Search-ADAccount-Parameter wie &quot;AccountExpiring&quot; anzugeben.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -TimeSpan &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
   -TimeSpan &quot;-2&quot;
  Festlegen der Zeit auf 4 Stunden
    -TimeSpan &quot;4:00&quot;

Um beispielsweise nach allen Konten zu suchen, die in 10 Tagen ablaufen, geben Sie den AccountExpiring-Parameter und den TimeSpan-Parameter wie folgt an.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountInactive</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nach Konten gesucht wird, von denen innerhalb eines bestimmten Zeitraums oder seit einer bestimmten Uhrzeit keine Anmeldung erfolgt ist. Um einen Zeitraum anzugeben, verwenden Sie den TimeSpan-Parameter. Um eine genaue Uhrzeit anzugeben, verwenden Sie den DateTime-Parameter. Beachten Sie, dass dieses Attribut nur verwendet wird, wenn sich die Domäne auf der Windows Server 2003-Domänenfunktionsebene befindet. Daher kann dieser Parameter nur in diesem Modus verwendet werden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter für die Suche nach Konten festgelegt wird, die die vergangenen 10 Tage inaktiv waren.
  -AccountInactive -TimeSpan 10

Im folgenden Beispiel wird gezeigt, wie dieser Parameter für die Suche nach Konten festgelegt wird, die seit dem 16. Juli 2008, 00:00 Uhr, inaktiv waren.
  -AccountInactive -DateTime &quot;16.07.2008&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>Gibt einen genauen Zeitwert für Search-ADAccount-Parameter an, z. B. &quot;AccountExpiring&quot;, &quot;AccountInactive&quot; und &quot;PasswordExpiring&quot;.

Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von Mitternacht Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Wert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt.
  &quot;2000-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie der AccountExpiring-Parameter auf einen DateTime-Wert von 18. Juni 2012, 2:00:00, festgelegt wird.

  -AccountExpiring -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>Legt ein Zeitintervall fest. Dieser Parameter wird verwendet, um einen Zeitwert für Search-ADAccount-Parameter wie &quot;AccountExpiring&quot; anzugeben.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -TimeSpan &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
   -TimeSpan &quot;-2&quot;
  Festlegen der Zeit auf 4 Stunden
    -TimeSpan &quot;4:00&quot;

Um beispielsweise nach allen Konten zu suchen, die in 10 Tagen ablaufen, geben Sie den AccountExpiring-Parameter und den TimeSpan-Parameter wie folgt an.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockedOut</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die gesperrt sind.

Im folgenden Beispiel wird eine Suche nach gesperrten Konten veranschaulicht.
  -LockedOut</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordExpired</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die ein abgelaufenes Kennwort haben. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -PasswordExpired</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Search-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt eine Suche nach Konten an, die über ein Kennwort verfügen, das nicht abläuft.

Im folgenden Beispiel wird gezeigt, wie der PasswordNeverExpires-Parameter angegeben wird.
   -PasswordNeverExpires </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComputersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultPageSize</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResultSetSize</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchBase</maml:name>
				<maml:description>
					<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SearchScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Base</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">OneLevel</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Subtree</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UsersOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountDisabled</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die deaktiviert sind. Ein Konto wird deaktiviert, wenn die ADAccount Enabled-Eigenschaft auf &quot;false&quot; festgelegt wird. 

Im folgenden Beispiel wird gezeigt, wie dieser AccountDisabled-Parameter angegeben wird.
  -AccountDisabled</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpired</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die abgelaufen sind. Ein Konto ist abgelaufen, wenn die AccountExpirationDate-Eigenschaft von &quot;ADAccount&quot; auf eine Uhrzeit in der Vergangenheit festgelegt ist. Der LDAP-Anzeigename (ldapDisplayName) für die AccountExpirationDate-Eigenschaft lautet &quot;accountExpires&quot;.

Im folgenden Beispiel wird gezeigt, wie der AccountExpired-Parameter angegeben wird.
  -AccountExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpiring</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die in einem bestimmten Zeitraum oder nach einer angegebenen Uhrzeit ablaufen. Um einen Zeitraum anzugeben, verwenden Sie den AccountExpiring-Parameter mit dem TimeSpan-Parameter. Um eine bestimmte Uhrzeit anzugeben, verwenden Sie den AccountExpiring-Parameter mit dem DateTime-Parameter. 

Im folgenden Beispiel wird gezeigt, wie Sie eine Suche nach Konten angeben, die in den nächsten 10 Tagen ablaufen.
  -AccountExpiring -TimeSpan 10

Im folgenden Beispiel wird gezeigt, wie Sie eine Suche nach Konten angeben, die vor dem 18. Juni 2012 um 14:00 Uhr ablaufen.
  -AccountExpiring -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountInactive</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass nach Konten gesucht wird, von denen innerhalb eines bestimmten Zeitraums oder seit einer bestimmten Uhrzeit keine Anmeldung erfolgt ist. Um einen Zeitraum anzugeben, verwenden Sie den TimeSpan-Parameter. Um eine genaue Uhrzeit anzugeben, verwenden Sie den DateTime-Parameter. Beachten Sie, dass dieses Attribut nur verwendet wird, wenn sich die Domäne auf der Windows Server 2003-Domänenfunktionsebene befindet. Daher kann dieser Parameter nur in diesem Modus verwendet werden.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter für die Suche nach Konten festgelegt wird, die die vergangenen 10 Tage inaktiv waren.
  -AccountInactive -TimeSpan 10

Im folgenden Beispiel wird gezeigt, wie dieser Parameter für die Suche nach Konten festgelegt wird, die seit dem 16. Juli 2008, 00:00 Uhr, inaktiv waren.
  -AccountInactive -DateTime &quot;16.07.2008&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComputersOnly</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass nur Computerkonten gesucht werden sollen.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ComputersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>Gibt einen genauen Zeitwert für Search-ADAccount-Parameter an, z. B. &quot;AccountExpiring&quot;, &quot;AccountInactive&quot; und &quot;PasswordExpiring&quot;.

Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von Mitternacht Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Wert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt.
  &quot;2000-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie der AccountExpiring-Parameter auf einen DateTime-Wert von 18. Juni 2012, 2:00:00, festgelegt wird.

  -AccountExpiring -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">DateTime</command:parameterValue>
			<dev:type>
				<maml:name>DateTime</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockedOut</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die gesperrt sind.

Im folgenden Beispiel wird eine Suche nach gesperrten Konten veranschaulicht.
  -LockedOut</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordExpired</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die ein abgelaufenes Kennwort haben. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -PasswordExpired</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt eine Suche nach Konten an, die über ein Kennwort verfügen, das nicht abläuft.

Im folgenden Beispiel wird gezeigt, wie der PasswordNeverExpires-Parameter angegeben wird.
   -PasswordNeverExpires </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultPageSize</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der Objekte an, die für eine Active Directory-Domänendienste-Abfrage auf einer Seite enthalten sein sollen. 

Der Standardwert ist 256 Objekte pro Seite. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ResultPageSize 500</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResultSetSize</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Anzahl von Objekten an, die für eine Active Directory-Domänendienste-Abfrage zurückgegeben werden sollen. Wenn Sie alle Objekte empfangen möchten, legen Sie diesen Parameter auf $null (NULL-Wert) fest. Sie können die Abfrage und die Rückgabe von Objekten mithilfe von STRG+C beenden. 
Der Standardwert ist &quot;$null&quot;. 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass Sie alle zurückgegebenen Objekte empfangen.
  -ResultSetSize $null</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchBase</maml:name>
			<maml:description>
				<maml:para>Gibt einen Active Directory-Pfad an, unter dem gesucht werden soll. 

Wenn Sie ein Cmdlet über ein Active Directory-Anbieterlaufwerk ausführen, ist der Standardwert dieses Parameters der aktuelle Pfad des Laufwerks.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD DS-Ziel ausführen, ist der Standardwert dieses Parameters der Standardnamenskontext der Zieldomäne.

Wenn Sie ein Cmdlet außerhalb eines Active Directory-Anbieterlaufwerks für ein AD LDS-Ziel ausführen, ist der Standardwert der Standardnamenskontext der LDS-Zielinstanz, wenn diese durch Festlegen der msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz angegeben wurde.  Wenn kein Standardnamenskontext für die AD LDS-Zielinstanz angegeben wurde, verfügt dieser Parameter über keinen Standardwert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Suche unter einer Organisationseinheit festgelegt wird.
  -SearchBase &quot;ou=mfg,dc=noam,dc=corp,dc=contoso,dc=com&quot; 

Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und eine Verbindung mit einem GC-Port besteht, werden alle Partitionen durchsucht. Wenn der Wert des SearchBase-Parameters auf eine leere Zeichenfolge festgelegt ist und keine Verbindung mit einem GC-Port besteht, wird ein Fehler ausgelöst.
Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine leere Zeichenfolge festgelegt wird.   -SearchBase &quot;&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SearchScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Bereich einer Active Directory-Suche an. Mögliche Werte für diesen Parameter lauten:
  Base oder 0
  OneLevel oder 1
  Subtree oder 2

Mit einer Base-Abfrage wird nur der aktuelle Pfad oder das aktuelle Objekt durchsucht. Mit einer OneLevel-Abfrage werden die unmittelbar untergeordneten Elemente des Pfads bzw. Objekts durchsucht. Mit einer Subtree-Abfrage werden der aktuelle Pfad oder das aktuelle Objekt und alle untergeordneten Elemente des Pfads bzw. Objekts durchsucht.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Teilstruktursuche festgelegt wird.
  -SearchScope Subtree</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADSearchScope</command:parameterValue>
			<dev:type>
				<maml:name>ADSearchScope</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Subtree</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Base</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>OneLevel</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Subtree</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>Legt ein Zeitintervall fest. Dieser Parameter wird verwendet, um einen Zeitwert für Search-ADAccount-Parameter wie &quot;AccountExpiring&quot; anzugeben.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -TimeSpan &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
   -TimeSpan &quot;-2&quot;
  Festlegen der Zeit auf 4 Stunden
    -TimeSpan &quot;4:00&quot;

Um beispielsweise nach allen Konten zu suchen, die in 10 Tagen ablaufen, geben Sie den AccountExpiring-Parameter und den TimeSpan-Parameter wie folgt an.

  -AccountExpiring -TimeSpan &quot;10&quot;
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UsersOnly</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass nur nach Benutzerkonten gesucht wird. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -UsersOnly</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein Kontoobjekt zurück, das die von den Parametern festgelegten Bedingungen erfüllt.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name            ObjectClass
----            -----------
Guest           user
krbtgt          user
krbtgt_51399    user
AmyAl-LPTOP     computer
DeepakAn-DSKTOP computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle deaktivierten Benutzer-, Computer- und Dienstkonten zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -UsersOnly | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass
----         -----------
Guest        user
krbtgt       user
krbtgt_51399 user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle deaktivierten Benutzer zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name            ObjectClass
----            -----------
Greg Chapman    user
Claus Hansen    user
Tomasz Bochenek user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle abgelaufenen Benutzer-, Computer- und Dienstkonten zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -TimeSpan 6.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Iulian Calinov user
Roman Lembeck  user
Thorsten Scholl     user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Benutzer-, Computer- und Dienstkonten zurück, die in den nächsten 6 Tagen ablaufen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountInactive -TimeSpan 90.00:00:00 | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        ObjectClass
----                        -----------
FABRIKAM-RODC1              computer
Guest                       user
krbtgt                      user
krbtgt_51399                user
Almudena Benito             user
Aaron Con                   user
Adina Hagege                user
Aaron Nicholls              user
Aaron M. Painter            user
Jeff Phillips               user
Flemming Pedersen           user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Konten zurück, die in den letzten 90 Tagen inaktiv waren.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordExpired | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name                        ObjectClass
----                        -----------
Stan Orme                   user
Danni Ortman                user
Matej Potokar               user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Konten zurück, deren Kennwort abgelaufen ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -PasswordNeverExpires | FT Name,ObjectClass -A
</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Guest          user
Toni Poe       user
Anders Riis    user
Fabien Hernoux user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Konten zurück, deren Kennwort nie abläuft.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 8 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -LockedOut | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
Toni Poe       user
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle gesperrten Konten zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 9 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountDisabled -ComputersOnly | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name           ObjectClass
----           -----------
TPOE-PC1       computer
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle deaktivierten Computerkonten zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 10 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-ADAccount -AccountExpiring -DateTime &quot;3/18/2009&quot; | FT Name,ObjectClass -A</dev:code>
  			<dev:remarks>
 				<maml:para>Name         ObjectClass
----         -----------
Anders Riis  user

</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle Konten zurück, die am 18. März 2009 ablaufen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 11 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Search-AdAccount -AccountDisabled -SearchBase &quot;DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Enabled               : False
Name                  : SanjayPatel
UserPrincipalName     :
PasswordNeverExpires  :
LockedOut             : False
ObjectGUID            : d671de28-6e40-42a7-b32c-63d336de296d
ObjectClass           : user
SID                   : S-1-510474493-936115905-2231798853-1260534229-4171027843-767619944
PasswordExpired       : False
LastLogonDate         :
DistinguishedName     : CN=SanjayPatel,OU=AccountDeptOU,DC=AppNC
AccountExpirationDate :</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Gibt alle deaktivierten Benutzer, Computer und Dienstkonten in der LDS-Instanz &quot;FABRIKAM-SRV1:60000&quot; zurück.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144989</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Unlock-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountControl</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADAccountPassword</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADAccountResultantPasswordReplicationPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADObject
		</command:name>
		<maml:description>
			<maml:para>Ändert ein Active Directory-Objekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADObject</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADObject&quot; werden die Eigenschaften eines Active Directory-Objekts geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.  

Der Identity-Parameter gibt das zu ändernde Active Directory-Objekt an. Sie können ein Objekt durch den definierten Namen (DN) oder GUID identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localObject&gt;, oder über die Pipeline ein Kontoobjekt an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADObject&quot; verwenden, um ein Objekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADObject&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Objekt zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Objekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Objekts festgelegt haben, das geändert wurde, werden durch das Cmdlet &quot;Set-ADObject&quot; die gleichen Änderungen am ursprünglichen Objekt vorgenommen. Rufen Sie mit dem Get-ADObject-Objekt eine Kopie des zu ändernden Objekts ab. Der Identity-Parameter ist nicht zulässig, wenn Sie den Instance-Parameter verwenden. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die DisplayName-Eigenschaft eines Objekts mithilfe von drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des DisplayName-Parameters
 – Durch Übergeben eines Objekts über die Pipeline und Angeben des DisplayName-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die DisplayName-Eigenschaft für das SecurityLevel2AccessGroup-Objekt mit dem Identity-Parameter und dem DisplayName-Parameter. 

 Set-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; -DisplayName &quot;Security Level 2&quot;

Methode 2: Ändern Sie die DisplayName-Eigenschaft für das SecurityLevel2AccessGroup-Objekt durch Übergeben des SecurityLevel2AccessGroup-Objekts über die Pipeline und Angeben des DisplayName-Parameters.

 Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot; | Set-ADObject -DisplayName &quot;Security Level 2&quot;

Methode 3: Ändern Sie die DisplayName-Eigenschaft für das SecurityLevel2AccessGroup-Objekt mit der Windows PowerShell-Befehlszeile, um eine lokale Instanz des SecurityLevel2AccessGroup-Objekts zu ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $adobject = Get-ADObject -Identity &quot;SecurityLevel2AccessGroup&quot;
 $adobject.DisplayName = &quot;Security Level 2&quot; 
 Set-ADObject -Instance $adobject. 

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADObject</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Active Directory-Objekts an, mit dem das tatsächliche Active Directory-Objekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Active Directory-Objekte aktualisieren, die mit dem Cmdlet &quot;Get-ADObject&quot; abgerufen wurden.  Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADObject&quot; eine Instanz des Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADObject&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $objectInstance.Description = &quot;Neue Beschreibung&quot;
Schritt 3: Speichern Sie die Änderungen am Objekt.
    Set-ADObject -Instance $objectInstance </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Active Directory-Objekts an, mit dem das tatsächliche Active Directory-Objekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Active Directory-Objekte aktualisieren, die mit dem Cmdlet &quot;Get-ADObject&quot; abgerufen wurden.  Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADObject&quot; eine Instanz des Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADObject&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $objectInstance = Get-ADObject -Identity  &quot;CN=someObject, DC=contoso,DC=com&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $objectInstance.Description = &quot;Neue Beschreibung&quot;
Schritt 3: Speichern Sie die Änderungen am Objekt.
    Set-ADObject -Instance $objectInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADObject</command:parameterValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Active Directory-Objekt empfangen. Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADOrganizationalUnit
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

Ein Objekt, das mit dem Cmdlet &quot;Get-ADObject&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Objekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Description 'Distribution List of Antonio Alwan Direct Reports'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Description-Eigenschaft des Objekts mit dem DistinguishedName &quot;CN=AntonioAl Direct Reports,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject 'CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM' -Add @{siteList='CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM'} -Partition 'CN=Configuration,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt die Site &quot;CN=BO3,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot; der siteList-Eigenschaft für das Objekt mit dem DistinguishedName &quot;CN=DEFAULTIPSITELINK,CN=IP,CN=Inter-Site Transports,CN=Sites,CN=Configuration,DC=FABRIKAM,DC=COM&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Add @{url=$urlValues}</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt zwei neue URLs zur urlValues-Eigenschaft im Objekt mit dem objectGuid &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$urlValues = @()
$urlValues += &quot;www.contoso.com&quot;
$urlValues += &quot;www.fabrikam.com&quot;

Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Replace @{url=$urlValues;description=&quot;Antonio Alwan&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Ersetzt die alten Werte des mehrwertigen Attributs &quot;url&quot; durch die neuen Werte und legt den Wert des Attributs &quot;description&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADObject &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Remove @{url=&quot;www.contoso.com&quot;} -Replace @{description=&quot;Antonio Alwan (European Manager)&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt den angegebenen Wert aus dem Attribut &quot;url&quot; und legt den Wert des Attributs &quot;description&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$myComp = Get-ADObject -identity &quot;cdadd380-d3a8-4fd1-9d30-5cf72d94a056&quot; -Properties &quot;userAccountControl&quot;,&quot;description&quot;

#Now set the new account control using powershell bitwise OR operation (-bor) and set description
$myComp.userAccountControl = $myComp.userAccountControl -bor 50
$myComp.description = &quot;Setting a new UAC on the object&quot;

#Save the changes
Set-ADObject -Instance $myComp</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt ein neues UAC-Bit für ein Objekt fest, indem das Attribut &quot;userAccountControl&quot; aktualisiert und der Wert des Attributs &quot;description&quot; festgelegt wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adobject &quot;CN=InternalApps,DC=AppNC&quot; -protectedFromAccidentalDeletion $true -server &quot;FABRIKAM-SRV1:60000&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt fest, dass der Container &quot;CN=InternalApps,DC=AppNC&quot; in einer LDS-Instanz vor versehentlichem Löschen geschützt wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144990</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADObject</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADUser
		</command:name>
		<maml:description>
			<maml:para>Ändert einen Active Directory-Benutzer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADUser</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADUser&quot; werden die Eigenschaften eines Active Directory-Benutzers geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.

Der Identity-Parameter gibt den zu ändernden Active Directory-Benutzer an. Sie können einen Benutzer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localUserObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADUser&quot; verwenden, um ein Benutzerobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADUser&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Benutzerobjekt zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Objekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Benutzerobjekts festgelegt haben, das geändert wurde, werden durch das Cmdlet &quot;Set-ADUser&quot; am ursprünglichen Benutzerobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADUser-Objekt eine Kopie des zu ändernden Objekts ab. Der Identity-Parameter ist nicht zulässig, wenn Sie den Instance-Parameter verwenden. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die Manager-Eigenschaft eines Benutzerobjekts mithilfe von drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des Manager-Parameters
 – Durch Übergeben eines Benutzerobjekts über die Pipeline und Angeben des Manager-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die Manager-Eigenschaft für den Benutzer &quot;saraHettich&quot; mit dem Identity-Parameter und dem Manager-Parameter. 

 Set-ADUser -Identity &quot;saraHettich&quot; -Manager &quot;FlorianVoss&quot;

Methode 2: Ändern Sie die Manager-Eigenschaft für den Benutzer &quot;saraHettich&quot; durch das Übergeben des Benutzers &quot;saraHettich&quot; über die Pipeline und Angeben des Manager-Parameters.

 Get-ADUser -Identity &quot;saraHettich&quot; | Set-ADUser -Manager &quot;FlorianVoss&quot;

Methode 3: Ändern Sie die Manager-Eigenschaft für den Benutzer &quot;saraHettich&quot; mit der Windows PowerShell-Befehlszeile, um eine lokale Instanz des Benutzers &quot;saraHettich&quot; zu ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $user = Get-ADUser -Identity &quot;saraHettich&quot;
 $user.Manager = &quot;FlorianVoss&quot; 
 Set-ADUser -Instance $user. 

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Company</maml:name>
				<maml:description>
					<maml:para>Gibt das Unternehmen des Benutzers an. Dieser Parameter legt die Company-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;company&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Company &quot;Contoso&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Department</maml:name>
				<maml:description>
					<maml:para>Gibt die Abteilung des Benutzers an. Dieser Parameter legt die Department-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;department&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Department &quot;Development&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Division</maml:name>
				<maml:description>
					<maml:para>Gibt den Geschäftsbereich des Benutzers an. Dieser Parameter legt die Division-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;division&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Division &quot;Software&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmailAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die E-Mail-Adresse des Benutzers an. Dieser Parameter legt die EmailAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mail&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmailAddress &quot;sarahettich@contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeID</maml:name>
				<maml:description>
					<maml:para>Gibt die Mitarbeiter-ID des Benutzers an. Dieser Parameter legt die EmployeeID-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeID&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmployeeID  &quot;A123456&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>EmployeeNumber</maml:name>
				<maml:description>
					<maml:para>Gibt die Mitarbeiternummer des Benutzers an. Dieser Parameter legt die EmployeeNumber-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeNumber&quot;. 

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Fax</maml:name>
				<maml:description>
					<maml:para>Gibt die Faxnummer des Benutzers an. Dieser Parameter legt die Fax-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;facsimileTelephoneNumber&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GivenName</maml:name>
				<maml:description>
					<maml:para>Gibt den Vornamen des Benutzers an. Dieser Parameter legt die GivenName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;givenName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -givenName &quot;Sanjay&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDirectory</maml:name>
				<maml:description>
					<maml:para>Gibt das Stammverzeichnis eines Benutzers an. Dieser Parameter legt die HomeDirectory-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDirectory&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDirectory &quot;\\users\saraHettichHomeDir&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomeDrive</maml:name>
				<maml:description>
					<maml:para>Gibt ein Laufwerk an, das dem von der HomeDirectory-Eigenschaft definierten UNC-Pfad zugeordnet ist. Der Laufwerkbuchstabe wird als &quot;&lt;Laufwerkbuchstabe&gt;:&quot; angeben, wobei &lt;Laufwerkbuchstabe&gt; den Buchstaben für das zuzuordnende Laufwerk angibt. &lt;Laufwerkbuchstabe&gt; muss ein einziger Großbuchstabe sein, und der Doppelpunkt ist erforderlich. Dieser Parameter legt die HomeDrive-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDrive&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDrive &quot;D:&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die private Telefonnummer des Benutzers an. Dieser Parameter legt die HomePhone-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;homePhone&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Initials</maml:name>
				<maml:description>
					<maml:para>Gibt die Initialen an, die zum Namen des Benutzers gehören. Mit diesem Wert kann der Anfangsbuchstabe des zweiten Vornamens des Benutzers angegeben werden. Dieser Parameter legt die Initials-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;initials&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Initials &quot;L&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LogonWorkstations</maml:name>
				<maml:description>
					<maml:para>Gibt die Computer an, auf die der Benutzer zugreifen kann. Erstellen Sie eine durch Trennzeichen getrennte Liste, um mehrere Computer anzugeben. Ein Computer kann durch den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) oder den DNS-Hostnamen des Computers identifiziert werden. Der SAM-Kontoname ist mit dem NetBIOS-Namen des Computers identisch.

Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;userWorkStations&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mit dem SAMAccountName-Wert (NetBIOS-Name) und dem DNSHostName-Wert festgelegt wird.
  -LogonWorkstations &quot;saraHettichDesktop,saraHettichLapTop,projectA.corp.contoso.com&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Manager</maml:name>
				<maml:description>
					<maml:para>Gibt den Manager des Benutzers an. Dieser Parameter legt die Manager-Eigenschaft eines Benutzers fest. Dieser Parameter wird festgelegt, indem einer der folgenden Eigenschaftswerte bereitgestellt wird.  Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;manager&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Manager sarahettich </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MobilePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die Mobiltelefonnummer des Benutzers an. Dieser Parameter legt die MobilePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mobile&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Office</maml:name>
				<maml:description>
					<maml:para>Gibt die Büroanschrift oder den Geschäftssitz des Benutzers an. Dieser Parameter legt die Office-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;office&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Office &quot;D1042&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OfficePhone</maml:name>
				<maml:description>
					<maml:para>Gibt die dienstliche Telefonnummer des Benutzers an. Dieser Parameter legt die OfficePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;telephoneNumber&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OfficePhone &quot;+1 (999) 555 1212&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Organization</maml:name>
				<maml:description>
					<maml:para>Gibt die Organisation des Benutzers an. Dieser Parameter legt die Organization-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;o&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Organization &quot;Accounting&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OtherName</maml:name>
				<maml:description>
					<maml:para>Gibt zusätzlich zum Vornamen und Nachnamen eines Benutzers einen weiteren Namen an, z. B. den zweiten Vornamen des Benutzers. Dieser Parameter legt die OtherName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;middleName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OtherName &quot;Peter&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>POBox</maml:name>
				<maml:description>
					<maml:para>Gibt die Postfachnummer des Benutzers an. Dieser Parameter legt die POBox-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postOfficeBox&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -POBox  &quot;25662&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProfilePath</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zum Profil des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ProfilePath-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;profilePath&quot;.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter auf einen lokalen Pfad und auf einen UNC-Pfad festgelegt wird.    -ProfilePath &quot;E:\users\profiles\saraHettich&quot;
   -ProfilePath &quot;\\users\profiles\saraHettich&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zum Anmeldeskript des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ScriptPath-Eigenschaft des Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;scriptPath&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -ScriptPath &quot;\\logonScripts\sarahettichLogin&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SmartcardLogonRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für die Anmeldung eine Smartcard erforderlich ist. Dieser Parameter legt die SmartCardLoginRequired-Eigenschaft für einen Benutzer fest. Dieser Parameter legt auch das ADS_UF_SMARTCARD_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für die Anmeldung beim Konto eine Smartcard erforderlich ist.
  -SmartCardLogonRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die Anschrift des Benutzers an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;streetAddress&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Surname</maml:name>
				<maml:description>
					<maml:para>Gibt den Nachnamen oder Zunamen des Benutzers an. Dieser Parameter legt die Surname-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;sn&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Surname &quot;Patel&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Title</maml:name>
				<maml:description>
					<maml:para>Gibt den Titel des Benutzers an. Dieser Parameter legt die Title-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;title&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Title &quot;Manager&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADUser</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt ein ADUser-Objekt an, das das zu ändernde Active Directory-Benutzerobjekt angibt, sowie die Änderungen, die an diesem Objekt vorgenommen werden sollen. Wenn dieser Parameter verwendet wird, werden alle Änderungen an dem ADUser-Objekt auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden. 
Das als Wert des -Instance-Parameters angegebene ADUser-Objekt musste mit dem Cmdlet &quot;Get-ADUser&quot; abgerufen werden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die einzelne Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADUser&quot; eine Instanz des ADUser-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADUser&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $userInstance = Get-ADUser -Identity saraHettich
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $userInstance.EmailAddress = &quot;sarahettich@contoso.com&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;saraHettich&quot;.
    Set-ADUser -Instance $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Company</maml:name>
			<maml:description>
				<maml:para>Gibt das Unternehmen des Benutzers an. Dieser Parameter legt die Company-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;company&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Company &quot;Contoso&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Department</maml:name>
			<maml:description>
				<maml:para>Gibt die Abteilung des Benutzers an. Dieser Parameter legt die Department-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;department&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Department &quot;Development&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Division</maml:name>
			<maml:description>
				<maml:para>Gibt den Geschäftsbereich des Benutzers an. Dieser Parameter legt die Division-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;division&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Division &quot;Software&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmailAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die E-Mail-Adresse des Benutzers an. Dieser Parameter legt die EmailAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mail&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmailAddress &quot;sarahettich@contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeID</maml:name>
			<maml:description>
				<maml:para>Gibt die Mitarbeiter-ID des Benutzers an. Dieser Parameter legt die EmployeeID-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeID&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -EmployeeID  &quot;A123456&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>EmployeeNumber</maml:name>
			<maml:description>
				<maml:para>Gibt die Mitarbeiternummer des Benutzers an. Dieser Parameter legt die EmployeeNumber-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;employeeNumber&quot;. 

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -EmployeeNumber &quot;12345678&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Fax</maml:name>
			<maml:description>
				<maml:para>Gibt die Faxnummer des Benutzers an. Dieser Parameter legt die Fax-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;facsimileTelephoneNumber&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Fax  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GivenName</maml:name>
			<maml:description>
				<maml:para>Gibt den Vornamen des Benutzers an. Dieser Parameter legt die GivenName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;givenName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -givenName &quot;Sanjay&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDirectory</maml:name>
			<maml:description>
				<maml:para>Gibt das Stammverzeichnis eines Benutzers an. Dieser Parameter legt die HomeDirectory-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDirectory&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDirectory &quot;\\users\saraHettichHomeDir&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomeDrive</maml:name>
			<maml:description>
				<maml:para>Gibt ein Laufwerk an, das dem von der HomeDirectory-Eigenschaft definierten UNC-Pfad zugeordnet ist. Der Laufwerkbuchstabe wird als &quot;&lt;Laufwerkbuchstabe&gt;:&quot; angeben, wobei &lt;Laufwerkbuchstabe&gt; den Buchstaben für das zuzuordnende Laufwerk angibt. &lt;Laufwerkbuchstabe&gt; muss ein einziger Großbuchstabe sein, und der Doppelpunkt ist erforderlich. Dieser Parameter legt die HomeDrive-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;homeDrive&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -HomeDrive &quot;D:&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die private Telefonnummer des Benutzers an. Dieser Parameter legt die HomePhone-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;homePhone&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -HomePhone  &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Initials</maml:name>
			<maml:description>
				<maml:para>Gibt die Initialen an, die zum Namen des Benutzers gehören. Mit diesem Wert kann der Anfangsbuchstabe des zweiten Vornamens des Benutzers angegeben werden. Dieser Parameter legt die Initials-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;initials&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Initials &quot;L&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt ein ADUser-Objekt an, das das zu ändernde Active Directory-Benutzerobjekt angibt, sowie die Änderungen, die an diesem Objekt vorgenommen werden sollen. Wenn dieser Parameter verwendet wird, werden alle Änderungen an dem ADUser-Objekt auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden. 
Das als Wert des -Instance-Parameters angegebene ADUser-Objekt musste mit dem Cmdlet &quot;Get-ADUser&quot; abgerufen werden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die einzelne Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADUser&quot; eine Instanz des ADUser-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADUser&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $userInstance = Get-ADUser -Identity saraHettich
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $userInstance.EmailAddress = &quot;sarahettich@contoso.com&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;saraHettich&quot;.
    Set-ADUser -Instance $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LogonWorkstations</maml:name>
			<maml:description>
				<maml:para>Gibt die Computer an, auf die der Benutzer zugreifen kann. Erstellen Sie eine durch Trennzeichen getrennte Liste, um mehrere Computer anzugeben. Ein Computer kann durch den Kontonamen des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) oder den DNS-Hostnamen des Computers identifiziert werden. Der SAM-Kontoname ist mit dem NetBIOS-Namen des Computers identisch.

Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;userWorkStations&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter mit dem SAMAccountName-Wert (NetBIOS-Name) und dem DNSHostName-Wert festgelegt wird.
  -LogonWorkstations &quot;saraHettichDesktop,saraHettichLapTop,projectA.corp.contoso.com&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Manager</maml:name>
			<maml:description>
				<maml:para>Gibt den Manager des Benutzers an. Dieser Parameter legt die Manager-Eigenschaft eines Benutzers fest. Dieser Parameter wird festgelegt, indem einer der folgenden Eigenschaftswerte bereitgestellt wird.  Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;manager&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Manager sarahettich </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADUser</command:parameterValue>
			<dev:type>
				<maml:name>ADUser</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MobilePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die Mobiltelefonnummer des Benutzers an. Dieser Parameter legt die MobilePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;mobile&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MobilePhone  &quot;+1  (999 ) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Office</maml:name>
			<maml:description>
				<maml:para>Gibt die Büroanschrift oder den Geschäftssitz des Benutzers an. Dieser Parameter legt die Office-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;office&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Office &quot;D1042&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OfficePhone</maml:name>
			<maml:description>
				<maml:para>Gibt die dienstliche Telefonnummer des Benutzers an. Dieser Parameter legt die OfficePhone-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;telephoneNumber&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OfficePhone &quot;+1 (999) 555 1212&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Organization</maml:name>
			<maml:description>
				<maml:para>Gibt die Organisation des Benutzers an. Dieser Parameter legt die Organization-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;o&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Organization &quot;Accounting&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OtherName</maml:name>
			<maml:description>
				<maml:para>Gibt zusätzlich zum Vornamen und Nachnamen eines Benutzers einen weiteren Namen an, z. B. den zweiten Vornamen des Benutzers. Dieser Parameter legt die OtherName-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;middleName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -OtherName &quot;Peter&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>POBox</maml:name>
			<maml:description>
				<maml:para>Gibt die Postfachnummer des Benutzers an. Dieser Parameter legt die POBox-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postOfficeBox&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -POBox  &quot;25662&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProfilePath</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zum Profil des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ProfilePath-Eigenschaft des Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;profilePath&quot;.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter auf einen lokalen Pfad und auf einen UNC-Pfad festgelegt wird.    -ProfilePath &quot;E:\users\profiles\saraHettich&quot;
   -ProfilePath &quot;\\users\profiles\saraHettich&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zum Anmeldeskript des Benutzers an. Dieser Wert kann ein lokaler absoluter Pfad oder ein UNC-Pfad (Universal Naming Convention) sein. Dieser Parameter legt die ScriptPath-Eigenschaft des Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;scriptPath&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -ScriptPath &quot;\\logonScripts\sarahettichLogin&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SmartcardLogonRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für die Anmeldung eine Smartcard erforderlich ist. Dieser Parameter legt die SmartCardLoginRequired-Eigenschaft für einen Benutzer fest. Dieser Parameter legt auch das ADS_UF_SMARTCARD_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für die Anmeldung beim Konto eine Smartcard erforderlich ist.
  -SmartCardLogonRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die Anschrift des Benutzers an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;streetAddress&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Surname</maml:name>
			<maml:description>
				<maml:para>Gibt den Nachnamen oder Zunamen des Benutzers an. Dieser Parameter legt die Surname-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;sn&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Surname &quot;Patel&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Title</maml:name>
			<maml:description>
				<maml:para>Gibt den Titel des Benutzers an. Dieser Parameter legt die Title-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;title&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Title &quot;Manager&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Benutzerobjekt empfangen.

Ein Benutzerobjekt, das mit dem Cmdlet &quot;Get-ADUser&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADUser</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Benutzerobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser AntonioAl -HomePage 'http://fabrikam.com/employees/AntonioAl' -LogonWorkstations 'AntonioAl-DSKTOP,AntonioAl-LPTOP'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die HomePage-Eigenschaft des Benutzers mit dem samAccountName &quot;AntonioAL&quot; auf &quot;http://fabrikam.com/employees/AntonioAl&quot; und die LogonWorkstations-Eigenschaft auf &quot;AntonioAl-DSKTOP,AntonioAl-LPTOP&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADUser -Filter 'Name -like &quot;*&quot;' -SearchBase 'OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -Properties DisplayName | % {Set-ADUser $_ -DisplayName ($_.Surname + ' ' + $_.GivenName)}
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Benutzer im Verzeichnis ab, die sich unter der organizationalUnit &quot;OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; befinden.  Legt die DisplayName-Eigenschaft für diese Benutzerobjekte auf die Verkettung der Surname-Eigenschaft und der GivenName-Eigenschaft fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Replace @{title=&quot;director&quot;;mail=&quot;glenjohn@fabrikam.com&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die title-Eigenschaft des Benutzers mit dem samAccountName &quot;GlenJohn&quot; auf &quot;director&quot; und die mail-Eigenschaft auf &quot;glenjohn@fabrikam.com&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADUser GlenJohn -Remove @{otherMailbox=&quot;glen.john&quot;} -Add @{url=&quot;fabrikam.com&quot;} -Replace @{title=&quot;manager&quot;} -Clear description</dev:code>
  			<dev:remarks>
  			        <maml:para>Ändert das Objekt für den Benutzer mit dem samAccountName &quot;GlenJohn&quot;, indem &quot;glen.john&quot; aus der otherMailbox-Eigenschaft entfernt, &quot;fabrikam.com&quot; zur url-Eigenschaft hinzugefügt, die title-Eigenschaft durch &quot;manager&quot; ersetzt und die description-Eigenschaft gelöscht wird.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$user = Get-ADUser GlenJohn -Properties mail,department 
$user.mail = &quot;glen@fabrikam.com&quot;
$user.department = &quot;Accounting&quot;
Set-ADUser -instance $user </dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die mail-Eigenschaft und die department-Eigenschaft für das Benutzerobjekt mit dem samAccountName &quot;GlenJohn&quot; unter Verwendung des instance-Parameters fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># create a byte array for the M-F 8:00 am to 5 pm logon hours
$hours = New-Object byte[] 21
$hours[5] = 255; $hours[8] = 255; $hours[11] = 255; $hours[14] = 255; $hours[17] = 255;
$hours[6] = 1; $hours[9] = 1; $hours[12] = 1; $hours[15] = 1; $hours[18] = 1;

# create a hashtable to update the logon hours and a description
$replaceHashTable = New-Object HashTable
$replaceHashTable.Add(&quot;logonHours&quot;, $hours)
$replaceHashTable.Add(&quot;description&quot;, &quot;Sarah Davis can only logon from Monday through Friday from 8:00 AM to 5:00 PM&quot;)

# set the value of the logonHours and description attributes
Set-ADUser &quot;SarahDavis&quot; -Replace $replaceHashTable
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Benutzeranmeldestunden auf Montag bis Freitag, 8:00 Uhr bis 17:00 Uhr fest und fügt eine Beschreibung hinzu. Das logonHours-Attribut wird mit dem angegebenen Bytearray aktualisiert, und das description-Attribut wird mit der angegebenen Zeichenfolge aktualisiert.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144991</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADComputer
		</command:name>
		<maml:description>
			<maml:para>Ändert ein Active Directory-Computerobjekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADComputer</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADComputer&quot; werden die Eigenschaften eines Active Directory-Computerobjekts geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.

Der Identity-Parameter gibt den zu ändernden Active Directory-Computer an. Sie können einen Computer durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Außerdem können Sie den Identity-Parameter auf eine Objektvariable festlegen, z. B. auf $&lt;localComputerObject&gt;, oder Sie können ein Objekt über die Pipeline an den Identity-Parameter übergeben. Mit dem Cmdlet &quot;Get-ADComputer&quot; können Sie z. B. ein Computerobjekt abrufen und das Objekt anschließend über die Pipeline an das Cmdlet &quot;Set-ADComputer&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, einen Computer zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Computerobjekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Computerobjekts festgelegt haben, die geändert wurde, werden durch das Cmdlet &quot;Set-ADComputer&quot; am ursprünglichen Computerobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADComputer-Objekt eine Kopie des zu ändernden Objekts ab. Wenn Sie den Instance-Parameter angeben, sollten Sie den Identity-Parameter nicht übergeben. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die Location-Eigenschaft eines Computerobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des Location-Parameters
 – Durch Übergabe eines Computerobjekts über die Pipeline und Angabe des Location-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die Location-Eigenschaft für den Computer &quot;saraHettichLaptop&quot; mit dem Identity-Parameter und dem Location-Parameter. 

 Set-ADComputer -Identity SaraHettichLaptop -Location &quot;W4013&quot;

Methode 2: Ändern Sie die Location-Eigenschaft für den Computer &quot;saraHettichLaptop&quot;, indem Sie das Computerobjekt über die Pipeline übergeben und den Location-Parameter angeben.

 Get-ADComputer SaraHettichLaptop | Set-ADcomputer -Location &quot;W4013&quot;

Methode 3: Ändern Sie die Location-Eigenschaft für den Computer &quot;saraHettichLaptop&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz des Computerobjekts ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $computer = Get-ADcomputer saraHettichLaptop
 $computer.Location = &quot;W4013&quot;
 Set-ADComputer -Instance $computer</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DNSHostName</maml:name>
				<maml:description>
					<maml:para>Gibt den vollqualifizierten Domänennamen (FQDN) des Computers an. Dieser Parameter legt die DNSHostName-Eigenschaft für ein Computerobjekt fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;dNSHostName&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen FQDN festgelegt wird.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Gibt den Standort des Computers an, z. B. die Zimmernummer eines Büros. Dieser Parameter legt die Location-Eigenschaft eines Computers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;location&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Location &quot;Test Lab A&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystem</maml:name>
				<maml:description>
					<maml:para>Gibt einen Betriebssystemnamen an. Dieser Parameter legt die OperatingSystem-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystem&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemHotfix</maml:name>
				<maml:description>
					<maml:para>Gibt einen Betriebssystem-Hotfixnamen an. Dieser Parameter legt die operatingSystemHotfix-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;operatingSystemHotfix&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemServicePack</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des Service Pack für ein Betriebssystem an. Dieser Parameter legt die OperatingSystemServicePack-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemServicePack&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OperatingSystemVersion</maml:name>
				<maml:description>
					<maml:para>Gibt eine Betriebssystemversion an. Dieser Parameter legt die OperatingSystemVersion-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemVersion&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UserPrincipalName</maml:name>
				<maml:description>
					<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADComputer</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Computerobjekts an, mit der das tatsächliche Active Directory-Computerobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Computerobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADComputer&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADComputer&quot; eine Instanz des ADComputer-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADComputer&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $computerInstance = Get-ADComputer -Identity saraHettichDesktop
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $computerInstance.Description = &quot;Sara Hettich Computer&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;saraHettichDesktop&quot;.
    Set-ADComputer -Instance $computerInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ChangePasswordAtLogon</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SAMAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kontokennwort geändert werden kann. Dieser Parameter legt die CannotChangePassword-Eigenschaft eines Kontos fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kontokennwort geändert werden kann.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ChangePasswordAtLogon</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Kennwort während des nächsten Anmeldeversuchs geändert werden muss. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem auch die PasswordNeverExpires-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort bei der Anmeldung geändert werden muss.
  -ChangePasswordAtLogon $true </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DNSHostName</maml:name>
			<maml:description>
				<maml:para>Gibt den vollqualifizierten Domänennamen (FQDN) des Computers an. Dieser Parameter legt die DNSHostName-Eigenschaft für ein Computerobjekt fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;dNSHostName&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf einen FQDN festgelegt wird.
  -DNSHostName &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Computerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM (Security Accounts Manager)-Kontoname (sAMAccountName) 
    Beispiel: SaraHettichDesktop

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn es sich bei der angegebenen ID um einen definierten Namen handelt, wird die zu durchsuchende Partition aus diesem definierten Namen berechnet. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Computerobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=saraHettichDesktop,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Computerobjektinstanz mit dem Namen &quot;computerInstance&quot; festgelegt wird.
  -Identity   $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Computerobjekts an, mit der das tatsächliche Active Directory-Computerobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Computerobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADComputer&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADComputer&quot; eine Instanz des ADComputer-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADComputer&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $computerInstance = Get-ADComputer -Identity saraHettichDesktop
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $computerInstance.Description = &quot;Sara Hettich Computer&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;saraHettichDesktop&quot;.
    Set-ADComputer -Instance $computerInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADComputer</command:parameterValue>
			<dev:type>
				<maml:name>ADComputer</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Location</maml:name>
			<maml:description>
				<maml:para>Gibt den Standort des Computers an, z. B. die Zimmernummer eines Büros. Dieser Parameter legt die Location-Eigenschaft eines Computers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;location&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Location &quot;Test Lab A&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystem</maml:name>
			<maml:description>
				<maml:para>Gibt einen Betriebssystemnamen an. Dieser Parameter legt die OperatingSystem-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystem&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
   -OperatingSystem &quot;Windows Server 2008 Enterprise&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemHotfix</maml:name>
			<maml:description>
				<maml:para>Gibt einen Betriebssystem-Hotfixnamen an. Dieser Parameter legt die operatingSystemHotfix-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;operatingSystemHotfix&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -operatingSystemHotfix &quot;523466&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemServicePack</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des Service Pack für ein Betriebssystem an. Dieser Parameter legt die OperatingSystemServicePack-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemServicePack&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemServicePack &quot;Service Pack 2&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OperatingSystemVersion</maml:name>
			<maml:description>
				<maml:para>Gibt eine Betriebssystemversion an. Dieser Parameter legt die OperatingSystemVersion-Eigenschaft des Computerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;operatingSystemVersion&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
   -OperatingSystemVersion &quot;6.0 (6001)&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SAMAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UserPrincipalName</maml:name>
			<maml:description>
				<maml:para>Jedes Benutzerkonto verfügt über einen Benutzerprinzipalnamen (User Principal Name, UPN) im Format &lt;Benutzer&gt;@&lt;DNS-Domänenname&gt;. Bei einem UPN handelt es sich um einen Anzeigenamen, der von einem Administrator zugewiesen wird und der kürzer als der vom System verwendete definierte LDAP-Name und somit leichter zu merken ist. Der UPN ist unabhängig vom definierten Namen des Benutzerobjekts. Ein Benutzerobjekt kann daher verschoben oder umbenannt werden, ohne dass dies Auswirkungen auf den Anmeldenamen des Benutzers hat. Bei der Anmeldung mit einem UPN müssen die Benutzer im Anmeldedialogfeld keine Domäne mehr aus einer Liste auswählen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Computerobjekt empfangen.

Ein Computerobjekt, das mit dem Cmdlet &quot;Get-ADComputer&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADComputer</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Computerobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet funktioniert nicht bei einer Verbindung mit einem Port für einen globalen Katalog.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ServicePrincipalName @{Replace=&quot;MSSQLSVC/FABRIKAM-SRV1.FABRIKAM.COM:1456&quot;,&quot;MSOLAPSVC.3/FABRIKAM-SRV1.FABRIKAM.COM:analyze&quot;}</dev:code>
  			<dev:remarks>
  			        <maml:para>Ändert den SPN-Wert für einen angegebenen Computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -Location &quot;NA/HQ/Building A&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Ändert den Speicherort für einen angegebenen Computer.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADComputer &quot;FABRIKAM-SRV1&quot; -ManagedBy &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den managed-by-Attributwert für einen angegebenen Computer mithilfe des SAM-Kontonamens des Benutzers fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$comp = Get-ADComputer &quot;FABRIKAM-SRV1&quot;; $comp.Location = &quot;NA/HQ/Building A&quot;; $comp.ManagedBy = &quot;CN=SQL Administrator 01,OU=UserAccounts,OU=Managed,DC=FABRIKAM,DC=COM&quot;; Set-ADComputer -Instance $comp</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das location-Attribut und das managed-by-Attribut eines angegebenen Computers mit dem Instance-Parametersatz fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144992</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADGroup
		</command:name>
		<maml:description>
			<maml:para>Ändert eine Active Directory-Gruppe.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADGroup</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADGroup&quot; werden die Eigenschaften einer Active Directory-Gruppe geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.  

Der Identity-Parameter gibt die zu ändernde Active Directory-Gruppe an. Sie können eine Gruppe durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können den Identity-Parameter auch auf eine Objektvariable wie $&lt;localGroupObject&gt; festlegen, oder Sie können ein Gruppenobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können beispielsweise mit dem Cmdlet &quot;Get-ADGroup&quot; ein Gruppenobjekt abrufen und dieses anschließend über die Pipeline an das Cmdlet &quot;Set-ADGroup&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Gruppenobjekt zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Objekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Gruppenobjekts festgelegt haben, die geändert wurde, werden durch das Cmdlet &quot;Set-ADGroup&quot; am ursprünglichen Gruppenobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADGroup-Objekt eine Kopie des zu ändernden Objekts ab. Der Identity-Parameter ist nicht zulässig, wenn Sie den Instance-Parameter verwenden. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die Description-Eigenschaft eines Gruppenobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des Description-Parameters
 – Durch Übergabe eines Gruppenobjekts über die Pipeline und Angabe des Description-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die Description-Eigenschaft für die Gruppe &quot;SecurityLevel2Access&quot; mit dem Identity-Parameter und dem Description-Parameter. 

Set-ADGroup -Identity SecurityLevel2Access -Description &quot;Wird für die Autorisierung des Zugriffs auf Sicherheitsebene 2 verwendet.&quot;

Methode 2: Ändern Sie die Description-Eigenschaft für die Gruppe &quot;SecurityLevel2Access&quot;, indem Sie die Gruppe &quot;SecurityLevel2Access&quot; über die Pipeline übergeben und den Description-Parameter angeben.

Get-ADGroup -Identity &quot;SecurityLevel2Access&quot; | Set-ADGroup -Description &quot;Wird für die Autorisierung des Zugriffs auf Sicherheitsebene 2 verwendet.&quot;

Methode 3: Ändern Sie die &lt;property&gt;-Eigenschaft für die Gruppe &quot;SecurityLevel2Access&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz der Gruppe &quot;SecurityLevel2Access&quot; ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $group = Get-ADGroup -Identity &quot;SecurityLevel2Access&quot;
 $group.Description = &quot;Wird für die Autorisierung des Zugriffs auf Sicherheitsebene 2 verwendet.&quot; 
 Set-ADGroup -Instance $group. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupCategory</maml:name>
				<maml:description>
					<maml:para>Gibt die Kategorie der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  Distribution oder 0  
  Security oder 1 
 
Dieser Parameter legt die GroupCategory-Eigenschaft der Gruppe fest. Dieser Parameterwert legt in Kombination mit anderen Gruppenwerten das LDAP-Anzeigenamenattribut (ldapDisplayName) mit dem Namen &quot;groupType&quot; fest.

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass eine Gruppe eine Sicherheitsgruppe darstellt.
  -GroupCategory security</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GroupScope</maml:name>
				<maml:description>
					<maml:para>Gibt den Gruppenbereich der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  DomainLocal oder 0
  Global oder 1
  Universal oder 2

Dieser Parameter legt die GroupScope-Eigenschaft eines Gruppenobjekts auf den angegebenen Wert fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;groupType&quot;.

Im folgenden Beispiel werden zwei Möglichkeiten veranschaulicht, diesen Parameter auf &quot;DomainLocal&quot; festzulegen.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADGroup</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Gruppenobjekts an, mit der das tatsächliche Active Directory-Gruppenobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Gruppenobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADGroup&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADGroup&quot; eine Instanz des ADGroup-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADGroup&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $groupInstance = Get-ADGroup -Identity &quot;SaraHettichBerichte&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $groupInstance.GroupScope= &quot;Global&quot;  

Schritt 3: Speichern Sie die Änderungen an &quot;SaraHettichBerichte&quot;.
    Set-ADGroup -Instance $groupInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupCategory</maml:name>
			<maml:description>
				<maml:para>Gibt die Kategorie der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  Distribution oder 0  
  Security oder 1 
 
Dieser Parameter legt die GroupCategory-Eigenschaft der Gruppe fest. Dieser Parameterwert legt in Kombination mit anderen Gruppenwerten das LDAP-Anzeigenamenattribut (ldapDisplayName) mit dem Namen &quot;groupType&quot; fest.

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass eine Gruppe eine Sicherheitsgruppe darstellt.
  -GroupCategory security</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupCategory]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Security</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GroupScope</maml:name>
			<maml:description>
				<maml:para>Gibt den Gruppenbereich der Gruppe an. Mögliche Werte für diesen Parameter lauten:
  DomainLocal oder 0
  Global oder 1
  Universal oder 2

Dieser Parameter legt die GroupScope-Eigenschaft eines Gruppenobjekts auf den angegebenen Wert fest. Der LDAP-Anzeigename dieser Eigenschaft lautet &quot;groupType&quot;.

Im folgenden Beispiel werden zwei Möglichkeiten veranschaulicht, diesen Parameter auf &quot;DomainLocal&quot; festzulegen.
  -GroupScope DomainLocal
  -GroupScope 0</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[Microsoft.ActiveDirectory.Management.ADGroupScope]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Werte ein Active Directory-Gruppenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  Kontoname des Sicherheitskonto-Managers (SAM, Security Accounts Manager, sAMAccountName) 
    Beispiel: sarahettichberichte

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=sarahettichberichte,OU=europe,CN=users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gruppenobjektinstanz mit dem Namen &quot;ADGroupInstance&quot; festgelegt wird.
  -Identity $ADGroupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Gruppenobjekts an, mit der das tatsächliche Active Directory-Gruppenobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Gruppenobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADGroup&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADGroup&quot; eine Instanz des ADGroup-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADGroup&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $groupInstance = Get-ADGroup -Identity &quot;SaraHettichBerichte&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $groupInstance.GroupScope= &quot;Global&quot;  

Schritt 3: Speichern Sie die Änderungen an &quot;SaraHettichBerichte&quot;.
    Set-ADGroup -Instance $groupInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADGroup</command:parameterValue>
			<dev:type>
				<maml:name>ADGroup</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gruppenobjekt empfangen.

Ein Gruppenobjekt, das mit dem Cmdlet &quot;Get-ADGroup&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADGroup</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Gruppenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>set-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; -description &quot;Access Group&quot; -passthru 
</dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID        : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt die description-Eigenschaft der Gruppe &quot;AccessControl&quot; auf einer ADAM-Instanz auf &quot;Access Group&quot; fest. 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; </dev:code>
  			<dev:remarks>
  			        <maml:para>Ändert die Beschreibung aller Gruppen, deren Name mit &quot;access&quot; beginnt, über die Pipeline. 
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS adam:\DC=AppNC&gt; get-adgroup -filter 'name -like &quot;Access*&quot;' | set-adgroup -description &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; $group = get-adgroup -server localhost:60000 -Identity &quot;CN=AccessControl,DC=AppNC&quot; 
PS adam:\DC=AppNC&gt; $group.description = &quot;Access Group&quot; 
PS adam:\DC=AppNC&gt; set-adgroup -Instance $group -passthru </dev:code>
  			<dev:remarks>
 				<maml:para>DistinguishedName : CN=AccessControl,DC=AppNC 
GroupCategory     : Security 
GroupScope        : DomainLocal 
Name              : AccessControl 
ObjectClass       : group 
ObjectGUID        : d65f5e8f-36da-4390-9840-8b9fde6282fc 
SID               : S-1-510474493-936115905-2782881406-1264922549-3814061485-1557022459 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt die description-Eigenschaft der Gruppe &quot;AccessControl&quot; über den instance-Parameter fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144993</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroup</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADGroupMember</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Add-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADPrincipalGroupMembership</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADFineGrainedPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Ändert eine abgestimmte Active Directory-Kennwortrichtlinie.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADFineGrainedPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADFineGrainedPasswordPolicy&quot; werden die Eigenschaften einer abgestimmten Active Directory-Kennwortrichtlinie geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.  

Der Identity-Parameter gibt die zu ändernde abgestimmte Active Directory-Kennwortrichtlinie an. Sie können eine abgestimmte Kennwortrichtlinie durch den definierten Namen (DN), GUID bzw. Namen identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localFineGrainedPasswordPolicyObject&gt;, oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; ein abgestimmtes Kennwortrichtlinienobjekt abrufen und das Objekt anschließend über die Pipeline an das Cmdlet &quot;Set-ADFineGrainedPasswordPolicy&quot; übergeben.

Der Instance-Parameter bietet eine Möglichkeit zum Aktualisieren eines abgestimmten Kennwortrichtlinienobjekts, indem die an einer Kopie des Objekts vorgenommenen Änderungen übernommen werden. Wenn Sie den Instance-Parameter auf eine Kopie eines abgestimmten Active Directory-Kennwortrichtlinienobjekts festlegen, die geändert wurde, werden vom Cmdlet &quot;Set-ADFineGrainedPasswordPolicy&quot; dieselben Änderungen auch am ursprünglichen abgestimmten Kennwortrichtlinienobjekt vorgenommen. Rufen Sie mit dem Get-ADFineGrainedPasswordPolicy-Objekt eine Kopie des zu ändernden Objekts ab. Der Identity-Parameter ist nicht zulässig, wenn Sie den Instance-Parameter verwenden. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die Precedence-Eigenschaft eines abgestimmten Kennwortrichtlinienobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des Precedence-Parameters
 – Durch Übergabe eines abgestimmten Kennwortrichtlinienobjekts über die Pipeline und Angabe des Precedence-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die Precedence-Eigenschaft für die abgestimmte Kennwortrichtlinie &quot;Level3Policy&quot; mit dem Identity-Parameter und dem Precedence-Parameter. 

 Set-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot; -Precedence 150

Methode 2: Ändern Sie die Precedence-Eigenschaft für die abgestimmte Kennwortrichtlinie &quot;Level3Policy&quot;, indem die abgestimmte Kennwortrichtlinie &quot;Level3Policy&quot; über die Pipeline übergeben und der Precedence-Parameter angegeben wird.

 Get-ADFineGrainedPasswordPolicy -Identity &quot;Level3Policy&quot;| Set-ADFineGrainedPasswordPolicy -Precedence 150

Methode 3: Ändern Sie die Precedence-Eigenschaft für die abgestimmte Kennwortrichtlinie &quot;Level3Policy&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz der abgestimmten Kennwortrichtlinie &quot;Level3Policy&quot; ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

$fineGrainedPasswordPolicy = Get-ADFineGrainedPasswordPolicy Level3Policy
 $fineGrainedPasswordPolicy.Precedence = 150 
 Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicy</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Precedence</maml:name>
				<maml:description>
					<maml:para>Gibt einen Wert an, der die Rangfolge einer abgestimmten Kennwortrichtlinie gegenüber allen abgestimmten Kennwortrichtlinien definiert. Dieser Parameter legt die Precedence-Eigenschaft für eine abgestimmte Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-PasswordSettingsPrecedence&quot;.

Dieser Wert bestimmt, welche Kennwortrichtlinie zu verwenden ist, wenn für einen Benutzer oder eine Gruppe mehrere Kennwortrichtlinien gelten. Bei einem Konflikt hat die Kennwortrichtlinie höhere Priorität, deren Precedence-Eigenschaft den kleineren Wert aufweist. Wenn &quot;PasswordPolicy1&quot; z. B. den Precedence-Eigenschaftswert 200 und &quot;PasswordPolicy2&quot; den Precedence-Eigenschaftswert 100 aufweist, wird &quot;PasswordPolicy2&quot; verwendet. 

In der Regel werden Rangfolgenwerte für Kennwortrichtlinien als Vielfache von 10 oder 100 zugewiesen, sodass später leichter Richtlinien hinzugefügt werden können. Wenn Sie z. B. die ursprünglichen Rangfolgenwerte für Ihre Richtlinien auf 100 und 200 festgelegt haben, können Sie später eine weitere Richtlinie hinzufügen, die den Rangfolgenwert 150 aufweist. 

Wenn der angegebene Precedence-Parameter bereits einem anderen Kennwortrichtlinienobjekt zugewiesen ist, wird vom Cmdlet ein Fehler mit Abbruch zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Precedence 100</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADFineGrainedPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines abgestimmten Kennwortrichtlinienobjekts an, mit der das tatsächliche abgestimmte Active Directory-Kennwortrichtlinienobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur abgestimmte Kennwortrichtlinienobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.
 
Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; eine Instanz des ADFineGrainedPasswordPolicy-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADFineGrainedPasswordPolicy&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicyLevel2
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $fineGrainedPasswordPolicyInstance.Precedence = 250
Schritt 3: Speichern Sie die Änderungen an &quot;PasswordPolicyLevel2&quot;.
    Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Objekt für eine abgestimmte Active Directory-Kennwortrichtlinie an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Distinguished Name (distinguishedName)
    Beispiel: CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Name (name) 
    Beispiel: PasswordPolicyLevel1

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=Strenge Kennwortrichtlinie,CN=Kennworteinstellungscontainer,CN=System,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Objektinstanz für eine abgestimmte Kennwortrichtlinie mit dem Namen &quot;fineGrainedPasswordPolicyInstance&quot; festgelegt wird.
  -Identity $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines abgestimmten Kennwortrichtlinienobjekts an, mit der das tatsächliche abgestimmte Active Directory-Kennwortrichtlinienobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur abgestimmte Kennwortrichtlinienobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.
 
Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; eine Instanz des ADFineGrainedPasswordPolicy-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADFineGrainedPasswordPolicy&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $fineGrainedPasswordPolicyInstance = Get-ADFineGrainedPasswordPolicy -Identity PasswordPolicyLevel2
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $fineGrainedPasswordPolicyInstance.Precedence = 250
Schritt 3: Speichern Sie die Änderungen an &quot;PasswordPolicyLevel2&quot;.
    Set-ADFineGrainedPasswordPolicy -Instance $fineGrainedPasswordPolicyInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADFineGrainedPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Precedence</maml:name>
			<maml:description>
				<maml:para>Gibt einen Wert an, der die Rangfolge einer abgestimmten Kennwortrichtlinie gegenüber allen abgestimmten Kennwortrichtlinien definiert. Dieser Parameter legt die Precedence-Eigenschaft für eine abgestimmte Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-PasswordSettingsPrecedence&quot;.

Dieser Wert bestimmt, welche Kennwortrichtlinie zu verwenden ist, wenn für einen Benutzer oder eine Gruppe mehrere Kennwortrichtlinien gelten. Bei einem Konflikt hat die Kennwortrichtlinie höhere Priorität, deren Precedence-Eigenschaft den kleineren Wert aufweist. Wenn &quot;PasswordPolicy1&quot; z. B. den Precedence-Eigenschaftswert 200 und &quot;PasswordPolicy2&quot; den Precedence-Eigenschaftswert 100 aufweist, wird &quot;PasswordPolicy2&quot; verwendet. 

In der Regel werden Rangfolgenwerte für Kennwortrichtlinien als Vielfache von 10 oder 100 zugewiesen, sodass später leichter Richtlinien hinzugefügt werden können. Wenn Sie z. B. die ursprünglichen Rangfolgenwerte für Ihre Richtlinien auf 100 und 200 festgelegt haben, können Sie später eine weitere Richtlinie hinzufügen, die den Rangfolgenwert 150 aufweist. 

Wenn der angegebene Precedence-Parameter bereits einem anderen Kennwortrichtlinienobjekt zugewiesen ist, wird vom Cmdlet ein Fehler mit Abbruch zurückgegeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -Precedence 100</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Objekt für eine abgestimmte Kennwortrichtlinie empfangen.

Ein abgestimmtes Kennwortrichtlinienobjekt, das mit dem Cmdlet &quot;Get-ADFineGrainedPasswordPolicy&quot; abgerufen wurde und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte abgestimmte Kennwortrichtlinienobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy MyPolicy -Precedence 100 -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>Aktualisiert die Eigenschaften Precedence, LockoutDuration, LockoutObservationWindow, ComplexityEnabled, ReversibleEncryptionEnabled und MinPasswordLength für das FineGrainedPasswordPolicy-Objekt mit dem Namen &quot;MyPolicy&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADFineGrainedPasswordPolicy 'CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM' -MinPasswordLength 12
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die MinPasswordLength-Eigenschaft für das FineGrainedPasswordPolicy-Objekt mit dem DistinguishedName &quot;CN=MyPolicy,CN=Password Settings Container,CN=System,DC=FABRIKAM,DC=COM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$fgpp = Get-ADFineGrainedPasswordPolicy MyPolicy
$fgpp.LockoutObservationWindow = [TimeSpan]::Parse(&quot;0.00:15:00&quot;)
$fgpp.LockoutThreshold = 10
$fgpp.MinPasswordLength = 8
$fgpp.PasswordHistoryCount = 24
Set-ADFineGrainedPasswordPolicy -Instance $fgpp
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft das FineGrainedPasswordPolicy-Objekt mit dem Namen &quot;MyPolicy&quot; ab, aktualisiert einen Satz von Eigenschaften für das Objekt und schreibt die Änderungen dann mithilfe des Instance-Parameters zurück in das Verzeichnis.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144994</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADFineGrainedPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomain
		</command:name>
		<maml:description>
			<maml:para>Ändert eine Active Directory-Domäne.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomain</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADDomain&quot; werden die Eigenschaften einer Active Directory-Domäne geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.

Der Identity-Parameter gibt die zu ändernde Domäne an. Sie können eine Domäne durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den DNS-Domänennamen oder den NETBIOS-Namen identifizieren. Sie können den Identity-Parameter auch auf eine Objektvariable wie $&lt;localDomainObject&gt; festlegen oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADDomain&quot; ein Domänenobjekt abrufen und dieses anschließend über die Pipeline an das Cmdlet &quot;Set-ADDomain&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Domänenobjekt zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Domänenobjekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Domänenobjekts festgelegt haben, die geändert wurde, werden durch das Cmdlet &quot;Set-ADDomain&quot; am ursprünglichen Domänenobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADDomain-Objekt eine Kopie des zu ändernden Objekts ab. Wenn Sie den Instance-Parameter angeben, sollten Sie den Identity-Parameter nicht übergeben.  Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. 

In den folgenden Beispielen wird gezeigt, wie die ManagedBy-Eigenschaft eines Domänenobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des ManagedBy-Parameters
 – Durch Übergabe eines Domänenobjekts über die Pipeline und Angabe des ManagedBy-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die ManagedBy-Eigenschaft für die Domäne &quot;London&quot; mit dem Identity-Parameter und dem ManagedBy-Parameter. 

 Set-ADDomain -Identity London -ManagedBy SaraHettich

Methode 2: Ändern Sie die ManagedBy-Eigenschaft für die Domäne &quot;London&quot;, indem Sie die Domäne &quot;London&quot; über die Pipeline übergeben und den ManagedBy-Parameter angeben.

 Get-ADDomain London | Set-ADDomain -ManagedBy SaraHettich

Methode 3: Ändern Sie die ManagedBy-Eigenschaft für die Domäne &quot;London&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz der Domäne &quot;London&quot; ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $domain = Get-ADDomain London
 $domain.ManagedBy = SaraHettich 
 Set-ADDomain -Instance $domain. 
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>Ändert die Liste der in einer Domäne zulässigen DNS (Domänennamenserver)-Suffixe. Dieser Parameter legt den Wert des Attributs &quot;msDS-AllowedDNSSuffixes&quot; des domainDNS-Objekts fest. Dieser Parameter verwendet die folgende Syntax, um DNS-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 

So fügen Sie Werte hinzu:
  -AllowedDNSSuffixes @{Add=Wert1,Wert2,...}

So entfernen Sie Werte:
  -AllowedDNSSuffixes @{Remove=Wert3,Wert4,...}

So ersetzen Sie Werte:
  -AllowedDNSSuffixes @{Replace=Wert1,Wert2,...}

So löschen Sie alle Werte:
  -AllowedDNSSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um DNS-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie DNS-Suffixe für eine Domäne hinzugefügt und entfernt werden.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>Gibt die Zeit (in Tagen) an, innerhalb derer die letzte Anmeldezeit eines Kontos mit allen Domänencontrollern in der Domäne repliziert werden muss. Dieser Parameter legt die LastLogonReplicationInterval-Eigenschaft für eine Domäne fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-LogonTimeSyncInterval&quot;. Das Replikationsintervall für die letzte Anmeldung muss auf mindestens einen Tag festgelegt sein. Wenn das Replikationsintervall für die letzte Anmeldung auf einen niedrigen Wert festgelegt wird, kann dies den Aufwand bei der domänenübergreifenden Replikation erheblich vergrößern.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf zehn Tage festgelegt wird.
  -LastLogonReplicationInterval &quot;10&quot;

Hinweis: Dieser Wert ist nicht gültig, wenn der Domänenmodus auf den Wert &quot;Windows2000&quot; festgelegt wird.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Domänenobjekts an, mit der das tatsächliche Active Directory-Domänenobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Domänenobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADDomain&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADDomain&quot; eine Instanz des ADDomain-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADDomain&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $domainInstance.ManagedBy = &quot;saraHettichGruppe&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;contosoDomain&quot;.
    Set-ADDomain -Instance $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowedDNSSuffixes</maml:name>
				<maml:description>
					<maml:para>Ändert die Liste der in einer Domäne zulässigen DNS (Domänennamenserver)-Suffixe. Dieser Parameter legt den Wert des Attributs &quot;msDS-AllowedDNSSuffixes&quot; des domainDNS-Objekts fest. Dieser Parameter verwendet die folgende Syntax, um DNS-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 

So fügen Sie Werte hinzu:
  -AllowedDNSSuffixes @{Add=Wert1,Wert2,...}

So entfernen Sie Werte:
  -AllowedDNSSuffixes @{Remove=Wert3,Wert4,...}

So ersetzen Sie Werte:
  -AllowedDNSSuffixes @{Replace=Wert1,Wert2,...}

So löschen Sie alle Werte:
  -AllowedDNSSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um DNS-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie DNS-Suffixe für eine Domäne hinzugefügt und entfernt werden.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LastLogonReplicationInterval</maml:name>
				<maml:description>
					<maml:para>Gibt die Zeit (in Tagen) an, innerhalb derer die letzte Anmeldezeit eines Kontos mit allen Domänencontrollern in der Domäne repliziert werden muss. Dieser Parameter legt die LastLogonReplicationInterval-Eigenschaft für eine Domäne fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-LogonTimeSyncInterval&quot;. Das Replikationsintervall für die letzte Anmeldung muss auf mindestens einen Tag festgelegt sein. Wenn das Replikationsintervall für die letzte Anmeldung auf einen niedrigen Wert festgelegt wird, kann dies den Aufwand bei der domänenübergreifenden Replikation erheblich vergrößern.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf zehn Tage festgelegt wird.
  -LastLogonReplicationInterval &quot;10&quot;

Hinweis: Dieser Wert ist nicht gültig, wenn der Domänenmodus auf den Wert &quot;Windows2000&quot; festgelegt wird.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowedDNSSuffixes</maml:name>
			<maml:description>
				<maml:para>Ändert die Liste der in einer Domäne zulässigen DNS (Domänennamenserver)-Suffixe. Dieser Parameter legt den Wert des Attributs &quot;msDS-AllowedDNSSuffixes&quot; des domainDNS-Objekts fest. Dieser Parameter verwendet die folgende Syntax, um DNS-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 

So fügen Sie Werte hinzu:
  -AllowedDNSSuffixes @{Add=Wert1,Wert2,...}

So entfernen Sie Werte:
  -AllowedDNSSuffixes @{Remove=Wert3,Wert4,...}

So ersetzen Sie Werte:
  -AllowedDNSSuffixes @{Replace=Wert1,Wert2,...}

So löschen Sie alle Werte:
  -AllowedDNSSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um DNS-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie DNS-Suffixe für eine Domäne hinzugefügt und entfernt werden.
  -AllowedDNSSuffixes@{Add= &quot;corp.contoso.com,contoso.com&quot;};@{Remove=&quot;corpnet.contoso.com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Domänenobjekts an, mit der das tatsächliche Active Directory-Domänenobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Domänenobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADDomain&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADDomain&quot; eine Instanz des ADDomain-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADDomain&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $domainInstance = Get-ADDomain -Identity &quot;contosoDomain&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $domainInstance.ManagedBy = &quot;saraHettichGruppe&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;contosoDomain&quot;.
    Set-ADDomain -Instance $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LastLogonReplicationInterval</maml:name>
			<maml:description>
				<maml:para>Gibt die Zeit (in Tagen) an, innerhalb derer die letzte Anmeldezeit eines Kontos mit allen Domänencontrollern in der Domäne repliziert werden muss. Dieser Parameter legt die LastLogonReplicationInterval-Eigenschaft für eine Domäne fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;msDS-LogonTimeSyncInterval&quot;. Das Replikationsintervall für die letzte Anmeldung muss auf mindestens einen Tag festgelegt sein. Wenn das Replikationsintervall für die letzte Anmeldung auf einen niedrigen Wert festgelegt wird, kann dies den Aufwand bei der domänenübergreifenden Replikation erheblich vergrößern.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf zehn Tage festgelegt wird.
  -LastLogonReplicationInterval &quot;10&quot;

Hinweis: Dieser Wert ist nicht gültig, wenn der Domänenmodus auf den Wert &quot;Windows2000&quot; festgelegt wird.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänenobjekt empfangen.

Ein Domänenobjekt, das mit dem Cmdlet &quot;Get-ADDomain&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Domänenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Replace=&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den Wert von AllowedDNSSuffixes auf &quot;{&quot;fabrikam.com&quot;,&quot;corp.fabrikam.com&quot;}&quot; in der Domäne &quot;FABRIKAM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -AllowedDNSSuffixes @{Add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
 				<maml:para>Fügt den Wert &quot;corp.fabrikam.com&quot; den AllowedDNSSuffixes in der Domäne &quot;FABRIKAM&quot; hinzu.</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomain -Identity FABRIKAM -ManagedBy 'CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM'
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die ManagedBy-Eigenschaft in der Domäne &quot;FABRIKAM&quot; auf &quot;CN=Domain Admins,CN=Users,DC=FABRIKAM,DC=COM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDomain | Set-ADDomain -LastLogonReplicationInterval &quot;10&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das LastLogonReplicationInterval der gerade angemeldeten Benutzerdomäne auf &quot;10&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144995</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForest
		</command:name>
		<maml:description>
			<maml:para>Ändert eine Active Directory-Gesamtstruktur.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForest</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADForest&quot; werden die Eigenschaften einer Active Directory-Gesamtstruktur geändert. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.

Der Identity-Parameter gibt die zu ändernde Active Directory-Gesamtstruktur an. Sie können eine Gesamtstruktur durch ihren vollqualifizierten Domänennamen (FQDN), die GUID, den DNS-Hostnamen oder NetBIOS-Namen identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable wie $&lt;localADForestObject&gt; festlegen oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADForest&quot; ein Gesamtstrukturobjekt abrufen und dieses anschließend über die Pipeline an das Cmdlet &quot;Set-ADForest&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Gesamtstrukturobjekt zu aktualisieren, indem die Änderungen übernommen werden, die an einer Kopie des Objekts vorgenommen wurden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Gesamtstrukturobjekts festgelegt haben, die geändert wurde, werden durch das Cmdlet &quot;Set-ADForest&quot; am ursprünglichen Gesamtstrukturobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADForest-Objekt eine Kopie des zu ändernden Objekts ab. Der Identity-Parameter ist nicht zulässig, wenn Sie den Instance-Parameter verwenden. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. 

In den folgenden Beispielen wird gezeigt, wie die UPNSuffixes-Eigenschaft eines Gesamtstrukturobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des UPNSuffixes-Parameters
 – Durch Übergabe eines Gesamtstrukturobjekts über die Pipeline und Angabe des UPNSuffixes-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die UPNSuffixes-Eigenschaft für die Gesamtstruktur &quot;fabrikam.com&quot; mit dem Identity-Parameter und dem UPNSuffixes-Parameter. 

 Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

Methode 2: Ändern Sie die UPNSuffixes-Eigenschaft für die Gesamtstruktur &quot;fabrikam.com&quot;, indem Sie die Gesamtstruktur &quot;fabrikam.com&quot; über die Pipeline übergeben und den UPNSuffixes-Parameter angeben.

 Get-ADForest -Identity fabrikam.com | Set-ADForest -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}

Methode 3: Ändern Sie die UPNSuffixes-Eigenschaft für die Gesamtstruktur &quot;fabrikam.com&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz der Gesamtstruktur &quot;fabrikam.com&quot; ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $forest = Get-ADForest -Identity fabrikam.com
 $forest.UPNSuffixes = &quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;
 Set-ADForest -Instance $forest. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForest</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SPNSuffixes</maml:name>
				<maml:description>
					<maml:para>Ändert die Liste der SPN-Suffixe (Dienstprinzipalnamen) der Gesamtstruktur. Dieser Parameter legt die mehrwertige msDS-SPNSuffixes-Eigenschaft des Querverweiscontainers fest. Dieser Parameter verwendet die folgende Syntax, um SPN-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen.

Syntax:
So fügen Sie Werte hinzu:
  -SPNSuffixes @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -SPNSuffixes @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -SPNSuffixes @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -SPNSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um SPN-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie SPNSuffixes für eine Gesamtstruktur hinzugefügt und entfernt werden.
  -@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UPNSuffixes</maml:name>
				<maml:description>
					<maml:para>Ändert die Liste der UPN-Suffixe (Benutzerprinzipalnamen) der Gesamtstruktur. Dieser Parameter legt die mehrwertige msDS-UPNSuffixes-Eigenschaft des Querverweiscontainers fest. Dieser Parameter verwendet die folgende Syntax, um UPN-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 

Syntax:
So fügen Sie Werte hinzu:
  -UPNSuffixes @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -UPNSuffixes @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -UPNSuffixes @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -UPNSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um UPN-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie UPN-Suffixe für eine Gesamtstruktur hinzugefügt und entfernt werden.
  -UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SPNSuffixes</maml:name>
			<maml:description>
				<maml:para>Ändert die Liste der SPN-Suffixe (Dienstprinzipalnamen) der Gesamtstruktur. Dieser Parameter legt die mehrwertige msDS-SPNSuffixes-Eigenschaft des Querverweiscontainers fest. Dieser Parameter verwendet die folgende Syntax, um SPN-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen.

Syntax:
So fügen Sie Werte hinzu:
  -SPNSuffixes @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -SPNSuffixes @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -SPNSuffixes @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -SPNSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um SPN-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie SPNSuffixes für eine Gesamtstruktur hinzugefügt und entfernt werden.
  -@{Add=&quot;ContosoEurope&quot;, &quot;ContosoAsia&quot;};@{Remove=&quot;Contoso&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UPNSuffixes</maml:name>
			<maml:description>
				<maml:para>Ändert die Liste der UPN-Suffixe (Benutzerprinzipalnamen) der Gesamtstruktur. Dieser Parameter legt die mehrwertige msDS-UPNSuffixes-Eigenschaft des Querverweiscontainers fest. Dieser Parameter verwendet die folgende Syntax, um UPN-Suffixwerte hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 

Syntax:
So fügen Sie Werte hinzu:
  -UPNSuffixes @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -UPNSuffixes @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -UPNSuffixes @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -UPNSuffixes $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um UPN-Suffixwerte hinzuzufügen und zu entfernen: 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie UPN-Suffixe für eine Gesamtstruktur hinzugefügt und entfernt werden.
  -UPNSuffixes @{Add=&quot;Fabrikam.Com&quot;, &quot;Corp.Fabrikam.Com&quot;}; @{Remove=&quot;NA.Fabrikam.Com&quot;,&quot;Europe.Fabrikam.Com&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gesamtstrukturobjekt empfangen.

Ein Gesamtstrukturobjekt, das mit dem Cmdlet &quot;Get-ADForest&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Gesamtstrukturobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -UPNSuffixes @{replace=&quot;fabrikam.com&quot;,&quot;fabrikam&quot;,&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die UPNSuffixes-Eigenschaft für die Gesamtstruktur &quot;fabrikam.com&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForest -Identity fabrikam.com -SPNSuffixes @{add=&quot;corp.fabrikam.com&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt &quot;corp.fabrikam.com&quot; der SPNSuffixes-Eigenschaft der Gesamtstruktur &quot;fabrikam.com&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -SPNSuffixes @{Add=&quot;corp.fabrikam.com&quot;;Remove=&quot;fabrikam&quot;} </dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Gesamtstruktur des gerade angemeldeten Benutzers ab und aktualisiert die SPNSuffixes-Eigenschaft.
</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADForest | Set-ADForest -UPNSuffixes $null </dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Gesamtstruktur des gerade angemeldeten Benutzers ab und löscht die UPNSuffixes-Eigenschaft. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144996</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADForestMode</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADOrganizationalUnit
		</command:name>
		<maml:description>
			<maml:para>Ändert eine Active Directory-Organisationseinheit.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADOrganizationalUnit</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADOrganizationalUnit&quot; ändert die Eigenschaften einer Active Directory-Organisationseinheit. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.  

Der Identity-Parameter gibt die zu ändernde Active Directory-Organisationseinheit an. Sie können eine Organisationseinheit durch den definierten Namen (DN) oder GUID identifizieren.
 Sie können auch den Identity-Parameter auf eine Objektvariable wie $&lt;localADOrganizationalUnitObject&gt; festlegen oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; ein Organisationseinheitsobjekt abrufen und dieses anschließend über die Pipeline an das Cmdlet &quot;Set-ADOrganizationalUnit&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Organisationseinheitsobjekt zu aktualisieren, indem die an einer Kopie des Objekts vorgenommenen Änderungen übernommen werden. Wenn Sie den Instance-Parameter auf eine Kopie eines Active Directory-Organisationseinheitsobjekts festgelegt haben, die geändert wurde, werden vom Cmdlet &quot;Set-ADOrganizationalUnit&quot; dieselben Änderungen am ursprünglichen Organisationseinheitsobjekt vorgenommen. Rufen Sie mit dem Get-ADOrganizationalUnit-Objekt eine Kopie des zu ändernden Objekts ab. Wenn Sie den Instance-Parameter angeben, sollten Sie den Identity-Parameter nicht übergeben. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. 

Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die ManagedBy-Eigenschaft eines Organisationseinheitsobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des ManagedBy-Parameters
 – Durch Übergabe eines Organisationseinheitsobjekts über die Pipeline und Angabe des ManagedBy-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die ManagedBy-Eigenschaft für die Organisationseinheit &quot;AccountingDepartment&quot; mit dem Identity-Parameter und dem ManagedBy-Parameter. 

 Set-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot; -ManagedBy &quot;SaraHettichGruppe&quot;

Methode 2: Ändern Sie die ManagedBy-Eigenschaft für die Organisationseinheit &quot;AccountingDepartment&quot;, indem Sie die Organisationseinheit &quot;AccountingDepartment&quot; über die Pipeline übergeben und den ManagedBy-Parameter angeben.

 Get-ADOrganizationalUnit -Identity &quot;&quot;AccountingDepartment&quot;&quot; | Set-ADOrganizationalUnit -ManagedBy &quot;SaraHettichGruppe&quot;

Methode 3: Ändern Sie die ManagedBy-Eigenschaft für die Organisationseinheit &quot;AccountingDepartment&quot;, indem Sie mit der Windows PowerShell-Befehlszeile eine lokale Instanz der Organisationseinheit &quot;AccountingDepartment&quot; ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

 $organizational unit = Get-ADOrganizationalUnit -Identity &quot;AccountingDepartment&quot;
 $organizational unit.ManagedBy = &quot;SaraHettichGruppe&quot; 
 Set-ADOrganizationalUnit -Instance $organizational unit. 

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>City</maml:name>
				<maml:description>
					<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Country</maml:name>
				<maml:description>
					<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ManagedBy</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PostalCode</maml:name>
				<maml:description>
					<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ProtectedFromAccidentalDeletion</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>State</maml:name>
				<maml:description>
					<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>StreetAddress</maml:name>
				<maml:description>
					<maml:para>Gibt die Anschrift der Organisationseinheit an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;street&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADOrganizationalUnit</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Organisationseinheitsobjekts an, mit der das tatsächliche Active Directory-Organisationseinheitsobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Organisationseinheitsobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; eine Instanz des ADOrganizationalUnit-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADOrganizationalUnit&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $organizationalUnitInstance.ManagedBy = &quot;CN=SaraHettichGruppe,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;Accounting&quot;.
    Set-ADOrganizationalUnit -Instance $organizationalUnitInstance </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>City</maml:name>
			<maml:description>
				<maml:para>Gibt den Ort des Benutzers an. Dieser Parameter legt die City-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;l&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -City &quot;Las Vegas&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Country</maml:name>
			<maml:description>
				<maml:para>Gibt den Landes- oder Regionalcode für die vom Benutzer gewählte Sprache an. Dieser Parameter legt die Country-Eigenschaft eines Benutzerobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;c&quot;. Dieser Wert wird nicht von Windows 2000 verwendet.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -Country &quot;IN&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Objekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=sarahettich,OU=users,OU=asia,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADGroup
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
  Microsoft.ActiveDirectory.Management.ADFineGrainedPasswordPolicy
  Microsoft.ActiveDirectory.Management.ADDomain

In diesem Beispiel wird gezeigt, wie der Parameter auf eine ADObject-Objektinstanz mit dem Namen &quot;ADObjectInstance&quot; festgelegt wird.
  -Identity   $ADObjectInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Organisationseinheitsobjekts an, mit der das tatsächliche Active Directory-Organisationseinheitsobjekt aktualisiert werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden.

Der Instance-Parameter kann nur Organisationseinheitsobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; eine Instanz des ADOrganizationalUnit-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADOrganizationalUnit&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $organizationalUnitInstance = Get-ADOrganizationalUnit  -Identity &quot;OU=Accounting,DC=corp,DC=contoso,DC=com&quot;
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $organizationalUnitInstance.ManagedBy = &quot;CN=SaraHettichGruppe,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;Accounting&quot;.
    Set-ADOrganizationalUnit -Instance $organizationalUnitInstance </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADOrganizationalUnit</command:parameterValue>
			<dev:type>
				<maml:name>ADOrganizationalUnit</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ManagedBy</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte den Benutzer oder die Gruppe an, der bzw. die das Objekt verwaltet. Hinweis: Die ID in Klammern ist der LDAP-Anzeigename für die Eigenschaft.
  Definierter Name 
    Beispiel:  CN=SaraHettich,OU=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Dieser Parameter legt das Active Directory-Attribut mit dem LDAP-Anzeigenamen &quot;managedBy&quot; fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -ManagedBy ContosoAdmins</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPrincipal</command:parameterValue>
			<dev:type>
				<maml:name>ADPrincipal</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PostalCode</maml:name>
			<maml:description>
				<maml:para>Gibt die Postleitzahl des Benutzers an. Dieser Parameter legt die PostalCode-Eigenschaft eines Benutzers fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;postalCode&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -PostalCode &quot;28712&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ProtectedFromAccidentalDeletion</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Löschen des Objekts verhindert werden soll. Wenn diese Eigenschaft auf true festgelegt wird, können Sie das entsprechende Objekt nur löschen, wenn Sie den Wert der Eigenschaft ändern. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ProtectedFromAccidentalDeletion $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>State</maml:name>
			<maml:description>
				<maml:para>Gibt das Bundesland bzw. den Kanton für den Benutzer oder die Organisationseinheit an. Dieser Parameter legt die State-Eigenschaft eines Benutzers oder Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;st&quot;.

Im folgenden Beispiel wird das Festlegen dieses Parameters gezeigt.
  -State &quot;Niedersachsen&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>StreetAddress</maml:name>
			<maml:description>
				<maml:para>Gibt die Anschrift der Organisationseinheit an. Dieser Parameter legt die StreetAddress-Eigenschaft eines Organisationseinheitsobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;street&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -StreetAddress  &quot;1200 Main Street&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Organisationseinheitsobjekt empfangen.

Ein Organisationseinheitsobjekt, das mit dem Cmdlet &quot;Get-ADOrganizationalUnit&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADOrganizationalUnit</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Organisationseinheitsobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Description &quot;This Organizational Unit holds all of the users accounts of FABRIKAM.COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Beschreibung der OrganizationalUnit mit dem distinguishedName &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -ProtectedFromAccidentalDeletion $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die ProtectedFromAccidentalDeletion-Eigenschaft der OrganizationalUnit mit dem distinguishedName &quot;OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; auf &quot;$false&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; -Country &quot;AU&quot; -StreetAddress &quot;45 Martens Place&quot; -City Balmoral -State QLD -PostalCode 4171 -Replace @{co=&quot;Australia&quot;}
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Eigenschaften &quot;Country&quot;, &quot;City&quot; und &quot;State&quot;, &quot;PostalCode&quot; und &quot;co&quot; der OrganizationalUnit &quot;OU=AsiaPacific,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$EuropeSalesOU = Get-ADOrganizationalUnit &quot;OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
$EuropeSalesOU.Country = &quot;UK&quot;
$EuropeSalesOU.StreetAddress = &quot;22 Station Rd&quot;
$EuropeSalesOU.City = &quot;QUARRINGTON&quot;
$EuropeSalesOU.PostalCode = &quot;NG34 0NI&quot;
$EuropeSalesOU.co =&quot;United Kingdom&quot;
Set-ADOrganizationalUnit -Instance $EuropeSalesOU</dev:code>
  			<dev:remarks>
  			        <maml:para>Erstellt eine neue OrganizationalUnit unter Verwendung der OrganizationalUnit &quot;OU=Europe,OU=Sales,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot; als Vorlage. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADOrganizationalUnit -Identity &quot;OU=Managed,DC=AppNC&quot; -Server &quot;FABRIKAM-SRV1:60000&quot; -Country &quot;UK&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Country-Eigenschaft der OrganizationalUnit &quot;OU=Managed,DC=AppNC&quot; in einer AD LDS-Instanz fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144997</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADOrganizationalUnit</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountControl
		</command:name>
		<maml:description>
			<maml:para>Ändert Benutzerkontensteuerungs-Werte (User Account Control, UAC) für ein Active Directory-Konto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountControl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADAccountControl&quot; werden die Benutzerkontensteuerungs-Werte (User Account Control, UAC) für ein Active Directory-Benutzer- oder Computerkonto geändert. UAC-Werte werden durch Cmdlet-Parameter dargestellt. Legen Sie z. B. den PasswordExpired-Parameter fest, um anzugeben, ob ein Konto abgelaufen ist und um den UAC-Wert ADS_UF_PASSWORD_EXPIRED zu ändern. 

Der Identity-Parameter gibt das zu ändernde Active Directory-Konto an. 
Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Search-ADAccount&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADAccountControl&quot; übergeben. Auf ähnliche Weise können Sie Kontoobjekte, die Sie über die Pipeline an dieses Cmdlet übergeben können, mit den Cmdlets &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot; oder &quot;Get-ADServiceAccount&quot; abrufen.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountControl</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AllowReversiblePasswordEncryption</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CannotChangePassword</maml:name>
				<maml:description>
					<maml:para>Ändert für ein Konto die Fähigkeit zum Ändern des Kennworts. Legen Sie dies auf &quot;$true&quot; fest, um keine Kennwortänderung durch das Konto zuzulassen. Dieser Parameter ändert den booleschen Wert der CannotChangePassword-Eigenschaft eines Kontos.

Im folgenden Beispiel wird gezeigt, wie der CannotChangePassword-Parameter angegeben wird.
  -CannotChangePassword $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DoesNotRequirePreAuth</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für die Anmeldung mit dem Benutzer- oder Computerkonto die Kerberos-Vorauthentifizierung erforderlich ist. Dieser Parameter legt das ADS_UF_DONT_REQUIRE_PREAUTH-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass zum Anmelden beim Konto die Kerberos-Vorauthentifizierung erforderlich ist.
  -DoesNotRequirePreAuth $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomedirRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob für das Konto ein Stammverzeichnis erforderlich ist. Dieser Parameter legt das ADS_UF_HOMEDIR_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für das Konto kein Stammverzeichnis erforderlich ist.
  -HomedirRequired $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MNSLogonAccount</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Hauptknotensatz-Anmeldekonto (Majority Node Set, MNS) ist. Dieser Parameter legt auch das ADS_UF_MNS_LOGON_ACCOUNT-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Mithilfe von MNS-Anmeldekonten können Sie einen Multiknoten-Cluster ohne ein freigegebenes Festplattenlaufwerk konfigurieren.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto als MNS-Konto anzugeben.
  -MSNLogonAccount $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNeverExpires</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordNotRequired</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedToAuthForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für die Delegierung aktiviert ist. Wenn dieser Parameter auf &quot;true&quot; festgelegt wird, kann ein Dienst, der unter einem solchen Konto ausgeführt wird, einen Identitätswechsel für einen Client auf anderen Remoteservern im Netzwerk durchführen. Dieser Parameter legt das ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Konto für die Delegierung aktiviert ist.
  -TrustedToAuthForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UseDESKeyOnly</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto auf die Verwendung von DES-Verschlüsselungstypen (Data Encryption Standard) für Schlüssel beschränkt ist. Dieser Parameter legt das 
ADS_UF_USE_DES_KEY_ONLY-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 
 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass von einem Konto DES-Verschlüsselungstypen für Schlüssel verwendet werden müssen.
  -UseDESKeyOnly $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AllowReversiblePasswordEncryption</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto umkehrbare Kennwortverschlüsselung zulässig ist. Dieser Parameter legt die AllowReversiblePasswordEncryption-Eigenschaft des Kontos fest. Dieser Parameter legt auch das ADS_UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -AllowReversiblePasswordEncryption $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CannotChangePassword</maml:name>
			<maml:description>
				<maml:para>Ändert für ein Konto die Fähigkeit zum Ändern des Kennworts. Legen Sie dies auf &quot;$true&quot; fest, um keine Kennwortänderung durch das Konto zuzulassen. Dieser Parameter ändert den booleschen Wert der CannotChangePassword-Eigenschaft eines Kontos.

Im folgenden Beispiel wird gezeigt, wie der CannotChangePassword-Parameter angegeben wird.
  -CannotChangePassword $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DoesNotRequirePreAuth</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für die Anmeldung mit dem Benutzer- oder Computerkonto die Kerberos-Vorauthentifizierung erforderlich ist. Dieser Parameter legt das ADS_UF_DONT_REQUIRE_PREAUTH-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass zum Anmelden beim Konto die Kerberos-Vorauthentifizierung erforderlich ist.
  -DoesNotRequirePreAuth $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomedirRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob für das Konto ein Stammverzeichnis erforderlich ist. Dieser Parameter legt das ADS_UF_HOMEDIR_REQUIRED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass für das Konto kein Stammverzeichnis erforderlich ist.
  -HomedirRequired $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MNSLogonAccount</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Hauptknotensatz-Anmeldekonto (Majority Node Set, MNS) ist. Dieser Parameter legt auch das ADS_UF_MNS_LOGON_ACCOUNT-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Mithilfe von MNS-Anmeldekonten können Sie einen Multiknoten-Cluster ohne ein freigegebenes Festplattenlaufwerk konfigurieren.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto als MNS-Konto anzugeben.
  -MSNLogonAccount $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNeverExpires</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Kennwort eines Kontos ablaufen kann. Dieser Parameter legt die PasswordNeverExpires-Eigenschaft eines Kontoobjekts fest. Dieser Parameter legt auch das ADS_UF_DONT_EXPIRE_PASSWD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Hinweis: Dieser Parameter kann nicht auf &quot;$true&quot; oder &quot;1&quot; für ein Konto festgelegt werden, bei dem die ChangePasswordAtLogon-Eigenschaft auf &quot;true&quot; festgelegt ist.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Kennwort ablaufen kann.
  -PasswordNeverExpires $false</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordNotRequired</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob das Konto ein Kennwort erfordert. Dieser Parameter legt die PasswordNotRequired-Eigenschaft eines Kontos fest, z. B. eines Benutzer- oder Computerkontos. Dieser Parameter legt auch das ADS_UF_PASSWD_NOTREQD-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0 
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass kein Kennwort für das Konto erforderlich ist.
  -PasswordNotRequired $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedToAuthForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für die Delegierung aktiviert ist. Wenn dieser Parameter auf &quot;true&quot; festgelegt wird, kann ein Dienst, der unter einem solchen Konto ausgeführt wird, einen Identitätswechsel für einen Client auf anderen Remoteservern im Netzwerk durchführen. Dieser Parameter legt das ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass das Konto für die Delegierung aktiviert ist.
  -TrustedToAuthForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>UseDESKeyOnly</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto auf die Verwendung von DES-Verschlüsselungstypen (Data Encryption Standard) für Schlüssel beschränkt ist. Dieser Parameter legt das 
ADS_UF_USE_DES_KEY_ONLY-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 
 
Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass von einem Konto DES-Verschlüsselungstypen für Schlüssel verwendet werden müssen.
  -UseDESKeyOnly $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">bool</command:parameterValue>
			<dev:type>
				<maml:name>bool</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.
 
Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet funktioniert nicht bei einer Verbindung mit einem Port für einen globalen Katalog.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl JimmyBi -PasswordNotRequired $false
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das Flag für userAccountControl fest, um sicherzustellen, dass ein Kennwort für die Anmeldung erforderlich ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Jimmy Bischoff,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -CannotChangePassword $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Sicherheitsbeschreibung des Benutzers fest, um sicherzustellen, dass er sein eigenes Kennwort nicht ändern kann.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl SQLAdmin1 -AccountNotDelegated $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das Flag für userAccountControl fest, um sicherzustellen, dass das Konto nicht delegiert werden kann.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=IIS01 SvcAccount,OU=ServiceAccounts,OU=Managed,DC=FABRIKAM,DC=COM' -TrustedToAuthForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das Flag für userAccountControl fest, um sicherzustellen, dass das Konto nun für die Authentifizierung zur Delegierung vertrauenswürdig ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl -Identity &quot;FABRIKAM-SRV1&quot; -TrustedForDelegation $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Der angegebene Computer ist jetzt auf Vertrauenswürdigkeit für die Delegierung festgelegt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 6 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl DickBe -PasswordNeverExpires $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt fest, dass das Kennwort des Benutzers nie abläuft.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 7 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountControl 'CN=Dick Beekman,OU=HumanResources,OU=UserAccounts,DC=FABRIKAM,DC=COM' -HomedirRequired $true
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt fest, dass für das Benutzerkonto ein Stammverzeichnis erforderlich ist.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144998</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountPassword
		</command:name>
		<maml:description>
			<maml:para>Ändert das Kennwort eines Active Directory-Kontos.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountPassword</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Set-ADAccountPassword&quot; wird das Kennwort für ein Benutzer-, Computer- oder Dienstkonto festgelegt.

Der Identity-Parameter gibt das zu ändernde Active Directory-Konto an. 
Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable wie $&lt;localADAccountObject&gt; festlegen oder ein Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Search-ADAccount&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADAccountPassword&quot; übergeben. Auf ähnliche Weise können Sie Kontoobjekte, die Sie über die Pipeline an dieses Cmdlet übergeben können, mit den Cmdlets &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot; oder &quot;Get-ADServiceAccount&quot; abrufen.

Zum Festlegen des Kennworts müssen Sie den OldPassword-Parameter und den NewPassword-Parameter festlegen, es sei denn, der Reset-Parameter wird angegeben. Wenn Sie den Reset-Parameter angeben, wird das Kennwort auf den angegebenen NewPassword-Wert festgelegt, und der OldPassword-Parameter ist nicht erforderlich.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountPassword</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NewPassword</maml:name>
				<maml:description>
					<maml:para>Gibt einen neuen Kennwortwert an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
  -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>OldPassword</maml:name>
				<maml:description>
					<maml:para>Gibt den zuletzt verwendeten Kennwortwert an. Dieser Wert wird als verschlüsselte Zeichenfolge verarbeitet.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
 -OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Reset</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Kennwort für ein Konto zurückgesetzt werden soll. Bei Verwendung dieses Parameters müssen Sie den NewPassword-Parameter festlegen. Den OldPassword-Parameter müssen Sie nicht angeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Festlegen eines neuen Kennworts verwendet wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
  -Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Benutzerobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=SaraHettich,CN=Europe,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Benutzerobjektinstanz mit dem Namen &quot;userInstance&quot; festgelegt wird.
  -Identity   $userInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>NewPassword</maml:name>
			<maml:description>
				<maml:para>Gibt einen neuen Kennwortwert an. Dieser Wert wird als verschlüsselte Zeichenfolge gespeichert.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
  -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>OldPassword</maml:name>
			<maml:description>
				<maml:para>Gibt den zuletzt verwendeten Kennwortwert an. Dieser Wert wird als verschlüsselte Zeichenfolge verarbeitet.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
 -OldPassword  (Read-Host -AsSecureString &quot;Old Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Reset</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Kennwort für ein Konto zurückgesetzt werden soll. Bei Verwendung dieses Parameters müssen Sie den NewPassword-Parameter festlegen. Den OldPassword-Parameter müssen Sie nicht angeben.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter zum Festlegen eines neuen Kennworts verwendet wird. Mit diesem Befehl erhalten Sie eine Aufforderung, und es wird auf ein Kennwort gewartet.
  -Reset -NewPassword (Read-Host -AsSecureString &quot;New Password&quot;)</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden. Dieses Cmdlet funktioniert nicht bei einer Verbindung mit einem Port für einen globalen Katalog.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword 'CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com' -Reset -NewPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt das Kennwort des Benutzerkontos mit dem DistinguishedName &quot;CN=Jeremy Los,OU=Accounts,DC=Fabrikam,DC=com&quot; auf &quot;p@ssw0rd&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity tmakovec -OldPassword (ConvertTo-SecureString -AsPlainText &quot;p@ssw0rd&quot; -Force) -NewPassword (ConvertTo-SecureString -AsPlainText &quot;qwert@12345&quot; -Force)
</dev:code>
  			<dev:remarks>
 				<maml:para>
</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt das Kennwort des Benutzerkontos mit dem SamAccountName &quot;tmakovec&quot; auf &quot;qwert@12345&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountPassword -Identity saradavi</dev:code>
  			<dev:remarks>
 				<maml:para>Geben Sie das aktuelle Kennwort für &quot;CN=Sara Hettich,CN=Users,DC=Fabrikam,DC=com&quot; ein.
Kennwort:**********
Geben Sie das gewünschte Kennwort für &quot;CN=Sara Hettich,CN=Users,DC=Fabrikam,DC=com&quot; ein.
Kennwort:***********
Kennwort wiederholen:***********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt das Kennwort des Benutzerkontos mit dem DistinguishedName: &quot;CN=Sara Hettich,CN=Users,DC=Fabrikam,DC=com&quot; fest (der Benutzer wird aufgefordert, das alte und das neue Kennwort einzugeben).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$newPassword = (Read-Host -Prompt &quot;Provide New Password&quot; -AsSecureString); Set-ADAccountPassword -Identity mollyd -NewPassword $newPassword -Reset</dev:code>
  			<dev:remarks>
 				<maml:para>Neues Kennwort angeben: **********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Fordert den Benutzer auf, ein neues Kennwort einzugeben, das in der temporären Variablen &quot;$newPassword&quot; gespeichert wird. Dann wird hiermit das Kennwort für das Benutzerkonto mit dem SamAccountName &quot;mollyd&quot; zurückgesetzt.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 5 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>PS C:\Users\administrator.FABRIKAM&gt; set-adaccountpassword &quot;CN=Molly Dempsey,OU=AccountDeptOU,DC=AppNC&quot; -server &quot;dsp13a24:60000&quot;
</dev:code>
  			<dev:remarks>
 				<maml:para>Geben Sie das aktuelle Kennwort für &quot;CN=mollyd,OU=AccountDeptOU,DC=AppNC&quot; ein.
Kennwort:**********
Geben Sie das gewünschte Kennwort für &quot;CN=mollyd,OU=AccountDeptOU,DC=AppNC&quot; ein.
Kennwort:**********
Kennwort wiederholen:**********</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Legt das Kennwort des Benutzerkontos mit dem DistinguishedName &quot;CN=mollyd,OU=AccountDeptOU,DC=AppNC&quot; in der AD LDS-Instanz &quot;dsp13a24:60000&quot; fest (der Benutzer wird aufgefordert, das alte und das neue Kennwort anzugeben).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=144999</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADAccountExpiration
		</command:name>
		<maml:description>
			<maml:para>Legt das Ablaufdatum für ein Active Directory-Konto fest.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADAccountExpiration</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADAccountExpiration&quot; legt die Ablaufzeit für einen Benutzer, einen Computer oder ein Dienstkonto fest. Um eine genaue Zeit anzugeben, verwenden Sie den DateTime-Parameter. Um einen Zeitraum ab dem aktuellen Zeitpunkt anzugeben, verwenden Sie den TimeSpan-Parameter. 

Der Identity-Parameter gibt das zu ändernde Active Directory-Konto an. 
Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder ein Kontoobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Search-ADAccount&quot; verwenden, um ein Kontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADAccountExpiration&quot; übergeben. Auf ähnliche Weise können Sie Kontoobjekte, die Sie über die Pipeline an dieses Cmdlet übergeben können, mit den Cmdlets &quot;Get-ADUser&quot;, &quot;Get-ADComputer&quot; oder &quot;Get-ADServiceAccount&quot; abrufen.

Für AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, es sei denn, eine der folgenden beiden Bedingungen trifft zu:
  – Das Cmdlet wird über ein Active Directory-Anbieterlaufwerk ausgeführt.
  – Es wird ein Standardnamenskontext oder eine Standardpartition für die AD LDS-Umgebung definiert. Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADAccountExpiration</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TimeSpan</maml:name>
				<maml:description>
					<maml:para>Gibt ein Zeitintervall an, das zum aktuellen Zeitpunkt beginnt. Das Konto läuft am Ende des Zeitintervalls ab.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 
-10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
 Festlegen der Zeit auf 2 Tage
      -TimeSpan &quot;2&quot;
Festlegen der Zeit auf 4 Stunden
      -TimeSpan &quot;4:00&quot;
 Festlegen der Zeit auf 5 Minuten
      -TimeSpan &quot;0:5&quot;
 Festlegen der Zeit auf 45 Sekunden
      -TimeSpan &quot;0:0:45&quot;

Um zum Beispiel ein Konto festzulegen, das in 10 Tagen ablaufen soll, geben Sie den TimeSpan-Parameter wie folgt an:

   -TimeSpan &quot;10&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DateTime</maml:name>
				<maml:description>
					<maml:para>Gibt die Ablaufzeit für das Konto durch einen DateTime-Wert an. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Werts gezeigt. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt.
  &quot;2000-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie der DateTime-Parameter auf den 18. Juni 2012, 2:00:00 Uhr festgelegt wird.
  -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DateTime</maml:name>
			<maml:description>
				<maml:para>Gibt die Ablaufzeit für das Konto durch einen DateTime-Wert an. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Werts gezeigt. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt.
  &quot;2000-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie der DateTime-Parameter auf den 18. Juni 2012, 2:00:00 Uhr festgelegt wird.
  -DateTime &quot;18.06.2012 02:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>TimeSpan</maml:name>
			<maml:description>
				<maml:para>Gibt ein Zeitintervall an, das zum aktuellen Zeitpunkt beginnt. Das Konto läuft am Ende des Zeitintervalls ab.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 
-10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
 Festlegen der Zeit auf 2 Tage
      -TimeSpan &quot;2&quot;
Festlegen der Zeit auf 4 Stunden
      -TimeSpan &quot;4:00&quot;
 Festlegen der Zeit auf 5 Minuten
      -TimeSpan &quot;0:5&quot;
 Festlegen der Zeit auf 45 Sekunden
      -TimeSpan &quot;0:0:45&quot;

Um zum Beispiel ein Konto festzulegen, das in 10 Tagen ablaufen soll, geben Sie den TimeSpan-Parameter wie folgt an:

   -TimeSpan &quot;10&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">TimeSpan</command:parameterValue>
			<dev:type>
				<maml:name>TimeSpan</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADAccountExpiration KarenBe -DateTime &quot;10/18/2008&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt fest, dass das Konto mit dem SamAccountName &quot;KarenBe&quot; am 18. Oktober 2008 abläuft.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADGroupMember BO1Accounts | where {$_.objectClass -eq &quot;user&quot;} | Set-ADAccountExpiration -timespan 60.0:0
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt das Ablaufdatum aller Benutzerkonten, die Mitglied der Gruppe &quot;BO1Accounts&quot; sind, auf 60 Tage nach heute fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145000</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ADAccountExpiration</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Search-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADUser</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADComputer</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Ändert ein Active Directory-Dienstkonto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADServiceAccount&quot; ändert die Eigenschaften eines Active Directory-Dienstkontos. Sie können häufig verwendete Eigenschaftswerte mit den Cmdlet-Parametern ändern. Eigenschaftswerte, die keinen Cmdlet-Parametern zugeordnet sind, können mit den Parametern &quot;Add&quot;, &quot;Replace&quot;, &quot;Clear&quot; und &quot;Remove&quot; geändert werden.  

Der Identity-Parameter gibt das zu ändernde Active Directory-Dienstkonto an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Objektvariable festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder über die Pipeline ein Kontoobjekt an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADServiceAccount&quot; verwenden, um ein Dienstkontoobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADServiceAccount&quot; übergeben.

Der Instance-Parameter bietet die Möglichkeit, ein Dienstkontoobjekt zu aktualisieren, indem die an einer Kopie des Objekts vorgenommenen Änderungen übernommen werden. Wenn Sie den Instance-Parameter auf eine geänderte Kopie eines Active Directory-Dienstkontoobjekts festgelegt haben, werden durch das Cmdlet &quot;Set-ADServiceAccount&quot; am ursprünglichen Dienstkontoobjekt dieselben Änderungen vorgenommen. Rufen Sie mit dem Get-ADServiceAccount-Objekt eine Kopie des zu ändernden Objekts ab. Wenn Sie den Instance-Parameter angeben, sollten Sie den Identity-Parameter nicht übergeben. Weitere Informationen über den Instance-Parameter finden Sie in der Beschreibung des Instance-Parameters. 

Weitere Informationen über das Instance-Konzept in Active Directory-Cmdlets finden Sie unter &quot;about_ActiveDirectory_Instance&quot;.

In den folgenden Beispielen wird gezeigt, wie die ServicePrincipalNames-Eigenschaft eines Dienstkontoobjekts mit drei Methoden geändert wird:
 – Durch Angabe des Identity-Parameters und des ServicePrincipalNames-Parameters
 – Durch Übergeben eines Dienstkontoobjekts über die Pipeline und Angeben des ServicePrincipalNames-Parameters
 – Durch Angabe des Instance-Parameters

Methode 1: Ändern Sie die ServicePrincipalNames-Eigenschaft für das ZugangIndien-Dienstkonto mit dem Identity-Parameter und dem ServicePrincipalNames-Parameter. 

Set-ADServiceAccount -Identity ZugangIndien -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com}

Methode 2: Ändern Sie die ServicePrincipalNames-Eigenschaft für das ZugangIndien-Dienstkonto durch das Übergeben des ZugangIndien-Dienstkontos über die Pipeline und Angeben des ServicePrincipalNames-Parameters.

 Get-ADServiceAccount -Identity &quot;ZugangIndien&quot; | Set-ADServiceAccount -ServicePrincipalNames @{Add=ACCESSAPP/india.contoso.com} 


Methode 3: Ändern Sie in der Windows PowerShell-Befehlszeile die &lt;Eigenschaft&gt;-Eigenschaft für das ZugangIndien-Dienstkonto, um eine lokale Instanz des ZugangIndien-Dienstkontos zu ändern. Legen Sie dann den Instance-Parameter auf die lokale Instanz fest.

$serviceAccount = Get-ADServiceAccount -Identity &quot;ZugangIndien&quot;
 $serviceAccount.ServicePrincipalNames = @{Add=ACCESSAPP/india.contoso.com} 
 Set-ADServiceAccount -Instance $serviceAccount. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountExpirationDate</maml:name>
				<maml:description>
					<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccountNotDelegated</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Add</maml:name>
				<maml:description>
					<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Certificates</maml:name>
				<maml:description>
					<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Clear</maml:name>
				<maml:description>
					<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DisplayName</maml:name>
				<maml:description>
					<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Enabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>HomePage</maml:name>
				<maml:description>
					<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Remove</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Replace</maml:name>
				<maml:description>
					<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SamAccountName</maml:name>
				<maml:description>
					<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServicePrincipalNames</maml:name>
				<maml:description>
					<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TrustedForDelegation</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Set-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Instance</maml:name>
				<maml:description>
					<maml:para>Gibt eine geänderte Kopie eines Dienstkontoobjekts an, die zum Aktualisieren des aktuellen Active Directory-Dienstkontoobjekts verwendet werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden. 

Der Instance-Parameter kann nur Dienstkontoobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADServiceAccount&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADServiceAccount&quot; eine Instanz des ADServiceAccount-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADServiceAccount&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $serviceAccountInstance.Description = &quot;default&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;ADServiceAdmin&quot;.
    Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountExpirationDate</maml:name>
			<maml:description>
				<maml:para>Gibt das Ablaufdatum für ein Konto an. Wenn Sie diesen Parameter auf 0 festlegen, läuft das Konto nie ab. Dieser Parameter legt die AccountExpirationDate-Eigenschaft eines Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;accountExpires&quot;.

Geben Sie diesen Parameter mithilfe der DateTime-Syntax an. Es wird von Ortszeit ausgegangen, sofern keine andere Zeit angegeben wird. Wenn kein Zeitwert angegeben wird, wird von 00:00:00 Uhr Ortszeit ausgegangen. Wenn kein Datum angegeben wird, wird vom aktuellen Datum ausgegangen. In den folgenden Beispielen wird die häufig verwendete Syntax zum Angeben eines DateTime-Objekts gezeigt.
  &quot;4/17/2006&quot;
  &quot;Montag, 17. April 2006&quot;
  &quot;14:22:45&quot;
  &quot;Montag, 17. April 2006, 14:22:45&quot;

In diesen Beispielen werden das gleiche Datum und die gleiche Uhrzeit angegeben, jedoch ohne Sekunden.
  &quot;17.04.06, 14:22&quot;
  &quot;Montag, 17. April 2006, 14:22&quot;
  &quot;14:22&quot;

Im folgenden Beispiel wird gezeigt, wie ein Datum und eine Uhrzeit nach dem RFC1123-Standard angegeben werden. In diesem Beispiel wird die Zeit als Greenwich Mean Time (GMT) angegeben.
  &quot;Mo, 17. Apr 2006, 21:22:48 GMT&quot;

Im folgenden Beispiel wird gezeigt, wie ein Roundtripwert als koordinierte Weltzeit (UTC, Coordinated Universal Time) angegeben wird. In diesem Beispiel wird Montag, der 17. April 2006, 14:22:48 (UTC) dargestellt. 
  &quot;2006-04-17T14:22:48.0000000&quot; 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf den 1. Mai 2012, 17 Uhr festgelegt wird. 
  AccountExpirationDate &quot;01.05.2012 17:00:00&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.DateTime]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.DateTime]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AccountNotDelegated</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob der Sicherheitskontext des Benutzers an einen Dienst delegiert wird. Wenn dieser Parameter auf true festgelegt ist, wird der Sicherheitskontext des Kontos auch dann nicht an einen Dienst delegiert, wenn das Dienstkonto als für die Kerberos-Delegierung vertrauenswürdig festgelegt wurde. Dieser Parameter legt die AccountNotDelegated-Eigenschaft für ein Active Directory-Konto fest. Dieser Parameter legt auch das ADS_UF_NOT_DELEGATED-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten 
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass der Sicherheitskontext des Kontos nicht an einen Dienst delegiert wird.
  -AccountNotDelegated $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Add</maml:name>
			<maml:description>
				<maml:para>Gibt Werte an, die einer Objekteigenschaft hinzugefügt werden sollen. Verwenden Sie diesen Parameter, um einer Eigenschaft, die nicht mit einem Cmdlet-Parameter geändert werden kann, einen oder mehrere Werte hinzuzufügen. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehrere Werte für eine Eigenschaft angeben, indem Sie eine durch Komma getrennte Liste von Werten angeben. Trennen Sie mehrere Eigenschaften durch Semikolon. Das Format für diesen Parameter ist 
   -Add @{Attribute1LDAPDisplayName=Wert1, Wert2, ...;   Attribute2LDAPDisplayName=Wert1, Wert2, ...; AttributeNLDAPDisplayName=Wert1, Wert2, ...}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; entfernen möchten und die Werte &quot;555-222-1111&quot; und &quot;555-222-3333&quot; zum Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) hinzufügen und den Wert &quot;555-222-9999&quot; zu &quot;Phone-Mobile-Other&quot; (LDAP-Anzeigename &quot;otherMobile&quot;) hinzufügen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.

  -Add @{otherTelephone='555-222-1111', '555-222-3333'; otherMobile='555-222-9999' } -Remove @{otherTelephone='555-222-2222'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Certificates</maml:name>
			<maml:description>
				<maml:para>Ändert die DER-codierten X.509v3-Zertifikate für das Konto. Zu diesen Zertifikaten zählen die Zertifikate für öffentliche Schlüssel, die vom Microsoft-Zertifikatdienst für dieses Konto ausgegeben werden. Dieser Parameter legt die Certificates-Eigenschaft des Kontoobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;userCertificate&quot;.

Syntax:
So fügen Sie Werte hinzu:
  -Certificates @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -Certificates @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -Certificates @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -Certificates $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Vorgänge angeben. Verwenden Sie beispielsweise die folgende Syntax, um Certificate-Werte hinzuzufügen und zu entfernen. 
  -Certificates @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird gezeigt, wie ein Zertifikat mit dem Cmdlet &quot;New-Object&quot; erstellt wird und dann einem Benutzerkonto hinzugefügt wird. Bei Ausführung dieses Cmdlets wird &lt;certificate password&gt; durch das Kennwort ersetzt, das zum Hinzufügen des Zertifikats verwendet wurde.

$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate certificate1.cer &lt;certificate password&gt;
Set-ADUser sarahettich  -Certificates @{Add=$cert}

Im folgenden Beispiel wird gezeigt, wie ein als Bytearray angegebenes Zertifikat hinzugefügt wird.
    Set-ADUser sarahettich -Certificates @{Add= [Byte[]](0xC5,0xEE,0x53,...)}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Clear</maml:name>
			<maml:description>
				<maml:para>Gibt ein Array von Objekteigenschaften an, die im Verzeichnis gelöscht werden. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu löschen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Clear Attribute1LDAPDisplayName, Attribute2LDAPDisplayName

Wenn Sie z. B. den Wert für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) löschen möchten, legen Sie den Clear-Parameter wie folgt fest.

  -Clear otherTelephone

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine Beschreibung des Objekts an. Dieser Parameter legt den Wert der Description-Eigenschaft für das Objekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;description&quot;. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine Beispielbeschreibung festgelegt wird.
  -Description &quot;Beschreibung des Objekts&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DisplayName</maml:name>
			<maml:description>
				<maml:para>Gibt den Anzeigenamen des Objekts an. Dieser Parameter legt die DisplayName-Eigenschaft des Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;displayName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -DisplayName &quot;Sara Hettichs Laptop&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Enabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto aktiviert ist. Ein aktiviertes Konto erfordert ein Kennwort. Dieser Parameter legt die Enabled-Eigenschaft für ein Kontoobjekt fest. Dieser Parameter legt auch das ADS_UF_ACCOUNTDISABLE-Flag des Active Directory-Benutzerkontensteuerungs-Attributs (User Account Control, UAC) fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird, um das Konto zu aktivieren.
  -Enabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>HomePage</maml:name>
			<maml:description>
				<maml:para>Gibt die URL der Homepage für das Objekt an. Dieser Parameter legt die homePage-Eigenschaft eines Active Directory-Objekts fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;wWWHomePage&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf eine URL festgelegt wird.
  -HomePage &quot;http://employees.contoso.com/shettich&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Instance</maml:name>
			<maml:description>
				<maml:para>Gibt eine geänderte Kopie eines Dienstkontoobjekts an, die zum Aktualisieren des aktuellen Active Directory-Dienstkontoobjekts verwendet werden soll. Wenn dieser Parameter verwendet wird, werden alle Änderungen an der geänderten Kopie des Objekts auch am entsprechenden Active Directory-Objekt vorgenommen. Das Cmdlet aktualisiert nur die Objekteigenschaften, die geändert wurden. 

Der Instance-Parameter kann nur Dienstkontoobjekte aktualisieren, die mit dem Cmdlet &quot;Get-ADServiceAccount&quot; abgerufen wurden. Wenn Sie den Instance-Parameter angeben, können Sie keine anderen Parameter angeben, die Eigenschaften für das Objekt festlegen.

Im folgenden Beispiel wird gezeigt, wie mit dem Cmdlet &quot;Get-ADServiceAccount&quot; eine Instanz des ADServiceAccount-Objekts abgerufen wird. Das Objekt wird über die Windows PowerShell-Befehlszeile geändert. Anschließend werden die Änderungen am Active Directory-Objekt vom Cmdlet &quot;Set-ADServiceAccount&quot; gespeichert.

Schritt 1: Rufen Sie eine lokale Instanz des Objekts ab.
    $serviceAccountInstance = Get-ADServiceAccount  -Identity ADServiceAdmin
Schritt 2: Ändern Sie eine oder mehrere Eigenschaften der Objektinstanz.
    $serviceAccountInstance.Description = &quot;default&quot;
Schritt 3: Speichern Sie die Änderungen an &quot;ADServiceAdmin&quot;.
    Set-ADServiceAccount -Instance $serviceAccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Remove</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass das Cmdlet Werte einer Objekteigenschaft entfernt. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu entfernen, die nicht mit einem Cmdlet-Parameter geändert werden kann. Um eine Objekteigenschaft zu entfernen, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft entfernen, indem Sie eine durch Semikolon getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Remove @{Attribute1LDAPDisplayName=value[];   Attribute2LDAPDisplayName=value[]}

Wenn Sie beispielsweise einer Eigenschaft mit dem LDAP-Anzeigenamen &quot;FavColors&quot; die Werte &quot;blue&quot; und &quot;green&quot; hinzufügen und den Wert &quot;pink&quot; aus dieser Eigenschaft entfernen möchten, legen Sie den Add-Parameter und den Remove-Parameter wie folgt fest.
  -Add @{FavColors=Blue,Green} -Remove {FavColors=Pink}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Parameter in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Replace</maml:name>
			<maml:description>
				<maml:para>Gibt Werte für eine Objekteigenschaft an, die die aktuellen Werte ersetzen. Verwenden Sie diesen Parameter, um einen oder mehrere Werte einer Eigenschaft zu ersetzen, die Sie nicht mit einem Cmdlet-Parameter ändern können. Um eine Objekteigenschaft zu ändern, müssen Sie den LDAP-Anzeigenamen verwenden. Sie können mehr als eine Eigenschaft ändern, indem Sie eine durch Trennzeichen getrennte Liste angeben. Das Format für diesen Parameter ist 
  -Replace @{Attribute1LDAPDisplayName=value[],   Attribute2LDAPDisplayName=value[]}

Wenn Sie z. B. den Wert &quot;555-222-2222&quot; durch den Wert &quot;555-222-1111&quot; für das Phone-Office-Other-Attribut (LDAP-Anzeigename &quot;otherTelephone&quot;) ersetzen möchten, legen Sie den Replace-Parameter wie folgt fest.

  -Replace @{otherTelephone='555-222-2222', '555-222-1111'}

Wenn Sie die Parameter &quot;Add&quot;, &quot;Remove&quot;, &quot;Replace&quot; und &quot;Clear&quot; zusammen verwenden, werden die Vorgänge in der folgenden Reihenfolge ausgeführt:
..Remove
..Add
..Replace
..Clear</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SamAccountName</maml:name>
			<maml:description>
				<maml:para>Gibt den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) des Benutzer-, Gruppen-, Computer- oder Dienstkontos an. Die maximale Länge der Beschreibung beträgt 256 Zeichen. Für die Kompatibilität mit älteren Betriebssystemen erstellen Sie einen SAM-Kontonamen mit einer Länge von höchstens 20 Zeichen. Dieser Parameter legt den SAMAccountName für ein Kontoobjekt fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;sAMAccountName&quot;.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter angegeben wird.
  -SAMAccountName &quot;sarahettich&quot;

Hinweis: Wenn der angegebene Zeichenfolgenwert nicht mit dem Zeichen &quot;$&quot; endet, wird dieses bei Bedarf vom System hinzugefügt.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServicePrincipalNames</maml:name>
			<maml:description>
				<maml:para>Gibt die Dienstprinzipalnamen für das Konto an. Dieser Parameter legt die ServicePrincipalNames-Eigenschaft des Kontos fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;servicePrincipalName&quot;. Dieser Parameter verwendet die folgende Syntax, um Werte von Dienstprinzipalnamen hinzuzufügen, zu entfernen, zu ersetzen oder zu löschen. 
Syntax:
So fügen Sie Werte hinzu:
  -ServicePrincipalNames @{Add=Wert1,Wert2,...}
So entfernen Sie Werte:
  -ServicePrincipalNames @{Remove=Wert3,Wert4,...}
So ersetzen Sie Werte:
  -ServicePrincipalNames @{Replace=Wert1,Wert2,...}
So löschen Sie alle Werte:
  -ServicePrincipalNames $null

Sie können mithilfe einer durch Semikolons getrennten Liste mehrere Änderungen angeben. Verwenden Sie beispielsweise die folgende Syntax, um Dienstprinzipalnamen hinzuzufügen und zu entfernen. 
  @{Add=Wert1,Wert2,...};@{Remove=Wert3,Wert4,...}

Die Operatoren werden in der folgenden Reihenfolge angewendet:
..Remove
..Add
..Replace

Im folgenden Beispiel wird das Hinzufügen und Entfernen von Dienstprinzipalnamen gezeigt.
  -ServicePrincipalNames-@{Add=&quot;SQLservice\accounting.corp.contoso.com:1456&quot;};{Remove=&quot;SQLservice\finance.corp.contoso.com:1456&quot;}</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TrustedForDelegation</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob ein Konto für Kerberos-Delegierung vertrauenswürdig ist. Ein Dienst, der unter einem Konto ausgeführt wird, das für Kerberos-Delegierung vertrauenswürdig ist, kann die Identität eines Clients annehmen, der den Dienst anfordert. Dieser Parameter legt die TrustedForDelegation-Eigenschaft eines Kontoobjekts fest. Dieser Wert legt auch das ADS_UF_TRUSTED_FOR_DELEGATION-Flag des Active Directory-Benutzerkontensteuerungs-Attributs fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1

Im folgenden Beispiel wird gezeigt, wie angegeben wird, dass ein Konto für Kerberos-Delegierung vertrauenswürdig ist.
  -TrustedForDelegation $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.

Ein Dienstkontoobjekt, das mit dem Cmdlet &quot;Get-ADServiceAccount&quot; abgerufen und anschließend geändert wurde, wird vom Instance-Parameter empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Dienstkontoobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount service1 -Description &quot;Secretive Data Server&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Beschreibung des Dienstkontos &quot;service1&quot; auf &quot;Secretive Data Server&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADServiceAccount Mongol01ADAM -ServicePrincipalNames @{replace=&quot;ADAMwdb/a.contoso.com&quot;, &quot;ADAMbdb/a.contoso.com&quot;} 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ersetzt den Wert der ServicePrincipalNames-Eigenschaft durch &quot;ADAMwdb/a.contoso.com&quot;, &quot;ADAMbdb/a.contoso.com&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145001</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Uninstall-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDomainMode
		</command:name>
		<maml:description>
			<maml:para>Legt den Domänenmodus für eine Active Directory-Domäne fest.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDomainMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADDomainMode&quot; legt den Domänenmodus für eine Domäne fest. Den Domänenmodus geben Sie an, indem Sie den DomainMode-Parameter festlegen. 

Der Domänenmodus kann auf die folgenden Werte festgelegt werden, die in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt sind. 

  Windows2000Domain
  Windows2003InterimDomain
  Windows2003Domain
  Windows2008Domain
  Windows2008R2Domain

Sie können den Domänenmodus nur in einen Modus mit höherer Funktionalität ändern. Wenn der Domänenmodus einer Domäne z. B. auf Windows 2003 festgelegt ist, können Sie mit diesem Cmdlet den Modus in Windows 2008 ändern. In derselben Situation können Sie dieses Cmdlet jedoch nicht verwenden, um den Domänenmodus von Windows 2003 in Windows 2000 zu ändern. 

Der Identity-Parameter gibt die zu ändernde Active Directory-Domäne an. Sie können eine Domäne durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den DNS-Domänennamen oder den NETBIOS-Namen identifizieren. Sie können auch den Identity-Parameter auf eine Domänenobjektvariable festlegen, z. B. $&lt;localADDomainObject&gt;, oder ein Domänenobjekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADDomain&quot; ein Domänenobjekt abrufen und dieses anschließend über die Pipeline an das Cmdlet &quot;Set-ADDomainMode&quot; übergeben.

Im Set-ADDomainMode wird nur dann keine Aufforderung zur Angabe der Berechtigung ausgegeben, wenn Sie &quot;-confirm:$false&quot; angeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDomainMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>DomainMode</maml:name>
				<maml:description>
					<maml:para>Gibt den Domänenmodus für eine Active Directory-Domäne an. Sie können den Domänenmodus auf einen der folgenden Werte festlegen, die in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt sind. 

  Windows2000Domain oder 0
  Windows2003InterimDomain oder 1  
  Windows2003Domain oder 2
  Windows2008Domain oder 3
  Windows2008R2Domain oder 4

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Windows 2008 R2 festgelegt wird.
  -DomainMode Windows2008R2Domain</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimDomain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Domain</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownDomain</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>DomainMode</maml:name>
			<maml:description>
				<maml:para>Gibt den Domänenmodus für eine Active Directory-Domäne an. Sie können den Domänenmodus auf einen der folgenden Werte festlegen, die in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt sind. 

  Windows2000Domain oder 0
  Windows2003InterimDomain oder 1  
  Windows2003Domain oder 2
  Windows2008Domain oder 3
  Windows2008R2Domain oder 4

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Windows 2008 R2 festgelegt wird.
  -DomainMode Windows2008R2Domain</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomainMode</command:parameterValue>
			<dev:type>
				<maml:name>ADDomainMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Domain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownDomain</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDomain</command:parameterValue>
			<dev:type>
				<maml:name>ADDomain</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Domänenobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
Dieses Cmdlet funktioniert nicht bei einer Verbindung mit einem Port für einen globalen Katalog.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDomainMode -Identity fabrikam.com -DomainMode Windows2003Domain
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die DomainMode-Eigenschaft der Domäne &quot;fabrikam.com&quot; auf &quot;Windows2003Domain&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$pdc = Get-ADDomainController -Discover -Service PrimaryDC
Set-ADDomainMode -Identity $pdc.Domain -Server $pdc.HostName[0] -DomainMode Windows2003Domain</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den DomainMode für die Domäne des gerade angemeldeten Benutzers auf &quot;Windows2003Domain&quot; fest. Der Set-Vorgang zielt auf den PrimaryDC-FSMO ab, um das Update anzuwenden.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145002</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDomain</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADForestMode
		</command:name>
		<maml:description>
			<maml:para>Legt den Gesamtstrukturmodus für eine Active Directory-Gesamtstruktur fest.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADForestMode</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADForestMode&quot; legt den Gesamtstrukturmodus für eine Active Directory-Gesamtstruktur fest. Den Gesamtstrukturmodus geben Sie an, indem Sie den ForestMode-Parameter festlegen. Der Gesamtstrukturmodus kann auf die folgenden Werte festgelegt werden, die in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt sind. 
  Windows2000Forest
  Windows2003InterimForest
  Windows2003Forest  
  Windows2008Forest
  Windows2008R2Forest

Der Identity-Parameter gibt die zu ändernde Active Directory-Gesamtstruktur an. Sie können eine Gesamtstruktur durch ihren vollqualifizierten Domänennamen (FQDN), die GUID, den DNS-Hostnamen oder NetBIOS-Namen identifizieren. Sie können die Gesamtstruktur auch angeben, indem Sie über die Pipeline ein Gesamtstrukturobjekt übergeben. Beispielsweise können Sie mit dem Cmdlet &quot;Get-ADForest&quot; ein Gesamtstrukturobjekt abrufen und dieses anschließend über die Pipeline an den Set-ADForestMode übergeben.

Set-ADForestMode fordert standardmäßig zur Bestätigung auf. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADForestMode</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>ForestMode</maml:name>
				<maml:description>
					<maml:para>Gibt den Gesamtstrukturmodus für eine Active Directory-Gesamtstruktur an. Mögliche Werte für diesen Parameter lauten:   Windows2000Forest oder 0
  Windows2003InterimForest oder 1
  Windows2003Forest oder 2
  Windows2008Forest oder 3
  Windows2008R2Forest oder 4

Die Werte sind in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ForestMode Windows2008R2Forest</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Windows2000Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003InterimForest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2003Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Windows2008R2Forest</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">UnknownForest</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>ForestMode</maml:name>
			<maml:description>
				<maml:para>Gibt den Gesamtstrukturmodus für eine Active Directory-Gesamtstruktur an. Mögliche Werte für diesen Parameter lauten:   Windows2000Forest oder 0
  Windows2003InterimForest oder 1
  Windows2003Forest oder 2
  Windows2008Forest oder 3
  Windows2008R2Forest oder 4

Die Werte sind in der Reihenfolge von der niedrigsten zur höchsten Funktionalität aufgeführt. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -ForestMode Windows2008R2Forest</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForestMode</command:parameterValue>
			<dev:type>
				<maml:name>ADForestMode</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Windows2000Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003InterimForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2003Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Windows2008R2Forest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>UnknownForest</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Attributwerte ein Active Directory-Gesamtstrukturobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Vollqualifizierter Domänenname
    Beispiel: corp.contoso.com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  DNS-Hostname
    Beispiel: dnsServer.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Gesamtstrukturobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen vollqualifizierten Domänennamen festgelegt wird.
  -Identity &quot;corp.contoso.com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Gesamtstrukturobjektinstanz mit dem Namen &quot;forestInstance&quot; festgelegt wird.
  -Identity $forestInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADForest</command:parameterValue>
			<dev:type>
				<maml:name>ADForest</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Gesamtstrukturobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADForest</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt das geänderte Gesamtstrukturobjekt zurück, wenn der PassThru-Parameter angegeben wird. Standardmäßig wird von diesem Cmdlet keine Ausgabe generiert.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADForestMode -Identity fabrikam.com -ForestMode Windows2003Forest
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den ForestMode in der Gesamtstruktur &quot;fabrikam.com&quot; auf &quot;Windows2003Forest&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$currentForest = Get-ADForest 
Set-ADForestMode -Identity $currentForest -Server $currentForest.SchemaMaster -ForestMode Windows2008R2Forest 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den Gesamtstrukturmodus für die Gesamtstruktur des gerade angemeldeten Benutzers fest. Der Set-Vorgang zielt auf den Schemamaster-FSMO ab, um das Update anzuwenden.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145003</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADForest</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ADDefaultDomainPasswordPolicy
		</command:name>
		<maml:description>
			<maml:para>Ändert die Standardkennwortrichtlinie für eine Active Directory-Domäne.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ADDefaultDomainPasswordPolicy</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ADDefaultDomainPasswordPolicy&quot; ändert die Eigenschaften der Standardkennwortrichtlinie für eine Domäne. Eigenschaftswerte können Sie mit den Cmdlet-Parametern ändern. 

Der Identity-Parameter gibt die Domäne an, deren Standardkennwortrichtlinie geändert werden soll. Sie können eine Domäne durch den definierten Namen (DN), die GUID, die Sicherheits-ID (SID), den DNS-Domänennamen oder NETBIOS-Namen identifizieren. Sie können den Parameter auch auf eine ADDomain-Objektvariable festlegen oder ein ADDomain-Objekt über die Pipeline an den Identity-Parameter übergeben. Sie können z. B. das Cmdlet &quot;Get-ADDomain&quot; verwenden, um ein Domänenobjekt abzurufen, und dann das Objekt über die Pipeline an das Cmdlet &quot;Set-ADDomainDefaultPasswordPolicy&quot; übergeben.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ADDefaultDomainPasswordPolicy</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ComplexityEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutDuration</maml:name>
				<maml:description>
					<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutObservationWindow</maml:name>
				<maml:description>
					<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LockoutThreshold</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordAge</maml:name>
				<maml:description>
					<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinPasswordLength</maml:name>
				<maml:description>
					<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PasswordHistoryCount</maml:name>
				<maml:description>
					<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ReversibleEncryptionEnabled</maml:name>
				<maml:description>
					<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ComplexityEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob die Kennwortkomplexität für die Kennwortrichtlinie aktiviert ist. Bei Aktivierung muss das Kennwort zwei der folgenden drei Zeichentypen enthalten: 
  Großbuchstaben (A, B, C, D, E, ...)
  Kleinbuchstaben (a, b, c, d, e, ...)
  Ziffern (0, 1, 2, 3, ...) 

Dieser Parameter legt die ComplexityEnabled-Eigenschaft einer Kennwortrichtlinie fest. 

Mögliche Werte für diesen Parameter lauten:
  $false oder 0 - Deaktiviert die Kennwortkomplexität.
  $true oder 1 - Aktiviert die Kennwortkomplexität.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ComplexityEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Domänenobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut. Alle Werte gelten für das domainDNS-Objekt, das die Domäne darstellt. 

  Definierter Name
    Beispiel: DC=redmond,DC=corp,DC=contoso,DC=com 
  GUID (objectGUID)
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid)
    Beispiel: S-1-5-21-3165297888-301567370-
  DNS-Domänenname 
    Beispiel: redmond.corp.contoso.com
  NetBIOS-Domänenname 
    Beispiel: redmond

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Der Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können diesen Parameter auf eine Domänenobjektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;DC=redmond,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Domänenobjektinstanz mit dem Namen &quot;domainInstance&quot; festgelegt wird.
  -Identity   $domainInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADDefaultDomainPasswordPolicy</command:parameterValue>
			<dev:type>
				<maml:name>ADDefaultDomainPasswordPolicy</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutDuration</maml:name>
			<maml:description>
				<maml:para>Gibt die Zeitspanne an, für die ein Konto gesperrt wird, nachdem die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert überschritten hat. Sie können sich erst bei einem gesperrten Konto anmelden, wenn die Sperrdauer abgelaufen ist. Dieser Parameter legt die lockoutDuration-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-LockoutDuration&quot;.

Die Sperrdauer muss größer oder gleich der Sperrüberprüfungsdauer für eine Kennwortrichtlinie sein. Legen Sie die Sperrüberprüfungsdauer mithilfe des LockOutObservationWindow-Parameters fest. 

Geben Sie das Sperrdauerintervall im folgenden Format an.
    [-]T.H:M:S.F
    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutDuration &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutDuration &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutDuration &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    LockoutDuration &quot;0:0:45&quot;

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00:30:00 (30 Minuten)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutObservationWindow</maml:name>
			<maml:description>
				<maml:para>Gibt das maximale Zeitintervall zwischen zwei fehlgeschlagenen Anmeldeversuchen an, bevor die Anzahl der fehlgeschlagenen Anmeldeversuche auf 0 zurückgesetzt wird. Ein Konto wird gesperrt, wenn die Anzahl der fehlgeschlagenen Anmeldeversuche den Sperrschwellenwert der Kennwortrichtlinie überschreitet. Dieser Parameter legt die lockoutObservationWindow-Eigenschaft eines Kennwortrichtlinienobjekts fest. Der LDAP-Anzeigename (ldapDisplayName) dieser Eigenschaft lautet &quot;msDS-lockoutObservationWindow&quot;.

Das Sperrüberprüfungs-Zeitfenster muss kleiner oder gleich der Sperrdauer für eine Kennwortrichtlinie sein. Legen Sie die Dauer der Sperre mithilfe des LockoutDuration-Parameters fest.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T:H:M:S.F 

    Dabei gilt Folgendes:
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: 0:0:0:0.0 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeit auf 2 Tage
    -LockoutObservationWindow &quot;2&quot;
  Festlegen der Zeit auf 4 Stunden
    -LockoutObservationWindow &quot;4:00&quot;
  Festlegen der Zeit auf 5 Minuten
    -LockoutObservationWindow &quot;0:5&quot;
  Festlegen der Zeit auf 45 Sekunden
    -LockoutObservationWindow &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0.00.30.00 (30 Minutes)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>LockoutThreshold</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zulässigen nicht erfolgreichen Anmeldeversuche an, bevor ein Konto gesperrt wird. Diese Zahl wird erhöht, wenn die Zeitspanne zwischen fehlgeschlagenen Anmeldeversuchen kürzer als die für das Sperrüberprüfungs-Zeitfenster angegebene Zeit ist. Dieser Parameter legt die LockoutThreshold-Eigenschaft einer Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie der Sperrschwellenwert auf drei Anmeldeversuche festgelegt wird.
  -LockoutThreshold 3</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die maximale Zeitspanne an, in der Sie über das gleiche Kennwort verfügen können. Nach diesem Zeitraum läuft das Kennwort ab, und Sie müssen ein neues Kennwort erstellen. 

Dieser Parameter legt die maxPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;maxPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    MaxPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf die vorherigen 2 Tage
    MaxPasswordAge &quot;-2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    MaxPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    MaxPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    MaxPasswordAge &quot;0:0:45&quot; </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>42.00:00:00 (42 Tage)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordAge</maml:name>
			<maml:description>
				<maml:para>Gibt die minimale Zeitspanne an, nach deren Ablauf Sie ein Kennwort ändern können.

Dieser Parameter legt die minPasswordAge-Eigenschaft einer Kennwortrichtlinie fest. Der LDAP-Anzeigename (ldapDisplayName) für diese Eigenschaft lautet &quot;minPwdAge&quot;.

Geben Sie das Zeitintervall im folgenden Format an.
   [-]T.H:M:S.F
    Dabei gilt Folgendes:
      [-] = Gibt ein negatives Zeitintervall an.
      T = Tage (0 bis 10675199)
      H = Stunden (0 bis 23)
      M = Minuten (0 bis 59)
      S = Sekunden (0 bis 59)
      F = Sekundenbruchteile (0 bis 9999999)

Hinweis: Zeitwerte müssen zwischen den folgenden Werten liegen: -10675199:02:48:05.4775808 und 10675199:02:48:05.4775807.

In den folgenden Beispielen wird gezeigt, wie dieser Parameter festgelegt wird.
  Festlegen der Zeitspanne auf 2 Tage
    -MinPasswordAge &quot;2&quot;
  Festlegen der Zeitspanne auf 4 Stunden
    -MinPasswordAge &quot;4:00&quot;
  Festlegen der Zeitspanne auf 5 Minuten
    -MinPasswordAge &quot;0:5&quot;
  Festlegen der Zeitspanne auf 45 Sekunden
    -MinPasswordAge &quot;0:0:45&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[System.TimeSpan]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[System.TimeSpan]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>1.00:00:00 (1 Tag)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinPasswordLength</maml:name>
			<maml:description>
				<maml:para>Gibt die Mindestanzahl von Zeichen an, die ein Kennwort enthalten muss.  Dieser Parameter legt die MinPasswordLength-Eigenschaft der Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter festgelegt wird.
  -MinPasswordLength 15</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>7</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PasswordHistoryCount</maml:name>
			<maml:description>
				<maml:para>Gibt die Anzahl der zu speichernden vorherigen Kennwörter an.  Ein Benutzer kann ein Kennwort in der Liste der gespeicherten Kennwörter nicht wiederverwenden. Dieser Parameter legt die PasswordHistoryCount-Eigenschaft für eine Kennwortrichtlinie fest. 

Im folgenden Beispiel wird gezeigt, wie dieser Parameter so festgelegt wird, dass die letzten 10 Kennwörter gespeichert werden.
  -PasswordHistoryCount 10</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[int]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[int]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>24</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ReversibleEncryptionEnabled</maml:name>
			<maml:description>
				<maml:para>Gibt an, ob in dem Verzeichnis Kennwörter mit umkehrbarer Kennwortverschlüsselung gespeichert werden müssen. Dieser Parameter legt die ReversibleEncryption-Eigenschaft für eine Kennwortrichtlinie fest. Mögliche Werte für diesen Parameter lauten:
  $false oder 0
  $true oder 1 


Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf True festgelegt wird.
  -ReversibleEncryptionEnabled $true</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">System.Nullable[bool]</command:parameterValue>
			<dev:type>
				<maml:name>System.Nullable[bool]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$true</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADDomain</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Domänenobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ADDefaultDomainPasswordPolicy -Identity fabrikam.com -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MaxPasswordAge 10.00:00:00</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Standardkennwortrichtlinie für Domänen für eine angegebene Domäne fest. Hinweis: Durch das Festlegen von &quot;MaxPwdAge&quot; auf 0 erfolgt eine Konvertierung zu &quot;never&quot; (Int64.MinValue oder -9223372036854775808 im Verzeichnis).</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ADDefaultDomainPasswordPolicy -Current LoggedOnUser | Set-ADDefaultDomainPasswordPolicy -LockoutDuration 00:40:00 -LockoutObservationWindow 00:20:00 -ComplexityEnabled $true -ReversibleEncryptionEnabled $false -MinPasswordLength 12</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Standardkennwortrichtlinie für Domänen für die zurzeit angemeldete Benutzerdomäne fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145004</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADDefaultDomainPasswordPolicy</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Uninstall-ADServiceAccount
		</command:name>
		<maml:description>
			<maml:para>Deinstalliert ein Active Directory-Dienstkonto auf einem Computer.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Uninstall</command:verb>
		<command:noun>ADServiceAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Uninstall-ADServiceAccount&quot; entfernt ein Active Directory-Dienstkonto auf dem Computer, auf dem das Cmdlet ausgeführt wird. Das angegebene Dienstkonto muss auf dem Computer installiert sein. 

Der Identity-Parameter gibt das zu deinstallierende Active Directory-Dienstkonto an. Sie können ein Dienstkonto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Parameter auf die Objektvariable eines Dienstkontos festlegen, z. B. $&lt;localServiceAccountObject&gt;, oder über die Pipeline ein Dienstkontoobjekt an den Identity-Parameter übergeben. Sie können z. B. mit dem Cmdlet &quot;Get-ADServiceAccount&quot; ein Dienstkontoobjekt abrufen und dieses dann über die Pipeline an das Cmdlet &quot;Uninstall-ADServiceAccount&quot; übergeben.

Mit dem ForceRemoveLocal-Optionsparameter können Sie das Konto vom lokalen Computer entfernen, ohne dass der Befehl fehlschlägt, falls nicht auf einen beschreibbaren Domänencontroller zugegriffen werden kann. Dies ist erforderlich, wenn Sie das verwaltete Dienstkonto auf einem Server deinstallieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC) befindet. Wenn Sie diesen Parameter übergeben und der Server Zugriff auf einen beschreibbaren Domänencontroller hat, wird das Konto auch vom Computerkonto in den Active Directory-Domänendiensten getrennt. Bei Verwendung dieses Parameters wird empfohlen, das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; für einen beschreibbaren Domänencontroller auszuführen, um das verwaltete Dienstkonto zuverlässig vom Computer zu trennen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Uninstall-ADServiceAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			  <maml:name>ForceRemoveLocal</maml:name>
			  <maml:description>
			    <maml:para>Mit dem ForceRemoveLocal-Optionsparameter können Sie das Konto vom lokalen Computer entfernen, ohne dass der Befehl fehlschlägt, falls nicht auf einen beschreibbaren Domänencontroller zugegriffen werden kann. Dies ist erforderlich, wenn Sie das verwaltete Dienstkonto auf einem Server deinstallieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC) befindet. Wenn Sie diesen Parameter übergeben und der Server Zugriff auf einen beschreibbaren Domänencontroller hat, wird das Konto auch vom Computerkonto in den Active Directory-Domänendiensten getrennt. Bei Verwendung dieses Parameters wird empfohlen, das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; für einen beschreibbaren Domänencontroller auszuführen, um das verwaltete Dienstkonto zuverlässig vom Computer zu trennen.</maml:para>
			  </maml:description>
			  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			  <dev:type>
			    <maml:name>SwitchParameter</maml:name> 
			    <maml:uri/> 
			  </dev:type>
			  <dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
		  <maml:name>ForceRemoveLocal</maml:name>
		  <maml:description>
		    <maml:para>Mit dem ForceRemoveLocal-Optionsparameter können Sie das Konto vom lokalen Computer entfernen, ohne dass der Befehl fehlschlägt, falls nicht auf einen beschreibbaren Domänencontroller zugegriffen werden kann. Dies ist erforderlich, wenn Sie das verwaltete Dienstkonto auf einem Server deinstallieren, der sich in einem segmentierten Netzwerk oder einer Site (z. B. einem Umkreisnetzwerk oder DMZ) mit Zugriff auf einen schreibgeschützten Domänencontroller (RODC) befindet. Wenn Sie diesen Parameter übergeben und der Server Zugriff auf einen beschreibbaren Domänencontroller hat, wird das Konto auch vom Computerkonto in den Active Directory-Domänendiensten getrennt. Bei Verwendung dieses Parameters wird empfohlen, das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; für einen beschreibbaren Domänencontroller auszuführen, um das verwaltete Dienstkonto zuverlässig vom Computer zu trennen.</maml:para>
		  </maml:description>
		  <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
		  <dev:type>
		    <maml:name>SwitchParameter</maml:name> 
		    <maml:uri/> 
		  </dev:type>
		  <dev:defaultValue/> 
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel:  CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: WebAccount$
  
Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

 Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Objektinstanz festlegen. 

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity  &quot;CN=WebAccount,CN=ManagedServiceAccounts,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;AccountInstance&quot; festgelegt wird.
  -Identity   $AccountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADServiceAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADServiceAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADServiceAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Dienstkontoobjekt empfangen.
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für AD LDS verwendet werden.
Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1
</dev:code>
  			<dev:remarks>
				<maml:para>Deinstalliert das verwaltete Dienstkonto &quot;SQL-SRV1&quot; auf dem lokalen Computer. Hierfür ist Zugriff auf einen beschreibbaren Domänencontroller erforderlich.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>$a = Get-ADServiceAccount -Filter { Name -eq 'SQL-HR-svc-01'} 
Uninstall-ADServiceAccount $a 
Remove-ADServiceAccount $a </dev:code>
  			<dev:remarks>
				<maml:para>Sucht das verwaltete Dienstkonto mit dem Namen &quot;SQL-HR-svc-01&quot; auf dem lokalen Computer.  Deinstalliert dieses Konto und löscht es dann aus dem Verzeichnis. Hierfür ist Zugriff auf einen beschreibbaren Domänencontroller erforderlich.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
			<dev:code>Uninstall-ADServiceAccount -Identity SQL-SRV1 -ForceRemoveLocal
</dev:code>
			<dev:remarks>
				<maml:para>Deinstalliert das verwaltete Dienstkonto &quot;SQL-SRV1&quot; auf dem lokalen Computer, selbst wenn nicht auf einen beschreibbaren Domänencontroller zugegriffen werden kann.</maml:para>
				<maml:para>Es wird empfohlen, das Cmdlet &quot;Remove-ADComputerServiceAccount&quot; für einen beschreibbaren Domänencontroller auszuführen, um das verwaltete Dienstkonto zuverlässig vom Computer zu trennen.</maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145005</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Install-ADServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ADService account</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-ADComputerServiceAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Unlock-ADAccount
		</command:name>
		<maml:description>
			<maml:para>Entsperrt ein Active Directory-Konto.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Unlock</command:verb>
		<command:noun>ADAccount</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Unlock-ADAccount&quot; stellt den Zugriff für Active Directory-Domänendienste (AD DS) für ein gesperrtes Konto wieder her. Der AD DS-Zugriff auf ein Konto wird unterbrochen oder gesperrt, wenn die Anzahl falscher Kennworteingaben die von der Kontokennwortrichtlinie zugelassene maximale Anzahl überschreitet.

Der Identity-Parameter gibt das zu entsperrende Active Directory-Konto an. Sie können ein Konto durch den definierten Namen (DN), GUID, die Sicherheits-ID (SID) oder den Kontonamen des Sicherheitskonto-Managers (Security Accounts Manager, SAM) identifizieren. Sie können auch den Identity-Parameter auf eine Kontoobjektvariable festlegen, z. B. $&lt;localADAccountObject&gt;, oder über die Pipeline ein Objekt an den Identity-Parameter übergeben. Beispielsweise können Sie mit dem Cmdlet &quot;Search-ADAccount&quot; ein Kontoobjekt abrufen und dann das Objekt über die Pipeline an das Cmdlet &quot;Unlock-ADAccount&quot; übergeben, um das Konto zu entsperren. Auf ähnliche Weise können Sie Get-ADUser und Get-ADComputer zum Abrufen von Objekten verwenden, die über die Pipeline übergeben werden sollen.

In AD LDS-Umgebungen muss der Partition-Parameter angegeben werden, außer in folgenden Fällen:     – Identifizieren von Objekten mithilfe eines DNs: Die Partition wird automatisch aus dem DN generiert.     – Ausführen von Cmdlets von einem Active Directory-Anbieterlaufwerk: Zum Festlegen der Partition wird der aktuelle Pfad verwendet.     – Es wird ein Standardnamenskontext oder eine Partition angegeben. 
Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Unlock-ADAccount</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Partition</maml:name>
				<maml:description>
					<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt die zu verwendende Authentifizierungsmethode an. Mögliche Werte für diesen Parameter lauten:
  Negotiate oder 0
  Basic oder 1

Die Standardauthentifizierungsmethode lautet &quot;Negotiate&quot;.

Für die Standardauthentifizierung ist eine SSL (Secure Sockets Layer)-Verbindung erforderlich.

Im folgenden Beispiel wird gezeigt, wie dieser Parameter auf Basic festgelegt wird.
  -AuthType Basic</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Microsoft.ActiveDirectory.Management.AuthType.Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Gibt die Benutzerkonto-Anmeldeinformationen an, die zum Ausführen dieser Aufgabe verwendet werden sollen. Die Standardanmeldeinformationen sind die Anmeldeinformationen des gegenwärtig angemeldeten Benutzers, es sei denn, das Cmdlet wird über ein Active Directory-PowerShell-Anbieterlaufwerk ausgeführt. Wenn das Cmdlet auf einem solchen Anbieterlaufwerk ausgeführt wird, ist das dem Laufwerk zugeordnete Konto das Standardkonto.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

Wenn die aktiven Anmeldeinformationen über keine Berechtigung auf Verzeichnisebene zum Ausführen der Aufgabe verfügen, gibt Active Directory-PowerShell einen Fehler mit Abbruch zurück. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
			<maml:name>Identity</maml:name>
			<maml:description>
				<maml:para>Gibt durch Bereitstellen eines der folgenden Eigenschaftswerte ein Active Directory-Kontoobjekt an. Die ID in Klammern ist der LDAP-Anzeigename für das Attribut.

  Definierter Name 
    Beispiel: CN=SaraHettich,CN=Users,DC=corp,DC=contoso,DC=com
  GUID (objectGUID) 
    Beispiel: 599c3d2e-f72d-4d20-8a88-030d99495f20 
  Sicherheits-ID (objectSid) 
    Beispiel: S-1-5-21-3165297888-301567370-576410423-1103
  SAM-Kontoname (sAMAccountName) 
    Beispiel: sarahettich

Das Cmdlet durchsucht den Standardnamenskontext oder die Standardpartition nach dem Objekt. Wenn mehrere Objekte gefunden werden, gibt das Cmdlet einen Fehler ohne Abbruch zurück. 

Dieser Parameter kann dieses Objekt auch über die Pipeline abrufen, oder Sie können den Parameter auf eine Kontoobjektinstanz festlegen. 

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount

In diesem Beispiel wird gezeigt, wie der Parameter auf einen definierten Namen festgelegt wird.
  -Identity &quot;CN=sarahettich,CN=Users,DC=corp,DC=contoso,DC=com&quot;

In diesem Beispiel wird gezeigt, wie der Parameter auf eine Kontoobjektinstanz mit dem Namen &quot;accountInstance&quot; festgelegt wird.
  -Identity $accountInstance</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAccount</command:parameterValue>
			<dev:type>
				<maml:name>ADAccount</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Partition</maml:name>
			<maml:description>
				<maml:para>Gibt den definierten Namen einer Active Directory-Partition an. Der definierte Name muss einer der Namenskontexte auf dem aktuellen Verzeichnisserver sein. Das Cmdlet durchsucht diese Partition nach dem vom Identity-Parameter definierten Objekt. 
In den folgenden beiden Beispielen wird gezeigt, wie ein Wert für diesen Parameter angegeben wird.
  -Partition &quot;CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
 
  -Partition &quot;CN=Schema,CN=Configuration,DC=EUROPE,DC=TEST,DC=CONTOSO,DC=COM&quot;
  
In vielen Fällen wird ein Standardwert für den Partition-Parameter verwendet, wenn kein Wert angegeben wird.  Die Regeln zum Bestimmen des Standardwerts werden unten aufgeführt.  Beachten Sie, dass die zuerst aufgeführten Regeln zuerst ausgewertet werden. Sobald ein Standardwert bestimmt werden kann, werden keine weiteren Regeln ausgewertet.

In AD DS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt:  – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn keiner der vorhergehenden Fälle zutrifft, wird der Standardwert von &quot;Partition&quot; auf die Standardpartition oder den Standardnamenskontext der Zieldomäne festgelegt.

In AD LDS-Umgebungen wird in den folgenden Fällen ein Standardwert für &quot;Partition&quot; festgelegt: 
 – Wenn der Identity-Parameter auf einen definierten Namen festgelegt ist, wird der Standardwert von &quot;Partition&quot; automatisch aus diesem definierten Namen generiert. 
  – Wenn Cmdlets über ein Active Directory-Anbieterlaufwerk ausgeführt werden, wird der Standardwert von &quot;Partition&quot; automatisch aus dem aktuellen Pfad auf dem Laufwerk generiert.
  – Wenn die AD LDS-Zielinstanz über einen Standardnamenskontext verfügt, wird der Standardwert von &quot;Partition&quot; auf den Standardnamenskontext festgelegt.  Um einen Standardnamenskontext für eine AD LDS-Umgebung anzugeben, legen Sie die msDS-defaultNamingContext-Eigenschaft des Active Directory-DSA (Directory Service Agent)-Objekts (nTDSDSA) für die AD LDS-Instanz fest.
  – Wenn keiner der vorhergehenden Fälle zutrifft, nimmt der Partition-Parameter keinen Standardwert an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Gibt das neue oder geänderte Objekt zurück. Standardmäßig (d. h. wenn &quot;-PassThru&quot; nicht angegeben wird) wird von diesem Cmdlet keine Ausgabe generiert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die Active Directory-Domänendienste-Instanz an, mit der eine Verbindung hergestellt werden soll, indem einer der folgenden Werte für einen entsprechenden Domänennamen oder Verzeichnisserver bereitgestellt wird. Dabei kann es sich um folgende Dienste handeln: Active Directory Lightweight Domain Services, Active Directory-Domänendienste oder Active Directory Snapshot-Instanz.
Werte für Domänennamen:
  Vollqualifizierter Domänenname
    Beispiele: corp.contoso.com
  NetBIOS-Name
    Beispiel: CORP

Werte für Verzeichnisserver:
  Vollqualifizierter Verzeichnisservername
    Beispiel: corp-DC12.corp.contoso.com
  NetBIOS-Name
    Beispiel: corp-DC12
  Vollqualifizierter Verzeichnisservername und -port
    Beispiel: corp-DC12.corp.contoso.com:3268

Der Standardwert für den Server-Parameter wird mit einer der folgenden Methoden in der Reihenfolge bestimmt, in der sie angegeben sind:
  – Mithilfe des Serverwerts von Objekten, die über die Pipeline übergeben werden.
  – Mithilfe der Serverinformationen für das Active Directory-PowerShell-Anbieterlaufwerk beim Ausführen unter diesem Laufwerk.
  – Mithilfe der Domäne des Computers, auf dem PowerShell ausgeführt wird. 

Im folgenden Beispiel wird gezeigt, wie ein vollqualifizierter Domänenname als Parameterwert angegeben wird.
  -Server &quot;corp.contoso.com&quot;</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>Confirm</maml:name>
    			<maml:description>
				<maml:para>Fordert Sie vor der Ausführung des Befehls zur Bestätigung auf.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
   			 <maml:name>WhatIf</maml:name>
    			<maml:description>
				<maml:para>Beschreibt die Auswirkungen einer Ausführung des Befehls, ohne den Befehl tatsächlich auszuführen.</maml:para>
    			</maml:description>
    			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>	
				<dev:type>
  				<maml:name>SwitchParameter</maml:name> 
					<maml:uri/> 
					</dev:type>
 			<dev:defaultValue/> 
			</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name>Keiner oder Microsoft.ActiveDirectory.Management.ADAccount</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					Vom Identity-Parameter wird ein Kontoobjekt empfangen.

Abgeleitete Typen, z. B. die folgenden Typen, werden ebenfalls akzeptiert:
  Microsoft.ActiveDirectory.Management.ADUser
  Microsoft.ActiveDirectory.Management.ADComputer
  Microsoft.ActiveDirectory.Management.ADServiceAccount
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keine</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht für einen Active Directory-Snapshot verwendet werden.
Dieses Cmdlet kann nicht für einen schreibgeschützten Domänencontroller verwendet werden.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity KimAb
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entsperrt das Konto mit dem SamAccountName &quot;KimAB&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Unlock-ADAccount -Identity &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Entsperrt das Konto mit dem DistinguishedName &quot;CN=Kim Abercrombie,OU=Finance,OU=UserAccounts,DC=FABRIKAM,DC=COM&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=145006</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Enable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Disable-ADAccount</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<ProviderHelp>
<!-- v  0.0.0.0  -->


<Name>
	ActiveDirectory
</Name>

<Drives>
	<Para>Ein Standardlaufwerk wird bereitgestellt mit dem Namen AD:</Para>
</Drives>
<Synopsis>
	Der Active Directory-Anbieter für Windows PowerShell ist für den Zugriff auf in Active Directory-Verzeichnisdiensten (AD DS), Active Directory Lightweight Directory Services (AD LDS) und Snapshotvolumes gespeicherte Daten vorgesehen, die als LDAP-Server innerhalb von Windows PowerShell verfügbar gemacht werden.
</Synopsis>

<DetailedDescription>
	<para>Der Active Directory-Anbieter implementiert einen Satz von Befehlen, mit denen die Befehlszeilennavigation durch die Active Directory-Struktur wie bei der Navigation in einem Dateisystem ausgeführt werden kann. Der Anbieter implementiert Standardbefehle wie &quot;dir&quot;, &quot;ls&quot; (get-childitem) und &quot;cd&quot;, &quot;mkdir&quot; (set-location, new-item). Außerdem wird eine Verbindung mit einer angegebenen Instanz von Active Directory durch PowerShell-Laufwerke beibehalten. Mithilfe des Active Directory-Anbieters kann ein Administrator Verbindungen mit mehreren Instanzen von Active Directory gleichzeitig herstellen, z. B. mit mehreren Domänencontrollern in mehreren Domänen, AD LDS-Instanzen oder Snapshots. Ein Administrator kann dann Standardvorgänge wie Erstellen, Lesen, Aktualisieren und Löschen über alle diese Instanzen ausführen, indem sie als PowerShell-Laufwerke behandelt werden.  

Diese Active Directory-Anbieter-Cmdlets überschreiben die Kern-Cmdlets von Windows PowerShell. Die Active Directory-Anbieter-Cmdlets lauten wie folgt: 

· Get-PSProvider
· New-PSDrive
· Get-PSDrive
· Remove-PSDrive
· Get-ChildItem
· Get-Item
· New-Item
· Remove-Item
· Move-Item
· Rename-Item
· Get-ItemProperty
· Set-ItemProperty
· Clear-ItemProperty
· Get-ACL
· Set-ACL

Hinweise: 
Active Directory-Modul-Cmdlets können auch unter einem Active Directory-Anbieterlaufwerk verwendet werden.

In der Praxis sind die Active Directory-Modul-Cmdlets nützlicher als die Cmdlets für allgemeinere Aufgaben. Weitere Informationen finden Sie unter &quot;about_ActiveDirectory&quot;.</para>
</DetailedDescription>

<Capabilities>
	<para></para>
</Capabilities>
<Filters>
	<para>LDAP-Filter ist das einzige von den Active Directory-Anbieter-Cmdlets unterstützte Filterformat.</para>
</Filters>
<Notes>
	Die Unterstützung für Nicht-Microsoft-Verzeichnisdienste ist kein Ziel des ActiveDirectory-Anbieters.

Der -Filter-Parameter funktioniert nicht, wenn er unter Stamm-DSE ausgeführt wird.

Alle Active Directory-Anbieter-Cmdlets außer Get-ChildItem bearbeiten ein einzelnes Objekt. Wenn Sie mit mehreren Objekten arbeiten möchten, müssen Sie zuerst Get-ChildItem mit &quot;-Filter&quot; aufrufen und dann über die Pipeline an das entsprechende Cmdlet übergeben (z. B. set-Acl).
</Notes>
<Tasks>
	<Task>
  		<Title>
			Verwalten eines Laufwerks
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Erstellt ein neues Laufwerk, das mit einem Domänencontroller in der Domäne &quot;contoso.com&quot; verbunden ist und dessen Stamm &quot;rootDSE&quot; in der Domäne entspricht.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 2 --------------------------
				</Title> 
				<Introduction>
					<para>Erstellt ein neues Laufwerk, das mit &quot;contoso.com&quot; verbunden ist und dessen Stamm dem Domänennamenskontext entspricht.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;New-PSDrive -name contosoAD -psProvider ActiveDirectory -root &quot;DC=contoso,DC=com&quot; -server contoso.com
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 3 --------------------------
				</Title> 
				<Introduction>
					<para>Entfernt das Laufwerk &quot;contosoAD&quot;.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Remove-PSDrive contosoAD
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 4 --------------------------
				</Title> 
				<Introduction>
					<para>Zeigt alle bereitgestellten Laufwerke im System an.</para>
				</Introduction> 
	  			<Code>
					PS C:\&gt;Get-PSDrive
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			Navigation
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Legt den aktuellen Speicherort fest.</para>
				</Introduction> 
	  			<Code>
					PS C:\set-location AD:
				</Code>
				<Remarks>
					<para>Der Active Directory-Anbieter macht über ein hierarchisches Navigationssystem die Active Directory-Datenbank verfügbar. Dieses ähnelt dem Dateisystem. 

Sie können z. B. mit den folgenden Befehlen im Verzeichnis navigieren:
cd
dir
remove

Andere Befehlszeilenschnittstellenparadigmen wie ''.&quot; und &quot;..&quot; funktionieren erwartungsgemäß.</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			Lesen eines Objekts
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Ruft alle Attribute eines Benutzers mit dem samAccountName &quot;ContosoUser1&quot; ab.</para>
				</Introduction> 
	  			<Code>
					PS AD:\&gt;Get-ChildItem -filter &quot;(sAMAccountName=ContosoUser1)&quot; -properties * -recurse
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			Aktualisieren eines Objekts
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Legt &quot;otherTelephone&quot; (mehrwertiges Attribut) für einen Benutzer fest.</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Set-ItemProperty -Path &quot;AD:\CN= ContosoUser1,CN=Users,DC=Contoso,DC=com&quot; -Name otherTelephone -value &quot;111-111-1111&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			Verwalten von Sicherheitsbeschreibungen 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Abrufen der ACL</para>
				</Introduction> 
	  			<Code>
					$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 2 --------------------------
				</Title> 
				<Introduction>
					<para>Abrufen des Benutzers</para>
				</Introduction> 
	  			<Code>
					$user = get-aduser adpsuser1
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 3 --------------------------
				</Title> 
				<Introduction>
					<para>Erstellen des ACE für die write-Eigenschaft</para>
				</Introduction> 
	  			<Code>
					$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 4 --------------------------
				</Title> 
				<Introduction>
					<para>Hinzufügen des ACE zur ACL</para>
				</Introduction> 
	  			<Code>
					$acl.AddAccessRule($ace)
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 5 --------------------------
				</Title> 
				<Introduction>
					<para>Festlegen der ACL</para>
				</Introduction> 
	  			<Code>
					Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
				</Code>
				<Remarks>
					<para>Ändert die Sicherheitsbeschreibung eines Benutzers, um einen neuen ACE hinzuzufügen.</para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
	<Task>
  		<Title>
			Verwalten von Sicherheitsbeschreibungen 
		</Title>

   		<Description>
			<para></para>		
		</Description>

		<Examples>
                        <Example>
                        	<Title>
					-------------------------- BEISPIEL 1 --------------------------
				</Title> 
				<Introduction>
					<para>Abrufen der Sicherheitsbeschreibung eines Benutzers</para>
				</Introduction> 
	  			<Code>
					C:\PS&gt;Get-ACL -Path &quot;AD:\CN=ContosoUser1,CN=Users,DC=Contoso,DC= com&quot;
				</Code>
				<Remarks>
					<para></para>
	  			</Remarks>
			</Example>
		</Examples>
	</Task>
</Tasks>
<DynamicParameters>
</DynamicParameters>
<RelatedLinks>
    <navigationLink>
        <linkText>about_providers</linkText>
        <uri/>
    </navigationLink>
</RelatedLinks>



<CmdletHelpPaths>
<CmdletHelpPath ID="0">\n
<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Clear-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>Löscht den Wert einer Eigenschaft aus einem Active Directory-Objekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Clear</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Clear-ItemProperty&quot; löscht den Wert einer Eigenschaft, jedoch nicht die Eigenschaft selbst. Sie können mit diesem Cmdlet die Daten aus einem Active Directory-Objekteigenschaftswert löschen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Clear-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt die Namen der zu entfernenden Eigenschaften an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Simple&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Simple: Der Bindungsprozess sendet den Benutzernamen und das Kennwort im Klartext.
        (Nur für die Verwendung mit SSL-Verschlüsselung empfohlen.)
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Simple&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Simple: Der Bindungsprozess sendet den Benutzernamen und das Kennwort im Klartext.
        (Nur für die Verwendung mit SSL-Verschlüsselung empfohlen.)
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt die Namen der zu entfernenden Eigenschaften an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Keiner</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; description</dev:code>
  			<dev:remarks>
  			        <maml:para>Löscht die description-Eigenschaft des Active Directory-Objekts mit dem DistinguishedName &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Clear-ItemProperty -Path &quot;AD:\CN=ADPSUser1,DC=Fabrikam,DC=com&quot; -Name otherTelephone</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt einen Wert für die mehrwertige otherTelephone-Eigenschaft für das Objekt &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152477</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Item
		</command:name>
		<maml:description>
			<maml:para>Ruft das Element am angegebenen Speicherort ab. Dieses Cmdlet aktiviert eine Basissuche nach einem Active Directory-Speicher.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-Item&quot; ruft das Element am angegebenen Speicherort ab. Dabei wird der Inhalt des Elements am Speicherort nur dann abgerufen, wenn Sie mit einem Platzhalterzeichen (*) den gesamten Inhalt des Elements anfordern.
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zu einem oder mehreren Speicherorten an. Platzhalter sind zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Gibt an, dass die angegebenen Elemente ausgelassen werden. Der Path-Parameter wird durch den Wert dieses Parameters qualifiziert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Gibt eine numerische Seitengröße an. Der Standardwert lautet 256.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt eine durch Trennzeichen getrennte Liste von Eigenschaften an, die für die einzelnen Elemente (Active Directory-Objekte) abgerufen werden sollen.  Der Platzhalter &quot;*&quot; kann verwendet werden, um alle Eigenschaften abzurufen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Gibt eine maximale Anzahl von Einträgen an, die von einer Suche zurückgegeben werden sollen. 
Der Standardwert ist 0 (null), eine Grenze ist nicht vorhanden.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials

</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Gibt an, dass die angegebenen Elemente ausgelassen werden. Der Path-Parameter wird durch den Wert dieses Parameters qualifiziert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Gibt eine numerische Seitengröße an. Der Standardwert lautet 256.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zu einem oder mehreren Speicherorten an. Platzhalter sind zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt eine durch Trennzeichen getrennte Liste von Eigenschaften an, die für die einzelnen Elemente (Active Directory-Objekte) abgerufen werden sollen.  Der Platzhalter &quot;*&quot; kann verwendet werden, um alle Eigenschaften abzurufen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Gibt eine maximale Anzahl von Einträgen an, die von einer Suche zurückgegeben werden sollen. 
Der Standardwert ist 0 (null), eine Grenze ist nicht vorhanden.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt mindestens ein ADObject-Objekt zurück. Ein ADObject enthält Name, DistinguishedName, ObjectClass und ObjectGUID eines Objekts im Speicher. Außerdem enthält es einen Eigenschaftenbehälter mit den angeforderten Eigenschaftennamen und -werten.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item .</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::DC=fabrikam,DC=com 
PSParentPath      : 
PSChildName       : DC=fabrikam,DC=com 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : d66301e9-b1da-41ef-866c-12bde9b4a0a8 
distinguishedName : DC=fabrikam,DC=com 
name              : fabrikam 
objectClass       : domainDNS </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Standardeigenschaften des aktuellen Speicherorts ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties samAccountName</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath                : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName           : CN=User1 
PSDrive               : AD 
PSProvider            : ActiveDirectory 
PSIsContainer         : True 
sAMAccountName        : user1 
lastLogon             : 0 
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0 
distinguishedName : CN=User1,DC=fabrikam,DC=com 
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die samAccountName-Eigenschaft des Objekts &quot;AD:\CN=User1, DC=fabrikam, DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Item &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; -Properties * </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath                : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName           : CN=User1 
PSDrive               : AD 
PSProvider            : ActiveDirectory 
PSIsContainer         : True 
codePage              : 0
cn                    : user1 
otherHomePhone        : {111-1111}
logonCount            : 0
description           : blah 
sAMAccountName        : user1 
lastLogon             : 0
objectCategory        : CN=Person,CN=Schema,CN=Configuration,DC=fabrikam,DC=com 
badPwdCount           : 0
distinguishedName : CN=User1,DC=fabrikam,DC=com 
dSCorePropagationData : {31.12.1600 16:00:00} 
pwdLastSet            : 0
badPasswordTime       : 0
uSNChanged            : 14933
whenChanged           : 17.03.2009 12:31:52 
userAccountControl                 : 546
instanceType          : 4
objectSid             : S-1-5-21-1743280271-992198667-3042434588-1102 
lastLogoff            : 0
sAMAccountType        : 805306368
objectGUID            : 83629f3e-2b09-4896-bfe7-15b544709792 
objectClass       : user 
primaryGroupID        : 513
uSNCreated            : 14930 
countryCode           : 0
nTSecurityDescriptor  : System.DirectoryServices.ActiveDirectorySecurity 
accountExpires        : 9223372036854775807 
whenCreated           : 17.03.2009 12:31:25 
name                  : user1</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft alle Eigenschaften des Objekts &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152475</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ChildItem
		</command:name>
		<maml:description>
			<maml:para>Ruft die Elemente und untergeordneten Elemente an einem oder mehreren angegebenen Speicherorten ab und stellt so die Suche nach einem Active Directory-Speicher auf einer Ebene und in einer Teilstruktur bereit.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ChildItem</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ChildItem&quot; ruft die Elemente an den angegebenen Speicherorten ab. Wenn es sich bei dem Element um einen Container handelt, werden die darin enthaltenen (untergeordneten) Elemente abgerufen. Mit dem -Recurse-Parameter können Sie alle Elemente in allen untergeordneten Containern abrufen. 

Wenn der angegebene Pfad der ROOTDSE-Speicherort ist, wird hiermit eine Liste aller Partitionen zurückgegeben, die von dem Server auf dem angegebenen Port gehostet werden.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ChildItem</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zu einem oder mehreren Speicherorten an. Platzhalter sind nicht zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Gibt einen LDAP-Filter für die Suche an. Wenn der angegebene Pfad das ROOTDSE-Element ist, wird Filter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 

Mögliche Werte lauten: &quot;Negotiate&quot; und &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Lässt die angegebenen Elemente aus.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Formattyp für einen Pfad an. Mögliche Werte sind &quot;X500&quot; (z. B. CN=Users,DC=fabricam,DC=com) oder &quot;Canonical&quot; (z. B. fabricam.com/Users).</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Ruft nur die angegebenen Elemente ab. Der Path-Parameter wird durch den Wert dieses Parameters qualifiziert. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Ruft nur die Namen der Elemente an den Speicherorten ab.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PageSize</maml:name>
				<maml:description>
					<maml:para>Gibt eine numerische Seitengröße an. </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Properties</maml:name>
				<maml:description>
					<maml:para>Gibt eine durch Trennzeichen getrennte Liste von Eigenschaften an, die für die einzelnen Elemente (Active Directory-Objekte) abgerufen werden sollen.  Der Platzhalter &quot;*&quot; kann verwendet werden, um alle Eigenschaften abzurufen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Ruft die Elemente an den angegebenen Speicherorten und alle untergeordneten Elemente der angegebenen Speicherorte ab. Mögliche Werte lauten: &quot;True&quot; oder &quot;False&quot;.

Hinweis: Rufen Sie damit eine Teilstruktursuche auf.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SizeLimit</maml:name>
				<maml:description>
					<maml:para>Gibt eine maximale Anzahl von Einträgen an, die von einer Suche zurückgegeben werden sollen. 
Der Standardwert ist 0 (null), eine Grenze ist nicht vorhanden.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 

Mögliche Werte lauten: &quot;Negotiate&quot; und &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Lässt die angegebenen Elemente aus.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Gibt einen LDAP-Filter für die Suche an. Wenn der angegebene Pfad das ROOTDSE-Element ist, wird Filter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>Gibt den Formattyp für einen Pfad an. Mögliche Werte sind &quot;X500&quot; (z. B. CN=Users,DC=fabricam,DC=com) oder &quot;Canonical&quot; (z. B. fabricam.com/Users).</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Ruft nur die angegebenen Elemente ab. Der Path-Parameter wird durch den Wert dieses Parameters qualifiziert. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Ruft nur die Namen der Elemente an den Speicherorten ab.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PageSize</maml:name>
			<maml:description>
				<maml:para>Gibt eine numerische Seitengröße an. </maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>256</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zu einem oder mehreren Speicherorten an. Platzhalter sind nicht zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Properties</maml:name>
			<maml:description>
				<maml:para>Gibt eine durch Trennzeichen getrennte Liste von Eigenschaften an, die für die einzelnen Elemente (Active Directory-Objekte) abgerufen werden sollen.  Der Platzhalter &quot;*&quot; kann verwendet werden, um alle Eigenschaften abzurufen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>Ruft die Elemente an den angegebenen Speicherorten und alle untergeordneten Elemente der angegebenen Speicherorte ab. Mögliche Werte lauten: &quot;True&quot; oder &quot;False&quot;.

Hinweis: Rufen Sie damit eine Teilstruktursuche auf.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>false</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SizeLimit</maml:name>
			<maml:description>
				<maml:para>Gibt eine maximale Anzahl von Einträgen an, die von einer Suche zurückgegeben werden sollen. 
Der Standardwert ist 0 (null), eine Grenze ist nicht vorhanden.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">int</command:parameterValue>
			<dev:type>
				<maml:name>int</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>0</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Objekte im Container &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; 
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft alle Benutzer in einem Container ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ChildItem &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Filter &quot;(&amp;(objectclass=user)(objectcategory=person))&quot; -Recurse
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft rekursiv alle Benutzer unter dem Pfad &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152471</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>Ruft die Eigenschaften eines angegebenen Active Directory-Objekts ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Mit dem Cmdlet &quot;Get-ItemProperty&quot; werden die Eigenschaften des angegebenen Active Directory-Objekts abgerufen. Active Directory-Objekteigenschaften und -Werte können Sie mit Get-ItemProperty anzeigen.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad zum Active Directory-Objekt an. Platzhalter sind nicht zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen der abzurufenden Eigenschaft oder Eigenschaften an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen der abzurufenden Eigenschaft oder Eigenschaften an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad zum Active Directory-Objekt an. Platzhalter sind nicht zulässig. Der Standardspeicherort ist das aktuelle Verzeichnis.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein PSObject zurück, das die Namen und die Werte der angeforderten Eigenschaften enthält.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname</dev:code>
  			<dev:remarks>
 				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive        : AD 
PSProvider     : ActiveDirectory 
samaccountname : User1 </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die samAccountName-Eigenschaft vom Objekt &quot;AD:\CN=User1, DC=fabrikam, DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ItemProperty &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; samaccountname, objectSid </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath         : ActiveDirectory::CN=User1,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName    : CN=User1 
PSDrive        : AD 
PSProvider     : ActiveDirectory 
samaccountname : User1 
objectSid      : S-1-5-21-1743280271-992198667-3042434588-1102</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die samaccountname-Eigenschaft und die objectSid-Eigenschaft vom Objekt &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152479</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Get-Acl
		</command:name>
		<maml:description>
			<maml:para>Ruft die Sicherheitsbeschreibung für Active Directory-Objekte ab.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Get-ACL&quot; ruft die Objekte ab, die die Sicherheitsbeschreibung eines Active Directory-Objekts darstellen. Die Sicherheitsbeschreibung enthält die Zugriffssteuerungslisten (Access Control Lists, ACL) des Active Directory-Objekts. Die ACL gibt die Zugriffsberechtigungen von Benutzern und Benutzergruppen für das Active Directory-Objekt an. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-Acl</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Audit</maml:name>
				<maml:description>
					<maml:para>Ruft die Überwachungsdaten für die Sicherheitsbeschreibung aus der Zugriffssteuerungsliste für das System (System Access Control List, SACL) ab.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Audit</maml:name>
			<maml:description>
				<maml:para>Ruft die Überwachungsdaten für die Sicherheitsbeschreibung aus der Zugriffssteuerungsliste für das System (System Access Control List, SACL) ab.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ActiveDirectorySecurity (geerbt von System.Security.AccessControl.DirectoryObjectSecurity)</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein ActiveDirectorySecurity-Objekt zurück, das die Sicherheitsbeschreibung des zurückgegebenen Objekts darstellt, das von der Ausführung dieses Cmdlets angegeben wird.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ruft die Sicherheitsbeschreibung für den Benutzer &quot;ADPSUser1&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-Acl &quot;AD:\CN=User1,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
 				<maml:para>Path                       Owner                      Access
----                       -----                      ------
ActiveDirectory::CN=Use... FABRIKAM\Domain Admins   NT AUTHORITY\SELF Allo...</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Ruft die Sicherheitsbeschreibung für den Benutzer &quot;User1&quot; ab.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152469</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Set-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Move-Item
		</command:name>
		<maml:description>
			<maml:para>Verschiebt ein Active Directory-Objekt von einem Speicherort (Container) an einen anderen.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Move</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Move-Item&quot; verschiebt ein Active Directory-Objekt, einschließlich Eigenschaften, Inhalt und untergeordneter Elemente, von einem Speicherort (Container) an einen anderen Speicherort (Container). Die Speicherorte müssen von ein und demselben Anbieter unterstützt werden. Beim Verschieben eines Active Directory-Objekts wird dieses am neuen Speicherort hinzugefügt und am ursprünglichen Speicherort gelöscht. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Move-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad des Elements an, für das die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Destination</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad zum Speicherort an, an den das Element verschoben wird. Hierbei muss es sich um einen Active Directory-Container handeln.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CrossDomain</maml:name>
				<maml:description>
					<maml:para>Gibt eine domänenübergreifende Verschiebung an. Sie müssen den DNS-Namen für den Ziel-DCs bereitstellen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CrossDomain</maml:name>
			<maml:description>
				<maml:para>Gibt eine domänenübergreifende Verschiebung an. Sie müssen den DNS-Namen für den Ziel-DCs bereitstellen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Destination</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad zum Speicherort an, an den das Element verschoben wird. Hierbei muss es sich um einen Active Directory-Container handeln.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad des Elements an, für das die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Die Cmdlet-Ausgabe wird durch das PassThru-Flag gesteuert. </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None, wenn -PassThru nicht angegeben ist.
Wenn -PassThru angegeben ist, wird ein ADObject, das das verschobene Objekt darstellt, in die Pipeline geschrieben.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Benutzerobjekt von einer Organisationseinheit in eine andere.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\CN=Users,DC=ADPS,DC=Fabrikam,DC=com&quot; -Destination &quot;AD:\CN=ADPSUsers,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Containerobjekt mit allen untergeordneten Elementen.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Move-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; &quot;AD:\OU=TestOU,DC=child,DC=fabrikam,DC=com&quot; -CrossDomain dc1.child.fabrikam.com

</dev:code>
  			<dev:remarks>
  			        <maml:para>Verschiebt ein Objekt mit einer CrossDomain-Verschiebung in eine andere Domäne.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152476</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-Item
		</command:name>
		<maml:description>
			<maml:para>Erstellt ein neues Active Directory-Objekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-Item&quot; erstellt ein neues Active Directory-Objekt. Mit dem Cmdlet kann auch der Wert des neuen Objekts festgelegt werden. </maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad für das neue AD-Objekt an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des neuen AD-Objekts an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 

Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>Gibt die AD-Objektklasse des neuen Elements an, z. B.: group, user, organizationalUnit usw.

Wenn der ItemType-Parameter auf &quot;Directory&quot; festgelegt ist, erstellt das Cmdlet eine neue OrganizationalUnit.

Das PowerShell-Anbieter-Cmdlet &quot;mkdir&quot; ruft das Cmdlet &quot;New-Item&quot; mit dem auf &quot;Directory&quot; festgelegten ItemType-Parameter auf, sodass das Cmdlet &quot;mkdir&quot; (auch &quot;md&quot;) bei Verwendung im ActiveDirectory-Anbieter eine neue OrganizationalUnit erstellt.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Gibt den Wert des neuen Elements an. Neue Objektattribute und Werte werden als assoziatives Array angegeben.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt einen Pfad für das neue AD-Objekt an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt den Namen des neuen AD-Objekts an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 

Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>ItemType</maml:name>
				<maml:description>
					<maml:para>Gibt die AD-Objektklasse des neuen Elements an, z. B.: group, user, organizationalUnit usw.

Wenn der ItemType-Parameter auf &quot;Directory&quot; festgelegt ist, erstellt das Cmdlet eine neue OrganizationalUnit.

Das PowerShell-Anbieter-Cmdlet &quot;mkdir&quot; ruft das Cmdlet &quot;New-Item&quot; mit dem auf &quot;Directory&quot; festgelegten ItemType-Parameter auf, sodass das Cmdlet &quot;mkdir&quot; (auch &quot;md&quot;) bei Verwendung im ActiveDirectory-Anbieter eine neue OrganizationalUnit erstellt.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Gibt den Wert des neuen Elements an. Neue Objektattribute und Werte werden als assoziatives Array angegeben.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 

Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>ItemType</maml:name>
			<maml:description>
				<maml:para>Gibt die AD-Objektklasse des neuen Elements an, z. B.: group, user, organizationalUnit usw.

Wenn der ItemType-Parameter auf &quot;Directory&quot; festgelegt ist, erstellt das Cmdlet eine neue OrganizationalUnit.

Das PowerShell-Anbieter-Cmdlet &quot;mkdir&quot; ruft das Cmdlet &quot;New-Item&quot; mit dem auf &quot;Directory&quot; festgelegten ItemType-Parameter auf, sodass das Cmdlet &quot;mkdir&quot; (auch &quot;md&quot;) bei Verwendung im ActiveDirectory-Anbieter eine neue OrganizationalUnit erstellt.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt den Namen des neuen AD-Objekts an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt einen Pfad für das neue AD-Objekt an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Gibt den Wert des neuen Elements an. Neue Objektattribute und Werte werden als assoziatives Array angegeben.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>ADObject, wenn -PassThru angegeben wird.</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein ADObject zurück, das das neu erstellte Objekt im Verzeichnis darstellt.
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Name &quot;OU=TestOU3&quot; -Itemtype organizationalUnit </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::OU=TestOU3,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::DC=fabrikam,DC=com 
PSChildName       : OU=TestOU3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 786ee969-88b7-43ba-80d2-acc3d624b06e 
distinguishedName : OU=TestOU3,DC=fabrikam,DC=com 
name              : TestOU3 
objectClass       : organizationalUnit </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Erstellt am aktuellen Speicherort eine neue Organisationseinheit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-Item -Path &quot;CN=Users,DC=fabrikam,DC=com&quot; -Name &quot;CN=User3&quot; -ItemType user -Value @{samAccountName='user3';description='test user'} </dev:code>
  			<dev:remarks>
 				<maml:para>PSPath            : ActiveDirectory::CN=User3,CN=Users,DC=fabrikam,DC=com 
PSParentPath      : ActiveDirectory::CN=Users,DC=fabrikam,DC=com 
PSChildName       : CN=User3 
PSDrive           : AD 
PSProvider        : ActiveDirectory 
PSIsContainer     : True 
objectGUID        : 617e9745-21b2-44f5-9a91-e2d1831059eb 
objectClass       : user 
distinguishedName : CN=User3,CN=Users,DC=fabrikam,DC=com 
name              : User3 
sAMAccountName    : user3 
description       : test user</maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Erstellt einen neuen Benutzer in einem angegebenen Container und legt die samAccountName-Eigenschaft und die description-Eigenschaft beim Erstellen fest. </maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152472</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   New-PSDrive
		</command:name>
		<maml:description>
			<maml:para>Erstellt ein neues Laufwerk für Active Directory für Windows PowerShell. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>PSDrive</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;New-PsDrive&quot; erstellt ein neues Laufwerk für Active Directory für Windows PowerShell, das eine Verbindung mit einem Active Directory-Speicher darstellt.

Sie können mit den erstellten PsDrives auf Daten im zugeordneten Datenspeicher zugreifen wie auf jedes andere zugeordnete Laufwerk. Sie können Speicherorte auf das Laufwerk (set-location, cd oder chdir) ändern und auf den Inhalt des Laufwerks (get-item, get-childitem, dir) zugreifen.
    
Active Directory-PsDrives sind jedoch nur für Windows PowerShell verfügbar. Sie können nicht mit Windows-Explorer, WMI, COM oder .NET oder mit Tools wie Net Use darauf zugreifen.
    
PsDrives sind nur in der aktuellen Windows PowerShell-Konsole vorhanden. Um das Laufwerk permanent zu machen, können Sie die Konsole, der Sie das Laufwerk hinzugefügt haben, exportieren oder den Befehl &quot;New-PsDrive&quot; im Windows PowerShell-Profil speichern.

Verwenden Sie Remove-PsDrive, um ein Laufwerk zu löschen, das von New-PsDrive erstellt wurde.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-PSDrive</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>PSProvider</maml:name>
				<maml:description>
					<maml:para>Gibt den Windows PowerShell-Anbieter (&quot;PsProvider&quot;) an, der Laufwerke dieses Typs unterstützt.

Wenn das PsDrive z. B. einer Netzwerkfreigabe oder einem Dateisystemverzeichnis zugeordnet ist, lautet der PsProvider &quot;FileSystem&quot;. Wenn das PsDrive einem Registrierungsschlüssel zugeordnet ist, lautet der PsProvider &quot;Registry&quot;.

Geben Sie &quot;get-psprovider&quot; ein, um eine Liste der PsProviders in der Windows PowerShell-Konsole anzuzeigen.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Root</maml:name>
				<maml:description>
					<maml:para>Gibt den internen Stamm bzw. Pfad des Anbieters für das hinzuzufügende Laufwerk an. Verwenden Sie für das X500-Format den DN und für das kanonisches Format den kanonischen Namen.
Bei Angabe einer leeren Zeichenfolge wird die Verbindung an RootDSE weitergeleitet.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Gibt eine kurze Beschreibung des zu erstellenden Laufwerks an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfadtyp für das Anbieterlaufwerk an.  Zulässige Werte lauten &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GlobalCatalog</maml:name>
				<maml:description>
					<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
				</maml:description>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Scope</maml:name>
				<maml:description>
					<maml:para>Gibt einen Index zum Identifizieren des Bereichs an, in dem das Laufwerk installiert wird.

Hinweis: Dieser Parameter wird ignoriert.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para>Gibt eine kurze Beschreibung des zu erstellenden Laufwerks an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfadtyp für das Anbieterlaufwerk an.  Zulässige Werte lauten &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>GlobalCatalog</maml:name>
			<maml:description>
				<maml:para>Gibt eine Verbindung mit dem globalen Katalog über den GC-Anschluss an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>PSProvider</maml:name>
			<maml:description>
				<maml:para>Gibt den Windows PowerShell-Anbieter (&quot;PsProvider&quot;) an, der Laufwerke dieses Typs unterstützt.

Wenn das PsDrive z. B. einer Netzwerkfreigabe oder einem Dateisystemverzeichnis zugeordnet ist, lautet der PsProvider &quot;FileSystem&quot;. Wenn das PsDrive einem Registrierungsschlüssel zugeordnet ist, lautet der PsProvider &quot;Registry&quot;.

Geben Sie &quot;get-psprovider&quot; ein, um eine Liste der PsProviders in der Windows PowerShell-Konsole anzuzeigen.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Root</maml:name>
			<maml:description>
				<maml:para>Gibt den internen Stamm bzw. Pfad des Anbieters für das hinzuzufügende Laufwerk an. Verwenden Sie für das X500-Format den DN und für das kanonisches Format den kanonischen Namen.
Bei Angabe einer leeren Zeichenfolge wird die Verbindung an RootDSE weitergeleitet.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Scope</maml:name>
			<maml:description>
				<maml:para>Gibt einen Index zum Identifizieren des Bereichs an, in dem das Laufwerk installiert wird.

Hinweis: Dieser Parameter wird ignoriert.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>PSDrive, wenn -PassThru angegeben wird.</maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					Gibt ein ADDriveInfo-Objekt zurück. ADDriveInfo wird von PSDriveInfo abgeleitet und enthält die folgenden zusätzlichen Eigenschaften.

    public class ADDriveInfo : PSDriveInfo
    {
        public string Server {get; set;}
        public ADPathFormat FormatType {get; set;}
        public ADAuthType AuthType {get; set;}
        public bool GlobalCatalog {get; set;} 
        public bool SecureSocketLayer {get; set;}
        public bool Encryption {get; set;}
        public bool Signing {get; set;}
    }
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Wenn das Active Directory-Modul importiert wird, wird ein neues PSDrive für mit einer Domäne verbundene Computer erstellt. Das Standardlaufwerk wird in rootDSE des LDAP-Standardservers bereitgestellt. Dem Standardname des Laufwerks ist &quot;AD&quot;.
Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.

                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;DC=fabrikam,DC=com&quot; </dev:code>
  			<dev:remarks>
 				<maml:para>Name           Used (GB)     Free (GB) Provider      Root 
----           ---------     --------- --------      ---- 
AD1                                    ActiveDire... DC=fabrikam,DC=com </maml:para>
				<maml:para></maml:para>				
				<maml:para></maml:para>
                                <maml:para>Beschreibung</maml:para>
                                <maml:para>-----------</maml:para>
  			        <maml:para>Stellt ein Laufwerk im Standardnamenskontext auf dem Standardserver bereit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADGC -PSProvider ActiveDirectory -Root &quot;&quot; -server fabrikam.com:3268</dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt ein Laufwerk in rootDSE auf einem globalen Katalog bereit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 3 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name ADLDS -PsProvider ActiveDirectory -Root &quot;DC=AppNC,DC=com&quot; -server server1:50000</dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt ein Laufwerk in einer AD LDS-Instanz bereit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 4 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>New-PSDrive -Name AD1 -PSProvider ActiveDirectory -Root &quot;fabrikam.com/&quot; -format canonical</dev:code>
  			<dev:remarks>
  			        <maml:para>Stellt ein Laufwerk im Standardnamenskontext auf dem Standardserver mit dem kanonischen Format bereit.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152480</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Remove-Item
		</command:name>
		<maml:description>
			<maml:para>Löscht das angegebene Active Directory-Objekt.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Remove-Item&quot; löscht das angegebene Active Directory-Objekt.</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-Item</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Lässt die angegebenen Elemente aus.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Ruft nur die angegebenen Objekte ab.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Recurse</maml:name>
				<maml:description>
					<maml:para>Führt dazu, dass die Elemente an den angegebenen Speicherorten und an allen untergeordneten Speicherorten gelöscht werden. Mit diesem Parameter wird das Löschen der Struktur aktiviert.  
Mögliche Werte lauten: &quot;True&quot; oder &quot;False&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Lässt die angegebenen Elemente aus.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para>Gibt den Formattyp an. Mögliche Werte lauten: &quot;X500&quot; oder &quot;Canonical&quot;.</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Ruft nur die angegebenen Objekte ab.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Recurse</maml:name>
			<maml:description>
				<maml:para>Führt dazu, dass die Elemente an den angegebenen Speicherorten und an allen untergeordneten Speicherorten gelöscht werden. Mit diesem Parameter wird das Löschen der Struktur aktiviert.  
Mögliche Werte lauten: &quot;True&quot; oder &quot;False&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">switch</command:parameterValue>
			<dev:type>
				<maml:name>switch</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None
				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\CN=User1,OU=TestOU,DC=fabrikam,DC=com&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt ein einzelnes Element.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Remove-Item &quot;AD:\OU=TestOU,DC=fabrikam,DC=com&quot; -Recurse</dev:code>
  			<dev:remarks>
  			        <maml:para>Entfernt einen Container und alle Objekte unter diesem Container.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152474</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Rename-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Rename-Item
		</command:name>
		<maml:description>
			<maml:para>Benennt ein Active Directory-Objekt um.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Rename</command:verb>
		<command:noun>Item</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Rename-Item&quot; ändert den Namen eines angegebenen Active Directory-Objekts. Das Cmdlet hat keine Auswirkungen auf den Inhalt des umbenannten Objekts.

Bei &quot;Name&quot; muss es sich um einen relativen definierten Namen handeln.  Sie können mit Rename-Item keine Elemente verschieben. Zum Verschieben und Umbenennen eines Active Directory-Objekts verwenden Sie das Cmdlet &quot;Move-Item&quot;.
</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Rename-Item</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad der Objekte an, für die die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>NewName</maml:name>
				<maml:description>
					<maml:para>Gibt den neuen Namen des Active Directory-Objekts an. Dabei muss es sich um einen RDN (Relative Distinguished Name, Relativer definierter Name) handeln.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. Mögliche Werte lauten: &quot;Negotiate&quot; und &quot;Basic&quot;.

        Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.

        Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. Mögliche Werte lauten: &quot;Negotiate&quot; und &quot;Basic&quot;.

        Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.

        Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>null</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>NewName</maml:name>
			<maml:description>
				<maml:para>Gibt den neuen Namen des Active Directory-Objekts an. Dabei muss es sich um einen RDN (Relative Distinguished Name, Relativer definierter Name) handeln.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad der Objekte an, für die die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Die Cmdlet-Ausgabe wird durch das PassThru-Flag gesteuert. </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None, wenn -PassThru nicht angegeben ist.
Wenn -PassThru angegeben ist, wird ein ADObject, das das umbenannte Objekt darstellt, in die Pipeline geschrieben.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Rename-Item &quot;AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com&quot; &quot;CN=User4&quot;</dev:code>
  			<dev:remarks>
  			        <maml:para>Benennt das Benutzerobjekt unter &quot;AD:\CN=User1,OU=TestOU2,DC=fabrikam,DC=com&quot; in &quot;CN=User4&quot; um.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152473</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>New-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Remove-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Move-Item</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-ItemProperty
		</command:name>
		<maml:description>
			<maml:para>Legt den Wert einer Eigenschaft eines Active Directory-Objekts fest. </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>ItemProperty</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-ItemProperty&quot; legt den Wert einer Eigenschaft eines Active Directory-Objekts fest. Mit diesem Cmdlet können Sie die Eigenschaftswerte von Active Directory-Objekten aktualisieren (hinzufügen, ersetzen, löschen).</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-ItemProperty</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Gibt eine Liste von Attributnamen für Active Directory-Objekte an, deren Wert ersetzt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>Gibt die Werte von Active Directory-Objekteigenschaften an, die ersetzt werden sollen.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AddPropertyValue</maml:name>
				<maml:description>
					<maml:para>Gibt Eigenschaftswerte als hinzuzufügendes zugeordnetes Array an. Dieses wird für mehrwertige Eigenschaften verwendet. Weitere Details erhalten Sie mit &quot;help about_associative_array&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AuthType</maml:name>
				<maml:description>
					<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>FormatType</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
				<command:parameterValueGroup>
				<command:parameterValue required="false" variableLength="false">X500</command:parameterValue>
				<command:parameterValue required="false" variableLength="false">Canonical</command:parameterValue>
				</command:parameterValueGroup>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RemovePropertyValue</maml:name>
				<maml:description>
					<maml:para>Angegebene Eigenschaftswerte als zu löschendes zugeordnetes Array. Dieses wird für mehrwertige Eigenschaften verwendet. Weitere Details erhalten Sie mit &quot;help about_associative_array&quot;.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AddPropertyValue</maml:name>
			<maml:description>
				<maml:para>Gibt Eigenschaftswerte als hinzuzufügendes zugeordnetes Array an. Dieses wird für mehrwertige Eigenschaften verwendet. Weitere Details erhalten Sie mit &quot;help about_associative_array&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AuthType</maml:name>
			<maml:description>
				<maml:para>Gibt den Autorisierungstyp zum Herstellen einer Verbindung mit dem Server an. 
Mögliche Werte lauten: &quot;Negotiate&quot; oder &quot;Basic&quot;.
  Negotiate – der zugrunde liegende SPNEGO-Sicherheitsanbieter wird verwendet.
  Basic - Führt eine einfache Bindung über eine SSL (Secure Sockets Layer)-Verbindung aus.
</maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADAuthType</command:parameterValue>
			<dev:type>
				<maml:name>ADAuthType</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Negotiate</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>Negotiate</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Basic</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Geben Sie die Anmeldeinformationen für den Sicherheitskontext an, unter dem die Aufgabe ausgeführt wird. Wenn dieser Sicherheitskontext über keine Berechtigungen auf Verzeichnisebene zum Ausführen der Aufgabe verfügt, wird vom Verzeichnis ein Fehler zurückgegeben. Die dem Laufwerk zugeordneten Anmeldeinformationen werden als Standardwert verwendet.

Um diesen Parameter anzugeben, können Sie einen Benutzernamen eingeben, z. B. &quot;User1&quot; oder &quot;Domain01\User01&quot;, oder Sie können ein PSCredential-Objekt angeben. Wenn Sie einen Benutzernamen für den Parameter angeben, fordert das Cmdlet zum Angeben eines Kennworts auf. 

Sie können ein PSCredential-Objekt auch mit einem Skript oder mit dem Cmdlet &quot;Get-Credential&quot; erstellen. Sie können dann den Credential-Parameter auf das PSCredential-Objekt festlegen. Im folgenden Beispiel wird veranschaulicht, wie Anmeldeinformationen erstellt werden.
  $AdminCredentials = Get-Credential &quot;Domain01\User01&quot;

Nachfolgend wird gezeigt, wie der Credential-Parameter auf diese Anmeldeinformationen festgelegt wird.
  -Credential $AdminCredentials
</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>FormatType</maml:name>
			<maml:description>
				<maml:para></maml:para>
				<maml:para>Nachfolgend finden Sie eine Liste der für diesen Parameter gültigen Werte:</maml:para>				
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ADPathFormat</command:parameterValue>
			<dev:type>
				<maml:name>ADPathFormat</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>X500</dev:defaultValue>
			<dev:possibleValues>
				<dev:possibleValue>
					<dev:value>X500</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
				<dev:possibleValue>
					<dev:value>Canonical</dev:value>
					<maml:description>
					    <maml:para></maml:para>
					</maml:description>
				</dev:possibleValue>
			</dev:possibleValues>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">psobject</command:parameterValue>
			<dev:type>
				<maml:name>psobject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Gibt eine Liste von Attributnamen für Active Directory-Objekte an, deren Wert ersetzt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad des Objekts an, für das die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>RemovePropertyValue</maml:name>
			<maml:description>
				<maml:para>Angegebene Eigenschaftswerte als zu löschendes zugeordnetes Array. Dieses wird für mehrwertige Eigenschaften verwendet. Weitere Details erhalten Sie mit &quot;help about_associative_array&quot;.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">hashtable</command:parameterValue>
			<dev:type>
				<maml:name>hashtable</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Server</maml:name>
			<maml:description>
				<maml:para>Gibt die spezifische Instanz von Active Directory (DS oder LDS) an, mit der eine Verbindung hergestellt werden soll. Der Parametereingabewert kann ein Domänenname, ein Gesamtstrukturname oder Hostname:Port sein.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
			<maml:name>Value</maml:name>
			<maml:description>
				<maml:para>Gibt die Werte von Active Directory-Objekteigenschaften an, die ersetzt werden sollen.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Die Cmdlet-Ausgabe wird durch das PassThru-Flag gesteuert. </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None, wenn -PassThru nicht angegeben ist.
Wenn -PassThru angegeben ist, wird ein PSObject mit den Namen und Werten der zu ändernden Eigenschaften in die Pipeline geschrieben.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -value ('111-111-1111','222-222-2222')</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt den Wert der mehrwertigen otherTelephone-Eigenschaft für das Objekt &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Set-ItemProperty -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; -Name otherTelephone -Value @('333-333-3333')</dev:code>
  			<dev:remarks>
  			        <maml:para>Fügt einen neuen Wert zur mehrwertigen otherTelephone-Eigenschaft für das Objekt &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot; hinzu.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152478</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Clear-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ItemProperty</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

<!-- v 1.1.0.9 -->
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
	<command:details>
		<command:name>
                   Set-Acl
		</command:name>
		<maml:description>
			<maml:para>Ändert die Sicherheitsbeschreibung eines angegebenen Active Directory-Objekts.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para></maml:para>
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>Acl</command:noun>
		<dev:version></dev:version>
	</command:details>
	<maml:description>
		<maml:para>Das Cmdlet &quot;Set-Acl&quot; ändert die Sicherheitsbeschreibung eines angegebenen Active Directory-Objekts, um diese an die Werte in einer bereitgestellten Sicherheitsbeschreibung anzupassen.

Zur Verwendung von Set-ACL bezeichnen Sie mit dem Path-Parameter die Ressource, deren Sicherheitsbeschreibung Sie ändern möchten, und geben Sie über den AclObject-Parameter eine Sicherheitsbeschreibung mit den Werten an, die Sie anwenden möchten. Set-ACL verwendet den Wert des AclObject-Parameters als Modell und ändert die Werte in der Sicherheitsbeschreibung der Ressource so, dass diese mit den Werten im AclObject-Parameter übereinstimmen. Set-ACL legt die Sicherheitsbeschreibung des von Path angegebenen Objekts auf den von AclObject angegebenen Wert fest.


</maml:para>
	</maml:description>
	<!-- Cmdlet syntax section-->
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-Acl</maml:name>
			<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Gibt den Pfad der Objekte an, für die die Aktion ausgeführt werden soll.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
				<maml:name>AclObject</maml:name>
				<maml:description>
					<maml:para>Gibt eine ACL mit den gewünschten Eigenschaftswerten an.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Exclude</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Filter</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Include</maml:name>
				<maml:description>
					<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<!-- Cmdlet parameter section  -->
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="2">
			<maml:name>AclObject</maml:name>
			<maml:description>
				<maml:para>Gibt eine ACL mit den gewünschten Eigenschaftswerten an.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">ObjectSecurity</command:parameterValue>
			<dev:type>
				<maml:name>ObjectSecurity</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Exclude</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Filter</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="false">string</command:parameterValue>
			<dev:type>
				<maml:name>string</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Include</maml:name>
			<maml:description>
				<maml:para>Dieser Parameter wird vom Active Directory-Anbieter ignoriert.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Gibt den Pfad der Objekte an, für die die Aktion ausgeführt werden soll.</maml:para>
								
			</maml:description>
			<command:parameterValue required="true" variableLength="true">string[]</command:parameterValue>
			<dev:type>
				<maml:name>string[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<!-- Input - Output section-->
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>
			<maml:description>
				<maml:para>
					<!-- description  -->
					
				</maml:para>
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name>Die Cmdlet-Ausgabe wird durch das PassThru-Flag gesteuert. </maml:name>
				<maml:uri/>
				<maml:description/>
			</dev:type>   
			<maml:description>
				<maml:para>
					<!-- description  -->
					None, wenn -PassThru nicht angegeben ist.
Wenn -PassThru angegeben ist, wird ein ActiveDirectorySecurity-Objekt zurückgegeben, das die geänderte Sicherheitsbeschreibung darstellt.

				</maml:para>
			</maml:description> 
		</command:returnValue>
	</command:returnValues>
	<!-- Error section-->
	<command:terminatingErrors/>
	<command:nonTerminatingErrors/>
		<!-- Notes section  -->
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para>
                          Dieses Cmdlet kann nicht verwendet werden, wenn ein Snapshot mithilfe des Server-Parameters als Ziel festgelegt wird.
                        </maml:para>
		</maml:alert>
		<maml:alert>
			<maml:para></maml:para>
		</maml:alert>
	</maml:alertSet>
	<!-- Example section  --> 
	<command:examples>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 1 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code>Get-ACL &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;  | Set-Acl &quot;AD:\CN=ADPSUser2,CN=Users,DC=Fabrikam,DC=com&quot;
</dev:code>
  			<dev:remarks>
  			        <maml:para>Legt die Sicherheitsbeschreibung eines anderen Benutzerobjekts mit den über eine Pipeline übergebenen Ergebnissen des Cmdlet &quot;Get-ACL&quot; von einem anderen Benutzerobjekt fest.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>

		<command:example>
			<maml:title>
				-------------------------- BEISPIEL 2 --------------------------
			</maml:title> 
			<maml:introduction>
				<maml:para>C:\PS&gt;</maml:para>
			</maml:introduction> 
  			<dev:code># Get the ACL
$acl = Get-Acl -Path &quot;AD:\CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
# Get the user
$user = Get-ADUser &quot;CN=ADPSUser1,CN=Users,DC=Fabrikam,DC=com&quot;
$p = New-Object System.Security.Principal.SecurityIdentifier $user.SID
# Create ACE for write property
$ace = New-Object System.DirectoryServices.ActiveDirectoryAccessRule $p, &quot;WriteProperty&quot;, &quot;Allow&quot;
# Add ACE to ACL
$acl.AddAccessRule($ace)
# Set the ACL
Set-Acl -ACLObject $acl -Path (&quot;AD:\&quot; + $user.distinguishedName)
</dev:code>
  			<dev:remarks>
  			        <maml:para>Ändert die Sicherheitsbeschreibung eines Benutzers durch das Hinzufügen eines neuen ACE.</maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
	                        <maml:para></maml:para>
  			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText></command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<!-- Link section  -->
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Online version:</maml:linkText>
			<maml:uri>http://go.microsoft.com/fwlink/?LinkID=152470</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText>Get-ACL</maml:linkText>
			<maml:uri/>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>

</CmdletHelpPath>
</CmdletHelpPaths>
</ProviderHelp>
</helpItems>
