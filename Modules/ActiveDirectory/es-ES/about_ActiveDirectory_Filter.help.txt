TEMA
    Filtro de Active Directory

DESCRIPCIÓN BREVE
    Describe la sintaxis y el comportamiento del filtro de búsqueda
    admitido por el módulo de Active Directory para
    Windows PowerShell.

DESCRIPCIÓN DETALLADA
    La mayoría de los cmdlets get-AD* del módulo de Active Directory
    utilizan el parámetro Filter para buscar objetos. El parámetro
    Filter se ha implementado para reemplazar la función del filtro
    LDAP y agrega funcionalidad para las variables de PowerShell,
    tipos de datos enriquecidos, comprobación de errores mejorada
    y una forma extendida para Active Directory del lenguaje de
    expresiones de PowerShell.

    Para obtener más información sobre la sintaxis del lenguaje de
    expresiones de Windows PowerShell, vea about_filter.

    Nota: el tema about_filter PowerShell hace referencia a más temas
    relacionados con el lenguaje de expresiones.

  Funcionalidad para la sintaxis de filtro LDAP
    El parámetro LDAPFilter proporciona funcionalidad para la sintaxis
    de filtro LDAP. Encontrará ejemplos de filtro LDAP junto con el
    nuevo filtro del módulo de Active Directory en la sección de
    Ejemplos de filtro de este tema.

  Amplitud y profundidad de la búsqueda
    La amplitud y la profundidad de la búsqueda basada en filtro se
    puede modificar mediante dos parámetros de cmdlet del módulo de
    Active Directory: SearchBase y SearchScope.

    Cuando se encuentre dentro del contexto del proveedor de Active
    Directory, SearchBase tomará de forma predeterminada el valor
    de la ruta de acceso actual si no se especifica el parámetro
    Searchbase. Cuando no se ejecute en el proveedor de Active
    Directory, SearchBase tomará de forma predeterminada el valor
    de DefaultNamingContext del servidor.

    El parámetro SearchScope toma de forma predeterminada el valor
    Subtree, del tipo enumerado ADSearchScope.

    Para obtener más información, vea las descripciones de los
    parámetros SearchBase y SearchScope de cualquier cmdlet Get-AD*.
    

  Comportamiento de los resultados de la búsqueda
    El comportamiento del módulo de Active Directory cuando se
    devuelven los resultados de una búsqueda se modifica mediante
    dos parámetros de cmdlet: ResultPageSize y ResultSetSize.

    ResultSetSize controla el número máximo de objetos devueltos.

    ResultPageSize especifica el número máximo de objetos para cada
    página de información devuelta.

    Para obtener más información, vea las descripciones de los
    parámetros ResultPageSize y ResultSetSize de cualquier cmdlet
    get-AD*.

  Comportamiento de los tiempos de espera
    Las instrucciones siguientes especifican las condiciones de tiempo
    de espera en el módulo de Active Directory y describen lo que
    se puede hacer acerca de las mismas.

    El tiempo de espera predeterminado del módulo de Active Directory
    para todas las operaciones es de 2 minutos.

    Para una operación de búsqueda, el módulo de Active Directory
    utiliza el control de paginación con un tiempo de espera de 2
    minutos por cada búsqueda de página.

    Nota: dado que una búsqueda puede implicar varias solicitudes de
    páginas de servidor, el tiempo total de la búsqueda puede ser
    superior a 2 minutos.

    El error TimeoutException indica que se ha agotado el tiempo
    de espera.

    En una operación de búsqueda, es posible utilizar si se desea un
    tamaño de página menor, que se establece mediante el parámetro
    ResultPageSize, cuando se produce un error TimeoutException.

    Si después de intentar estos cambios se sigue produciendo un error
    TimeoutException, considere la posibilidad de optimizar el
    filtro siguiendo las directrices que se proporcionan en la
    sección Optimizar los filtros de este tema.

  Optimizar los filtros
    Es posible mejorar el comportamiento del filtro de búsqueda
    siguiendo estas instrucciones.

    Evite utilizar el parámetro Recursive, pues intensifica el consumo
    de recursos en la operación de búsqueda.

    Evite utilizar los operadores AND bit a bit y OR bit a bit. Para
    obtener más información, vea la sección Operadores compatibles
    de este tema.

    Evite utilizar el operador lógico NOT.

    Divida la búsqueda en varias consultas con condiciones de
    mayor restricción.

    Nota: para obtener una descripción completa de la sintaxis y el
    uso del filtro, vea la sección Sintaxis de filtro de este tema.
    

  Ejemplos de filtro
    La sección siguiente muestra numerosos ejemplos del uso del filtro
    en consultas comunes.

    -------------------------- EJEMPLO 1 --------------------------

    Obtener todas las entradas:

        Equivalente de filtro LDAP
        (objectClass=*)

        Get-ADObject -Filter 'ObjectClass -like "*"'

    -------------------------- Ejemplo 2 --------------------------

    Obtener las entradas que contienen el texto "pedro" en alguna
    parte del nombre común:

        Equivalente de filtro LDAP
        (cn=*pedro*)

        Get-ADObject -Filter 'CN -like "*bob*"'

    -------------------------- Ejemplo 3 --------------------------

    Obtener las entradas con un número de contraseñas incorrectas
    superior a cinco:

        Equivalente de filtro LDAP
        (badpwdcount>=5)

        Get-ADUser -Filter 'badpwdcount -ge 5'

    -------------------------- Ejemplo 4 --------------------------

    Obtener todos los usuarios que tengan un atributo de
    correo electrónico:

        Equivalente de filtro LDAP
        (&(objectClass=user)(email=*))

        Get-ADUser -filter 'email -like "*"'

        -o bien-

        Get-ADObject -filter 'email -like "*" -and ObjectClass -eq
        "user"'

    -------------------------- Ejemplo 5 --------------------------

    Obtener todas las entradas que tengan un atributo de correo
    electrónico y cuyo apellido sea igual a "grande":

        Equivalente de filtro LDAP
        (&(sn=grande)(objectClass=user)(email=*))

        Get-ADUser -Filter 'Email -like "*" -and SurName -eq "grande"'

        -o bien-

        Get-ADUser -Filter 'Email -like "*" -and sn -eq "grande"'

    -------------------------- Ejemplo 6 --------------------------

    Obtener todas las entradas de usuarios cuyo nombre común empiece
    por "ana" y los usuarios cuyo nombre común sea "esteban" o
    "margarita":

        Equivalente de filtro LDAP
        (& (objectClass=user) | (cn=ana *) (cn=esteban) (cn
        =margarita))

        Get-ADUser -Filter 'CN -like "ana*" -or CN -eq "esteban" -or
        CN -eq "margarita"'

    Este segundo script de PowerShell en el ejemplo muestra una lógica
    más compleja y el uso de control de prioridad
    mediante paréntesis.

        Get-ADObject -Filter 'objectClass -eq "user" -and
         (CN -like "ana*" -or CN -eq "esteban" -or CN -eq
         "margarita")'

    -------------------------- Ejemplo 7 --------------------------

    Obtener todas las entradas que no tengan un atributo de
    correo electrónico:

        Equivalente de filtro LDAP
        (!(email=*))

        Get-ADUser -Filter '-not Email -like "*"'

        -o bien-

        Get-ADUser -Filter 'Email -notlike "*"'

    -------------------------- Ejemplo 8 --------------------------

    Obtener todos los usuarios que no hayan iniciado sesión desde el 1
    de enero de 2007:

        Equivalente de filtro LDAP
        (&(lastlogon<=X)(objectClass=user))
        //donde X es el número de segmentos de 100 nanosegundos
        transcurridos desde el 1 de enero de 1601

        $date = new-object System.DateTime -ArgumentList @(2007,1,1
        ,0,0,0)
        Get-ADUser -Filter '-not LastLogon -le $date'

    -------------------------- Ejemplo 9 --------------------------

    Obtener todos los usuarios que han iniciado sesión en los 5
    últimos días:

        Equivalente de filtro LDAP
        (&(lastLogon>=128812906535515110)
          (objectClass=user)(!(objectClass=computer)))

        $date = (get-date) - (new-timespan -days 5)
        Get-ADUser -Filter 'lastLogon -gt $date'

    -------------------------- Ejemplo 10 --------------------------

    La cadena de consulta del ejemplo siguiente busca objetos de grupo
    que tienen establecida la marca ADS_GROUP_TYPE_SECURITY_ENABLED.
    Tenga en cuenta que se utiliza el valor decimal de 
    ADS_GROUP_TYPE_SECURITY_ENABLED (0x80000000 = 2147483648) para el 
    valor de comparación.

        Equivalente de filtro LDAP
        (&(objectCategory=group)(groupType:1.2.840.113556.1.4.803:
        =2147483648))

        Get-ADGroup -filter 'groupType -band 0x80000000'

    -------------------------- Ejemplo 11 --------------------------

    LDAP_MATCHING_RULE_IN_CHAIN es un OID de regla coincidente
    diseñado para proporcionar un método de búsqueda en la
    ascendencia de un objeto. Muchas aplicaciones que usan Active
    Directory y AD LDS trabajan normalmente con datos jerárquicos,
    ordenados mediante relaciones de elemento primario y elemento
    secundario. Anteriormente, las aplicaciones realizaban
    expansiones de grupos de transición para deducir la pertenencia
    a un grupo, con lo que se utilizaba una gran cantidad de ancho
    de banda de red. Además, las aplicaciones debían realizar varias
    operaciones de ida y vuelta para deducir si un objeto
    "pertenecía a la cadena" si se atravesaba un vínculo hasta el
    final.

    Un ejemplo de este tipo de consulta es una consulta diseñada para
    comprobar si el usuario "usuario1" es miembro del grupo "grupo1".

    NOTA: usuario1 podría no ser un miembro directo de grupo1. Podría
    ser miembro de algún otro grupo que fuese miembro de grupo1.

    Para ello se establecería la base para usar
    el nombre distintivo (DN) del usuario (cn=usuario1, cn=users,
    dc=x) y el ámbito en la base, y se usaría la consulta siguiente:
    

        Equivalente de filtro LDAP
        (memberof:1.2.840.113556.1.4.1941:=(cn=Grupo1,OU=groupsOU,DC
        =x)))

        Get-ADUser -Filter 'memberOf -RecursiveMatch "C
        N=Administrators,
        CN=Builtin,DC=Fabrikam,DC=com"'
        -SearchBase "CN=Administrator,CN=Users,DC=Fabrikam,DC=com"

    ---------------------------------------------------------------

  Sintaxis de filtro
    En las descripciones de sintaxis siguientes se usa la forma
    de Backus-Naur para mostrar el lenguaje de expresiones de
    PowerShell para el parámetro Filter.

        <filter>  ::= "{" <FilterComponentList> "}"

        <FilterComponentList> ::= <FilterComponent> |
          <FilterComponent> <JoinOperator> <FilterComponent> |
          <NotOperator>  <FilterComponent>

        <FilterComponent> ::= <attr> <FilterOperator> <value> |
          "(" <FilterComponent> ")"

        <FilterOperator> ::= "-eq" | "-le" | "-ge" | "-ne" | "-lt"
        | "-gt" |
          "-approx" | "-bor" | "-band" | "-recursivematch" | "-like" |
          "-notlike"

        <JoinOperator> ::= "-and" | "-or"

        <NotOperator> ::= "-not"

        <attr> ::= <PropertyName> | <LDAPDisplayName del atributo>

        <value>::= < este valor se comparará con los datos de objeto
        del atributo <ATTR> mediante el operador de filtro
        especificado

    Para obtener una lista de nombres de propiedad y sus tipos
    admitidos, vea get-help about_ActiveDirectory_ObjectModel.

  Operadores compatibles
    En la tabla siguiente se muestran los operadores de filtro de
    búsqueda más usados.

                                                    
    Operador         Descripción                     Equivalente LDAP
    --------------- ------------------------------ ---------------------
    
    -eq              Igual a. No admite la           =  
                     búsqueda con caracteres
		     comodín.            
    -ne              Distinto de. No admite          !x = y
                     la búsqueda con caracteres
                     comodín.         
    -approx          Aproximadamente igual a         ~=
    -le              Lexicográficamente menor        <=
                     o igual que     
    -lt              Lexicográficamente menor que    !x >= y
    -ge              Lexicográficamente mayor o      >=
                     igual que       
    -gt              Lexicográficamente mayor que    !x <= y

    -and             AND (Y)                         &
    -or              OR (Y)                          |
    -not             NOT (negación)                             !
    -bor             OR bit a bit                    :1.2.840.113556.1.4.804:=
    
    -band            AND bit a bit                   :1.2.840.113556.1.4.803:=
    
    -recursivematch  Usar LDAP_MATCHING_RULE_IN_CHAIN:1.2.840.113556.1.4.1941:= 
                     (Nota: este control sólo 
                     funciona con Windows 2008 
                     y posterior). 
    
    -like            Similar a -eq pero admite la    =
                     comparación con caracteres 
                     comodín. El único carácter
                     comodín admitido es: *    
    
    -notlike         No es como. Admite la          !x = y
                     comparación con carácter
                     comodín.         

    Nota: el uso de caracteres comodín de PowerShell diferentes de
    "*", como "?", no se admite en la sintaxis del parámetro -Filter
    .

  Prioridad de operadores
    La lista siguiente muestra la precedencia de los operadores en los
    filtros de mayor a menor.

    Máxima prioridad: -eq | -ge | -le | -approx | -band | -bor |
                          -recursivematch | -ne | -like
                      -not
                      -and
    Mínima prioridad: -or

  Caracteres especiales
    La secuencia de escape siguiente se debe utilizar para especificar
    caracteres especiales en los datos de tipo STRING del filtro de
    AD, es decir, los datos que se incluyen entre comillas dobles
    (" ") o entre comillas simples (' ').

    Carácter ASCII     Secuencia de escape de sustitución
    ------------------- ------------------------------------------------
    
    "                   '" (esta secuencia de escape sólo se requiere
                            si los datos de tipo STRING se incluyen entre 
                            comillas dobles).
    
    '                   '' (esta secuencia de escape sólo se requiere
                            si los datos de tipo STRING se incluyen entre 
                            comillas simples).
    
    NUL                 \00 (se trata de una secuencia de escape LDAP
                             estándar).
    \                   \5c (se trata de una secuencia de escape LDAP
                             estándar).

  Caracteres especiales LDAP
    El analizador de ADFilter convertirá automáticamente todos los
    caracteres siguientes que se encuentren en los datos de tipo
    STRING (es decir, los datos incluidos entre comillas dobles o
    simples) en su secuencia de escape LDAP. Los usuarios finales
    no necesitan conocer estas secuencias de escape LDAP.

    Carácter ASCII     Secuencia de escape de sustitución
    ------------------- ------------------------------------------------
    
    *                    \2a (el carácter * sólo se convertirá en
                              comparaciones con -eq y -ne. El usuario 
                              debe utilizar los operadores -like y 
                              -notlike para efectuar comparaciones con
                              caracteres comodín).
    (                    \28
    )                    \29
    /                    \2f

  Otros temas relacionados con el módulo de Active Directory
    Para obtener más información sobre la optimización de filtros, vea
    Creating More Efficient Microsoft Active Directory-Enabled
    Applications (puede estar en inglés) en MSDN Library.

    Para obtener más información sobre objetos del módulo de Active
    Directory y sus atributos, vea about_ActiveDirectory_ObjectModel
    .

    Para obtener más información sobre la sintaxis del lenguaje de
    expresiones de Windows PowerShell, vea about_filter.

    Nota: el tema about_filter PowerShell hace referencia a más temas
    relacionados con el lenguaje de expresiones.

VEA TAMBIÉN
    about_ActiveDirectory
    about_ActiveDirectory_ObjectModel
    about_filter

